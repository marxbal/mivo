(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./$$_lazy_route_resource lazy recursive":
/*!******************************************************!*\
  !*** ./$$_lazy_route_resource lazy namespace object ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!**************************************************!*\
  !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-SG": "./node_modules/moment/locale/en-SG.js",
	"./en-SG.js": "./node_modules/moment/locale/en-SG.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment/locale/en-il.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment/locale/ku.js",
	"./ku.js": "./node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html":
/*!**************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ng-http-loader\n    [debounceDelay]=\"1000\"\n    [minDuration]=\"1000\"\n    [opacity]=\".6\"\n    [spinner]=\"spinnerStyle.skThreeBounce\"\n    [filteredUrlPatterns]=\"['getDashboardInfo']\"\n    ></ng-http-loader>\n<router-outlet></router-outlet>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.html":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.html ***!
  \*********************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"commissionsPaidList\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Commissions Paid List</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n        <div class=\"col-lg-12\">\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyNumber\" id=\"policyNumber\"\n                        [(ngModel)]=\"pageFilter.policyNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyHolder\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Holder</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyHolder\" id=\"policyHolder\"\n                        [(ngModel)]=\"pageFilter.policyHolder\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"currency\" class=\"col-md-12 col-lg-4 col-form-label\">Currency</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"currency\" id=\"currency\"\n                        [(ngModel)]=\"pageFilter.currency\">\n                        <option></option>\n                        <option *ngFor=\"let item of currencyItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"invoiceNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Invoice Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"invoiceNumber\" id=\"invoiceNumber\"\n                        [(ngModel)]=\"pageFilter.invoiceNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"receiptAmount\" class=\"col-md-12 col-lg-4 col-form-label\">Receipt Amount</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"receiptAmount\" id=\"receiptAmount\"\n                        [(ngModel)]=\"pageFilter.receiptAmount\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"commissionAmount\" class=\"col-md-12 col-lg-4 col-form-label\">Commission Amount</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"commissionAmount\" id=\"commissionAmount\"\n                        [(ngModel)]=\"pageFilter.commissionAmount\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"withholdingTaxAmount\" class=\"col-md-12 col-lg-4 col-form-label\">Withholding Tax\n                      Amount</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"withholdingTaxAmount\"\n                        id=\"withholdingTaxAmount\" [(ngModel)]=\"pageFilter.withholdingTaxAmount\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"source\" class=\"col-md-12 col-lg-4 col-form-label\">Source</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"source\" id=\"source\"\n                        [(ngModel)]=\"pageFilter.source\">\n                        <option></option>\n                        <option *ngFor=\"let item of sourceItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n          <!-- .card-body -->\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"policyNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyHolder\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-220\"> Policy Holder </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyHolder}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"currency\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.currency}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"invoiceNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Invoice Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.invoiceNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"receiptAmount\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Receipt Amount </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"amount\"> {{element.receiptAmount | currency:'PHP': 'symbol-narrow'}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"commissionAmount\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Commission Amount </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"amount\"> {{element.commissionAmount | currency:'PHP': 'symbol-narrow'}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"withholdingTaxAmount\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Withholding Tax Amount </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"amount\"> {{element.withholdingTaxAmount | currency:'PHP': 'symbol-narrow'}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"source\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #commissionsPaidList -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.html":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.html ***!
  \*******************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"estimatedCommissionsList\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Estimated Commissions List</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n        <div class=\"col-lg-12\">\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyNumber\" id=\"policyNumber\"\n                        [(ngModel)]=\"pageFilter.policyNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyHolder\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Holder</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyHolder\" id=\"policyHolder\"\n                        [(ngModel)]=\"pageFilter.policyHolder\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"currency\" class=\"col-md-12 col-lg-4 col-form-label\">Currency</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"currency\" id=\"currency\"\n                        [(ngModel)]=\"pageFilter.currency\">\n                        <option></option>\n                        <option *ngFor=\"let item of currencyItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"invoiceNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Invoice Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"invoiceNumber\" id=\"invoiceNumber\"\n                        [(ngModel)]=\"pageFilter.invoiceNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"movementDate\" class=\"col-md-12 col-lg-4 col-form-label\">Movement Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"movementDate\"\n                        [(ngModel)]=\"pageFilter.movementDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"receiptAmount\" class=\"col-md-12 col-lg-4 col-form-label\">Receipt Amount</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"receiptAmount\" id=\"receiptAmount\"\n                        [(ngModel)]=\"pageFilter.receiptAmount\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"estimatedCommission\" class=\"col-md-12 col-lg-4 col-form-label\">Estimated\n                      Commission</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"estimatedCommission\"\n                        id=\"estimatedCommission\" [(ngModel)]=\"pageFilter.estimatedCommission\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"source\" class=\"col-md-12 col-lg-4 col-form-label\">Source</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"source\" id=\"source\"\n                        [(ngModel)]=\"pageFilter.source\">\n                        <option></option>\n                        <option *ngFor=\"let item of sourceItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n          <!-- .card-body -->\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"policyNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyHolder\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-220\"> Policy Holder </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyHolder}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"currency\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.currency}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"invoiceNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Invoice Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.invoiceNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"movementDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Movement Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.movementDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"receiptAmount\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Receipt Amount </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"amount\"> {{element.receiptAmount | currency:'PHP': 'symbol-narrow'}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"estimatedCommission\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Estimated/Remaining Commission </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"amount\"> {{element.estimatedCommission | currency:'PHP': 'symbol-narrow'}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"source\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #estimatedCommissionsList -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.html":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.html ***!
  \***********************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"outstandingBillsList\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Outstanding Bills List</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n        <div class=\"col-lg-12\">\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyNumber\" id=\"policyNumber\"\n                        [(ngModel)]=\"pageFilter.policyNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyHolder\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Holder</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyHolder\" id=\"policyHolder\"\n                        [(ngModel)]=\"pageFilter.policyHolder\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"prn\" class=\"col-md-12 col-lg-4 col-form-label\">PRN</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"prn\" id=\"prn\"\n                        [(ngModel)]=\"pageFilter.prn\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"invoiceNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Invoice Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"invoiceNumber\" id=\"invoiceNumber\"\n                        [(ngModel)]=\"pageFilter.invoiceNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"currency\" class=\"col-md-12 col-lg-4 col-form-label\">Currency</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"currency\" id=\"currency\"\n                        [(ngModel)]=\"pageFilter.currency\">\n                        <option></option>\n                        <option *ngFor=\"let item of currencyItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"effectivityDate\" class=\"col-md-12 col-lg-4 col-form-label\">Effectivity Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"effectivityDate\"\n                        [(ngModel)]=\"pageFilter.effectivityDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"expiryDate\" class=\"col-md-12 col-lg-4 col-form-label\">Expiry Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"expiryDate\"\n                        [(ngModel)]=\"pageFilter.expiryDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"paymentDateExpiry\" class=\"col-md-12 col-lg-4 col-form-label\">Payment Date Expiry</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\"\n                        formControlName=\"paymentDateExpiry\" [(ngModel)]=\"pageFilter.paymentDateExpiry\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"amount\" class=\"col-md-12 col-lg-4 col-form-label\">Amount</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"amount\" id=\"amount\"\n                        [(ngModel)]=\"pageFilter.amount\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"paymentStatus\" class=\"col-md-12 col-lg-4 col-form-label\">Payment Status</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"source\" id=\"paymentStatus\"\n                        [(ngModel)]=\"pageFilter.paymentStatus\">\n                        <option></option>\n                        <option *ngFor=\"let item of paymentStatusItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"source\" class=\"col-md-12 col-lg-4 col-form-label\">Source</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"source\" id=\"source\"\n                        [(ngModel)]=\"pageFilter.source\">\n                        <option></option>\n                        <option *ngFor=\"let item of sourceItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"subline\" class=\"col-md-12 col-lg-4 col-form-label\">Subline</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"subline\" id=\"subline\"\n                        [(ngModel)]=\"pageFilter.subline\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n          <!-- .card-body -->\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"policyNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyHolder\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-220\"> Policy Holder </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyHolder}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"prn\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> PRN </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.prn}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"invoiceNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Invoice Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.invoiceNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"currency\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.currency}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"effectivityDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Effectivity Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.effectivityDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"expiryDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Expiry Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.expiryDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"paymentDateExpiry\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Payment Date Expiry </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.paymentDateExpiry}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"age\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Age </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.age}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"amount\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Amount (PHP) </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"amount\"> {{element.amount | currency:'PHP': 'symbol-narrow'}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"paymentStatus\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Payment Status </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.paymentStatus}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"source\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"subline\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Subline </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.subline}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #outstandingBillsList -->\n<ng-template #paymentResult let-data>\n  <div class=\"mat-dialog-header border-bottom\">\n    <div class=\"header row\">\n      <div class=\"col-lg-6\">\n        <img src=\"./assets/images/mivo-logo/mi_logo.png\" alt=\"brand-logo\" />\n      </div>\n      <div class=\"col-lg-6\">\n        <img src=\"./assets/images/payment/paynamics-logo.png\" alt=\"brand-logo\" class=\"paynamics-logo\" />\n      </div>\n    </div>\n  </div>\n  <mat-dialog-content class=\"payment-result-content\">\n    <br>\n\n    <div *ngIf=\"data.status\">\n      <span class=\"fa-stack fa-md payment-icon success\">\n        <i class=\"fa fa-circle fa-stack-2x\"></i>\n        <i class=\"fa fa-check fa-stack-1x fa-inverse\"></i>\n      </span>\n      <br>\n      <br>\n      <h3>Successful Payment</h3>\n      <h6>Your payment has been completed succefully.</h6>\n    </div>\n\n    <div *ngIf=\"!data.status\">\n      <span class=\"fa-stack fa-md payment-icon failed\">\n        <i class=\"fa fa-circle fa-stack-2x\"></i>\n        <i class=\"fa fa-times fa-stack-1x fa-inverse\"></i>\n      </span>\n      <br>\n      <br>\n      <h3>Unsuccessful Payment</h3>\n      <h6>{{data.errorMessage}}</h6>\n    </div>\n\n    <button type=\"button\" class=\"btn btn-primary\" matDialogClose>\n      Okay\n    </button>\n\n  </mat-dialog-content>\n  <div mat-dialog-actions class=\"footer\">\n    <div class=\"col-lg-12\">\n      <p> <i class=\"fa fa-lock\"></i> Payment transaction secured by <strong>Paynamics</strong></p>\n    </div>\n  </div>\n</ng-template>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/account-premium-collection-list/account-premium-collection-list.component.html":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/account-premium-collection-list/account-premium-collection-list.component.html ***!
  \*************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"premiumCollectionList\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Premium Collection List</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n        <div class=\"col-lg-12\">\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyNumber\" id=\"policyNumber\"\n                        [(ngModel)]=\"pageFilter.policyNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"currency\" class=\"col-md-12 col-lg-4 col-form-label\">Currency</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"currency\" id=\"currency\"\n                        [(ngModel)]=\"pageFilter.currency\">\n                        <option></option>\n                        <option *ngFor=\"let item of currencyItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"subline\" class=\"col-md-12 col-lg-4 col-form-label\">Subline</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"subline\" id=\"subline\"\n                        [(ngModel)]=\"pageFilter.subline\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"invoiceNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Invoice Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"invoiceNumber\" id=\"invoiceNumber\"\n                        [(ngModel)]=\"pageFilter.invoiceNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"effectivityDate\" class=\"col-md-12 col-lg-4 col-form-label\">Effectivity Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"effectivityDate\"\n                        [(ngModel)]=\"pageFilter.effectivityDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"expiryDate\" class=\"col-md-12 col-lg-4 col-form-label\">Expiry Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"expiryDate\"\n                        [(ngModel)]=\"pageFilter.expiryDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"collectedDate\" class=\"col-md-12 col-lg-4 col-form-label\">Collected Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"collectedDate\"\n                        [(ngModel)]=\"pageFilter.collectedDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"collectionType\" class=\"col-md-12 col-lg-4 col-form-label\">Collection Type</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"collectionType\" id=\"collectionType\"\n                        [(ngModel)]=\"pageFilter.collectionType\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"receiptAmount\" class=\"col-md-12 col-lg-4 col-form-label\">Receipt Amount</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"receiptAmount\" id=\"receiptAmount\"\n                        [(ngModel)]=\"pageFilter.receiptAmount\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"netPremium\" class=\"col-md-12 col-lg-4 col-form-label\">Net Premium</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"netPremium\" id=\"netPremium\"\n                        [(ngModel)]=\"pageFilter.netPremium\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"surcharge\" class=\"col-md-12 col-lg-4 col-form-label\">Surcharge</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"surcharge\" id=\"surcharge\"\n                        [(ngModel)]=\"pageFilter.surcharge\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"tax\" class=\"col-md-12 col-lg-4 col-form-label\">Tax</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"tax\" id=\"tax\"\n                        [(ngModel)]=\"pageFilter.tax\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"interest\" class=\"col-md-12 col-lg-4 col-form-label\">Interest</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"interest\" id=\"interest\"\n                        [(ngModel)]=\"pageFilter.interest\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"source\" class=\"col-md-12 col-lg-4 col-form-label\">Source</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"source\" id=\"source\"\n                        [(ngModel)]=\"pageFilter.source\">\n                        <option></option>\n                        <option *ngFor=\"let item of sourceItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n          <!-- .card-body -->\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"policyNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"currency\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.currency}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"subline\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Subline </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.subline}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"invoiceNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Invoice Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.invoiceNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"effectivityDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Effectivity Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.effectivityDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"expiryDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Expiry Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.expiryDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"collectedDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Collected Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.collectedDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"collectionType\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Collection Type </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.collectionType}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"receiptAmount\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Receipt Amount </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"amount\"> {{element.receiptAmount | currency:'PHP': 'symbol-narrow'}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"netPremium\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Net Premium </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"amount\"> {{element.netPremium | currency:'PHP': 'symbol-narrow'}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"surcharge\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Surcharge </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"amount\"> {{element.surcharge | currency:'PHP': 'symbol-narrow'}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"tax\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Tax </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"amount\"> {{element.tax | currency:'PHP': 'symbol-narrow'}}\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"interest\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Interest </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"amount\"> {{element.interest | currency:'PHP': 'symbol-narrow'}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"source\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #premiumCollectionList -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/choose-agent/choose-agent.component.html":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/choose-agent/choose-agent.component.html ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id=\"chooseAgent\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"form-panel\">\n\n          <div class=\"container\">\n            <div class=\"wrap\">\n              <h2>\n                Choose Agent\n              </h2>\n              <form class=\"choose-agent-form\" [formGroup]=\"chooseAgentForm\">\n                <div class=\"form-group\" [ngClass]=\"{'input-error': chooseAgentForm.controls['commercialStructure'].invalid \n                && (chooseAgentForm.controls['commercialStructure'].dirty \n                || chooseAgentForm.controls['commercialStructure'].touched)}\">\n                  <label for=\"commercialStructure\">Commercial Structure</label>\n                  <select class=\"custom-select mr-sm-2 required\" formControlName=\"commercialStructure\"\n                    (change)=\"comStructureChange()\">\n                    <option selected></option>\n                    <option *ngFor=\"let commerialStructure of commercialStructureLOV\"\n                      [ngValue]=\"commerialStructure.codNivel3\">{{ commerialStructure.nomNivel3 }}</option>\n                  </select>\n                  <p class=\"form-error\" *ngIf=\"chooseAgentForm.controls['commercialStructure'].errors?.required\">\n                    * commercial structure is required\n                  </p>\n                </div>\n\n                <div class=\"form-group\" [ngClass]=\"{'input-error': chooseAgentForm.controls['agent'].invalid \n                && (chooseAgentForm.controls['agent'].dirty \n                || chooseAgentForm.controls['agent'].touched)}\">\n                  <label for=\"agent\">Agent</label>\n                  <select class=\"custom-select mr-sm-2 required\" formControlName=\"agent\">\n                    <option selected></option>\n                    <option *ngFor=\"let agentDetail of agentLOV\" [ngValue]=\"agentDetail.codAgt\">\n                      {{ agentDetail.nomCompleto }}</option>\n                  </select>\n                  <p class=\"form-error\" *ngIf=\"chooseAgentForm.controls['agent'].errors?.required\">\n                    * agent is required\n                  </p>\n                </div>\n\n                <div class=\"btn-group\" role=\"group\">\n                  <button *ngIf=\"showCancelBtn\" type=\"button\" class=\"btn btn-primary\" (click)=\"next()\">Cancel</button>\n                  <button [disabled]=\"(chooseAgentForm.pristine || chooseAgentForm.invalid)\" type=\"button\"\n                    class=\"btn btn-primary\" (click)=\"next()\">Next</button>\n                </div>\n                <!-- .btn-group -->\n              </form>\n            </div>\n          </div>\n\n        </div>\n      </div>\n      <div class=\"clearfix\"></div>\n    </div>\n  </div>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-claims-list/client-claims-list.component.html":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-claims-list/client-claims-list.component.html ***!
  \***********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"claimsList\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Claims</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"col-lg-12\">\n\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"claimNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Claim Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"claimNumber\" id=\"claimNumber\"\n                        [(ngModel)]=\"pageFilter.claimNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"fileNumber\" class=\"col-md-12 col-lg-4 col-form-label\">File Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"fileNumber\" id=\"fileNumber\"\n                        [(ngModel)]=\"pageFilter.fileNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"fileName\" class=\"col-md-12 col-lg-4 col-form-label\">File Name</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"fileName\" id=\"fileName\"\n                        [(ngModel)]=\"pageFilter.fileName\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"lossDate\" class=\"col-md-12 col-lg-4 col-form-label\">Loss Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"lossDate\"\n                        [(ngModel)]=\"pageFilter.lossDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"notificationDate\" class=\"col-md-12 col-lg-4 col-form-label\">Notification Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\"\n                        formControlName=\"notificationDate\" [(ngModel)]=\"pageFilter.notificationDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"source\" class=\"col-md-12 col-lg-4 col-form-label\">Source</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"source\" id=\"source\"\n                        [(ngModel)]=\"pageFilter.source\">\n                        <option></option>\n                        <option *ngFor=\"let item of sourceItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n\n            </form>\n\n          </div>\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"claimNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Claim Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.claimNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"fileNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> File Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fileNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"fileName\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> File Name </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fileName}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"lossDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Loss Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.lossDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"notificationDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Notification Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.notificationDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"reserveAmount\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Reserve Amount </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.reserveAmount | currency:'PHP': 'symbol-narrow'}}\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"source\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #claimsList -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-details-list/client-details-list.component.html":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-details-list/client-details-list.component.html ***!
  \*************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"clientDetailsList\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Client List</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"col-lg-12\">\n\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"name\" class=\"col-md-12 col-lg-4 col-form-label\">Name</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"name\" id=\"name\"\n                        [(ngModel)]=\"pageFilter.name\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"documentType\" class=\"col-md-12 col-lg-4 col-form-label\">Document Type</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"documentType\" id=\"documentType\"\n                        [(ngModel)]=\"pageFilter.documentType\">\n                        <option></option>\n                        <option *ngFor=\"let item of documentTypeItems\" [ngValue]=\"item.TIP_DOCUM\">{{ item.NOM_DOCUM }}\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"documentCode\" class=\"col-md-12 col-lg-4 col-form-label\">Document Code</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"documentCode\" id=\"documentCode\"\n                        [(ngModel)]=\"pageFilter.documentCode\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"address\" class=\"col-md-12 col-lg-4 col-form-label\">Address</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"address\" id=\"address\"\n                        [(ngModel)]=\"pageFilter.address\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"homeTelNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Home Tel. No.</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"homeTelNumber\" id=\"homeTelNumber\"\n                        [(ngModel)]=\"pageFilter.homeTelNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"businessTelNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Business Tel. No.</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"businessTelNumber\" id=\"businessTelNumber\"\n                        [(ngModel)]=\"pageFilter.businessTelNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"mobileNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Mobile No.</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"mobileNumber\" id=\"mobileNumber\"\n                        [(ngModel)]=\"pageFilter.mobileNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"email\" class=\"col-md-12 col-lg-4 col-form-label\">Email</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"email\" id=\"email\"\n                        [(ngModel)]=\"pageFilter.email\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n\n            </form>\n\n\n          </div>\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-220\"> Name </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"documentType\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Document Type </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.documentType}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"documentCode\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-150\"> Document Code </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.documentCode}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"address\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-250\"> Address </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.address}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"homeTelNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Home Tel. No. </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.homeTelNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"businessTelNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Business Tel. No. </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.businessTelNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"mobileNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-120\"> Mobile No. </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.mobileNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"email\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #clientDetailsList -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-active-list/client-policy-active-list.component.html":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-active-list/client-policy-active-list.component.html ***!
  \*************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"policyActiveList\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Active Policies</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"col-lg-12\">\n\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyNumber\" id=\"policyNumber\"\n                        [(ngModel)]=\"pageFilter.policyNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"effectivityDate\" class=\"col-md-12 col-lg-4 col-form-label\">Effectivity Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" [maxDate]=\"today\"\n                        formControlName=\"effectivityDate\" [(ngModel)]=\"pageFilter.effectivityDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"dueDate\" class=\"col-md-12 col-lg-4 col-form-label\">Due Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"dueDate\"\n                        [(ngModel)]=\"pageFilter.dueDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"line\" class=\"col-md-12 col-lg-4 col-form-label\">Line</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"line\" id=\"line\"\n                        [(ngModel)]=\"pageFilter.line\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyHolder\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Holder</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyHolder\" id=\"policyHolder\"\n                        [(ngModel)]=\"pageFilter.policyHolder\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"documentType\" class=\"col-md-12 col-lg-4 col-form-label\">Document Type</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"documentType\" id=\"documentType\"\n                        [(ngModel)]=\"pageFilter.documentType\">\n                        <option></option>\n                        <option *ngFor=\"let item of documentTypeItems\" [ngValue]=\"item.TIP_DOCUM\">{{ item.NOM_DOCUM }}\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"documentCode\" class=\"col-md-12 col-lg-4 col-form-label\">Document Code</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"documentCode\" id=\"documentCode\"\n                        [(ngModel)]=\"pageFilter.documentCode\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"source\" class=\"col-md-12 col-lg-4 col-form-label\">Source</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"source\" id=\"source\"\n                        [(ngModel)]=\"pageFilter.source\">\n                        <option></option>\n                        <option *ngFor=\"let item of sourceItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n\n            </form>\n\n\n          </div>\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"policyNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyEffectivityDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Effectivity Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyEffectivityDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyDueDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Due Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyDueDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"line\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.line}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyHolder\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-220\"> Policy Holder </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyHolder}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"documentType\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Document Type </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.documentType}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"documentCode\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-150\"> Document Code </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.documentCode}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"source\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #policyActiveList -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.html":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.html ***!
  \*******************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"policyCancelledList\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Cancelled Policies</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"col-lg-12\">\n\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyNumber\" id=\"policyNumber\"\n                        [(ngModel)]=\"pageFilter.policyNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"effectivityDate\" class=\"col-md-12 col-lg-4 col-form-label\">Effectivity Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" [maxDate]=\"today\"\n                        formControlName=\"effectivityDate\" [(ngModel)]=\"pageFilter.effectivityDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"line\" class=\"col-md-12 col-lg-4 col-form-label\">Line</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"line\" id=\"line\"\n                        [(ngModel)]=\"pageFilter.line\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyHolder\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Holder</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyHolder\" id=\"policyHolder\"\n                        [(ngModel)]=\"pageFilter.policyHolder\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"source\" class=\"col-md-12 col-lg-4 col-form-label\">Source</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"source\" id=\"source\"\n                        [(ngModel)]=\"pageFilter.source\">\n                        <option></option>\n                        <option *ngFor=\"let item of sourceItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n\n            </form>\n\n          </div>\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"policyNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyEffectivityDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Effectivity Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyEffectivityDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"line\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.line}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyHolder\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-220\"> Policy Holder </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyHolder}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"source\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #policyCancelledList -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.html":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.html ***!
  \*****************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"policyExpiring\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Expiring Policies</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"col-lg-12\">\n\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyNumber\" id=\"policyNumber\"\n                        [(ngModel)]=\"pageFilter.policyNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"effectivityDate\" class=\"col-md-12 col-lg-4 col-form-label\">Effectivity Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\"\n                        formControlName=\"effectivityDate\" [(ngModel)]=\"pageFilter.effectivityDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"expiryDate\" class=\"col-md-12 col-lg-4 col-form-label\">Expiry Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"expiryDate\"\n                        [(ngModel)]=\"pageFilter.expiryDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyHolder\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Holder</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyHolder\" id=\"policyHolder\"\n                        [(ngModel)]=\"pageFilter.policyHolder\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"email\" class=\"col-md-12 col-lg-4 col-form-label\">Email</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"email\" id=\"email\"\n                        [(ngModel)]=\"pageFilter.email\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"telephoneNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Telephone Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"telephoneNumber\" id=\"telephoneNumber\"\n                        [(ngModel)]=\"pageFilter.telephoneNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n\n            </form>\n\n          </div>\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"policyNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyEffectivityDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Effectivity Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyEffectivityDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyExpiryDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Expiry Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyExpiryDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyHolder\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-220\"> Policy Holder </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyHolder}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"email\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"telephoneNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Telehone Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.telephoneNumber}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #policyExpiring -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.html":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.html ***!
  \***********************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"policyNotRenewed\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Not Renewed Policies</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"col-lg-12\">\n\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyNumber\" id=\"policyNumber\"\n                        [(ngModel)]=\"pageFilter.policyNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"effectivityDate\" class=\"col-md-12 col-lg-4 col-form-label\">Effectivity Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" [maxDate]=\"today\"\n                        formControlName=\"effectivityDate\" [(ngModel)]=\"pageFilter.effectivityDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"dueDate\" class=\"col-md-12 col-lg-4 col-form-label\">Due Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"dueDate\"\n                        [(ngModel)]=\"pageFilter.dueDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"line\" class=\"col-md-12 col-lg-4 col-form-label\">Line</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"line\" id=\"line\"\n                        [(ngModel)]=\"pageFilter.line\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyHolder\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Holder</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyHolder\" id=\"policyHolder\"\n                        [(ngModel)]=\"pageFilter.policyHolder\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"source\" class=\"col-md-12 col-lg-4 col-form-label\">Source</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"source\" id=\"source\"\n                        [(ngModel)]=\"pageFilter.source\">\n                        <option></option>\n                        <option *ngFor=\"let item of sourceItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n\n            </form>\n\n          </div>\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"policyNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyEffectivityDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Effectivity Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyEffectivityDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyDueDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Due Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyDueDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"line\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.line}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyHolder\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-220\"> Policy Holder </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyHolder}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"source\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #policyNotRenewed -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.html":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.html ***!
  \***********************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"policyProvisional\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Provisional Policies</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"col-lg-12\">\n\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyNumber\" id=\"policyNumber\"\n                        [(ngModel)]=\"pageFilter.policyNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"effectivityDate\" class=\"col-md-12 col-lg-4 col-form-label\">Effectivity Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" [maxDate]=\"today\"\n                        formControlName=\"effectivityDate\" [(ngModel)]=\"pageFilter.effectivityDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"dueDate\" class=\"col-md-12 col-lg-4 col-form-label\">Due Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"dueDate\"\n                        [(ngModel)]=\"pageFilter.dueDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"line\" class=\"col-md-12 col-lg-4 col-form-label\">Line</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"line\" id=\"line\"\n                        [(ngModel)]=\"pageFilter.line\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyHolder\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Holder</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyHolder\" id=\"policyHolder\"\n                        [(ngModel)]=\"pageFilter.policyHolder\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"source\" class=\"col-md-12 col-lg-4 col-form-label\">Source</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"source\" id=\"source\"\n                        [(ngModel)]=\"pageFilter.source\">\n                        <option></option>\n                        <option *ngFor=\"let item of sourceItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n\n            </form>\n\n          </div>\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"policyNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyEffectivityDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Effectivity Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyEffectivityDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyDueDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Due Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyDueDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"line\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.line}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyHolder\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-220\"> Policy Holder </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyHolder}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"source\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #policyProvisional -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.html":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.html ***!
  \***************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"policyRenewed\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Renewed Policies</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"col-lg-12\">\n\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyNumber\" id=\"policyNumber\"\n                        [(ngModel)]=\"pageFilter.policyNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"effectivityDate\" class=\"col-md-12 col-lg-4 col-form-label\">Effectivity Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" [maxDate]=\"today\"\n                        formControlName=\"effectivityDate\" [(ngModel)]=\"pageFilter.effectivityDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"dueDate\" class=\"col-md-12 col-lg-4 col-form-label\">Due Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"dueDate\"\n                        [(ngModel)]=\"pageFilter.dueDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyHolder\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Holder</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyHolder\" id=\"policyHolder\"\n                        [(ngModel)]=\"pageFilter.policyHolder\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"documentType\" class=\"col-md-12 col-lg-4 col-form-label\">Document Type</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"documentType\" id=\"documentType\"\n                        [(ngModel)]=\"pageFilter.documentType\">\n                        <option></option>\n                        <option *ngFor=\"let item of documentTypeItems\" [ngValue]=\"item.TIP_DOCUM\">{{ item.NOM_DOCUM }}\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"documentCode\" class=\"col-md-12 col-lg-4 col-form-label\">Document Code</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"documentCode\" id=\"documentCode\"\n                        [(ngModel)]=\"pageFilter.documentCode\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n\n            </form>\n\n\n          </div>\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"policyNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyEffectivityDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-heade class=\"expand-column-100\"> Effectivity Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyEffectivityDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyDueDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Due Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyDueDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyHolder\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-220\"> Policy Holder </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyHolder}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"documentType\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Document Type </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.documentType}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"documentCode\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-150\"> Document Code </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.documentCode}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #policyRenewed -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-quotation-active-list/client-quotation-active-list.component.html":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-quotation-active-list/client-quotation-active-list.component.html ***!
  \*******************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"quotationActive\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Active Quotations</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"col-lg-12\">\n\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"quotationNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Quotation Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"quotationNumber\" id=\"quotationNumber\"\n                        [(ngModel)]=\"pageFilter.quotationNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"effectivityDate\" class=\"col-md-12 col-lg-4 col-form-label\">Effectivity Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" [maxDate]=\"today\"\n                        formControlName=\"effectivityDate\" [(ngModel)]=\"pageFilter.effectivityDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"dueDate\" class=\"col-md-12 col-lg-4 col-form-label\">Due Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"dueDate\"\n                        [(ngModel)]=\"pageFilter.dueDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"line\" class=\"col-md-12 col-lg-4 col-form-label\">Line</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"line\" id=\"line\"\n                        [(ngModel)]=\"pageFilter.line\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyHolder\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Holder</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyHolder\" id=\"policyHolder\"\n                        [(ngModel)]=\"pageFilter.policyHolder\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"source\" class=\"col-md-12 col-lg-4 col-form-label\">Source</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"source\" id=\"source\"\n                        [(ngModel)]=\"pageFilter.source\">\n                        <option></option>\n                        <option *ngFor=\"let item of sourceItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n\n            </form>\n\n          </div>\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"quotationNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Quotation Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.quotationNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyEffectivityDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Effectivity Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyEffectivityDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyDueDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Due Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyDueDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"line\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.line}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyHolder\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-220\"> Policy Holder </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyHolder}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"source\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #quotationActive -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.html":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.html ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"quotationProvisional\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Provisional Quotations</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"col-lg-12\">\n\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"quotationNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Quotation Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"quotationNumber\" id=\"quotationNumber\"\n                        [(ngModel)]=\"pageFilter.quotationNumber\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"effectivityDate\" class=\"col-md-12 col-lg-4 col-form-label\">Effectivity Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" [maxDate]=\"today\"\n                        formControlName=\"effectivityDate\" [(ngModel)]=\"pageFilter.effectivityDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"dueDate\" class=\"col-md-12 col-lg-4 col-form-label\">Due Date</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" formControlName=\"dueDate\"\n                        [(ngModel)]=\"pageFilter.dueDate\" bsDatepicker>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"line\" class=\"col-md-12 col-lg-4 col-form-label\">Line</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"line\" id=\"line\"\n                        [(ngModel)]=\"pageFilter.line\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyHolder\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Holder</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyHolder\" id=\"policyHolder\"\n                        [(ngModel)]=\"pageFilter.policyHolder\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"source\" class=\"col-md-12 col-lg-4 col-form-label\">Source</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"source\" id=\"source\"\n                        [(ngModel)]=\"pageFilter.source\">\n                        <option></option>\n                        <option *ngFor=\"let item of sourceItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n\n            </form>\n\n          </div>\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"quotationNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Quotation Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.quotationNumber}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyEffectivityDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Effectivity Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyEffectivityDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyDueDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-100\"> Due Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyDueDate}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"line\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.line}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"policyHolder\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"expand-column-220\"> Policy Holder </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyHolder}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"source\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .col-lg-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #quotationProvisional -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/coverage-variable-data/coverage-variable-data.component.html":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/coverage-variable-data/coverage-variable-data.component.html ***!
  \*******************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form [formGroup]=\"variableForm\">\n  <div mat-dialog-content>\n    <div class=\"container\">\n      <div class=\"header row\">\n        <div class=\"col-md-12\">\n          <h4>{{coverage}}</h4>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n\n          <div *ngIf=\"code == '1100'\">\n            <div class=\"form-group\">\n              <label for=\"lossAndDamageType\">Loss and Damage Type</label>\n              <input type=\"number\" formControlName=\"lossAndDamageType\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.lossAndDamageType\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"finalRate\">Final Rate (%)</label>\n              <input type=\"number\" formControlName=\"finalRate\" class=\"form-control\" [(ngModel)]=\"data.cvd.finalRate\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"adjustedCommissionRate\">Adjusted Commission Rate (%)</label>\n              <input type=\"number\" formControlName=\"adjustedCommissionRate\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.adjustedCommissionRate\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"lossRatioRate\">Loss Ratio Rate (%)</label>\n              <input type=\"number\" formControlName=\"lossRatioRate\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.lossRatioRate\">\n            </div>\n          </div>\n\n          <div *ngIf=\"code == '1002'\">\n            <div class=\"form-group\">\n              <label for=\"ownDamageTowingLimit\">Own Damage Towing Limit</label>\n              <input type=\"number\" formControlName=\"ownDamageTowingLimit\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.ownDamageTowingLimit\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"ownDamageRepairLimit\">Own Damage Repair Limit</label>\n              <input type=\"number\" formControlName=\"ownDamageRepairLimit\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.ownDamageRepairLimit\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"ownDamageSpecialDeductible\">Own Damage Special Deductible</label>\n              <input type=\"number\" formControlName=\"ownDamageSpecialDeductible\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.ownDamageSpecialDeductible\">\n            </div>\n          </div>\n\n          <div *ngIf=\"code == '1003'\">\n            <div class=\"form-group\">\n              <label for=\"theftTowingLimit\">Theft Towing Limit</label>\n              <input type=\"number\" formControlName=\"theftTowingLimit\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.theftTowingLimit\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"theftRepairLimit\">Theft Repair Limit</label>\n              <input type=\"number\" formControlName=\"theftRepairLimit\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.theftRepairLimit\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"theftSpecialDeductible\">Theft Special Deductible</label>\n              <input type=\"number\" formControlName=\"theftSpecialDeductible\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.theftSpecialDeductible\">\n            </div>\n          </div>\n\n          <div *ngIf=\"code == '1007'\">\n            <div class=\"form-group\">\n              <label for=\"uppaDiscountType\">UPPA Discount Type</label>\n              <input type=\"number\" formControlName=\"uppaDiscountType\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.uppaDiscountType\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"uppaDiscountAmount\">UPPA Discount Amount</label>\n              <input type=\"number\" formControlName=\"uppaDiscountAmount\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.uppaDiscountAmount\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"uppaCommissionAdjustment\">UPPA Commission Adjustment (%)</label>\n              <input type=\"number\" formControlName=\"uppaCommissionAdjustment\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.uppaCommissionAdjustment\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"sumInsuredPerPassenger\">Sum Insured per Passenger</label>\n              <select class=\"custom-select mr-sm-2\" formControlName=\"sumInsuredPerPassenger\"\n                [(ngModel)]=\"data.cvd.sumInsuredPerPassenger\">\n                <option></option>\n                <option *ngFor=\"let sumInsured of sumInsuredPerPassengerLOV\" [ngValue]=\"sumInsured.COD_VALOR\">\n                  {{ sumInsured.COD_VALOR }}</option>\n              </select>\n            </div>\n          </div>\n\n          <div *ngIf=\"code == '1008'\">\n            <div class=\"form-group\">\n              <label for=\"aonFinalRate\">AON Final Rate</label>\n              <input type=\"number\" formControlName=\"aonFinalRate\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.aonFinalRate\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"aonTowingLimit\">AON Towing Limit</label>\n              <input type=\"number\" formControlName=\"aonTowingLimit\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.aonTowingLimit\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"aonRepairLimit\">AON Repair Limit</label>\n              <input type=\"number\" formControlName=\"aonRepairLimit\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.aonRepairLimit\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"aonSpecialDeductible\">AON Special Deductible</label>\n              <input type=\"number\" formControlName=\"aonSpecialDeductible\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.aonSpecialDeductible\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"aonCommissionAdjustment\">AON Commission Adjustment (%)</label>\n              <input type=\"number\" formControlName=\"aonCommissionAdjustment\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.aonCommissionAdjustment\">\n            </div>\n          </div>\n\n          <div *ngIf=\"code == '1020'\">\n            <div class=\"form-group\">\n              <label for=\"srccFinalRate\">SRCC Final Rate</label>\n              <input type=\"number\" formControlName=\"srccFinalRate\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.srccFinalRate\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"srccTowingLimit\">SRCC Towing Limit</label>\n              <input type=\"number\" formControlName=\"srccTowingLimit\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.srccTowingLimit\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"srccRepairLimit\">SRCC Repair Limit</label>\n              <input type=\"number\" formControlName=\"srccRepairLimit\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.srccRepairLimit\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"srccSpecialDeductible\">SRCC Special Deductible</label>\n              <input type=\"number\" formControlName=\"srccSpecialDeductible\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.srccSpecialDeductible\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"srccCommissionAdjustment\">SRCC Commission Adjustment (%)</label>\n              <input type=\"number\" formControlName=\"srccCommissionAdjustment\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.srccCommissionAdjustment\">\n            </div>\n          </div>\n\n          <div *ngIf=\"code == '1040'\">\n            <div class=\"form-group\">\n              <label for=\"roadAssistDiscount\">Road Assist Discount</label>\n              <input type=\"number\" formControlName=\"roadAssistDiscount\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.roadAssistDiscount\">\n            </div>\n          </div>\n\n          <div *ngIf=\"code == '1029'\">\n            <div class=\"form-group\">\n              <label for=\"ra100Discount\">RA 100 Discount</label>\n              <input type=\"number\" formControlName=\"ra100Discount\" class=\"form-control\"\n                [(ngModel)]=\"data.cvd.ra100Discount\">\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div mat-dialog-actions align=\"end\">\n    <div class=\"btn-group\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"cancel()\">\n        Cancel\n      </button>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"update()\">\n        Update\n      </button>\n    </div>\n  </div>\n</form>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/coverages/coverages.component.html":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/coverages/coverages.component.html ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id=\"coverages\" class=\"card shadow mb-3\">\n  <div class=\"card-header\">\n    <strong>Coverages</strong>\n  </div>\n  <div class=\"card-body\">\n\n    <div class=\"flexitable\">\n\n      <form [formGroup]=\"cForm\">\n        <mat-table formArrayName=\"coverages\" [dataSource]=\"dataSource\">\n          <ng-container matColumnDef=\"included\">\n            <mat-header-cell *matHeaderCellDef> Included </mat-header-cell>\n            <mat-cell *matCellDef=\"let row let rowIndex = index\" [formGroupName]=\"rowIndex\">\n              <div class=\"form-check\">\n                <input (change)=\"updateRow(row)\" class=\"form-check-input\" type=\"checkbox\" [attr.disabled]=\"!isModifiedCoverage || row.isMandatory ? '' : null\"\n                  formControlName=\"included\" id=\"chk{{rowIndex}}\">\n                <label class=\"form-check-label\" for=\"chk{{rowIndex}}\">\n                  {{row.isMandatory ? 'Included' : 'Optional'}}\n                </label>\n              </div>\n            </mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"coverage\">\n            <mat-header-cell *matHeaderCellDef> Coverage </mat-header-cell>\n            <mat-cell *matCellDef=\"let row let rowIndex = index\" [formGroupName]=\"rowIndex\">\n              {{row.coverage}}\n            </mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"sumInsured\">\n            <mat-header-cell *matHeaderCellDef [ngClass]=\"'amount-header'\"> Sum Insured </mat-header-cell>\n            <mat-cell *matCellDef=\"let row let rowIndex = index\" [formGroupName]=\"rowIndex\" [ngClass]=\"'amount'\">\n              <span *ngIf=\"!row.isSelect\">{{row.sumInsured | currency: 'PHP' : 'symbol-narrow'}}</span>\n              <select *ngIf=\"row.isSelect\" class=\"custom-select mr-sm-2 required\" formControlName=\"sumInsured\"\n                [(ngModel)]=\"row.sumInsured\"\n                [attr.disabled]=\"isModifiedCoverage && row.included ? null : ''\" >\n                <option *ngFor=\"let opt of row.options\" [ngValue]=\"opt.value\">{{ opt.value }}</option>\n              </select>\n            </mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"netPremium\">\n            <mat-header-cell *matHeaderCellDef [ngClass]=\"'amount-header'\"> Net Premium </mat-header-cell>\n            <mat-cell *matCellDef=\"let row let rowIndex = index\" [formGroupName]=\"rowIndex\" [ngClass]=\"'amount'\">\n              <span>{{row.netPremium | currency: 'PHP' : 'symbol-narrow'}}</span>\n            </mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"action\">\n            <mat-header-cell *matHeaderCellDef></mat-header-cell>\n            <mat-cell *matCellDef=\"let row\" [ngClass]=\"'amount'\">\n              <i *ngIf=\"isModifiedCoverage && row.included && row.hasVariableData\" class=\"fa fa-edit\" (click)=\"editCoverage(row)\"></i>\n            </mat-cell>\n          </ng-container>\n\n          <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n          <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"row.included ? 'included' : ''\"></mat-row>\n\n        </mat-table>\n      </form>\n    </div>\n\n  </div>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/create-third-party/create-third-party.component.html":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/create-third-party/create-third-party.component.html ***!
  \***********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form [formGroup]=\"tpForm\">\n  <h2 mat-dialog-title>{{title}}</h2>\n  <div mat-dialog-content>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <h5>Main Details</h5>\n        </div>\n\n        <div class=\"col-md-4 col-sm-12\">\n          <div class=\"form-group input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <label class=\"input-group-text\" for=\"inputGroupSelect01\">Create a</label>\n            </div>\n\n            <select class=\"custom-select mr-sm-2\" formControlName=\"policyHolderType\"\n              [(ngModel)]=\"thirdParty.policyHolderType\">\n              <option value=\"P\" selected>Person</option>\n              <option value=\"C\">Company/Organization</option>\n            </select>\n\n          </div>\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': tpForm.controls['documentType'].invalid \n            && (tpForm.controls['documentType'].dirty \n            || tpForm.controls['documentType'].touched)}\">\n            <label for=\"documentType\">Document Type</label>\n            <select class=\"custom-select mr-sm-2 required\" formControlName=\"documentType\"\n              [(ngModel)]=\"thirdParty.documentType\">\n              <option *ngFor=\"let type of TPLOV.documentTypeLOV\" [ngValue]=\"type.TIP_DOCUM\">{{ type.NOM_DOCUM }}\n              </option>\n            </select>\n            <p class=\"form-error\" *ngIf=\"tpForm.controls['documentType'].errors?.required\">\n              * document type is required\n            </p>\n          </div>\n        </div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': tpForm.controls['documentCode'].invalid \n            && (tpForm.controls['documentCode'].dirty \n            || tpForm.controls['documentCode'].touched)}\">\n            <label for=\"documentCode\">Document Code</label>\n            <input type=\"text\" formControlName=\"documentCode\" class=\"form-control required\"\n              oninput=\"this.value = this.value.toUpperCase()\"\n              [(ngModel)]=\"thirdParty.documentCode\">\n            <p class=\"form-error\" *ngIf=\"tpForm.controls['documentCode'].errors?.required\">\n              * document code is required\n            </p>\n          </div>\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n        <div *ngIf=\"showPersonDetails\" class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"prefix\">Prefix</label>\n            <select class=\"custom-select mr-sm-2\" formControlName=\"prefix\" [(ngModel)]=\"thirdParty.prefix\">\n              <option *ngFor=\"let pre of TPLOV.prefixLOV\" [ngValue]=\"pre.TIP_PREFIJO_NOMBRE\">{{ pre.NOM_VALOR }}</option>\n            </select>\n          </div>\n        </div>\n\n        <div *ngIf=\"showPersonDetails\" class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"suffix\">Suffix</label>\n            <select class=\"custom-select mr-sm-2\" formControlName=\"suffix\" [(ngModel)]=\"thirdParty.suffix\">\n              <option *ngFor=\"let suff of TPLOV.suffixLOV\" [ngValue]=\"suff.TIPO_SUFIJO_NOMBRE\">{{ suff.NOM_VALOR }}</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': tpForm.controls['firstName'].invalid \n                && (tpForm.controls['firstName'].dirty \n                || tpForm.controls['firstName'].touched)}\">\n            <label for=\"suffix\">{{firstNameLabel}}</label>\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control required\"\n              oninput=\"this.value = this.value.toUpperCase()\" [(ngModel)]=\"thirdParty.firstName\">\n            <p class=\"form-error\" *ngIf=\"tpForm.controls['firstName'].errors?.required\">\n              * {{firstNameError}} is required\n            </p>\n          </div>\n        </div>\n\n        <div *ngIf=\"showPersonDetails\" class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"suffix\">Middle Name</label>\n            <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"\n              oninput=\"this.value = this.value.toUpperCase()\" [(ngModel)]=\"thirdParty.middleName\">\n          </div>\n        </div>\n\n        <div *ngIf=\"showPersonDetails\" class=\"col-md-4\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': tpForm.controls['lastName'].invalid \n                && (tpForm.controls['lastName'].dirty \n                || tpForm.controls['lastName'].touched)}\">\n            <label for=\"suffix\">Last Name</label>\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control required\"\n              oninput=\"this.value = this.value.toUpperCase()\" [(ngModel)]=\"thirdParty.lastName\">\n            <p class=\"form-error\" *ngIf=\"tpForm.controls['lastName'].errors?.required\">\n              * last name is required\n            </p>\n          </div>\n        </div>\n\n        <div *ngIf=\"showPersonDetails\" class=\"col-md-4\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': tpForm.controls['gender'].invalid \n              && (tpForm.controls['gender'].dirty \n              || tpForm.controls['gender'].touched)}\">\n            <label for=\"gender\">Gender</label>\n            <select class=\"custom-select mr-sm-2 required\" formControlName=\"gender\" [(ngModel)]=\"thirdParty.gender\" convert-to-number> \n              <option></option>\n              <option [ngValue]=\"1\">MALE</option>\n              <option [ngValue]=\"0\">FEMALE</option>\n            </select>\n            <p class=\"form-error\" *ngIf=\"tpForm.controls['gender'].errors?.required\">\n              * gender is required\n            </p>\n          </div>\n        </div>\n\n        <div *ngIf=\"showPersonDetails\" class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"purchaseDate\">Birth Date</label>\n            <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" [maxDate]=\"today\"\n              formControlName=\"birthDate\" [(ngModel)]=\"thirdParty.birthDate\" bsDatepicker>\n          </div>\n        </div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': tpForm.controls['mobileNumber'].invalid \n            && (tpForm.controls['mobileNumber'].dirty \n            || tpForm.controls['mobileNumber'].touched)}\">\n            <label for=\"suffix\">Mobile Number</label>\n            <input type=\"text\" formControlName=\"mobileNumber\" class=\"form-control required\"\n              [(ngModel)]=\"thirdParty.mobileNumber\"\n              maxlength=\"12\">\n            <p class=\"form-error\" *ngIf=\"tpForm.controls['mobileNumber'].errors?.required\">\n              * mobile number is required\n            </p>\n          </div>\n        </div>\n\n        <div class=\"col-md-12\">\n          <h5>Address</h5>\n        </div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': tpForm.controls['correspondenceType'].invalid \n                && (tpForm.controls['correspondenceType'].dirty \n                || tpForm.controls['correspondenceType'].touched)}\">\n            <label for=\"correspondenceType\">Correspondence Type</label>\n            <select class=\"custom-select mr-sm-2 required\" formControlName=\"correspondenceType\"\n              [(ngModel)]=\"thirdParty.correspondenceType\">\n              <option *ngFor=\"let correspondenceType of TPLOV.correspondenceTypeLOV\"\n                [ngValue]=\"correspondenceType.TIP_ETIQUETA\">{{ correspondenceType.NOM_VALOR }}</option>\n            </select>\n            <p class=\"form-error\" *ngIf=\"tpForm.controls['correspondenceType'].errors?.required\">\n              * correspondence type is required\n            </p>\n          </div>\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"gender\">Country</label>\n            <select class=\"custom-select mr-sm-2\" formControlName=\"country\" [(ngModel)]=\"thirdParty.country\"\n                (change)=\"getState()\">\n              <option selected></option>\n              <option *ngFor=\"let country of TPLOV.countryLOV\" [ngValue]=\"country.COD_PAIS\">{{ country.NOM_PAIS }}\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"gender\">State</label>\n            <select class=\"custom-select mr-sm-2\" formControlName=\"state\" [(ngModel)]=\"thirdParty.state\"\n                (change)=\"getProvince()\">\n              <option selected></option>\n              <option *ngFor=\"let state of TPLOV.stateLOV\" [ngValue]=\"state.COD_ESTADO\">{{ state.NOM_ESTADO }}\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"province\">Province</label>\n            <select class=\"custom-select mr-sm-2\" formControlName=\"province\" [(ngModel)]=\"thirdParty.province\"\n                (change)=\"getCity()\">\n              <option selected></option>\n              <option *ngFor=\"let province of TPLOV.provinceLOV\" [ngValue]=\"province.COD_PROV\">\n                {{ province.NOM_PROV }}\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"gender\">Town/City</label>\n            <select class=\"custom-select mr-sm-2\" formControlName=\"city\" [(ngModel)]=\"thirdParty.city\"\n                (change)=\"getZipCode()\">\n              <option selected></option>\n              <option *ngFor=\"let city of TPLOV.cityLOV\" [ngValue]=\"city.COD_LOCALIDAD\">\n                {{ city.NOM_LOCALIDAD }}\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"col-lg-12\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': tpForm.controls['address'].invalid \n            && (tpForm.controls['address'].dirty \n            || tpForm.controls['address'].touched)}\">\n            <label for=\"address\">Address</label>\n            <textarea type=\"text\" formControlName=\"address\" class=\"form-control required\"\n              oninput=\"this.value = this.value.toUpperCase()\" \n              [(ngModel)]=\"thirdParty.address\"></textarea>\n            <p class=\"form-error\" *ngIf=\"tpForm.controls['address'].errors?.required\">\n              * address required\n            </p>\n          </div>\n        </div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"gender\">Zipcode</label>\n            <select class=\"custom-select mr-sm-2\" formControlName=\"zipcode\" [(ngModel)]=\"thirdParty.zipcode\">\n              <option *ngFor=\"let zipcode of TPLOV.zipcodeLOV\" [ngValue]=\"zipcode.COD_POSTAL\">\n                {{ zipcode.COD_POSTAL }}\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"col-md-8\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': tpForm.controls['email'].invalid \n              && (tpForm.controls['email'].dirty \n              || tpForm.controls['email'].touched)}\">\n            <label for=\"email\">Email</label>\n            <input type=\"text\" formControlName=\"email\" class=\"form-control required\" [(ngModel)]=\"thirdParty.email\">\n            <p class=\"form-error\" *ngIf=\"tpForm.controls['email'].errors?.required\">\n              * email is required\n            </p>\n            <p class=\"form-error\" *ngIf=\"tpForm.controls['email'].errors?.email\">\n              * invalid email format\n            </p>\n          </div>\n        </div>\n\n        <div *ngIf=\"showOrgDetails\" class=\"col-xl-12\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <h5>Company/Organization Data <small>(Optional)</small></h5>\n            </div>\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label for=\"orgDocumentType\">Contact Document Type</label>\n                <select class=\"custom-select mr-sm-2\" formControlName=\"orgDocumentType\"\n                  [(ngModel)]=\"thirdParty.orgDocumentType\">\n                  <option></option>\n                  <option *ngFor=\"let documentType of TPLOV.documentTypeLOV\" [ngValue]=\"documentType.COD_DOCUM\">\n                    {{ documentType.NOM_DOCUM }}\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label for=\"orgDocumentCode\">Contact Document Code</label>\n                <input type=\"text\" formControlName=\"orgDocumentCode\" class=\"form-control\"\n                  [(ngModel)]=\"thirdParty.orgDocumentCode\">\n              </div>\n            </div>\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label for=\"orgNationality\">Nationality</label>\n                <select class=\"custom-select mr-sm-2\" formControlName=\"orgNationality\"\n                  [(ngModel)]=\"thirdParty.orgNationality\">\n                  <option></option>\n                  <option *ngFor=\"let nationality of TPLOV.nationalityLOV\" [ngValue]=\"nationality.COD_PAIS\">\n                    {{ nationality.NOM_PAIS }}\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label for=\"orgFirstName\">Contact First Name</label>\n                <input type=\"text\" formControlName=\"orgFirstName\" class=\"form-control\"\n                  [(ngModel)]=\"thirdParty.orgFirstName\">\n              </div>\n            </div>\n\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label for=\"orgLastName\">Contact Last Name</label>\n                <input type=\"text\" formControlName=\"orgLastName\" class=\"form-control\"\n                  [(ngModel)]=\"thirdParty.orgLastName\">\n              </div>\n            </div>\n\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label for=\"orgPost\">Post</label>\n                <select class=\"custom-select mr-sm-2\" formControlName=\"orgPost\" [(ngModel)]=\"thirdParty.orgPost\">\n                  <option></option>\n                  <option *ngFor=\"let orgPost of TPLOV.orgPostLOV\" [ngValue]=\"orgPost.COD_MARCA\">\n                    {{ orgPost.NOM_MARCA }}\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label for=\"orgTypeOfBusiness\">Type of Business</label>\n                <select class=\"custom-select mr-sm-2\" formControlName=\"orgTypeOfBusiness\"\n                  [(ngModel)]=\"thirdParty.orgTypeOfBusiness\">\n                  <option></option>\n                  <option *ngFor=\"let orgTypeOfBusiness of TPLOV.orgTypeOfBusinessLOV\"\n                    [ngValue]=\"orgTypeOfBusiness.COD_MARCA\">\n                    {{ orgTypeOfBusiness.NOM_MARCA }}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"showPersonDetails\" class=\"col-xl-12\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <h5>Natural Person Data <small>(Optional)</small></h5>\n            </div>\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label for=\"personMaritalStatus\">Marital Status</label>\n                <select class=\"custom-select mr-sm-2\" formControlName=\"personMaritalStatus\"\n                  [(ngModel)]=\"thirdParty.personMaritalStatus\">\n                  <option *ngFor=\"let personMaritalStatus of TPLOV.personMaritalStatusLOV\"\n                    [ngValue]=\"personMaritalStatus.COD_EST_CIVIL\">\n                    {{ personMaritalStatus.NOM_VALOR }}\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label for=\"personProfession\">Profession</label>\n                <select class=\"custom-select mr-sm-2\" formControlName=\"personProfession\"\n                  [(ngModel)]=\"thirdParty.personProfession\">\n                  <option *ngFor=\"let personProfession of TPLOV.personProfessionLOV\"\n                    [ngValue]=\"personProfession.COD_PROFESION\">\n                    {{ personProfession.NOM_PROFESION }}\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label for=\"personOccupation\">Occupation</label>\n                <select class=\"custom-select mr-sm-2\" formControlName=\"personOccupation\"\n                  [(ngModel)]=\"thirdParty.personOccupation\">\n                  <option *ngFor=\"let personOccupation of TPLOV.personOccupationLOV\"\n                    [ngValue]=\"personOccupation.COD_PROFESION\">\n                    {{ personOccupation.NOM_PROFESION }}\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label for=\"personNationality\">Nationality</label>\n                <select class=\"custom-select mr-sm-2\" formControlName=\"personNationality\"\n                  [(ngModel)]=\"thirdParty.personNationality\">\n                  <option *ngFor=\"let nationality of TPLOV.nationalityLOV\" [ngValue]=\"nationality.COD_PAIS\">\n                    {{ nationality.NOM_PAIS }}\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label for=\"personType\">Type</label>\n                <select class=\"custom-select mr-sm-2\" formControlName=\"personType\" [(ngModel)]=\"thirdParty.personType\">\n                  <option *ngFor=\"let personType of TPLOV.personTypeLOV\" [ngValue]=\"personType.TIP_NACIONALIDAD\">\n                    {{ personType.NOM_VALOR }}\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': tpForm.controls['personLanguage'].invalid \n                      && (tpForm.controls['personLanguage'].dirty \n                      || tpForm.controls['personLanguage'].touched)}\">\n                <label for=\"personLanguage\">Language</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"personLanguage\"\n                  [(ngModel)]=\"thirdParty.personLanguage\">\n                  <option *ngFor=\"let personLanguage of TPLOV.personLanguageLOV\" [ngValue]=\"personLanguage.COD_IDIOMA\">\n                    {{ personLanguage.NOM_IDIOMA }}\n                  </option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"tpForm.controls['personLanguage'].errors?.required\">\n                  * language is required\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <div mat-dialog-actions align=\"end\">\n    <div class=\"btn-group\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"cancel()\">\n        Cancel\n      </button>\n      <button [disabled]=\"tpForm.pristine || tpForm.invalid\" type=\"submit\" class=\"btn btn-primary\" (click)=\"create()\">\n        Create\n      </button>\n    </div>\n  </div>\n</form>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/dashboard/dashboard.component.html":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/dashboard/dashboard.component.html ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!-- Content Row -->\n<div class=\"row\">\n  <div class=\"col-xl-12 img-container d-none d-lg-block\">\n    <img src=\"./assets/images/digital_payment.png\" width=\"100%\" alt=\"digital_payment\">\n  </div>\n\n  <!-- Forex Exchange -->\n  <div class=\"col-xl-4 col-md-12 mb-4\">\n    <div class=\"card border-left-primary shadow h-100 py-2\">\n      <div class=\"card-body\">\n        <div class=\"row no-gutters align-items-center\">\n          <div class=\"col mr-2\">\n            <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">Forex Exchange</div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <h5 class=\"all-caps\">\n                  <span class=\"fa-stack fa-md\">\n                    <i class=\"fa fa-circle fa-stack-2x dollar\"></i>\n                    <i class=\"fa fa-dollar-sign fa-stack-1x fa-inverse\"></i>\n                  </span>\n                  {{forex.dollar | currency:'PHP': 'symbol-narrow'}}\n                </h5>\n              </div>\n              <div class=\"col-6\">\n                <h5 class=\"all-caps\">\n                  <span class=\"fa-stack fa-md\">\n                    <i class=\"fa fa-circle fa-stack-2x euro\"></i>\n                    <i class=\"fa fa-euro-sign fa-stack-1x fa-inverse\"></i>\n                  </span>\n                  {{forex.euro | currency:'PHP': 'symbol-narrow'}}\n                </h5>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card border-left-success shadow h-100 py-2\">\n      <div class=\"card-body\">\n        <div class=\"row no-gutters align-items-center\">\n          <div class=\"col mr-2\">\n            <div class=\"text-xs font-weight-bold text-success text-uppercase mb-1\">Total Collected Premium\n            </div>\n            <div class=\"h5 mb-0 font-weight-bold text-gray-800\">\n              <i *ngIf=\"!showData\" class=\"fa fa-spinner fa-spin\"></i>\n              <h3 *ngIf=\"showData\">{{dashboardInfo.total | currency:'PHP': 'symbol-narrow'}}</h3>\n            </div>\n          </div>\n          <div class=\"col-auto\">\n            <i class=\"fas fa-coins fa-2x text-gray-300\"></i>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card border-left-info shadow h-100 py-2\">\n      <div class=\"card-body\">\n        <div class=\"row no-gutters align-items-center\">\n          <div class=\"col mr-2\">\n            <div class=\"text-xs font-weight-bold text-info text-uppercase mb-1\">Active Policies</div>\n            <div class=\"h5 mb-0 font-weight-bold text-gray-800\">\n              <i *ngIf=\"!showData\" class=\"fa fa-spinner fa-spin\"></i>\n              <h3 *ngIf=\"showData\">{{dashboardInfo.active}}</h3>\n            </div>\n          </div>\n          <div class=\"col-auto\">\n            <i class=\"fas fa-clipboard-list fa-2x text-gray-300\"></i>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-xl-8\">\n    <div class=\"card shadow mb-4\">\n      <div class=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n        <h6 class=\"m-0 font-weight-bold text-primary\">Agent Production</h6>\n      </div>\n      <div class=\"card-body\">\n        <i *ngIf=\"!showData\" class=\"fa fa-spinner fa-spin\"></i>\n        <div *ngIf=\"showData\" style=\"display: block;\">\n          <canvas baseChart\n            [datasets]=\"barChartData\"\n            [labels]=\"barChartLabels\" \n            [options]=\"chartOptions\"\n            [plugins]=\"barChartPlugins\"\n            [legend]=\"chartLegend\"\n            [chartType]=\"barChartType\"\n            [colors]=\"barChartColors\">\n          </canvas>\n        </div>\n      </div>\n    </div>\n</div>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/document-printing/document-printing.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/document-printing/document-printing.component.html ***!
  \*********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"documentPrinting\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n\n      <h4 class=\"all-caps\">\n        <span class=\"fa-stack fa-md\">\n          <i class=\"fa fa-circle fa-stack-2x\"></i>\n          <i class=\"fa fa-print fa-stack-1x fa-inverse\"></i>\n        </span>\n        Document Printing\n      </h4>\n\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <form [formGroup]=\"documentPrintingForm\">\n          <div class=\"row\">\n            <div class=\"col-xl-5 col-md-5 col-sm-12\">\n              <div class=\"form-group input-group mb-3\" [ngClass]=\"{'input-error': documentPrintingForm.controls['documentType'].invalid \n                && (documentPrintingForm.controls['documentType'].dirty \n                || documentPrintingForm.controls['documentType'].touched)}\">\n                <div class=\"input-group-prepend\">\n                  <label class=\"input-group-text\" for=\"inputGroupSelect01\">Document Type</label>\n                </div>\n\n                <select class=\"custom-select mr-sm-2\" formControlName=\"documentType\"\n                  [(ngModel)]=\"documentPrintingDetails.documentType\">\n                  <option selected>\n                    <p *ngIf=\"documentPrintingForm.controls['documentType'].errors?.required\">\n                      Select Document Type\n                    </p>\n                  </option>\n                  <option value=\"P\">Policy</option>\n                  <option value=\"Q\">Quotation</option>\n                  <option value=\"C\">Commission Statement</option>\n                  <option value=\"S\">Statement of Account</option>\n                </select>\n\n              </div>\n            </div>\n            <div class=\"col-md-7 col-sm-6\" *ngIf=\"showPolicyDetails\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': documentPrintingForm.controls['policyNumber'].invalid \n                    && (documentPrintingForm.controls['policyNumber'].dirty \n                    || documentPrintingForm.controls['policyNumber'].touched)}\">\n                <label for=\"policyNumber\">Policy Number</label>\n                <input type=\"text\" formControlName=\"policyNumber\" class=\"form-control required\"\n                  (change)=\"policyNumberOnChange()\"\n                  [(ngModel)]=\"documentPrintingDetails.policyNumber\">\n                <p class=\"form-error\" *ngIf=\"documentPrintingForm.controls['policyNumber'].errors?.required\">\n                  * policy number is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-md-7 col-sm-6\" *ngIf=\"showQuotationDetails\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': documentPrintingForm.controls['quotationNumber'].invalid \n                    && (documentPrintingForm.controls['quotationNumber'].dirty \n                    || documentPrintingForm.controls['quotationNumber'].touched)}\">\n                <label for=\"quotationNumber\">Quotation Number</label>\n                <input type=\"text\" formControlName=\"quotationNumber\" class=\"form-control required\"\n                  [(ngModel)]=\"documentPrintingDetails.quotationNumber\">\n                <p class=\"form-error\" *ngIf=\"documentPrintingForm.controls['quotationNumber'].errors?.required\">\n                  * quotation number is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-md-7 col-sm-6\" *ngIf=\"showCommissionStatementDetails\">\n              <div *ngIf=\"!showCsDate\" class=\"alert alert-info note\">\n                <p>No generated COMMISSION STATEMENT for the past 3 months\n                </p>\n              </div>\n              <div *ngIf=\"showCsDate\" class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"alert alert-info note\">\n                    <p>Print your COMMISSION STATEMENT for the past 3 months</p>\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': documentPrintingForm.controls['csProcessDate'].invalid \n                    && (documentPrintingForm.controls['csProcessDate'].dirty \n                    || documentPrintingForm.controls['csProcessDate'].touched)}\">\n                    <label for=\"csProcessDate\">Select Date</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"csProcessDate\"\n                      [(ngModel)]=\"documentPrintingDetails.csProcessDate\">\n                      <option selected></option>\n                      <option *ngFor=\"let csProcessDate of csProcessDateLOV\" [ngValue]=\"csProcessDate.value\">\n                        {{ csProcessDate.date }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"documentPrintingForm.controls['csProcessDate'].errors?.required\">\n                      * please select a date\n                    </p>\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': documentPrintingForm.controls['csPass'].invalid \n                    && (documentPrintingForm.controls['csPass'].dirty \n                    || documentPrintingForm.controls['csPass'].touched)}\">\n                    <label for=\"csPass\">Password</label>\n                    <input type=\"password\" formControlName=\"csPass\" class=\"form-control required\"\n                      [(ngModel)]=\"documentPrintingDetails.csPass\">\n                    <p class=\"form-error\" *ngIf=\"documentPrintingForm.controls['csPass'].errors?.required\">\n                      * password is required\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-md-7 col-sm-6\" *ngIf=\"showSOADetails\">\n              <div class=\"alert alert-info note\">\n                <p>Print your STATEMENT OF ACCOUNT for the past 3 months</p>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': documentPrintingForm.controls['soaProcessDate'].invalid \n                      && (documentPrintingForm.controls['soaProcessDate'].dirty \n                      || documentPrintingForm.controls['soaProcessDate'].touched)}\">\n                    <label for=\"soaProcessDate\">Select Date</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"soaProcessDate\"\n                      [(ngModel)]=\"documentPrintingDetails.soaProcessDate\">\n                      <option selected></option>\n                      <option *ngFor=\"let soaProcessDate of soaProcessDateLOV\" [ngValue]=\"soaProcessDate.value\">\n                        {{ soaProcessDate.name }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"documentPrintingForm.controls['soaProcessDate'].errors?.required\">\n                      * please select a date\n                    </p>\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': documentPrintingForm.controls['soaPass'].invalid \n                      && (documentPrintingForm.controls['soaPass'].dirty \n                      || documentPrintingForm.controls['soaPass'].touched)}\">\n                    <label for=\"soaPass\">Password</label>\n                    <input type=\"password\" formControlName=\"soaPass\" class=\"form-control required\"\n                      [(ngModel)]=\"documentPrintingDetails.soaPass\">\n                    <p class=\"form-error\" *ngIf=\"documentPrintingForm.controls['soaPass'].errors?.required\">\n                      * password is required\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"clearfix\"></div>\n\n            <div class=\"dp-policy col-lg-12\" *ngIf=\"showPolicyDetails\">\n              <div class=\"row\">\n\n                <div class=\"form-divider\"></div>\n                <div class=\"col-xl-12\">\n                  <h6>Policy Details</h6>\n                </div>\n\n                <div class=\"col-md-3 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': documentPrintingForm.controls['endorsementNumber'].invalid \n                    && (documentPrintingForm.controls['endorsementNumber'].dirty \n                    || documentPrintingForm.controls['endorsementNumber'].touched)}\">\n                    <label for=\"endorsementNumber\">Endorsement Number</label>\n                    <input type=\"text\" formControlName=\"endorsementNumber\" class=\"form-control\"\n                      [(ngModel)]=\"documentPrintingDetails.endorsementNumber\">\n                    <p class=\"form-error\" *ngIf=\"documentPrintingForm.controls['endorsementNumber'].errors?.required\">\n                      * endorsement number is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3 col-sm-6\">\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"policyPPRF\" formControlName=\"policyPPRF\"\n                      [(ngModel)]=\"documentPrintingDetails.policyPPRF\">\n                    <label class=\"form-check-label\" for=\"policyPPRF\">\n                      Print Policy Receipt Form (North Luzon Policy)\n                    </label>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3 col-sm-6\">\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"policyPAC\" formControlName=\"policyPAC\"\n                      [(ngModel)]=\"documentPrintingDetails.policyPAC\">\n                    <label class=\"form-check-label\" for=\"policyPAC\">\n                      Print Agent's Copy\n                    </label>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3 col-sm-6\">\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"policyPV\" formControlName=\"policyPV\"\n                      [(ngModel)]=\"documentPrintingDetails.policyPV\">\n                    <label class=\"form-check-label\" for=\"policyPV\">\n                      Print Voucher\n                    </label>\n                  </div>\n                </div>\n\n              </div>\n              <!-- .row -->\n            </div>\n            <!-- dp-policy col-lg-12 -->\n\n          </div>\n          <!-- .row -->\n\n          <div class=\"btn-group\" role=\"group\">\n            <button [disabled]=\"documentPrintingForm.pristine || documentPrintingForm.invalid\" type=\"button\"\n              class=\"btn btn-primary\" (click)=\"print(documentPrintingDetails)\">Print</button>\n          </div>\n          <!-- .btn-group -->\n\n        </form>\n\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #documentPrinting -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/faq/faq.component.html":
/*!*****************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/faq/faq.component.html ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"faq\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4 class=\"all-caps\">\n        <span class=\"fa-stack fa-md\">\n          <i class=\"fa fa-circle fa-stack-2x\"></i>\n          <i class=\"fa fa-question fa-stack-1x fa-inverse\"></i>\n        </span>\n        Frequently Asked Questions\n      </h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n        <div class=\"col-md-12\">\n\n          <div class=\"question-panel\">\n            <div class=\"question-container\">\n              <div class=\"question-section\">\n                <h5><span class=\"qa-label\">Q.</span>&nbsp;How do I fill-out my Official Receipt based on the\n                  disbursement statement?</h5>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n            <div class=\"answer-container\">\n              <div class=\"answer-section col-xs-11\">\n                <h5><span class=\"qa-label\">A.</span>&nbsp;&nbsp;Sample Disbursement Statement - TWB</h5>\n                <img src=\"./assets/images/faq/sample-ds.png\" alt=\"disbursement-statement TWB\" />\n                <br />\n                <br />\n                <h5>Sample Disbursement Statement - NIIS</h5>\n                <img src=\"./assets/images/faq/sample-cpr.png\" alt=\"disbursement-statement NIIS\" />\n                <br />\n                <br />\n                <h5>Sample BIR Official Receipt</h5>\n                <img src=\"./assets/images/faq/sample-or.png\" alt=\"disbursement-statement BIR-OR\" />\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n          </div>\n\n          <div class=\"question-panel\">\n            <div class=\"question-container\">\n              <div class=\"question-section col-xs-11\">\n                <h5><span class=\"qa-label\">Q.</span>&nbsp;How would I know if my Official Receipt is valid?</h5>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n            <div class=\"answer-container\">\n              <div class=\"answer-section col-xs-11\">\n                <p><span class=\"qa-label\">A.</span>&nbsp;&nbsp;Validity period of Official Receipt is <strong>five (5)\n                    years</strong> only. e.g. If the Official\n                  Receipt is printed\n                  on July 12, 2019, Official Receipt is still acceptable until July 11, 2024.</p>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n          </div>\n\n          <div class=\"question-panel\">\n            <div class=\"question-container\">\n              <div class=\"question-section col-xs-11\">\n                <h5><span class=\"qa-label\">Q.</span>&nbsp;Where can I submit my Official Receipts?</h5>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n            <div class=\"answer-container\">\n              <div class=\"answer-section col-xs-11\">\n                <p><span class=\"qa-label\">A.</span>&nbsp;&nbsp;You may submit your Official Receipts to <strong>any\n                    MAPFRE Insurance Sales Office</strong> near you.\n                </p>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n          </div>\n\n          <div class=\"question-panel\">\n            <div class=\"question-container\">\n              <div class=\"question-section col-xs-11\">\n                <h5><span class=\"qa-label\">Q.</span>&nbsp;What are the cut-offs and schedules I need to remember?</h5>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n            <div class=\"answer-container\">\n              <div class=\"answer-section col-xs-11\">\n                <span class=\"qa-label\">A.</span>\n                <ol>\n                  <li>All Official Receipts in exchange of commission received from previous month shall be\n                    submitted to Head Office c/o Commission personnel on or before 1st Monday of the following month.\n                  </li>\n                  <li>In the event that Official Receipt was not submitted during the 1st week, agent should\n                    submit the pending Official Receipt before Monday of the following week.</li>\n                  <li>Transfer of Commission to agent's ATM account is every Wednesday and Thursday</li>\n                  <li>Disbursement Statement will be sent to agent's registered email every Wednesday and Friday\n                    by senders noreply@mapfreinsurance.com.ph; treasuryho@mapfreinsurance.com.ph</li>\n                  <li>Commission to be released is based on the premiums posted as fully paid in the system from\n                    Tuesday (prior week) up to Monday (current week).</li>\n                </ol>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n          </div>\n\n          <div class=\"question-panel\">\n            <div class=\"question-container\">\n              <div class=\"question-section col-xs-11\">\n                <h5><span class=\"qa-label\">Q.</span>&nbsp;How will I be able to receive my commissions for my paid\n                  accounts?</h5>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n            <div class=\"answer-container\">\n              <div class=\"answer-section col-xs-11\">\n                <p><span class=\"qa-label\">A.</span>&nbsp;&nbsp;Commissions for licensed individuals shall only be paid\n                  via transfer to their registered BPI account\n                  number.</p>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n          </div>\n\n          <div class=\"question-panel\">\n            <div class=\"question-container\">\n              <div class=\"question-section col-xs-11\">\n                <h5><span class=\"qa-label\">Q.</span>&nbsp;What if I don't have BPI account? Are there other banks\n                  available?</h5>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n            <div class=\"answer-container\">\n              <div class=\"answer-section col-xs-11\">\n                <p><span class=\"qa-label\">A.</span>&nbsp;&nbsp;<strong>None</strong>, but MAPFRE can endorse you to open\n                  a BPI account without maintaining balance\n                  provided you have regular\n                  commission being credited to your account. If after six months and no amount has been credited, the\n                  bank\n                  shall\n                  change it to regular account with required ADB. Other terms and conditions are indicated in the BPI\n                  endorsement form.</p>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n          </div>\n\n          <div class=\"question-panel\">\n            <div class=\"question-container\">\n              <div class=\"question-section col-xs-11\">\n                <h5><span class=\"qa-label\">Q.</span>&nbsp;If I have existing BPI account, can I use it?</h5>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n            <div class=\"answer-container\">\n              <div class=\"answer-section col-xs-11\">\n                <p><span class=\"qa-label\">A.</span>&nbsp;&nbsp;<strong>Yes</strong>, all BPI accounts (current or\n                  savings) except for BPI Family Savings</p>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n          </div>\n\n          <div class=\"question-panel\">\n            <div class=\"question-container\">\n              <div class=\"question-section col-xs-11\">\n                <h5><span class=\"qa-label\">Q.</span>&nbsp;What are the requirements in order to receive my commissions\n                  regularly?</h5>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n            <div class=\"answer-container\">\n              <div class=\"answer-section col-xs-11\">\n                <p><span class=\"qa-label\">A.</span>&nbsp;&nbsp;Aside from having a valid license and duly submitted MOA\n                  (Memorandum of Agreement), you must submit\n                  your\n                  <strong>valid BIR Official Receipts (OR)</strong> on or before the due date which is indicated in the\n                  email advice sent by\n                  MAPFRE to your registered email address. You may issue Official Receipt based on the statement\n                  received\n                  weekly\n                  or for the total amount received in a month provided that issue date is within the month commission\n                  was\n                  released. Ensure that you sign the OR on the space provided for signature every time you issue the OR.\n                </p>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n          </div>\n\n          <div class=\"question-panel\">\n            <div class=\"question-container\">\n              <div class=\"question-section col-xs-11\">\n                <h5><span class=\"qa-label\">Q.</span>&nbsp;Where can I send my queries or concerns with regards to my\n                  commission?</h5>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n            <div class=\"answer-container\">\n              <div class=\"answer-section col-xs-11\">\n                <p><span class=\"qa-label\">A.</span>&nbsp;&nbsp;You may email your concerns or queries to\n                  <strong>DCU@mapfreinsurance.com.ph</strong>\n                  or <strong>mrbdagsa@mapfreinsurance.com.ph</strong></p>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n          </div>\n\n          <div class=\"question-panel\">\n            <div class=\"question-container\">\n              <div class=\"question-section col-xs-11\">\n                <h5><span class=\"qa-label\">Q.</span>&nbsp;What are the possible causes of a negative amount reflected on\n                  my disbursement statement</h5>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n            <div class=\"answer-container\">\n              <div class=\"answer-section col-xs-11\">\n                <p><span class=\"qa-label\">A.</span>&nbsp;&nbsp;Aside from the the deductions found in the column\n                  <strong>advance disbursement</strong>, which\n                  represent the\n                  discounts/commission given to clients by the agent. There will be a negative effect on your\n                  commission if there is:</p>\n                <ul>\n                  <li>returned check/bounced check</li>\n                  <li>cancellation endorsement</li>\n                </ul>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n          </div>\n\n        </div>\n        <!-- .col-md-12 -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #faq -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/fixed-coverages/fixed-coverages.component.html":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/fixed-coverages/fixed-coverages.component.html ***!
  \*****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id=\"coverageBreakdown\" class=\"card shadow mb-3\">\n  <div class=\"card-header\">\n    <strong>Coverage Breakdown</strong>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"flexitable\">\n          <table mat-table [dataSource]=\"coverageData\" matSort class=\"mat-elevation-z8\">\n\n            <ng-container matColumnDef=\"label\">\n              <th mat-header-cell *matHeaderCellDef>Coverage</th>\n              <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.label\"></td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"sumInsured\">\n              <th mat-header-cell *matHeaderCellDef class=\"amount\">Sum Insured</th>\n              <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                {{element.showDetails ? element.details : element.sumInsured | currency: element.currency: 'symbol-narrow'}}\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n          </table>\n        </div>\n      </div>\n      <!-- .col-xl-12 -->\n    </div>\n    <!-- .row -->\n  </div>\n  <!-- .card-body -->\n</div>\n<!-- #coverageBreakdown -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/footer/footer.component.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/footer/footer.component.html ***!
  \***********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<footer class=\"sticky-footer\">\n  <div class=\"my-auto\">\n    <div class=\"copyright my-auto\">\n      <div class=\"col-lg-12 footer-wrapper\">\n        <img class=\"footer-logo\" src=\"./assets/images/mivo-logo/mi_logo.png\">\n        <p><strong>MAPFRE Insurance Corporation</strong></p>\n        <p>MAPFRE Insurance Corporate Center</p>\n        <p>Acacia Ave., Madrigal Business Park, Ayala Alabang, Muntinlupa City</p>\n        <p>VAT REG TIN 000-491-771-00000</p>\n        <p>Tel: (632) 8876-4444 ; Fax: (632) 8876-4344</p>\n        <p><a>www.mapfre.com.ph</a></p>\n        <p>{{version}}</p>\n      </div>\n    </div>\n  </div>\n</footer>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/group-policy/group-policy.component.html":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/group-policy/group-policy.component.html ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"card shadow mb-3\">\n  <div class=\"card-header\">\n    <strong>Group Policy Information</strong>\n  </div>\n\n  <div class=\"card-body\">\n    <form [formGroup]=\"gpForm\">\n      <div class=\"row\">\n        <div class=\"col-xl-12\">\n          <h6>Group Policy</h6>\n        </div>\n\n        <div class=\"col-lg-3 col-md-4 col-sm-6\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': gpForm.controls['groupPolicy'].invalid \n            && (gpForm.controls['groupPolicy'].dirty \n            || gpForm.controls['groupPolicy'].touched)}\">\n            <label for=\"groupPolicy\">Group Policy</label>\n            <select class=\"custom-select mr-sm-2\" formControlName=\"groupPolicy\"\n              [attr.disabled]=\"editMode && GPLOV.groupPolicyLOV?.length ? null : true\" [(ngModel)]=\"groupPolicy.groupPolicy\"\n              (change)=\"groupPolicyOnChange(); affecting('groupPolicy', 'Group Policy')\">\n              <option></option>\n              <option *ngFor=\"let groupPolicy of GPLOV.groupPolicyLOV\" [ngValue]=\"groupPolicy.NUM_POLIZA\">\n                {{ groupPolicy.NOM_POLIZA }}</option>\n            </select>\n            <p class=\"form-error\" *ngIf=\"gpForm.controls['groupPolicy'].errors?.required\">\n              * group policy is required\n            </p>\n          </div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-4 col-sm-6\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': gpForm.controls['contract'].invalid \n            && (gpForm.controls['contract'].dirty \n            || gpForm.controls['contract'].touched)}\">\n            <label for=\"contract\">Contract</label>\n            <select class=\"custom-select mr-sm-2 required\" formControlName=\"contract\"\n              (change)=\"contractOnChange(); affecting('contract', 'Contract')\"\n              [(ngModel)]=\"groupPolicy.contract\"\n              [attr.disabled]=\"editMode && groupPolicy.groupPolicy ? null : true\">\n              <option></option>\n              <option *ngFor=\"let contract of GPLOV.contractLOV\" [ngValue]=\"contract.NUM_CONTRATO\">\n                {{ contract.NOM_CONTRATO }}\n              </option>\n            </select>\n            <p class=\"form-error\" *ngIf=\"gpForm.controls['contract'].errors?.required\">\n              * contract is required\n            </p>\n          </div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-4 col-sm-6\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': gpForm.controls['subContract'].invalid \n            && (gpForm.controls['subContract'].dirty \n            || gpForm.controls['subContract'].touched)}\">\n            <label for=\"subContract\">Sub Contract</label>\n            <select class=\"custom-select mr-sm-2 required\" formControlName=\"subContract\"\n              (change)=\"affecting('subContract', 'Sub Contract')\"\n              [(ngModel)]=\"groupPolicy.subContract\"\n              [attr.disabled]=\"editMode && groupPolicy.groupPolicy && groupPolicy.contract ? null : true\">\n              <option></option>\n              <option *ngFor=\"let subContract of GPLOV.subContractLOV\" [ngValue]=\"subContract.NUM_SUBCONTRATO\">\n                {{ subContract.NOM_SUBCONTRATO }}</option>\n            </select>\n            <p class=\"form-error\" *ngIf=\"gpForm.controls['subContract'].errors?.required\">\n              * sub contract is required\n            </p>\n          </div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-4 col-sm-6\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': gpForm.controls['commercialStructure'].invalid \n            && (gpForm.controls['commercialStructure'].dirty \n            || gpForm.controls['commercialStructure'].touched)}\">\n            <label for=\"commercialStructure\">Commercial Structure</label>\n            <select class=\"custom-select mr-sm-2 required\" formControlName=\"commercialStructure\"\n              [(ngModel)]=\"groupPolicy.commercialStructure\"\n              [attr.disabled]=\"editMode && GPLOV.commercialStructureLOV?.length ? null : true\">\n              <option></option>\n              <option *ngFor=\"let commercialStructure of GPLOV.commercialStructureLOV\"\n                [ngValue]=\"commercialStructure.COD_NIVEL3\">{{ commercialStructure.NOM_NIVEL3 }}</option>\n            </select>\n            <p class=\"form-error\" *ngIf=\"gpForm.controls['commercialStructure'].errors?.required\">\n              * commercial structure is required\n            </p>\n          </div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-4 col-sm-6\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': gpForm.controls['agentCode'].invalid \n            && (gpForm.controls['agentCode'].dirty \n            || gpForm.controls['agentCode'].touched)}\">\n            <label for=\"agentCode\">Agent Code</label>\n            <input type=\"number\" formControlName=\"agentCode\" class=\"form-control required\"\n              [(ngModel)]=\"groupPolicy.agentCode\">\n            <p class=\"form-error\" *ngIf=\"gpForm.controls['agentCode'].errors?.required\">\n              * agent code is required\n            </p>\n          </div>\n        </div>\n\n        <div *ngIf=\"showExpiring\" class=\"col-lg-3 col-md-4 col-sm-6\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': gpForm.controls['expiringPolicyNumber'].invalid \n            && (gpForm.controls['expiringPolicyNumber'].dirty \n            || gpForm.controls['expiringPolicyNumber'].touched)}\">\n            <div class=\"form-check\">\n              <input class=\"form-check-input\" type=\"checkbox\" id=\"cbIsRenewal\" formControlName=\"cbIsRenewal\"\n                [(ngModel)]=\"groupPolicy.cbIsRenewal\"\n                [attr.disabled]=\"editMode ? null : true\">\n              <label class=\"form-check-label\" for=\"cbIsRenewal\">\n                Renewal\n              </label>\n            </div>\n            <label class=\"form-check-label\" for=\"cbIsRenewal\">\n              Expiring Policy Number\n            </label>\n            <input type=\"text\" formControlName=\"expiringPolicyNumber\" class=\"form-control required\"\n              [(ngModel)]=\"groupPolicy.expiringPolicyNumber\"\n              [attr.disabled]=\"editMode && groupPolicy.cbIsRenewal ? null : ''\">\n            <p class=\"form-error\" *ngIf=\"gpForm.controls['expiringPolicyNumber'].errors?.required\">\n              * expiring policy number is required\n            </p>\n          </div>\n        </div>\n      </div>\n    </form>\n\n  </div>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/header/header.component.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/header/header.component.html ***!
  \***********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<nav class=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n\n  <!-- Sidebar Toggle (Topbar) -->\n  <button id=\"sidebarToggleTop\" class=\"btn btn-link d-md-none rounded-circle mr-3\">\n    <i class=\"fa fa-bars\"></i>\n  </button>\n\n  <div class=\"header-name\">\n    <i class=\"text-muted\">\n      Bienvenida,\n    </i>\n    <h5 class=\"all-caps\">\n      {{currentUser.fullName}}\n    </h5>\n  </div>\n\n  <!-- Topbar Navbar -->\n  <ul class=\"navbar-nav ml-auto\">\n\n    <!-- Nav Item - Search Dropdown (Visible Only XS) d-sm-none -->\n    <div class=\"topbar-divider d-none d-sm-block\"></div>\n\n    <!-- Nav Item - User Information -->\n    <li class=\"nav-item dropdown no-arrow\">\n      <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\"\n        aria-haspopup=\"true\" aria-expanded=\"false\">\n        <!-- <span class=\"mr-2 d-none d-lg-inline text-gray-600 all-caps\">{{currentUser.fullName}}</span> -->\n        <i class=\"fas fa-user-circle fa-2x fa-fw mr-2 text-gray-400\"></i>\n      </a>\n      <!-- Dropdown - User Information -->\n      <div class=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n        <a class=\"dropdown-item\" (click)=\"setPage(p.UTI.CHA)\">\n          <i class=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Profile\n        </a>\n        <div *ngIf=\"canChooseAgent\" class=\"dropdown-divider\"></div>\n        <a *ngIf=\"canChooseAgent\" class=\"dropdown-item\" (click)=\"chooseAgent()\">\n          <i class=\"fas fa-user-circle fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Choose agent\n        </a>\n        <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\" (click)=\"logout()\" data-toggle=\"modal\" data-target=\"#logoutModal\">\n          <i class=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Logout\n        </a>\n      </div>\n    </li>\n\n  </ul>\n\n</nav>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/health-check/health-check.component.html":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/health-check/health-check.component.html ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id=\"termsAndCondition\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"container\">\n          <div class=\"wrap\">\n            <div class=\"row\">\n\n              <div class=\"col-lg-4 menu\">\n                <a class=\"brand-logo\" (click)=\"redirect()\">\n                  <img src=\"./assets/images/mivo-logo/mivo-logo-light.png\" alt=\"brand-logo\" />\n                </a>\n\n                <ul class=\"health-menu\">\n                  <li class=\"{{backendConfigList.database ? 'live' : ''}}\">\n                    DATABASE\n                  </li>\n                  <li>\n                    PRINTING\n                  </li>\n                </ul>\n              </div>\n              <!-- .col-lg-4 -->\n\n              <div class=\"col-lg-8 details\">\n\n                <div class=\"scroll\">\n                  <div class=\"scroll-wrapper\">\n                    <h2>\n                      CONFIGURATIONS\n                    </h2>\n\n                    <div class=\"top-20\">\n                      <h5>\n                        FRONT END\n                      </h5>\n                      <div>\n                        <ul>\n                          <li>\n                            Build Number: <strong>{{version}}</strong>\n                          </li>\n                          <li>\n                            API URL: <strong>{{apiUrl}}</strong>\n                          </li>\n                          <li>\n                            Image URL: <strong>{{imgUrl}}</strong>\n                          </li>\n                          <li>\n                            Production: <strong>{{production}}</strong>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n\n                    <div class=\"top-20\">\n                      <h5>\n                        BACKEND\n                      </h5>\n                      <div>\n                        <ul>\n                          <li>\n                            Version: <strong>{{backendConfigList.version}}</strong>\n                          </li>\n                          <li>\n                            Database URL: <strong>{{backendConfigList.dbUrl}}</strong>\n                          </li>\n                          <li>\n                            COCAF Register URL: <strong>{{backendConfigList.cocafRegisterUrl}}</strong>\n                          </li>\n                          <li>\n                            COCAF Verify URL: <strong>{{backendConfigList.cocafVerifyUrl}}</strong>\n                          </li>\n                          <li>\n                            BPM Policy Central URL: <strong>{{backendConfigList.policyCentralUrl}}</strong>\n                          </li>\n                          <li>\n                            BPM Tech Control URL: <strong>{{backendConfigList.techControlUrl}}</strong>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n                <!-- .scroll -->\n\n              </div>\n              <!-- .col-lg-8 -->\n\n            </div>\n            <!-- .row -->\n          </div>\n          <!-- .wrap -->\n        </div>\n        <!-- .container -->\n      </div>\n      <!-- .col-lg-12 -->\n\n      <div class=\"clearfix\"></div>\n    </div>\n    <!-- .row -->\n  </div>\n  <!-- .container-fluid -->\n</div>\n<!-- #termsAndCondition -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/individual-policy/individual-policy.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/individual-policy/individual-policy.component.html ***!
  \*********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"card shadow mb-3\">\n  <div class=\"card-header\">\n    <strong>Individual Policy</strong>\n  </div>\n  <div class=\"card-body\">\n    \n    <form [formGroup]=\"loadForm\">\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <label class=\"input-group-text\" for=\"inputGroupSelect01\">Quotation Number</label>\n            </div>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Quotation Number here..\"\n            formControlName=\"quotationNumber\" [(ngModel)]=\"details.quotationNumber\">\n            <div class=\"input-group-append\">\n              <button [disabled]=\"disableLoadBtn\" class=\"btn btn-outline-secondary\" type=\"button\">Load</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </form>\n\n  </div>\n</div>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/login/login.component.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/login/login.component.html ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id=\"login\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 d-none d-lg-block login-panel left-container\">\n        <div class=\"wrap-banner\"></div>\n      </div>\n      <div class=\"col-lg-4 login-panel right-container\">\n        <div class=\"wrap-login\">\n\n          <img class=\"login-logo\" src=\"./assets/images/mivo-logo/mivo-logo.png\" alt=\"mivo-logo\">\n\n          <form class=\"login-form\" [formGroup]=\"loginForm\">\n            <span class=\"login-form-title\">\n              <strong class=\"d-none d-lg-block\">LOGIN</strong>\n              <strong class=\"d-block d-lg-none\">MIVO LOGIN</strong>\n            </span>\n            <span class=\"login-version text-muted\">{{version}}</span>\n\n            <div *ngIf=\"alert\" class=\"alert alert-danger\">{{message}}</div>\n\n            <div class=\"form-group\" [ngClass]=\"{'input-error': loginForm.controls['username'].invalid \n            && (loginForm.controls['username'].dirty \n            || loginForm.controls['username'].touched)}\">\n              <input class=\"form-control\" formControlName=\"username\" type=\"text\" name=\"username\" placeholder=\"Username\">\n              <p class=\"form-error\" *ngIf=\"loginForm.controls['username'].errors?.required\">\n                * username is required\n              </p>\n            </div>\n\n            <div class=\"form-group\" [ngClass]=\"{'input-error': loginForm.controls['password'].invalid \n            && (loginForm.controls['password'].dirty \n            || loginForm.controls['password'].touched)}\">\n              <input class=\"form-control\" formControlName=\"password\" type=\"password\" name=\"password\"\n                placeholder=\"Password\">\n              <p class=\"form-error\" *ngIf=\"loginForm.controls['password'].errors?.required\">\n                * password is required\n              </p>\n            </div>\n\n            <div class=\"container-login-form-btn\">\n              <button [disabled]=\"(loginForm.pristine || loginForm.invalid)\"\n                class=\"login-btn btn btn-primary form-control\" (click)=\"onSubmit()\">\n                Login\n              </button>\n            </div>\n\n            <br />\n\n            <div class=\"row\">\n              <div class=\"col-6 col-sm-6\">\n                <div class=\"contact-form-checkbox\">\n                  <input type=\"checkbox\" id=\"rememberMe\" class=\"input-checkbox\" formControlName=\"rememberMe\"\n                    name=\"rememberMe\">\n                  <label class=\"label-checkbox\" for=\"rememberMe\">\n                    Remember me\n                  </label>\n                </div>\n              </div>\n              <div class=\"col-6 col-sm-6\">\n                <!-- <div class=\"text-right\">\n                  <a class=\"f-password\" href=\"#\">\n                    Forgot Password?\n                  </a>\n                </div> -->\n              </div>\n            </div>\n          </form>\n\n        </div>\n        <div class=\"login-footer\">\n          <ul>\n            <!-- <li>About</li>\n            <li>Privacy</li>\n            <li><a href=\"/terms-and-condition\">Terms and Condition</a></li> -->\n          </ul>\n        </div>\n      </div>\n      <div class=\"clearfix\"></div>\n    </div>\n  </div>\n</div>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/missing-page/missing-page.component.html":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/missing-page/missing-page.component.html ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container-fluid\">\n\n  <!-- 404 Error Text -->\n  <div class=\"text-center\">\n    <div class=\"error mx-auto\" data-text=\"404\">404</div>\n    <p class=\"lead text-gray-800 mb-5\">Page Not Found</p>\n    <p class=\"text-gray-500 mb-0\">It looks like you found a glitch in the matrix...</p>\n    <a href=\"/\">&larr; Back to Dashboard</a>\n  </div>\n\n</div>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/modal/modal.component.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/modal/modal.component.html ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"modal-header {{className}}\">\n  <h4 class=\"all-caps\">\n    <span class=\"fa-stack fa-md\">\n      <i class=\"fa fa-circle fa-stack-2x\"></i>\n      <i class=\"fa {{icon}} fa-stack-1x fa-inverse\"></i>\n    </span>\n    {{title}} \n  </h4>\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"close()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n\n<div class=\"modal-body\">\n  <div class=\"row\">\n    <div *ngIf=\"!isHtml\" class=\"col-12\">\n      {{message}}\n    </div>\n    <div *ngIf=\"isHtml\" class=\"col-12\">\n      <p *ngFor=\"let item of items\">\n        {{item}}\n      </p>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <div *ngIf=\"isConfirm\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">Confirm</button>\n  </div>\n\n  <div *ngIf=\"isOkay\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"okay()\">Okay</button>\n  </div>\n\n  <div *ngIf=\"isClose\">\n    <button type=\"button\" class=\"btn btn-{{btnClass}}\" (click)=\"close()\">Close</button>\n  </div>\n\n  <div *ngIf=\"isCancel\">\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n  </div>\n</div>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/outstanding-bills/outstanding-bills.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/outstanding-bills/outstanding-bills.component.html ***!
  \*********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"outstandingBills\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Outstanding Bills</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"col-lg-12\">\n\n            <div class=\"card-body row\">\n              <div class=\"form-group col-md-6\">\n                <div class=\"row\">\n                  <label for=\"inputEmail3\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Holder</label>\n                  <div class=\"col-md-12 col-lg-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail3\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group col-md-6\">\n                <div class=\"row\">\n                  <label for=\"inputEmail3\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Number</label>\n                  <div class=\"col-md-12 col-lg-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail3\">\n                  </div>\n                </div>\n              </div>\n\n\n              <div class=\"form-group col-md-6\">\n                <div class=\"row\">\n                  <label for=\"inputEmail3\" class=\"col-md-12 col-lg-4 col-form-label\">Currency</label>\n                  <div class=\"col-md-12 col-lg-8\">\n                    <select class=\"custom-select mr-sm-2 required\" id=\"inlineFormCustomSelect\">\n                      <option selected></option>\n                      <option value=\"1\">One</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group col-md-6\">\n                <div class=\"row\">\n                  <label for=\"inputEmail3\" class=\"col-md-12 col-lg-4 col-form-label\">Invoice Number</label>\n                  <div class=\"col-md-12 col-lg-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail3\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group col-md-6\">\n                <div class=\"row\">\n                  <label for=\"inputEmail3\" class=\"col-md-12 col-lg-4 col-form-label\">Receipt Amount</label>\n                  <div class=\"col-md-12 col-lg-4\">\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"from\">\n                  </div>\n                  <div class=\"col-md-12 col-lg-4\">\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"to\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group col-md-6\">\n                <div class=\"row\">\n                  <label for=\"inputEmail3\" class=\"col-md-12 col-lg-4 col-form-label\">Commission Amount</label>\n                  <div class=\"col-md-12 col-lg-4\">\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"from\">\n                  </div>\n                  <div class=\"col-md-12 col-lg-4\">\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"to\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group col-md-6\">\n                <div class=\"row\">\n                  <label for=\"inputEmail3\" class=\"col-md-12 col-lg-4 col-form-label\">Withholding Tax</label>\n                  <div class=\"col-md-12 col-lg-4\">\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"from\">\n                  </div>\n                  <div class=\"col-md-12 col-lg-4\">\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"to\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group col-md-6\">\n                <div class=\"row\">\n                  <label for=\"inputEmail3\" class=\"col-md-12 col-lg-4 col-form-label\">Source</label>\n                  <div class=\"col-md-12 col-lg-8\">\n                    <select class=\"custom-select mr-sm-2 required\" id=\"inlineFormCustomSelect\">\n                      <option selected></option>\n                      <option value=\"1\">One</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"col-lg-12\">\n                <div class=\"btn-group\">\n                  <button class=\"btn btn-primary\">Apply</button>\n                  <button class=\"btn btn-info\">Reset</button>\n                </div>\n              </div>\n\n        </div>\n\n        <div class=\"divider\"></div>\n\n        <div class=\"flexitable\">\n\n          <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n            <!-- Position Column -->\n            <ng-container matColumnDef=\"policyHolder\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Holder </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.policyHolder}} </td>\n            </ng-container>\n\n            <!-- Name Column -->\n            <ng-container matColumnDef=\"policyNumber\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.policyNumber}} </td>\n            </ng-container>\n\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"currency\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.currency}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"invoiceNumber\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Invoice Number </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.invoiceNumber}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"receiptAmount\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Receipt Amount </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.receiptAmount}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"commissionAmount\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Commission Amount </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.commissionAmount}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"withholdingTax\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Withholding Tax </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.withholdingTax}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"source\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n          </table>\n        </div>\n        <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" showFirstLastButtons></mat-paginator>\n\n\n        <div class=\"btn-group-table\">\n          <button type=\"button\" class=\"btn btn-primary\">View Details</button>\n          <button type=\"button\" class=\"btn btn-primary\">Pay</button>\n        </div>\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #outstandingBills -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.html":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.html ***!
  \*********************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div mat-dialog-content>\n  <div class=\"container\">\n    <div class=\"header row\">\n      <div class=\"col-md-4\">\n        <h6>{{isPostPolicy ? 'Policy' : 'Quotation'}} Number</h6>\n        <h4>{{number}}</h4>\n      </div>\n      <div class=\"col-md-4\">\n        <h6>Product</h6>\n        <h4>{{product}}</h4>\n      </div>\n      <div class=\"col-md-4\">\n        <h6>Payment Plan</h6>\n        <h4>{{payment}}</h4>\n      </div>\n    </div>\n  </div>\n  \n  <div id=\"paymentBreakdown\" *ngFor=\"let payment of payments; let i = index\">\n    <div class=\"flexitable\">\n      <table mat-table [dataSource]=\"payment.dataSource\" matSort class=\"mat-elevation-z8\">\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"effectivityDate\">\n          <th mat-header-cell *matHeaderCellDef> Receipt Effectivity Date </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.effectivityDate}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"dueDate\">\n          <th mat-header-cell *matHeaderCellDef> Receipt Due Date </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.dueDate}} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"premium\">\n          <th mat-header-cell *matHeaderCellDef> Premium </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.premium | currency: payment.currencyCode : 'symbol-narrow'}} </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"netPremium\">\n          <th mat-header-cell *matHeaderCellDef> Net Premium </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.netPremium | currency: payment.currencyCode : 'symbol-narrow'}}\n          </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"tax\">\n          <th mat-header-cell *matHeaderCellDef> Tax </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.tax | currency: payment.currencyCode : 'symbol-narrow'}} </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"commission\">\n          <th mat-header-cell *matHeaderCellDef> Commission </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.commission | currency: payment.currencyCode : 'symbol-narrow'}}\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"payment.displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: payment.displayedColumns;\"></tr>\n      </table>\n    </div>\n\n    <label class=\"show-more\" (click)=\"toggle(i)\">\n      {{payment.toggleLabel}} <i\n        [ngClass]=\"payment.animationState=='out' ? 'fa fa-angle-double-down' : 'fa fa-angle-double-up'\"></i>\n    </label>\n\n    <div [@slideInOut]=\"payment.animationState\" class=\"container-fluid breakdown\">\n\n      <div *ngIf=\"payment.showExchangeRate\" class=\"alert alert-info note\">\n        Exchange rate: <strong>PHP to {{payment.currencyCode}} is\n          {{payment.exchangeRate | currency: 'PHP' : 'symbol-narrow'}}</strong>\n      </div>\n\n      <div *ngFor=\"let item of payment.paymentBreakdown;\" class=\"row justify-content-center\">\n        <div class=\"col-4{{item.abrEco == 'TOTLP' ? ' emphasize' : ''}}\">\n          {{item.nomEco}}\n        </div>\n        <div class=\"col-4 right{{item.abrEco == 'TOTLP' ? ' emphasize' : ''}}\">\n          {{item.impEco | currency: payment.currencyCode : 'symbol-narrow'}}\n        </div>\n        <div class=\"clearfix divider\"></div>\n      </div>\n    </div>\n\n  </div>\n\n</div>\n\n<div mat-dialog-actions align=\"end\">\n  <div class=\"btn-group\" role=\"group\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"close(false)\">\n      Close\n    </button>\n    <button *ngIf=\"isPostPolicy\" type=\"button\" class=\"btn btn-primary\" (click)=\"printPolicy()\">\n      Print Policy\n    </button>\n    <button *ngIf=\"!isPostPolicy\" type=\"button\" class=\"btn btn-primary\" (click)=\"printQuote()\">\n      Print Quote\n    </button>\n    <button *ngIf=\"!isPostPolicy\" type=\"button\" class=\"btn btn-primary\" (click)=\"proceedToIssuance(line)\">\n      Proceed to Issuance\n    </button>\n  </div>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/payment-breakdown/payment-breakdown.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/payment-breakdown/payment-breakdown.component.html ***!
  \*********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id=\"paymentBreakdown\" class=\"card shadow mb-3\">\n  <div class=\"card-header\">\n    <strong>Payment Breakdown</strong>\n  </div>\n  <div class=\"card-body\">\n    <div *ngFor=\"let payment of payments; let i = index\">\n      <div class=\"flexitable\">\n        <table mat-table [dataSource]=\"payment.dataSource\" matSort class=\"mat-elevation-z8\">\n          <!-- Position Column -->\n          <ng-container matColumnDef=\"effectivityDate\">\n            <th mat-header-cell *matHeaderCellDef> Receipt Effectivity Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.effectivityDate}} </td>\n          </ng-container>\n\n          <!-- Name Column -->\n          <ng-container matColumnDef=\"dueDate\">\n            <th mat-header-cell *matHeaderCellDef> Receipt Due Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.dueDate}} </td>\n          </ng-container>\n\n          <!-- Weight Column -->\n          <ng-container matColumnDef=\"premium\">\n            <th mat-header-cell *matHeaderCellDef> Premium </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.premium | currency: payment.currencyCode : 'symbol-narrow'}} </td>\n          </ng-container>\n\n          <!-- Symbol Column -->\n          <ng-container matColumnDef=\"netPremium\">\n            <th mat-header-cell *matHeaderCellDef> Net Premium </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.netPremium | currency: payment.currencyCode : 'symbol-narrow'}}\n            </td>\n          </ng-container>\n\n          <!-- Symbol Column -->\n          <ng-container matColumnDef=\"tax\">\n            <th mat-header-cell *matHeaderCellDef> Tax </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.tax | currency: payment.currencyCode : 'symbol-narrow'}} </td>\n          </ng-container>\n\n          <!-- Symbol Column -->\n          <ng-container matColumnDef=\"commission\">\n            <th mat-header-cell *matHeaderCellDef> Commission </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.commission | currency: payment.currencyCode : 'symbol-narrow'}}\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"payment.displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: payment.displayedColumns;\"></tr>\n        </table>\n      </div>\n\n      <label class=\"show-more\" (click)=\"toggle(i)\">\n        {{payment.toggleLabel}} <i [ngClass]=\"payment.animationState=='out' ? 'fa fa-angle-double-down' : 'fa fa-angle-double-up'\"></i>\n      </label>\n\n      <div [@slideInOut]=\"payment.animationState\" class=\"container-fluid breakdown\">\n\n        <div *ngIf=\"payment.showExchangeRate\" class=\"alert alert-info note\">\n          Exchange rate: <strong>PHP to {{payment.currencyCode}} is\n            {{payment.exchangeRate | currency: 'PHP' : 'symbol-narrow'}}</strong>\n        </div>\n\n        <div *ngFor=\"let item of payment.paymentBreakdown;\" class=\"row justify-content-center\">\n          <div class=\"col-4{{item.abrEco == 'TOTLP' ? ' emphasize' : ''}}\">\n            {{item.nomEco}}\n          </div>\n          <div class=\"col-4 right{{item.abrEco == 'TOTLP' ? ' emphasize' : ''}}\">\n            {{item.impEco | currency: payment.currencyCode : 'symbol-narrow'}}\n          </div>\n          <div class=\"clearfix divider\"></div>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/policy-holder/policy-holder.component.html":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/policy-holder/policy-holder.component.html ***!
  \*************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"card shadow mb-3\" id=\"{{type}}_panel\">\n  <div *ngIf=\"!optional\" class=\"card-header\">\n    <strong>{{title}}</strong>\n  </div>\n  <div *ngIf=\"optional\" class=\"card-header d-flex justify-content-between optional\" (click)=\"showContent = !showContent\"\n    matTooltip=\"click to show/hide alternative policy holder\">\n    <strong>{{title}}</strong>\n    <div class=\"dropdown no-arrow\">\n      <i class=\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\"></i>\n    </div>\n  </div>\n  <div class=\"card-body\" *ngIf=\"showContent\">\n    <form [formGroup]=\"phForm\">\n      <!-- for quotation -->\n      <div class=\"row\" *ngIf=\"!isIssuance\">\n        <div class=\"col-xl-12\">\n          <h6>Policy Holder</h6>\n        </div>\n\n        <div class=\"col-sm-6\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': phForm.controls['name'].invalid \n                  && (phForm.controls['name'].dirty \n                  || phForm.controls['name'].touched)}\">\n            <label for=\"name\">Client's Name</label>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control required\"\n              oninput=\"this.value = this.value.toUpperCase()\" [(ngModel)]=\"policyHolder.firstName\"\n              [attr.disabled]=\"editMode ? null : true\">\n            <p class=\"form-error\" *ngIf=\"phForm.controls['name'].errors?.required\">\n              * client's name is required\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <!-- for issuance -->\n      <div class=\"row\" *ngIf=\"isIssuance\">\n        <div class=\"col-xl-12\">\n          <h6>Policy Holder</h6>\n        </div>\n\n        <div class=\"col-xl-12\">\n          <div class=\"alert alert-info note\">\n            <p><strong>Important Reminder:</strong> Click <strong>create</strong> button to create a new policy holder\n              or click <strong>browse</strong> button to\n              search an existing policy holder. Document code and type will be automatically filled once you select or\n              create a policy holder.\n            </p>\n          </div>\n          <!-- .note -->\n        </div>\n\n        <div *ngIf=\"optional\" class=\"col-xl-12\">\n          <div class=\"row\">\n            <div *ngIf=\"showPrefix\" class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label for=\"secondaryPolicyHolderPrefix\">Prefix (Optional)</label>\n                <select class=\"custom-select mr-sm-2\" formControlName=\"secondaryPolicyHolderPrefix\"\n                  [(ngModel)]=\"details.secondaryPolicyHolderPrefix\"\n                  [attr.disabled]=\"editMode ? null : true\">\n                  <option selected></option>\n                  <option *ngFor=\"let prefix of prefixLOV\" [ngValue]=\"prefix.TIP_ASEG_PREF\">{{ prefix.NOM_VALOR }}</option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label for=\"secondaryPolicyHolderSeparator\">Separator</label>\n                <select class=\"custom-select mr-sm-2 {{policyHolder.documentType != undefined && policyHolder.documentType != '' ? 'required' : ''}}\"\n                  formControlName=\"secondaryPolicyHolderSeparator\"\n                  [(ngModel)]=\"details.secondaryPolicyHolderSeparator\"\n                  [attr.disabled]=\"editMode ? null : true\">\n                  <option selected></option>\n                  <option *ngFor=\"let separator of separatorLOV\" [ngValue]=\"separator.NOM_VALOR\">{{ separator.NOM_VALOR }}</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': phForm.controls['documentType'].invalid \n                  && (phForm.controls['documentType'].dirty \n                  || phForm.controls['documentType'].touched)}\">\n            <label for=\"documentType\">Document Type</label>\n            <input type=\"text\" formControlName=\"documentType\" class=\"form-control required {{optional ? '': 'readonly'}}\"\n              oninput=\"this.value = this.value.toUpperCase()\" [(ngModel)]=\"policyHolder.documentType\" readonly>\n            <p class=\"form-error\" *ngIf=\"phForm.controls['documentType'].errors?.required\">\n              * document type is required\n            </p>\n          </div>\n        </div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': phForm.controls['documentCode'].invalid \n                  && (phForm.controls['documentCode'].dirty \n                  || phForm.controls['documentCode'].touched)}\">\n            <label for=\"documentCode\">Document Code</label>\n            <input type=\"text\" formControlName=\"documentCode\" class=\"form-control required {{optional ? '': 'readonly'}}\"\n              oninput=\"this.value = this.value.toUpperCase()\" [(ngModel)]=\"policyHolder.documentCode\" readonly>\n            <p class=\"form-error\" *ngIf=\"phForm.controls['documentCode'].errors?.required\">\n              * document code is required\n            </p>\n          </div>\n        </div>\n\n        <div *ngIf=\"editMode\" class=\"col-md-12\">\n          <div class=\"btn-group\" role=\"group\">\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"browse()\">Browse</button>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"create()\" *ngIf=\"showCreateBtn\">Create</button>\n            <button type=\"button\" class=\"btn btn-default\" (click)=\"clear()\">Clear</button>\n          </div>\n        </div>\n      </div>\n    </form>\n\n    <div *ngIf=\"editMode && showSearch\" class=\"row\">\n      <div class=\"col-xl-12\">\n        <form [formGroup]=\"searchForm\">\n          <div class=\"form-divider\"></div>\n\n          <div class=\"row\">\n            <div class=\"col-xl-4 col-sm-12\">\n              <div class=\"form-group input-group mb-3\">\n                <div class=\"input-group-prepend\">\n                  <label class=\"input-group-text\" for=\"inputGroupSelect01\">Search by</label>\n                </div>\n                <select class=\"custom-select mr-sm-2\" formControlName=\"policyHolderType\" [(ngModel)]=\"policyHolderType\"\n                  [attr.disabled]=\"type == 'mortgagee' ? '' : null\">\n                  <option value=\"P\">Person</option>\n                  <option value=\"C\">Company/Organization</option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"col-xl-4\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': searchForm.controls['firstName'].invalid \n                  && (searchForm.controls['firstName'].dirty \n                  || searchForm.controls['firstName'].touched)}\">\n                <input type=\"text\" placeholder=\"{{firstNameLabel}}\" formControlName=\"firstName\"\n                  oninput=\"this.value = this.value.toUpperCase()\" class=\"form-control required\" [(ngModel)]=\"firstName\">\n                <p class=\"form-error\" *ngIf=\"searchForm.controls['firstName'].errors?.required\">\n                  * {{firstNameError}} is required\n                </p>\n              </div>\n            </div>\n\n            <div *ngIf=\"showLastName\" class=\"col-xl-4\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': searchForm.controls['lastName'].invalid \n                  && (searchForm.controls['lastName'].dirty \n                  || searchForm.controls['lastName'].touched)}\">\n                <input type=\"text\" placeholder=\"Last Name\" formControlName=\"lastName\"\n                  oninput=\"this.value = this.value.toUpperCase()\" class=\"form-control required\" [(ngModel)]=\"lastName\">\n                <p class=\"form-error\" *ngIf=\"searchForm.controls['lastName'].errors?.required\">\n                  * last name is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-xl-12\" *ngIf=\"showSearchResult\">\n\n              <mat-table [dataSource]=\"dataSource\">\n                <ng-container matColumnDef=\"documentType\">\n                  <mat-header-cell *matHeaderCellDef> Document Type </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{row.tipDocum}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"firstName\">\n                  <mat-header-cell *matHeaderCellDef> First Name </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{row.nomTercero}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"middleName\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'amount-header'\"> Middle Name </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{row.nom2Tercero}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"lastName\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'amount-header'\"> Last Name </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{row.ape2Tercero}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"address\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'amount-header'\"> City Address </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{row.dirDomicilioCliente}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell *matHeaderCellDef> Document Code </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    <div *ngIf=\"type != 'mortgagee'\" class=\"input-group\">\n                      <input #documentCode (keyup)=\"enableAddBtn($event, btn)\" \n                        oninput=\"this.value = this.value.toUpperCase()\" type=\"text\" class=\"form-control\">\n                      <div class=\"input-group-append\">\n                        <button #btn (click)=\"add(row, documentCode)\" disabled class=\"btn btn-outline-secondary\"\n                          type=\"button\">Add</button>\n                      </div>\n                    </div>\n                    <button *ngIf=\"type == 'mortgagee'\" (click)=\"add(row)\" class=\"btn btn-outline-secondary\"\n                      type=\"button\">{{row.codDocum}}</button>\n                  </mat-cell>\n                </ng-container>\n\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n\n              </mat-table>\n              <mat-paginator [pageSizeOptions]=\"[5, 10, 20, 50, 100]\" showFirstLastButtons></mat-paginator>\n            </div>\n\n            <div class=\"col-md-12\">\n              <div class=\"btn-group\" role=\"group\">\n                <button [disabled]=\"searchForm.pristine || searchForm.invalid\" type=\"button\" class=\"btn btn-primary\"\n                  (click)=\"searchResult()\">Search</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"showSearch = !showSearch\">Close</button>\n              </div>\n            </div>\n\n          </div>\n        </form>\n      </div>\n\n    </div>\n\n  </div>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/profile/profile.component.html":
/*!*************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/profile/profile.component.html ***!
  \*************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"profile\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4 class=\"all-caps\">\n        <span class=\"fa-stack fa-md\">\n          <i class=\"fa fa-circle fa-stack-2x\"></i>\n          <i class=\"fa fa-user fa-stack-1x fa-inverse\"></i>\n        </span>\n        Profile\n      </h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"row\">\n\n      <!-- User Information -->\n      <div class=\"col-xl-12\">\n        <!-- <div class=\"col-xl-8 col-lg-7\"> -->\n        <div class=\"card shadow mb-4\">\n          <!-- Card Header -->\n          <div class=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n            <h6 class=\"m-0 font-weight-bold text-primary\">User Information</h6>\n          </div>\n          <!-- Card Body -->\n          <div class=\"card-body\">\n            <div class=\"form-group row\">\n              <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Agent Code</label>\n              <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" value=\"{{currentUser.agentCode}}\" disabled>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Name</label>\n              <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" value=\"{{currentUser.fullName}}\" disabled>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">User Name</label>\n              <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" value=\"{{currentUser.userName}}\" disabled>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Address</label>\n              <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" value=\"{{currentUser.address}}\" disabled>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Password Panel -->\n      <div *ngIf=\"false\" class=\"col-xl-4 col-lg-5\">\n        <div class=\"card shadow mb-4\">\n          <!-- Card Header -->\n          <div class=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n            <h6 class=\"m-0 font-weight-bold text-primary\">Password</h6>\n          </div>\n          <!-- Card Body -->\n          <div class=\"card-body\">\n\n            <form [formGroup]=\"changePasswordForm\">\n              <div class=\"form-group row\" [ngClass]=\"{'input-error': changePasswordForm.controls['oldPassword'].invalid \n              && (changePasswordForm.controls['oldPassword'].dirty \n              || changePasswordForm.controls['oldPassword'].touched)}\">\n                <div class=\"col-sm-12\">\n                  <input type=\"password\" class=\"form-control required\" formControlName=\"oldPassword\" name=\"oldPassword\"\n                    id=\"oldPassword\" placeholder=\"Old Password\">\n                  <p class=\"form-error\" *ngIf=\"changePasswordForm.controls['oldPassword'].errors?.required\">\n                    * old password is required\n                  </p>\n                </div>\n              </div>\n              <div class=\"form-group row\" [ngClass]=\"{'input-error': changePasswordForm.controls['newPassword'].invalid \n              && (changePasswordForm.controls['newPassword'].dirty \n              || changePasswordForm.controls['newPassword'].touched)}\">\n                <div class=\"col-sm-12\">\n                  <input type=\"password\" class=\"form-control required\" formControlName=\"newPassword\" name=\"newPassword\"\n                    id=\"newPassword\" placeholder=\"New Password\">\n                  <p class=\"form-error\" *ngIf=\"changePasswordForm.controls['newPassword'].errors?.required\">\n                    * new password is required\n                  </p>\n                </div>\n              </div>\n              <div class=\"form-group row\" [ngClass]=\"{'input-error': changePasswordForm.controls['confirmPassword'].invalid \n              && (changePasswordForm.controls['confirmPassword'].dirty \n              || changePasswordForm.controls['confirmPassword'].touched)}\">\n                <div class=\"col-sm-12\">\n                  <input type=\"password\" class=\"form-control required\" formControlName=\"confirmPassword\"\n                    name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Confirm Password\">\n                  <p class=\"form-error\" *ngIf=\"changePasswordForm.controls['confirmPassword'].errors?.required\">\n                    * confirm password is required\n                  </p>\n                  <!-- <p class=\"form-error\" *ngIf=\"changePasswordForm.controls['confirmPassword'].errors?.pattern\">\n                    * confirm password does not match new password\n                  </p> -->\n                  <!-- <p class=\"form-error\" *ngIf=\"changePasswordForm.hasError('notSame')\">\n                    * confirm password does not match new password\n                  </p> -->\n                </div>\n              </div>\n\n              <p class=\"text-muted\"><i>* Your password will expire in <strong>{{currentUser.expiryDay}} {{currentUser.expiryDay <= 1 ? 'day' : 'days' }}</strong></i></p>\n\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Confirm</button>\n              </div>\n            </form>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #profile -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/query/query.component.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/query/query.component.html ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"query\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Query</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"row\">\n          <div class=\"col-xl-3 col-md-5 col-sm-12\">\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-prepend\">\n                <label class=\"input-group-text\" for=\"inputGroupSelect01\">Options</label>\n              </div>\n\n              <select  value=\"{{selectedOption}}\" [(ngModel)]=\"selectedOption\" class=\"custom-select mr-sm-2 required\" (change)=\"onSelectOption(selectedOption)\">\n                <option value=\"policy\">Policy</option>\n                <option value=\"claims\">Claims</option>\n              </select>\n            </div>\n          </div> \n\n          <div class=\"col-xl-9 col-md-7 col-sm-12\">\n            <div class=\"input-group\">\n              <input type=\"text\" class=\"form-control bg-light small\" aria-label=\"Search\"\n                aria-describedby=\"basic-addon2\" placeholder=\"{{optPlaceholder}}\" #inputVal>\n              <div class=\"input-group-append\">\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"search()\">\n                  <i class=\"fas fa-search fa-sm\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #query -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quick-quotation-accident/quick-quotation-accident.component.html":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/quick-quotation-accident/quick-quotation-accident.component.html ***!
  \***********************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"quickQuotationAccident\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4 class=\"all-caps\">\n        <span class=\"fa-stack fa-md\">\n          <i class=\"fa fa-circle fa-stack-2x\"></i>\n          <i class=\"fa fa-shield-alt fa-stack-1x fa-inverse\"></i>\n        </span>\n        Quick Quotation \n      </h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-lg-12\">\n    <img class=\"product-img-banner\" src=\"./assets/images/banner/accident.jpg\" alt=\"credits to freepik @stories\" />\n  </div>\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"alert alert-info note\">\n          <p><strong>Important Reminder:</strong> All the amounts shown on the product comparison table are only\n            estimates and must not be taken as the actual premiums of the products.\n          </p>\n        </div>\n        <!-- .note -->\n        \n        <form [formGroup]=\"quickQuoteForm\">\n          <div class=\"row\">\n            <div class=\"col-lg-4 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['subline'].invalid \n                  && (quickQuoteForm.controls['subline'].dirty \n                  || quickQuoteForm.controls['subline'].touched)}\">\n                <label for=\"subline\">Subline</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"subline\"\n                  [(ngModel)]=\"accidentDetails.subline\">\n                  <option selected></option>\n                  <option *ngFor=\"let subline of LOV.sublineLOV\" [ngValue]=\"subline.COD_RAMO\">{{ subline.NOM_RAMO }}\n                  </option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['subline'].errors?.required\">\n                  * subline is required\n                </p>\n              </div>\n            </div>\n            <!-- col-lg-3 col-md-4 col-sm-6 -->\n            <div class=\"clearfix\"></div>\n\n            <div class=\"additional-accident-details\" *ngIf=\"showDetails\">\n              <div class=\"form-divider\"></div>\n              <div class=\"col-xl-12\">\n                <h6>Details</h6>\n              </div>\n              <!-- .col-xl-12 -->\n\n              <div class=\"acci-spa col-lg-12\" *ngIf=\"showSPADetails\">\n                <div class=\"row\">\n                  <div class=\"col-md-4 col-sm-6\">\n                    <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['occupationalClass'].invalid \n                        && (quickQuoteForm.controls['occupationalClass'].dirty \n                        || quickQuoteForm.controls['occupationalClass'].touched)}\">\n                      <label for=\"occupationalClass\">Occupational Class</label>\n                      <select class=\"custom-select mr-sm-2 required\" formControlName=\"occupationalClass\"\n                        [(ngModel)]=\"accidentDetails.occupationalClass\">\n                        <option selected></option>\n                        <option *ngFor=\"let occupationalClass of LOV.occupationalClassLOV\"\n                          [ngValue]=\"occupationalClass.COD_VALOR\">\n                          CLASS {{ occupationalClass.COD_VALOR }} - {{ occupationalClass.NOM_VALOR }}</option>\n                      </select>\n                      <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['occupationalClass'].errors?.required\">\n                        * occupational class is required\n                      </p>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4 col-sm-6\">\n                    <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['disablementValue'].invalid \n                        && (quickQuoteForm.controls['disablementValue'].dirty \n                        || quickQuoteForm.controls['disablementValue'].touched)}\">\n                      <label for=\"disablementValue\">Accidental Death and Disablement Value</label>\n                      <input type=\"number\" formControlName=\"disablementValue\" class=\"form-control required\"\n                        [(ngModel)]=\"accidentDetails.disablementValue\">\n                      <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['disablementValue'].errors?.required\">\n                        * accidental death and disablement value is required\n                      </p>\n                      <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['disablementValue'].errors?.max\">\n                        * accidental death and disablement value must be lower than Php2,000,001.00\n                      </p>\n                      <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['disablementValue'].errors?.min\">\n                        * accidental death and disablement value must be higner than Php9,999.00\n                      </p>\n                    </div>\n                  </div>\n                  <div class=\"clearfix\"></div>\n                </div>\n                <!-- .row -->\n              </div>\n              <!-- acci-spa col-lg-12 -->\n\n              <div class=\"acci-hcbi col-lg-12\" *ngIf=\"showHCBIDetails\">\n                <div class=\"row\">\n                  <div class=\"col-md-4 col-sm-6\">\n                    <label class=\"form-check-label\">\n                      Primary Insured\n                    </label>\n                    <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['primaryInsuredAge'].invalid \n                        && (quickQuoteForm.controls['primaryInsuredAge'].dirty \n                        || quickQuoteForm.controls['primaryInsuredAge'].touched)}\">\n                      <select class=\"custom-select mr-sm-2 required\" formControlName=\"primaryInsuredAge\"\n                        [(ngModel)]=\"accidentDetails.primaryInsuredAge\">\n                        <option selected></option>\n                        <option *ngFor=\"let primaryInsuredAge of LOV.ageLOV\" [ngValue]=\"primaryInsuredAge.value\">\n                          {{ primaryInsuredAge.name }}</option>\n                      </select>\n                      <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['primaryInsuredAge'].errors?.required\">\n                        * primary insured is required\n                      </p>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4 col-sm-6\">\n                    <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"checkbox\" id=\"cbSpouseAge\" formControlName=\"cbSpouseAge\"\n                        [(ngModel)]=\"accidentDetails.cbSpouseAge\">\n                      <label class=\"form-check-label\" for=\"cbSpouseAge\">\n                        Spouse\n                      </label>\n                    </div>\n                    <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['spouseAge'].invalid \n                        && (quickQuoteForm.controls['spouseAge'].dirty \n                        || quickQuoteForm.controls['spouseAge'].touched)}\">\n                      <select class=\"custom-select mr-sm-2 required\"\n                        [attr.disabled]=\"accidentDetails.cbSpouseAge ? null : ''\" formControlName=\"spouseAge\"\n                        [(ngModel)]=\"accidentDetails.spouseAge\">\n                        <option selected></option>\n                        <option *ngFor=\"let spouseAge of LOV.ageLOV\" [ngValue]=\"spouseAge.value\">\n                          {{ spouseAge.name }}\n                        </option>\n                      </select>\n                      <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['spouseAge'].errors?.required\">\n                        * spouse is required\n                      </p>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4 col-sm-6\">\n                    <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"checkbox\" id=\"cbChildNumber\" formControlName=\"cbChildNumber\"\n                        [(ngModel)]=\"accidentDetails.cbChildNumber\">\n                      <label class=\"form-check-label\" for=\"cbChildNumber\">\n                        Child/Children\n                      </label>\n                    </div>\n                    <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['childNumber'].invalid \n                        && (quickQuoteForm.controls['childNumber'].dirty \n                        || quickQuoteForm.controls['childNumber'].touched)}\">\n                      <select class=\"custom-select mr-sm-2 required\"\n                        [attr.disabled]=\"accidentDetails.cbChildNumber ? null : ''\" formControlName=\"childNumber\"\n                        [(ngModel)]=\"accidentDetails.childNumber\">\n                        <option selected></option>\n                        <option *ngFor=\"let childNumber of LOV.childNumberLOV\" [ngValue]=\"childNumber.name\">{{ childNumber.value }}\n                        </option>\n                      </select>\n                      <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['childNumber'].errors?.required\">\n                        * child/children is required\n                      </p>\n                    </div>\n                  </div>\n\n                </div>\n                <!-- .row -->\n              </div>\n              <!-- acci-hcbi col-lg-12 -->\n            </div>\n            <!-- .additional-accident-details -->\n          </div>\n          <!-- .row -->\n\n          <div class=\"btn-group\" role=\"group\">\n            <button [disabled]=\"quickQuoteForm.pristine || quickQuoteForm.invalid\" type=\"button\" class=\"btn btn-primary\"\n              (click)=\"quickQuote(accidentDetails)\">Generate</button>\n          </div>\n          <!-- .btn-group -->\n          <div class=\"clearfix\"></div>\n        </form>\n        <!-- .quick-quote-form -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\" id=\"productComparison\">\n    <div class=\"product-comparison\" *ngIf=\"showProductComparison\">\n      <div class=\"card shadow mb-3\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <img class=\"product-img-banner\" src=\"./assets/images/product-accident.png\" alt=\"product-accident\" />\n            </div>\n            <div class=\"col-lg-12\">\n              <div class=\"flexitable\">\n                <table mat-table [dataSource]=\"accidentData\" matSort class=\"mat-elevation-z8\">\n\n                  <!-- Packages Column -->\n                  <ng-container matColumnDef=\"label\">\n                    <th mat-header-cell *matHeaderCellDef>Packages</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n                  </ng-container>\n\n                  <!-- Premium Column -->\n                  <ng-container matColumnDef=\"premium\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\">Premium</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.premium | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"generateCoverage(row)\"\n                    matTooltip=\"click to show product coverage\"></tr>\n\n                </table>\n              </div>\n            </div>\n            <!-- .col-xl-12 -->\n          </div>\n          <!-- .row -->\n        </div>\n        <!-- .card-body -->\n      </div>\n      <!-- .card  -->\n\n      <div id=\"productCoverage\">\n        <div class=\"card shadow mb-3\" *ngIf=\"showProductCoverage\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-lg-12\">\n                <img class=\"product-img-banner\" src=\"./assets/images/product-coverage.png\" alt=\"product-coverage\" />\n              </div>\n              <div class=\"col-lg-12\">\n                <div class=\"flexitable\">\n                  <table mat-table [dataSource]=\"coverageData\" matSort class=\"mat-elevation-z8\">\n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"label\">\n                      <th mat-header-cell *matHeaderCellDef>Limit</th>\n                      <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.label\"></td>\n                    </ng-container>\n\n                    <!-- Name Column -->\n                    <ng-container matColumnDef=\"premium\">\n                      <th mat-header-cell *matHeaderCellDef class=\"amount\">Premium</th>\n                      <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                        {{element.isHeader ? '' : element.premium | currency:'PHP': 'symbol-narrow'}}\n                      </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                  </table>\n                </div>\n              </div>\n              <!-- .col-xl-12 -->\n            </div>\n            <!-- .row -->\n          </div>\n          <!-- .card-body -->\n        </div>\n        <!-- .card  -->\n      </div>\n      <!-- #productCoverage -->\n\n    </div>\n    <!-- .product-comparison -->\n  </div>\n  <!-- .col-xl-12 -->\n\n</div>\n<!-- #quickQuotationAccident -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quick-quotation-car/quick-quotation-car.component.html":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/quick-quotation-car/quick-quotation-car.component.html ***!
  \*************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"quickQuotationCar\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4 class=\"all-caps\">\n        <span class=\"fa-stack fa-md\">\n          <i class=\"fa fa-circle fa-stack-2x\"></i>\n          <i class=\"fa fa-car fa-stack-1x fa-inverse\"></i>\n        </span>\n        Quick Quotation \n      </h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-lg-12\">\n    <img class=\"product-img-banner\" src=\"./assets/images/banner/car.jpg\" alt=\"credits to freepik @stories\" />\n  </div>\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"alert alert-info note\">\n          <p><strong>Important Reminder:</strong> All the amounts shown on the product comparison table are only\n            estimates and must not be taken as the actual premiums of the products.\n          </p>\n          <br>\n          <strong>Fixed Values: </strong>\n          <ul>\n            <li>Sum Insured per Passenger: <strong>50,000</strong></li>\n            <li>VTPL BI : <strong>200,000</strong></li>\n            <li>VTPL PD : <strong>200,000</strong></li>\n            <li>LGT : <strong>.75%</strong></li>\n          </ul>\n        </div>\n        <!-- .note -->\n\n        <form [formGroup]=\"quickQuoteForm\" class=\"quick-quote-form\">\n          <div class=\"row\">\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['make'].invalid \n                && (quickQuoteForm.controls['make'].dirty \n                || quickQuoteForm.controls['make'].touched)}\">\n                <label for=\"make\">Make</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"make\" (change)=\"makeOnchange()\"\n                  [(ngModel)]=\"carDetails.make\">\n                  <option *ngFor=\"let make of LOV.makeLOV\" [ngValue]=\"make.COD_MARCA\">{{ make.NOM_MARCA }}</option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['make'].errors?.required\">\n                  * make is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['model'].invalid \n              && (quickQuoteForm.controls['model'].dirty \n              || quickQuoteForm.controls['model'].touched)}\">\n                <label for=\"model\">Model</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"model\" (change)=\"modelOnchange()\"\n                  [(ngModel)]=\"carDetails.model\" [attr.disabled]=\" LOV.modelLOV?.length ? null : true\">\n                  <option selected></option>\n                  <option *ngFor=\"let model of LOV.modelLOV\" [ngValue]=\"model.COD_MODELO\">{{ model.NOM_MODELO }}\n                  </option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['model'].errors?.required\">\n                  * model is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['vehicleType'].invalid \n              && (quickQuoteForm.controls['vehicleType'].dirty \n              || quickQuoteForm.controls['vehicleType'].touched)}\">\n                <label for=\"vehicleType\">Vehicle Type</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"vehicleType\"\n                  (change)=\"vehicleTypeOnchange()\" [(ngModel)]=\"carDetails.vehicleType\"\n                  [attr.disabled]=\" LOV.vehicleTypeLOV?.length ? null : true\">\n                  <option selected></option>\n                  <option *ngFor=\"let vehicleType of LOV.vehicleTypeLOV\" [ngValue]=\"vehicleType.COD_TIP_VEHI\">\n                    {{ vehicleType.NOM_TIP_VEHI }}</option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['vehicleType'].errors?.required\">\n                  * vehicle type is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['modelYear'].invalid \n              && (quickQuoteForm.controls['modelYear'].dirty \n              || quickQuoteForm.controls['modelYear'].touched)}\">\n                <label for=\"modelYear\">Model Year</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"modelYear\"\n                  (change)=\"modelYearOnchange()\" [(ngModel)]=\"carDetails.modelYear\"\n                  [attr.disabled]=\" LOV.modelYearLOV?.length ? null : true\">\n                  <option selected></option>\n                  <option *ngFor=\"let modelYear of LOV.modelYearLOV\" [ngValue]=\"modelYear.ANIO_SUB_MODELO\">\n                    {{ modelYear.ANIO_SUB_MODELO }}</option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['modelYear'].errors?.required\">\n                  * model year is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['subModel'].invalid \n              && (quickQuoteForm.controls['subModel'].dirty \n              || quickQuoteForm.controls['subModel'].touched)}\">\n                <label for=\"subModel\">Sub Model</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"subModel\" (change)=\"subModelOnchange()\"\n                  [(ngModel)]=\"carDetails.subModel\" [attr.disabled]=\" LOV.subModelLOV?.length ? null : true\">\n                  <option selected></option>\n                  <option *ngFor=\"let subModel of LOV.subModelLOV\" [ngValue]=\"subModel.COD_SUB_MODELO\">\n                    {{subModel.NOM_SUB_MODELO + '('+ subModel.TIP_CAJA_CAMBIO+ ') '+ (subModel.NOM_TRACCION == 'UNKNOWN' ? \"\": subModel.NOM_TRACCION)}}\n                  </option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['subModel'].errors?.required\">\n                  * sub model is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['typeOfUse'].invalid \n              && (quickQuoteForm.controls['typeOfUse'].dirty \n              || quickQuoteForm.controls['typeOfUse'].touched)}\">\n                <label for=\"typeOfUse\">Type of Use</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"typeOfUse\"\n                  (change)=\"typeOfUseOnchange()\" [(ngModel)]=\"carDetails.typeOfUse\"\n                  [attr.disabled]=\" LOV.typeOfUseLOV?.length ? null : true\">\n                  <option selected></option>\n                  <option *ngFor=\"let typeOfUse of LOV.typeOfUseLOV\" [ngValue]=\"typeOfUse.COD_USO_VEHI\">\n                    {{ typeOfUse.NOM_USO_VEHI }}</option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['typeOfUse'].errors?.required\">\n                  * type of use is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['subline'].invalid \n              && (quickQuoteForm.controls['subline'].dirty \n              || quickQuoteForm.controls['subline'].touched)}\">\n                <label for=\"subline\">Subline</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"subline\"\n                  (change)=\"sublineOnchange($event)\" [(ngModel)]=\"carDetails.subline\"\n                  [attr.disabled]=\" LOV.sublineLOV?.length ? null : true\">\n                  <option selected></option>\n                  <option *ngFor=\"let subline of LOV.sublineLOV\" [ngValue]=\"subline.value\"\n                    [attr.data-sublinedate]=\"subline.effectivityDate\">{{ subline.name }}</option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['subline'].errors?.required\">\n                  * subline is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['vehicleValue'].invalid \n              && (quickQuoteForm.controls['vehicleValue'].dirty \n              || quickQuoteForm.controls['vehicleValue'].touched)}\">\n                <label for=\"vehicleValue\">Vehicle Value</label>\n                <input type=\"text\" formControlName=\"vehicleValue\" class=\"form-control required\"\n                  [(ngModel)]=\"carDetails.vehicleValue\">\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['vehicleValue'].errors?.required\">\n                  * vehicle value is required\n                </p>\n              </div>\n            </div>\n          </div>\n          <!-- .row -->\n\n          <div class=\"btn-group\" role=\"group\">\n            <button [disabled]=\"quickQuoteForm.pristine || quickQuoteForm.invalid\" type=\"button\" class=\"btn btn-primary\"\n              (click)=\"quickQuote(carDetails)\">Generate</button>\n          </div>\n          <!-- .btn-group -->\n\n          <div class=\"clearfix\"></div>\n        </form>\n        <!-- .quick-quote-form -->\n\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\" id=\"productComparison\">\n    <div class=\"product-comparison\" *ngIf=\"showProductComparison\">\n      <div class=\"card shadow mb-3\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <img class=\"product-img-banner\" src=\"./assets/images/product-car.png\" alt=\"product-car\" />\n            </div>\n            <div class=\"col-lg-12\">\n              <div class=\"flexitable\">\n                <table mat-table [dataSource]=\"annualData\" matSort class=\"mat-elevation-z8\">\n\n                  <!-- Payment Column -->\n                  <ng-container matColumnDef=\"label\">\n                    <th mat-header-cell *matHeaderCellDef>Payment</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n                  </ng-container>\n\n                  <!-- Compre Column -->\n                  <ng-container matColumnDef=\"compre\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\">Compre</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.compre == 0 ? 'n/a' : element.compre | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- CTPL Column -->\n                  <ng-container matColumnDef=\"ctpl\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> CTPL </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.ctpl == 0 ? 'n/a' : element.ctpl | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- Auto Compre Column -->\n                  <ng-container matColumnDef=\"autoCompre\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Compre </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoCompre == 0 ? 'n/a' : element.autoCompre | currency:'PHP': 'symbol-narrow' }} </td>\n                  </ng-container>\n\n                  <!-- Auto Compre Plus Column -->\n                  <ng-container matColumnDef=\"autoComprePlus\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Compre Plus </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoComprePlus == 0 ? 'n/a' : element.autoComprePlus | currency:'PHP': 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Auto Liabilty Regular Column -->\n                  <ng-container matColumnDef=\"autoLiabilityRegular\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Liability Regular </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoLiabilityRegular == 0 ? 'n/a' : element.autoLiabilityRegular | currency:'PHP': 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Auto Liability Select Column -->\n                  <ng-container matColumnDef=\"autoLiabilitySelect\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Liability Select </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoLiabilitySelect == 0 ? 'n/a' : element.autoLiabilitySelect | currency:'PHP': 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Auto Select Column -->\n                  <ng-container matColumnDef=\"autoSelect\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Select </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoSelect == 0 || !showAutoSelect ? 'n/a' : element.autoSelect | currency:'PHP': 'symbol-narrow'}} </td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                </table>\n              </div>\n            </div>\n            <!-- .col-xl-12 -->\n          </div>\n          <!-- .row -->\n        </div>\n        <!-- .card-body -->\n      </div>\n      <!-- .card  -->\n\n      <div class=\"card shadow mb-3\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <img class=\"payment-img-banner\" src=\"./assets/images/product-payment.png\" alt=\"product-payment\" />\n            </div>\n            <div class=\"col-lg-12\">\n              <div class=\"flexitable\">\n\n                <table mat-table [dataSource]=\"plan30Data\" matSort class=\"mat-elevation-z8\">\n\n                  <!-- Label Column -->\n                  <ng-container matColumnDef=\"label\">\n                    <th mat-header-cell *matHeaderCellDef>\n                      <h6>PLAN 30</h6>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n                  </ng-container>\n\n                  <!-- Compre Column -->\n                  <ng-container matColumnDef=\"compre\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\">Compre</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.compre == 0 ? 'n/a' : element.compre | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- CTPL Column -->\n                  <ng-container matColumnDef=\"ctpl\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> CTPL </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.ctpl == 0 ? 'n/a' : element.ctpl | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- Auto Compre Column -->\n                  <ng-container matColumnDef=\"autoCompre\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Compre </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoCompre == 0 ? 'n/a' : element.autoCompre | currency:'PHP': 'symbol-narrow' }} </td>\n                  </ng-container>\n\n                  <!-- Auto Compre Plus Column -->\n                  <ng-container matColumnDef=\"autoComprePlus\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Compre Plus </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoComprePlus == 0 ? 'n/a' : element.autoComprePlus | currency:'PHP': 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Auto Liability Column -->\n                  <ng-container matColumnDef=\"autoLiabilityRegular\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Liability Regular </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoLiabilityRegular == 0 ? 'n/a' : element.autoLiabilityRegular | currency:'PHP': 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Auto Liability Select Column -->\n                  <ng-container matColumnDef=\"autoLiabilitySelect\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Liability Select </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoLiabilitySelect == 0 ? 'n/a' : element.autoLiabilitySelect | currency:'PHP': 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Auto Select Column -->\n                  <ng-container matColumnDef=\"autoSelect\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Select </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoSelect == 0 || !showAutoSelect ? 'n/a' : element.autoSelect | currency:'PHP': 'symbol-narrow'}} </td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                </table>\n              </div>\n            </div>\n            <!-- .col-xl-12 -->\n\n            <div class=\"col-lg-12\">\n              <div class=\"flexitable\">\n\n                <table mat-table [dataSource]=\"plan60Data\" matSort class=\"mat-elevation-z8\">\n\n                  <!-- Label Column -->\n                  <ng-container matColumnDef=\"label\">\n                    <th mat-header-cell *matHeaderCellDef>\n                      <h6>PLAN 60</h6>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n                  </ng-container>\n\n                  <!-- Compre Column -->\n                  <ng-container matColumnDef=\"compre\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\">Compre</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.compre == 0 ? 'n/a' : element.compre | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- CTPL Column -->\n                  <ng-container matColumnDef=\"ctpl\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> CTPL </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.ctpl == 0 ? 'n/a' : element.ctpl | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- Auto Compre Column -->\n                  <ng-container matColumnDef=\"autoCompre\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Compre </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoCompre == 0 ? 'n/a' : element.autoCompre | currency:'PHP': 'symbol-narrow' }} </td>\n                  </ng-container>\n\n                  <!-- Auto Compre Plus Column -->\n                  <ng-container matColumnDef=\"autoComprePlus\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Compre Plus </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoComprePlus == 0 ? 'n/a' : element.autoComprePlus | currency:'PHP': 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Auto Liability Regular Column -->\n                  <ng-container matColumnDef=\"autoLiabilityRegular\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Liability Regular </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoLiabilityRegular == 0 ? 'n/a' : element.autoLiabilityRegular | currency:'PHP': 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Auto Liability Select Column -->\n                  <ng-container matColumnDef=\"autoLiabilitySelect\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Liability Select </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoLiabilitySelect == 0 ? 'n/a' : element.autoLiabilitySelect | currency:'PHP': 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Auto Select Column -->\n                  <ng-container matColumnDef=\"autoSelect\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Select </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoSelect == 0 || !showAutoSelect ? 'n/a' : element.autoSelect | currency:'PHP': 'symbol-narrow'}} </td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                </table>\n              </div>\n            </div>\n            <!-- .col-xl-12 -->\n\n            <div class=\"col-lg-12\">\n              <div class=\"flexitable\">\n                <table mat-table [dataSource]=\"plan90Data\" matSort class=\"mat-elevation-z8\">\n\n                  <!-- Label Column -->\n                  <ng-container matColumnDef=\"label\">\n                    <th mat-header-cell *matHeaderCellDef>\n                      <h6>PLAN 90</h6>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n                  </ng-container>\n\n                  <!-- Compre Column -->\n                  <ng-container matColumnDef=\"compre\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\">Compre</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.compre == 0 ? 'n/a' : element.compre | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- CTPL Column -->\n                  <ng-container matColumnDef=\"ctpl\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> CTPL </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.ctpl == 0 ? 'n/a' : element.ctpl | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- Auto Compre Column -->\n                  <ng-container matColumnDef=\"autoCompre\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Compre </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoCompre == 0 ? 'n/a' : element.autoCompre | currency:'PHP': 'symbol-narrow' }} </td>\n                  </ng-container>\n\n                  <!-- Auto Compre Plus Column -->\n                  <ng-container matColumnDef=\"autoComprePlus\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Compre Plus </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoComprePlus == 0 ? 'n/a' : element.autoComprePlus | currency:'PHP': 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Auto Liability Regular Column -->\n                  <ng-container matColumnDef=\"autoLiabilityRegular\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Liability Regular </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoLiabilityRegular == 0 ? 'n/a' : element.autoLiabilityRegular | currency:'PHP': 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Auto Liability Select Column -->\n                  <ng-container matColumnDef=\"autoLiabilitySelect\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Liability Select </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoLiabilitySelect == 0 ? 'n/a' : element.autoLiabilitySelect | currency:'PHP': 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Auto Select Column -->\n                  <ng-container matColumnDef=\"autoSelect\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Auto Select </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.autoSelect == 0 || !showAutoSelect ? 'n/a' : element.autoSelect | currency:'PHP': 'symbol-narrow'}} </td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                </table>\n              </div>\n            </div>\n            <!-- .col-xl-12 -->\n          </div>\n        </div>\n      </div>\n      <!-- .card -->\n\n      <div class=\"card shadow mb-3\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <img class=\"product-img-banner\" src=\"./assets/images/product-coverage.png\" alt=\"product-coverage\" />\n            </div>\n            <div class=\"col-lg-12\">\n              <div class=\"flexitable\">\n                <table mat-table [dataSource]=\"coveragelist\" matSort class=\"mat-elevation-z8\">\n\n                  <!-- Payment Column -->\n                  <ng-container matColumnDef=\"label\">\n                    <th mat-header-cell *matHeaderCellDef>Payment</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n                  </ng-container>\n\n                  <!-- Compre Column -->\n                  <ng-container matColumnDef=\"compre\">\n                    <th mat-header-cell *matHeaderCellDef>Compre</th>\n                    <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.compre\"></td>\n                  </ng-container>\n\n                  <!-- CTPL Column -->\n                  <ng-container matColumnDef=\"ctpl\">\n                    <th mat-header-cell *matHeaderCellDef> CTPL </th>\n                    <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.ctpl\"></td>\n                  </ng-container>\n\n                  <!-- Auto Compre Column -->\n                  <ng-container matColumnDef=\"autoCompre\">\n                    <th mat-header-cell *matHeaderCellDef> Auto Compre </th>\n                    <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.autoCompre\"></td>\n                  </ng-container>\n\n                  <!-- Auto Compre Plus Column -->\n                  <ng-container matColumnDef=\"autoComprePlus\">\n                    <th mat-header-cell *matHeaderCellDef> Auto Compre Plus </th>\n                    <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.autoComprePlus\"></td>\n                  </ng-container>\n\n                  <!-- Auto Liability Regular Column -->\n                  <ng-container matColumnDef=\"autoLiabilityRegular\">\n                    <th mat-header-cell *matHeaderCellDef> Auto Liabilty Regular </th>\n                    <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.autoLiabilityRegular\"></td>\n                  </ng-container>\n\n                  <!-- Auto Liability Select Column -->\n                  <ng-container matColumnDef=\"autoLiabilitySelect\">\n                    <th mat-header-cell *matHeaderCellDef> Auto Liability Select </th>\n                    <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.autoLiabilitySelect\"></td>\n                  </ng-container>\n\n                  <!-- Auto Select Column -->\n                  <ng-container matColumnDef=\"autoSelect\">\n                    <th mat-header-cell *matHeaderCellDef> Auto Select </th>\n                    <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.autoSelect\"></td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                </table>\n              </div>\n            </div>\n            <!-- .col-xl-12 -->\n          </div>\n          <!-- .row -->\n        </div>\n        <!-- .card-body -->\n      </div>\n      <!-- .card  -->\n\n    </div>\n    <!-- .showProductComparison -->\n  </div>\n  <!-- .col-xl-12 -->\n\n</div>\n<!-- #quickQuotationCar -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quick-quotation-home/quick-quotation-home.component.html":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/quick-quotation-home/quick-quotation-home.component.html ***!
  \***************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"quickQuotationHome\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4 class=\"all-caps\">\n        <span class=\"fa-stack fa-md\">\n          <i class=\"fa fa-circle fa-stack-2x\"></i>\n          <i class=\"fa fa-home fa-stack-1x fa-inverse\"></i>\n        </span>\n        Quick Quotation\n      </h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-lg-12\">\n    <img class=\"product-img-banner\" src=\"./assets/images/banner/home.jpg\" alt=\"credits to freepik @stories\" />\n  </div>\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"alert alert-info note\">\n          <p><strong>Important Reminder:</strong> All the amounts shown on the product comparison table are only\n            estimates and must not be taken as the actual premiums of the products.\n          </p>\n        </div>\n        <!-- .note -->\n\n        <form [formGroup]=\"quickQuoteForm\" class=\"quick-quote-form\">\n          <div class=\"row\">\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['subline'].invalid \n                  && (quickQuoteForm.controls['subline'].dirty \n                  || quickQuoteForm.controls['subline'].touched)}\">\n                <label for=\"subline\">Subline</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"subline\"\n                  [(ngModel)]=\"homeDetails.subline\">\n                  <option selected></option>\n                  <option *ngFor=\"let subline of LOV.sublineLOV\" [ngValue]=\"subline.COD_RAMO\">{{ subline.NOM_RAMO }}\n                  </option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['subline'].errors?.required\">\n                  * subline is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"form-divider\"></div>\n            <div class=\"col-xl-12\">\n              <h6>Coverage</h6>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"cbBuilding\" formControlName=\"cbBuilding\"\n                  [(ngModel)]=\"homeDetails.cbBuilding\">\n                <label class=\"form-check-label\" for=\"cbBuilding\">\n                  Building\n                </label>\n              </div>\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['building'].invalid \n                && (quickQuoteForm.controls['building'].dirty \n                || quickQuoteForm.controls['building'].touched)}\">\n                <input class=\"form-control required\" [attr.disabled]=\"homeDetails.cbBuilding ? null : ''\" type=\"number\"\n                  id=\"building\" formControlName=\"building\" [(ngModel)]=\"homeDetails.building\">\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['building'].errors?.required\">\n                  * building is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"cbContent\" formControlName=\"cbContent\"\n                  [(ngModel)]=\"homeDetails.cbContent\">\n                <label class=\"form-check-label\" for=\"cbContent\">\n                  Content\n                </label>\n              </div>\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['content'].invalid \n                && (quickQuoteForm.controls['content'].dirty \n                || quickQuoteForm.controls['content'].touched)}\">\n                <input class=\"form-control required\" [attr.disabled]=\"homeDetails.cbContent ? null : ''\" type=\"number\"\n                  id=\"content\" formControlName=\"content\" [(ngModel)]=\"homeDetails.content\">\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['content'].errors?.required\">\n                  * content is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"form-divider\"></div>\n            <div class=\"col-xl-12\">\n              <h6>Content</h6>\n            </div>\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\"\n                  [attr.disabled]=\"homeDetails.cbBuilding || homeDetails.cbContent ? null : ''\" type=\"checkbox\"\n                  id=\"cbImprovements\" formControlName=\"cbImprovements\" [(ngModel)]=\"homeDetails.cbImprovements\">\n                <label class=\"form-check-label\" for=\"cbImprovements\">\n                  Improvements\n                </label>\n              </div>\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['improvements'].invalid \n                && (quickQuoteForm.controls['improvements'].dirty \n                || quickQuoteForm.controls['improvements'].touched)}\">\n                <input class=\"form-control required\"\n                  [attr.disabled]=\"(homeDetails.cbBuilding || homeDetails.cbContent) && homeDetails.cbImprovements ? null : ''\"\n                  type=\"number\" id=\"improvements\" formControlName=\"improvements\" [(ngModel)]=\"homeDetails.improvements\">\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['improvements'].errors?.required\">\n                  * improvements is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\"\n                  [attr.disabled]=\"homeDetails.cbBuilding || homeDetails.cbContent ? null : ''\" type=\"checkbox\"\n                  id=\"cbRelatedBuild\" formControlName=\"cbRelatedBuild\" [(ngModel)]=\"homeDetails.cbRelatedBuild\">\n                <label class=\"form-check-label\" for=\"cbRelatedBuild\">\n                  Other Related Build\n                </label>\n              </div>\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['relatedBuild'].invalid \n                && (quickQuoteForm.controls['relatedBuild'].dirty \n                || quickQuoteForm.controls['relatedBuild'].touched)}\">\n                <input class=\"form-control required\"\n                  [attr.disabled]=\"(homeDetails.cbBuilding || homeDetails.cbContent) && homeDetails.cbRelatedBuild ? null : ''\"\n                  type=\"number\" id=\"relatedBuild\" formControlName=\"relatedBuild\" [(ngModel)]=\"homeDetails.relatedBuild\">\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['relatedBuild'].errors?.required\">\n                  * related build is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\"\n                  [attr.disabled]=\"homeDetails.cbBuilding || homeDetails.cbContent ? null : ''\" type=\"checkbox\"\n                  id=\"cbRelatedContent\" formControlName=\"cbRelatedContent\" [(ngModel)]=\"homeDetails.cbRelatedContent\">\n                <label class=\"form-check-label\" for=\"cbRelatedContent\">\n                  Other Related Content\n                </label>\n              </div>\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['relatedContent'].invalid \n                && (quickQuoteForm.controls['relatedContent'].dirty \n                || quickQuoteForm.controls['relatedContent'].touched)}\">\n                <input class=\"form-control required\"\n                  [attr.disabled]=\"(homeDetails.cbBuilding || homeDetails.cbContent) && homeDetails.cbRelatedContent ? null : ''\"\n                  type=\"number\" id=\"relatedContent\" formControlName=\"relatedContent\"\n                  [(ngModel)]=\"homeDetails.relatedContent\">\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['relatedContent'].errors?.required\">\n                  * related content is required\n                </p>\n              </div>\n            </div>\n\n          </div>\n          <!-- .row -->\n\n          <div class=\"alert alert-warning note\">\n            <p><strong>Note:</strong> Sum Insured should be higher than 999,999 or lower than 30,000,001. Currently,\n              your sum insured is\n              <strong>\n                {{homeDetails.building--homeDetails.content--homeDetails.improvements--homeDetails.relatedBuild--homeDetails.relatedContent  | currency:'PHP': 'symbol-narrow'}}</strong>\n            </p>\n          </div>\n\n          <div class=\"btn-group\" role=\"group\">\n            <button\n              [disabled]=\"quickQuoteForm.pristine || quickQuoteForm.invalid ||\n            homeDetails.building--homeDetails.content--homeDetails.improvements--homeDetails.relatedBuild--homeDetails.relatedContent < 1000000 ||\n            homeDetails.building--homeDetails.content--homeDetails.improvements--homeDetails.relatedBuild--homeDetails.relatedContent > 30000000\"\n              type=\"button\" class=\"btn btn-primary\" (click)=\"quickQuote(homeDetails)\">Generate</button>\n          </div>\n          <!-- .btn-group -->\n\n          <div class=\"clearfix\"></div>\n        </form>\n        <!-- .quick-quote-form -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\" id=\"productComparison\">\n    <div class=\"product-comparison\" *ngIf=\"showProductComparison\">\n      <div class=\"card shadow mb-3\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <img class=\"product-img-banner\" src=\"./assets/images/product-home.png\" alt=\"product-home\" />\n            </div>\n            <div class=\"col-lg-12\">\n              <div class=\"flexitable\">\n                <table mat-table [dataSource]=\"annualData\" matSort class=\"mat-elevation-z8\">\n\n                  <!-- Payment Column -->\n                  <ng-container matColumnDef=\"label\">\n                    <th mat-header-cell *matHeaderCellDef>Payment</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n                  </ng-container>\n\n                  <!-- Fire Column -->\n                  <ng-container matColumnDef=\"fire\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\">Fire</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.fire | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- Earth Column -->\n                  <ng-container matColumnDef=\"earth\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Earth </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.earth | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- Water Column -->\n                  <ng-container matColumnDef=\"water\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Water </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.water | currency:'PHP': 'symbol-narrow' }} </td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                </table>\n              </div>\n            </div>\n            <!-- .col-xl-12 -->\n          </div>\n          <!-- .row -->\n        </div>\n        <!-- .card-body -->\n      </div>\n      <!-- .card  -->\n\n      <div class=\"card shadow mb-3\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <img class=\"payment-img-banner\" src=\"./assets/images/product-payment.png\" alt=\"product-payment\" />\n            </div>\n            <div class=\"col-lg-12\">\n              <div class=\"flexitable\">\n\n                <table mat-table [dataSource]=\"plan30Data\" matSort class=\"mat-elevation-z8\">\n\n                  <!-- Label Column -->\n                  <ng-container matColumnDef=\"label\">\n                    <th mat-header-cell *matHeaderCellDef>\n                      <h6>PLAN 30</h6>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n                  </ng-container>\n\n                  <!-- Fire Column -->\n                  <ng-container matColumnDef=\"fire\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\">Fire</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.fire | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- Earth Column -->\n                  <ng-container matColumnDef=\"earth\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Earth </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.earth | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- Water Column -->\n                  <ng-container matColumnDef=\"water\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Water </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.water | currency:'PHP': 'symbol-narrow' }} </td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                </table>\n              </div>\n            </div>\n            <!-- .col-xl-12 -->\n\n            <div class=\"col-lg-12\">\n              <div class=\"flexitable\">\n\n                <table mat-table [dataSource]=\"plan60Data\" matSort class=\"mat-elevation-z8\">\n\n                  <!-- Label Column -->\n                  <ng-container matColumnDef=\"label\">\n                    <th mat-header-cell *matHeaderCellDef>\n                      <h6>PLAN 60</h6>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n                  </ng-container>\n\n                  <!-- Fire Column -->\n                  <ng-container matColumnDef=\"fire\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\">Fire</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.fire | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- Earth Column -->\n                  <ng-container matColumnDef=\"earth\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Earth </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.earth | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- Water Column -->\n                  <ng-container matColumnDef=\"water\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Water </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.water | currency:'PHP': 'symbol-narrow' }} </td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                </table>\n              </div>\n            </div>\n            <!-- .col-xl-12 -->\n\n            <div class=\"col-lg-12\">\n              <div class=\"flexitable\">\n                <table mat-table [dataSource]=\"plan90Data\" matSort class=\"mat-elevation-z8\">\n\n                  <!-- Label Column -->\n                  <ng-container matColumnDef=\"label\">\n                    <th mat-header-cell *matHeaderCellDef>\n                      <h6>PLAN 90</h6>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n                  </ng-container>\n\n                  <!-- Fire Column -->\n                  <ng-container matColumnDef=\"fire\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\">Fire</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.fire | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- Earth Column -->\n                  <ng-container matColumnDef=\"earth\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Earth </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.earth | currency:'PHP': 'symbol-narrow'}}</td>\n                  </ng-container>\n\n                  <!-- Water Column -->\n                  <ng-container matColumnDef=\"water\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\"> Water </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.water | currency:'PHP': 'symbol-narrow' }} </td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                </table>\n              </div>\n            </div>\n            <!-- .col-xl-12 -->\n          </div>\n        </div>\n      </div>\n      <!-- .card -->\n\n      <div class=\"card shadow mb-3\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <img class=\"product-img-banner\" src=\"./assets/images/product-coverage.png\" alt=\"product-coverage\" />\n            </div>\n            <div class=\"col-lg-12\">\n              <div class=\"flexitable\">\n                <table mat-table [dataSource]=\"coveragelist\" matSort class=\"mat-elevation-z8\">\n\n                  <!-- Payment Column -->\n                  <ng-container matColumnDef=\"label\">\n                    <th mat-header-cell *matHeaderCellDef>Payment</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n                  </ng-container>\n\n                  <!-- Fire Column -->\n                  <ng-container matColumnDef=\"fire\">\n                    <th mat-header-cell *matHeaderCellDef>Fire</th>\n                    <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.fire\"></td>\n                  </ng-container>\n\n                  <!-- Earth Column -->\n                  <ng-container matColumnDef=\"earth\">\n                    <th mat-header-cell *matHeaderCellDef>Earth</th>\n                    <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.earth\"></td>\n                  </ng-container>\n\n                  <!-- Water Column -->\n                  <ng-container matColumnDef=\"water\">\n                    <th mat-header-cell *matHeaderCellDef>Water </th>\n                    <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.water\"></td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                </table>\n              </div>\n            </div>\n            <!-- .col-xl-12 -->\n          </div>\n          <!-- .row -->\n        </div>\n        <!-- .card-body -->\n      </div>\n      <!-- .card  -->\n\n    </div>\n    <!-- .product-comparison -->\n  </div>\n  <!-- .col-xl-12 -->\n\n</div>\n<!-- #quickQuotationHome -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quick-quotation-travel/quick-quotation-travel.component.html":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/quick-quotation-travel/quick-quotation-travel.component.html ***!
  \*******************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"quickQuotationTravel\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4 class=\"all-caps\">\n        <span class=\"fa-stack fa-md\">\n          <i class=\"fa fa-circle fa-stack-2x\"></i>\n          <i class=\"fa fa-plane fa-stack-1x fa-inverse\"></i>\n        </span>\n        Quick Quotation \n      </h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-lg-12\">\n    <img class=\"product-img-banner\" src=\"./assets/images/banner/travel.jpg\" alt=\"credits to freepik @stories\" />\n  </div>\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"alert alert-info note\">\n          <p><strong>Important Reminder:</strong> All the amounts shown on the product comparison table are only\n            estimates and must not be taken as the actual premiums of the products. Family risk should be max of 6 \n            members and age of children should be from 0-21 years old only. Please also be advised that family is considered\n            as 1 risk and no multirisk is allowed for quotation. Premiums reflected are based on highest \n            LGT of 0.75%. For exact premiums based on branch LGT, please proceed to regular quote.\n          </p>\n        </div>\n        <!-- .note -->\n\n        <form [formGroup]=\"quickQuoteForm\" class=\"quick-quote-form\">\n          <div class=\"row\">\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['currency'].invalid \n                && (quickQuoteForm.controls['currency'].dirty \n                || quickQuoteForm.controls['currency'].touched)}\">\n                <label for=\"currency\">Currency</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"currency\"\n                  [(ngModel)]=\"travelDetails.currency\" (change)=\"currencyOnchange()\">\n                  <option selected></option>\n                  <option *ngFor=\"let currency of LOV.currencyLOV\" [ngValue]=\"currency.COD_MON\">{{ currency.NOM_MON }}\n                  </option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['currency'].errors?.required\">\n                  * currency is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-5 col-md-5 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['country'].invalid \n                  && (quickQuoteForm.controls['country'].dirty \n                  || quickQuoteForm.controls['country'].touched)}\">\n                <label for=\"country\">Itinerary</label>\n                <ng-select [items]=\"LOV.countryLOV\" bindLabel=\"name\" placeholder=\"Select Country to visit\"\n                  appendTo=\"body\" formControlName=\"country\" multiple=\"true\" [(ngModel)]=\"travelDetails.countries\">\n                </ng-select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['country'].errors?.required\">\n                  * country is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"form-divider\"></div>\n            <div class=\"col-xl-12\">\n              <h6>Travel Information</h6>\n            </div>\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['travelPackage'].invalid \n                && (quickQuoteForm.controls['travelPackage'].dirty \n                || quickQuoteForm.controls['travelPackage'].touched)}\">\n                <label for=\"travelPackage\">Travel Package</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"travelPackage\"\n                  [(ngModel)]=\"travelDetails.travelPackage\" [attr.disabled]=\"true\">\n                  <option selected></option>\n                  <option *ngFor=\"let package of LOV.packageLOV\" [ngValue]=\"package.TRAVEL_PACK\">{{ package.NOM_VALOR }}\n                  </option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['travelPackage'].errors?.required\">\n                  * travel package is required\n                </p>\n              </div>\n            </div>\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['typeOfCoverage'].invalid \n                && (quickQuoteForm.controls['typeOfCoverage'].dirty \n                || quickQuoteForm.controls['typeOfCoverage'].touched)}\">\n                <label for=\"typeOfCoverage\">Type of Coverage</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"typeOfCoverage\"\n                  [(ngModel)]=\"travelDetails.typeOfCoverage\">\n                  <option selected></option>\n                  <option *ngFor=\"let coverage of LOV.coverageLOV\" [ngValue]=\"coverage.INSURANCE_COVERAGE\">\n                    {{ coverage.NOM_VALOR }}\n                  </option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['typeOfCoverage'].errors?.required\">\n                  * type of coverage is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['startDate'].invalid \n                && (quickQuoteForm.controls['startDate'].dirty \n                || quickQuoteForm.controls['startDate'].touched)}\">\n                <label for=\"startDate\">Start Date</label>\n                <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\" [minDate]=\"mindate\"\n                  formControlName=\"startDate\" [(ngModel)]=\"travelDetails.startDate\" bsDatepicker>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['startDate'].errors?.required\">\n                  * start date is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['endDate'].invalid \n                && (quickQuoteForm.controls['endDate'].dirty \n                || quickQuoteForm.controls['endDate'].touched)}\">\n                <label for=\"endDate\">End Date</label>\n                <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\" [minDate]=\"endDateMinDate\"\n                  formControlName=\"endDate\" [(ngModel)]=\"travelDetails.endDate\" bsDatepicker\n                  [attr.disabled]=\"enableEndDate ? null : ''\">\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['endDate'].errors?.required\">\n                  * end date is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['noOfDays'].invalid \n                && (quickQuoteForm.controls['noOfDays'].dirty \n                || quickQuoteForm.controls['noOfDays'].touched)}\">\n                <label for=\"noOfDays\">No. of Days</label>\n                <input class=\"form-control required\" id=\"noOfDays\" formControlName=\"noOfDays\"\n                  [(ngModel)]=\"travelDetails.noOfDays\" [attr.disabled]=\"true\">\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['noOfDays'].errors?.required\">\n                  * number of days is required\n                </p>\n              </div>\n            </div>\n\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-lg-3 col-md-4 col-sm-6\">\n              <div class=\"form-group\" [ngClass]=\"{'input-error': quickQuoteForm.controls['ageRange'].invalid \n                && (quickQuoteForm.controls['ageRange'].dirty \n                || quickQuoteForm.controls['ageRange'].touched)}\">\n                <label for=\"ageRange\">Select the range of the eldest insured from the list</label>\n                <select class=\"custom-select mr-sm-2 required\" formControlName=\"ageRange\"\n                  [(ngModel)]=\"travelDetails.ageRange\">\n                  <option selected></option>\n                  <option *ngFor=\"let ageRange of LOV.ageRangeLOV\" [ngValue]=\"ageRange.AGE_RANGE\">\n                    {{ ageRange.NOM_VALOR }}\n                  </option>\n                </select>\n                <p class=\"form-error\" *ngIf=\"quickQuoteForm.controls['ageRange'].errors?.required\">\n                  * age range is required\n                </p>\n              </div>\n            </div>\n\n          </div>\n          <!-- .row -->\n\n          <div class=\"btn-group\" role=\"group\">\n            <button [disabled]=\"quickQuoteForm.pristine || quickQuoteForm.invalid\" type=\"button\" class=\"btn btn-primary\"\n              (click)=\"quickQuote(travelDetails)\">Generate</button>\n          </div>\n          <!-- .btn-group -->\n\n          <div class=\"clearfix\"></div>\n        </form>\n        <!-- .quick-quote-form -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\" id=\"productComparison\">\n    <div class=\"product-comparison\" *ngIf=\"showProductComparison\">\n      <div class=\"card shadow mb-3\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <img class=\"product-img-banner\" src=\"./assets/images/product-travel.png\" alt=\"product-travel\" />\n            </div>\n            <div class=\"col-lg-12\">\n              <div class=\"flexitable\">\n                <table mat-table [dataSource]=\"travelData\" matSort class=\"mat-elevation-z8\">\n\n                  <!-- Position Column -->\n                  <ng-container matColumnDef=\"label\">\n                    <th mat-header-cell *matHeaderCellDef>Limit</th>\n                    <td mat-cell *matCellDef=\"let element\">{{element.label}}</td>\n                  </ng-container>\n\n                  <!-- Name Column -->\n                  <ng-container matColumnDef=\"complete\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\">Travel Complete</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.complete == null ? 'n/a' : element.complete | currency: element.currency: 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Weight Column -->\n                  <ng-container matColumnDef=\"personalAssistance\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\">Travel Assist with Personal Assistance</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.personalAssistance == null ? 'n/a' : element.personalAssistance | currency: element.currency: 'symbol-narrow'}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Symbol Column -->\n                  <ng-container matColumnDef=\"assist\">\n                    <th mat-header-cell *matHeaderCellDef class=\"amount\">Travel Assist Only</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                      {{element.assist == null ? 'n/a' : element.assist | currency: element.currency: 'symbol-narrow' }}\n                    </td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"generateCoverage(row)\"\n                    matTooltip=\"click to show product coverage\"></tr>\n\n                </table>\n              </div>\n            </div>\n            <!-- .col-xl-12 -->\n          </div>\n          <!-- .row -->\n        </div>\n        <!-- .card-body -->\n      </div>\n      <!-- .card  -->\n\n      <div id=\"productCoverage\">\n        <div class=\"card shadow mb-3\" *ngIf=\"showProductCoverage\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-lg-12\">\n                <img class=\"product-img-banner\" src=\"./assets/images/product-coverage.png\" alt=\"product-coverage\" />\n              </div>\n              <div class=\"col-lg-12\">\n                <div class=\"flexitable\">\n                  <table mat-table [dataSource]=\"coverageData\" matSort class=\"mat-elevation-z8\">\n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"label\">\n                      <th mat-header-cell *matHeaderCellDef>Limit</th>\n                      <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.label\"></td>\n                    </ng-container>\n\n                    <!-- Name Column -->\n                    <ng-container matColumnDef=\"complete\">\n                      <th mat-header-cell *matHeaderCellDef class=\"amount\">Travel Complete</th>\n                      <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                        {{element.isHeader && (element.code != '330' && element.code != '332') ? '' : element.complete == null ? 'n/a' : element.complete == 0 ? element.isHeader ? '' : 'actual cost' : element.complete | currency: element.currency: 'symbol-narrow'}}\n                      </td>\n                    </ng-container>\n\n                    <!-- Weight Column -->\n                    <ng-container matColumnDef=\"personalAssistance\">\n                      <th mat-header-cell *matHeaderCellDef class=\"amount\">Travel Assist with Personal Assistance</th>\n                      <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                        {{element.isHeader && (element.code != '330' && element.code != '332') ? '' : element.personalAssistance == null ? 'n/a' : element.personalAssistance == 0 ? element.isHeader ? '' : 'actual cost' : element.personalAssistance | currency: element.currency: 'symbol-narrow'}}\n                      </td>\n                    </ng-container>\n\n                    <!-- Symbol Column -->\n                    <ng-container matColumnDef=\"assist\">\n                      <th mat-header-cell *matHeaderCellDef class=\"amount\">Travel Assist Only</th>\n                      <td mat-cell *matCellDef=\"let element\" class=\"amount\">\n                        {{element.isHeader && (element.code != '330' && element.code != '332') ? '' : element.assist == null ? 'n/a' : element.assist == 0 ? element.isHeader ? '' : 'actual cost' : element.assist | currency: element.currency: 'symbol-narrow' }}\n                      </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                  </table>\n                </div>\n              </div>\n              <!-- .col-xl-12 -->\n            </div>\n            <!-- .row -->\n          </div>\n          <!-- .card-body -->\n        </div>\n        <!-- .card  -->\n      </div>\n      <!-- #productCoverage -->\n\n    </div>\n    <!-- .showProductComparison -->\n\n  </div>\n  <!-- #quickQuotationTravel -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quotation-accident/quotation-accident.component.html":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/quotation-accident/quotation-accident.component.html ***!
  \***********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"quotationAccident\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4 class=\"all-caps\">\n        <span class=\"fa-stack fa-md\">\n          <i class=\"fa fa-circle fa-stack-2x\"></i>\n          <i class=\"fa fa-shield-alt fa-stack-1x fa-inverse\"></i>\n        </span>\n        {{pageLabel}}\n      </h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-lg-12\">\n    <img class=\"product-img-banner\" src=\"./assets/images/banner/accident.jpg\" alt=\"credits to freepik @stories\" />\n  </div>\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n        <div class=\"clearfix\"></div>\n        <form [formGroup]=\"quoteForm\">\n\n          <div *ngIf='isIssuance' class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Individual Policy</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-lg-12\">\n                  <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                      <label class=\"input-group-text\" for=\"quotationNumber\">Quotation Number</label>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Quotation Number here..\"\n                      formControlName=\"quotationNumber\" [(ngModel)]=\"accidentDetails.quotationNumber\">\n                    <div class=\"input-group-append\">\n                      <button [disabled]=\"disableLoadBtn\" class=\"btn btn-outline-secondary\" (click)=\"loadQuotation()\"\n                        type=\"button\">Load</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Business Line</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-lg-4 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['subline'].invalid \n                    && (quoteForm.controls['subline'].dirty \n                    || quoteForm.controls['subline'].touched)}\">\n                    <label for=\"subline\">Subline</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"subline\"\n                      [(ngModel)]=\"accidentDetails.subline\"\n                      (change)=\"sublineOnChange()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let subline of LOV.sublineLOV\" [ngValue]=\"subline.COD_RAMO\">{{ subline.NOM_RAMO }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['subline'].errors?.required\">\n                      * subline is required\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <app-group-policy #appGroupPolicy\n            [subline]=\"accidentDetails.subline\"\n            [prevDetails]=\"prevAccidentDetails\"\n            [groupPolicy]=\"groupPolicy\"\n            [editMode]=\"editMode\"\n            [showExpiring]=\"false\"\n            [(changedValues)]=\"changedValues\"\n            [loadQuotation]=\"triggerCounter\">\n          </app-group-policy>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>General Information</strong>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <h6>Movement Dates</h6>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['effectivityDate'].invalid \n                    && (quoteForm.controls['effectivityDate'].dirty \n                    || quoteForm.controls['effectivityDate'].touched)}\">\n                    <label for=\"effectivityDate\">Effectivity Date</label>\n                    <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\"\n                      (bsValueChange)=\"affecting('effectivityDate', 'Effectivity Date')\"\n                      formControlName=\"effectivityDate\"\n                      [(ngModel)]=\"accidentDetails.effectivityDate\"\n                      [attr.disabled]=\"editMode ? null : true\"\n                      bsDatepicker>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['effectivityDate'].errors?.required\">\n                      * effectivity date is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['expiryDate'].invalid \n                    && (quoteForm.controls['expiryDate'].dirty \n                    || quoteForm.controls['expiryDate'].touched)}\">\n                    <label for=\"expiryDate\">Expiry Date</label>\n                    <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\"\n                      [minDate]=\"expiryDateMinDate\"\n                      (bsValueChange)=\"affecting('expiryDate', 'Expirty Date')\"\n                      formControlName=\"expiryDate\"\n                      [(ngModel)]=\"accidentDetails.expiryDate\"\n                      [attr.disabled]=\"editMode ? null : true\"\n                      bsDatepicker>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['expiryDate'].errors?.required\">\n                      * expiry date is required\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <app-policy-holder #appPolicyHolder\n            [title]=\"'Policy Holder Information'\"\n            [showCreateBtn]=\"true\"\n            [details]=\"accidentDetails\"\n            [(policyHolder)]=\"policyHolder\"\n            [isIssuance]=\"isIssuance\"\n            [editMode]=\"editMode\"\n            [type]=\"'primary'\"\n            [optional]=\"false\"\n            [loadQuotation]=\"triggerCounter\">\n          </app-policy-holder>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Insured Details</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <h6>Personal Information</h6>\n                </div>\n              </div>\n\n              <div formArrayName=\"insured\">\n                <div *ngFor=\"let ins of quoteForm.get('insured')['controls']; let i=index\">\n                  <div [formGroupName]=\"i\" class=\"card insured-card\">\n                    <div class=\"card-body\">\n                      <div class=\"row\">\n                        <div class=\"col-md-4 col-sm-6\">\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': ins.controls['firstName'].invalid \n                              && (ins.controls['firstName'].dirty \n                              || ins.controls['firstName'].touched)}\">\n                            <label for=\"firstName\">First Name</label>\n                            <input type=\"text\" formControlName=\"firstName\" class=\"form-control required\"\n                              oninput=\"this.value = this.value.toUpperCase()\"\n                              [attr.disabled]=\"editMode ? null : true\">\n                            <p class=\"form-error\" *ngIf=\"ins.controls['firstName'].errors?.required\">\n                              * first name is required\n                            </p>\n                          </div>\n                        </div>\n        \n                        <div class=\"col-md-4 col-sm-6\">\n                          <div class=\"form-group\">\n                            <label for=\"middleName\">Middle Name</label>\n                            <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"\n                              oninput=\"this.value = this.value.toUpperCase()\"\n                              [attr.disabled]=\"editMode ? null : true\">\n                          </div>\n                        </div>\n        \n                        <div class=\"col-md-4 col-sm-6\">\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': ins.controls['lastName'].invalid \n                              && (ins.controls['lastName'].dirty \n                              || ins.controls['lastName'].touched)}\">\n                            <label for=\"lastName\">Last Name</label>\n                            <input type=\"text\" formControlName=\"lastName\" class=\"form-control required\"\n                             oninput=\"this.value = this.value.toUpperCase()\"\n                             [attr.disabled]=\"editMode ? null : true\">\n                            <p class=\"form-error\" *ngIf=\"ins.controls['lastName'].errors?.required\">\n                              * last name is required\n                            </p>\n                          </div>\n                        </div>\n        \n                        <div class=\"col-lg-4 col-md-4 col-sm-6\">\n                          <div class=\"form-group\">\n                            <label for=\"commercialStructure\">Suffix</label>\n                            <select class=\"custom-select mr-sm-2\" formControlName=\"suffix\"\n                              (change)=\"suffixOnChange(ins)\"\n                              [attr.disabled]=\"editMode ? null : true\">\n                              <option></option>\n                              <option *ngFor=\"let suffix of LOV.suffixLOV\" [ngValue]=\"suffix.TIPO_SUFIJO_NOMBRE\">{{ suffix.NOM_VALOR }}</option>\n                            </select>\n                          </div>\n                        </div>\n        \n                        <div class=\"col-lg-4 col-md-4 col-sm-6\">\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': ins.controls['gender'].invalid \n                              && (ins.controls['gender'].dirty \n                              || ins.controls['gender'].touched)}\">\n                            <label for=\"gender\">Gender</label>\n                            <select class=\"custom-select mr-sm-2 required\" formControlName=\"gender\"\n                              [attr.disabled]=\"editMode ? null : true\">\n                              <option></option>\n                              <option [ngValue]=\"1\">MALE</option>\n                              <option [ngValue]=\"0\">FEMALE</option>\n                            </select>\n                            <p class=\"form-error\" *ngIf=\"ins.controls['gender'].errors?.required\">\n                              * gender is required\n                            </p>\n                          </div>\n                        </div>\n\n                        <div class=\"col-lg-4 col-md-4 col-sm-6\">\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': ins.controls['relationship'].invalid \n                          && (ins.controls['relationship'].dirty \n                          || ins.controls['relationship'].touched)}\">\n                            <label for=\"relationship\">Relationship</label>\n                            <select class=\"custom-select mr-sm-2 required\" formControlName=\"relationship\"\n                              (change)=\"relationshipOnChange(ins)\"\n                              [attr.disabled]=\"editMode && LOV.relationshipLOV?.length && i != 0 && editMode? null: true\">\n                              <option \n                                *ngFor=\"let relationship of LOV.relationshipLOV\"\n                                [attr.disabled]=\"relationship.disabled ? '' : null\"\n                                [ngValue]=\"relationship.COD_VALOR\">\n                                {{ relationship.NOM_VALOR }}</option>\n                            </select>\n                            <p class=\"form-error\" *ngIf=\"ins.controls['relationship'].errors?.required\">\n                              * relationship is required\n                            </p>\n                          </div>\n                        </div>\n        \n                        <div class=\"col-lg-4 col-md-4 col-sm-6\">\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': ins.controls['birthDate'].invalid \n                              && (ins.controls['birthDate'].dirty \n                              || ins.controls['birthDate'].touched)}\">\n                            <label for=\"birthDate\">Birth Date</label>\n                            <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\"\n                              [maxDate]=\"ins.controls['bdaymaxdate'].value\" [minDate]=\"ins.controls['bdaymindate'].value\"\n                              formControlName=\"birthDate\" bsDatepicker\n                              [attr.disabled]=\"editMode ? null : true\">\n                            <p class=\"form-error\" *ngIf=\"ins.controls['birthDate'].errors?.required\">\n                              * birth date is required\n                            </p>\n                          </div>\n                        </div>\n        \n                        <div class=\"col-lg-12\">\n                          <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"cbWithHealthDeclaration{{i}}\"\n                              formControlName=\"cbWithHealthDeclaration\"\n                              [attr.disabled]=\"editMode ? null : true\"\n                              (change)=\"cbWithHealthDeclarationOnChange(ins)\">\n                            <label class=\"form-check-label\" for=\"cbWithHealthDeclaration{{i}}\">\n                              With Health Declaration\n                            </label>\n                          </div>\n                          <label class=\"form-check-label\" for=\"cbWithHealthDeclaration\">\n                            Declare Pre-existing Illness\n                          </label>\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': ins.controls['preExistingIllness'].invalid \n                              && (ins.controls['preExistingIllness'].dirty \n                              || ins.controls['preExistingIllness'].touched)}\">\n                            <textarea class=\"form-control required\"\n                              [attr.disabled]=\"ins.controls['cbWithHealthDeclaration'].value && editMode ? null : ''\" type=\"text\"\n                              id=\"preExistingIllness\" formControlName=\"preExistingIllness\"\n                              oninput=\"this.value = this.value.toUpperCase()\"></textarea>\n                            <p class=\"form-error\" *ngIf=\"ins.controls['preExistingIllness'].errors?.required\">\n                              * please indicate pre-existing illness\n                            </p>\n                          </div>\n                        </div>\n        \n                        <div class=\"col-sm-6\">\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': ins.controls['occupationalClass'].invalid \n                              && (ins.controls['occupationalClass'].dirty \n                              || ins.controls['occupationalClass'].touched)}\">\n                            <label for=\"occupationalClass\">Occupational Class</label>\n                            <select class=\"custom-select mr-sm-2 required\" formControlName=\"occupationalClass\"\n                              (change)=\"occupationalClassOnchange(ins)\"\n                              [attr.disabled]=\"LOV.occupationalClassLOV?.length && editMode? null : true\">\n                              <option></option>\n                              <option *ngFor=\"let occupationalClass of LOV.occupationalClassLOV\"\n                                [ngValue]=\"occupationalClass.COD_VALOR\">CLASS {{ occupationalClass.COD_VALOR }} - {{ occupationalClass.NOM_VALOR }}</option>\n                            </select>\n                            <p class=\"form-error\" *ngIf=\"ins.controls['occupationalClass'].errors?.required\">\n                              * occupational class is required\n                            </p>\n                          </div>\n                        </div>\n        \n                        <div class=\"col-sm-6\">\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': ins.controls['occupation'].invalid \n                              && (ins.controls['occupation'].dirty \n                              || ins.controls['occupation'].touched)}\">\n                            <label for=\"occupation\">Occupation</label>\n                            <select class=\"custom-select mr-sm-2 required\" formControlName=\"occupation\"\n                              (change)=\"occupationOnchange(ins)\"\n                              [attr.disabled]=\"ins.controls['occupationList'].value.length && editMode? null : true\">\n                              <option></option>\n                              <option *ngFor=\"let occupation of ins.controls['occupationList'].value\" [ngValue]=\"occupation.COD_VALOR\">\n                                {{ occupation.NOM_VALOR }}</option>\n                            </select>\n                            <p class=\"form-error\" *ngIf=\"ins.controls['occupation'].errors?.required\">\n                              * occupation is required\n                            </p>\n                          </div>\n                        </div>\n        \n                        <div class=\"col-lg-12\" *ngIf=\"ins.controls['showOtherOccupation'].value\">\n                          <label class=\"form-check-label\" for=\"occupation\">\n                            Declare Other Occupation\n                          </label>\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': ins.controls['otherOccupation'].invalid \n                              && (ins.controls['otherOccupation'].dirty \n                              || ins.controls['otherOccupation'].touched)}\">\n                            <textarea class=\"form-control required\" type=\"text\"\n                              id=\"otherOccupation\" formControlName=\"otherOccupation\"\n                              oninput=\"this.value = this.value.toUpperCase()\"\n                              [attr.disabled]=\"editMode ? null : true\"></textarea>\n                            <p class=\"form-error\" *ngIf=\"ins.controls['otherOccupation'].errors?.required\">\n                              * please indicate other occupation\n                            </p>\n                          </div>\n                        </div>\n\n                        <div class=\"clearfix\"></div>\n                        <div class=\"col-lg-12\">\n                          <div class=\"btn-group\" *ngIf=\"i > 0 && editMode\">\n                            <button class=\"btn btn-primary\" (click)=\"removeInsured(i)\">Remove</button>\n                          </div>\n                        </div>\n\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div *ngIf=\"insuredHeadCount <= 5 && showHCBIDetails\" class=\"btn-group\">\n                <button [disabled]=\"!editMode || quoteForm.get('insured').status !== 'VALID'\" type=\"button\"\n                  (click)=\"addInsured(false)\" class=\"btn btn-primary\">Add Insured Individual</button>\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\" *ngIf=\"showSPADetails\">\n            <div class=\"card-header\">\n              <strong>Accidental Death / Disablement Detail</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['disablementValue'].invalid \n                        && (quoteForm.controls['disablementValue'].dirty \n                        || quoteForm.controls['disablementValue'].touched)}\">\n                    <label for=\"disablementValue\">Accidental Death and Disablement Value</label>\n                    <input type=\"number\" formControlName=\"disablementValue\" class=\"form-control required\"\n                        [(ngModel)]=\"accidentDetails.disablementValue\"\n                        [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['disablementValue'].errors?.required\">\n                      * accidental death and disablement value is required\n                    </p>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['disablementValue'].errors?.max\">\n                      * accidental death and disablement value must be lower than Php2,000,001.00\n                    </p>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['disablementValue'].errors?.min\">\n                      * accidental death and disablement value must be higner than Php9,999.00\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <app-payment-breakdown\n            *ngIf=\"showPaymentBreakdown\"\n            #appPaymentBreakdown\n            [paymentReceipt]=\"paymentReceipt\"\n            [paymentBreakdown]=\"paymentBreakdown\"\n            [showExchangeRate]=\"false\"\n            [loadBreakdown]=\"triggerBreakdown\">\n          </app-payment-breakdown>\n\n          <app-fixed-coverages\n            *ngIf=\"showCoverage\"\n            [line]=\"'accident'\"\n            [coverageList]=\"coverageList\"\n            [loadCoverage]=\"triggerCoverage\">\n          </app-fixed-coverages>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Product</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['product'].invalid \n                    && (quoteForm.controls['product'].dirty \n                    || quoteForm.controls['product'].touched)}\">\n                    <label for=\"product\">Product List</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"product\"\n                      [(ngModel)]=\"accidentDetails.product\"\n                      [attr.disabled]=\"LOV.productListLOV?.length && editMode? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let product of LOV.productListLOV\" [ngValue]=\"product.COD_MODALIDAD\">\n                        {{ product.NOM_MODALIDAD }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['product'].errors?.required\">\n                      * product list is required\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n         <!-- button controls for quotation -->\n         <div *ngIf=\"!isIssuance\">\n          <div *ngIf=\"showGenerateBtn\" class=\"btn-group\" role=\"group\">\n            <button\n              *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Generate</button>\n            <button\n              *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"proceed(1)\">Generate</button>\n          </div>\n          <div *ngIf=\"showIssueQuoteBtn\" class=\"btn-group\" role=\"group\">\n            <button *ngIf=\"!editMode\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"manageBtn(1)\">Edit Details</button>\n            <button\n              *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Issue Quote</button>\n            <button\n              *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"proceed(2)\">Issue Quote</button>\n          </div>\n          <div *ngIf=\"showProceedToIssuanceBtn\" class=\"text-right\">\n            <h5><small>Your quotation number:</small> {{accidentDetails.quotationNumber}}</h5>\n          </div>\n          <div *ngIf=\"showProceedToIssuanceBtn\" class=\"btn-group\" role=\"group\">\n            <button type=\"button\" (click)=\"newQuote()\" class=\"btn btn-primary\">New Quote</button>\n            <button type=\"button\" (click)=\"printQuote()\" class=\"btn btn-primary\">Print Quote</button>\n            <button type=\"button\" (click)=\"proceedToIssuance()\" class=\"btn btn-primary\">Proceed to Issuance</button>\n          </div>\n        </div>\n\n        <!-- button controls for issuance -->\n        <div *ngIf=\"isIssuance\">\n          <div *ngIf=\"(showSaveBtn && withTechControl) || (showPostBtn && withTechControl)\">\n            <div class=\"alert alert-warning note\">\n              <p>\n                <strong>Quotation has tech control!</strong> Unable to issue policy.\n              </p>\n            </div>\n            <!-- .note -->\n            <div class=\"btn-group\" role=\"group\">\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"newQuote()\">New Quote</button>\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"newPolicy()\">New Policy</button>\n            </div>\n          </div>\n\n          <div *ngIf=\"showNewPolicyBtn\">\n            <div class=\"alert alert-danger note\">\n              <p>\n                <strong>Quotation has error!</strong> Unable to issue policy.\n              </p>\n            </div>\n            <!-- .note -->\n            <div class=\"btn-group\" role=\"group\">\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"newQuote()\">New Quote</button>\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"newPolicy()\">New Policy</button>\n            </div>\n          </div>\n\n          <div *ngIf=\"showIssuanceGenerateBtn\" class=\"btn-group\" role=\"group\">\n            <button\n              *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Generate</button>\n            <button\n              *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"proceed(1)\">Generate</button>\n          </div>\n\n          <div *ngIf=\"showSaveBtn && !withTechControl\" class=\"btn-group\" role=\"group\">\n            <button *ngIf=\"!editMode\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"manageBtn(1)\">Edit Details</button>\n            <button\n              *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Save</button>\n            <button\n              *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"proceed(3)\">Save</button>\n          </div>\n\n          <div *ngIf=\"showPostBtn && !withTechControl\" class=\"btn-group\" role=\"group\">\n            <button *ngIf=\"!editMode\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"editMode = !editMode\">Edit Details</button>\n            <button\n              *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Post</button>\n            <button\n              *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n              type=\"button\" class=\"btn btn-primary\"\n              (click)=\"proceed(4)\">Post</button>\n          </div>\n\n          <div *ngIf=\"showPrintBtn\" class=\"text-right\">\n            <h5><small>Your policy number:</small> {{accidentDetails.policyNumber}}</h5>\n          </div>\n          <div *ngIf=\"showPrintBtn\" class=\"btn-group\" role=\"group\">\n            <button type=\"button\" class=\"btn btn-primary\"\n              (click)=\"newPolicy()\">New Policy</button>\n            <button type=\"button\" class=\"btn btn-primary\"\n              (click)=\"printPolicy()\">Print</button>\n          </div>\n        </div>\n\n        <div class=\"clearfix\"></div>\n        </form>\n        <!-- .quote-form -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #quotationAccident -->\n\n<ng-template #proceedModal let-data>\n  <div class=\"mat-dialog-header border-bottom\">\n    <div class=\"header row\">\n      <div class=\"col-md-12\">\n        <h4>Are you sure you want to proceed?</h4>\n      </div>\n    </div>\n  </div>\n  <mat-dialog-content>\n    <br>\n    <h6>You have changes to this following field/s: </h6>\n    <ul>\n      <li *ngFor=\"let item of changedValues\">\n        {{item}}\n      </li>\n    </ul>\n    <h6>Changes may affect your premium and will create a new quotation.</h6>\n  </mat-dialog-content>\n  <div mat-dialog-actions align=\"end\">\n    <div class=\"btn-group\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-primary\" matDialogClose>\n        Cancel\n      </button>\n      <button *ngIf=\"data.generateBtn\" type=\"button\" class=\"btn btn-primary\" matDialogClose (click)=\"issueQuote('S')\">\n        Generate\n      </button>\n      <button *ngIf=\"data.saveBtn\" type=\"button\" class=\"btn btn-primary\" matDialogClose (click)=\"savePolicy()\">\n        Save\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #validationModal let-data>\n  <div class=\"mat-dialog-header border-bottom\">\n    <div class=\"header row\">\n      <div class=\"col-md-12\">\n        <h4>Your application is incomplete</h4>\n      </div>\n    </div>\n  </div>\n  <mat-dialog-content>\n    <br>\n    <h6>You have invalid/empty data to this following field/s: </h6>\n    <ul>\n      <li *ngFor=\"let item of invalidForms\">\n        {{item}}\n      </li>\n    </ul>\n  </mat-dialog-content>\n  <div mat-dialog-actions align=\"end\">\n    <div class=\"btn-group\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-primary\" matDialogClose>\n        Okay\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quotation-car/quotation-car.component.html":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/quotation-car/quotation-car.component.html ***!
  \*************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"quotationCar\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4 class=\"all-caps\">\n        <span class=\"fa-stack fa-md\">\n          <i class=\"fa fa-circle fa-stack-2x\"></i>\n          <i class=\"fa fa-car fa-stack-1x fa-inverse\"></i>\n        </span>\n        {{pageLabel}}\n      </h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-lg-12\">\n    <img class=\"product-img-banner\" src=\"./assets/images/banner/car.jpg\" alt=\"credits to freepik @stories\" />\n  </div>\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\" id=\"topDiv\">\n        <form [formGroup]=\"quoteForm\" class=\"regular-quote-form\">\n\n          <div *ngIf='isIssuance' class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Individual Policy</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-lg-12\">\n                  <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                      <label class=\"input-group-text\" for=\"quotationNumber\">Quotation Number</label>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Quotation Number here..\"\n                      formControlName=\"quotationNumber\" [(ngModel)]=\"carDetails.quotationNumber\">\n                    <div class=\"input-group-append\">\n                      <button [disabled]=\"disableLoadBtn\" class=\"btn btn-outline-secondary\" (click)=\"loadQuotation()\"\n                        type=\"button\">Load</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Vehicle Information</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <h6>Risk Details</h6>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['make'].invalid \n                    && (quoteForm.controls['make'].dirty \n                    || quoteForm.controls['make'].touched)}\">\n                    <label for=\"make\">Make</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"make\"\n                      (change)=\"makeOnchange(); affecting('make', 'Make')\"\n                      [(ngModel)]=\"carDetails.make\"\n                      [attr.disabled]=\"editMode && LOV.makeLOV?.length ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let make of LOV.makeLOV\" [ngValue]=\"make.COD_MARCA\">{{ make.NOM_MARCA }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['make'].errors?.required\">\n                      * make is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['model'].invalid \n                  && (quoteForm.controls['model'].dirty \n                  || quoteForm.controls['model'].touched)}\">\n                    <label for=\"model\">Model</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"model\"\n                      (change)=\"modelOnchange(); affecting('model', 'Model')\"\n                      [(ngModel)]=\"carDetails.model\"\n                      [attr.disabled]=\"editMode && LOV.modelLOV?.length ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let model of LOV.modelLOV\" [ngValue]=\"model.COD_MODELO\">{{ model.NOM_MODELO }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['model'].errors?.required\">\n                      * model is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['vehicleType'].invalid \n                  && (quoteForm.controls['vehicleType'].dirty \n                  || quoteForm.controls['vehicleType'].touched)}\">\n                    <label for=\"vehicleType\">Vehicle Type</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"vehicleType\"\n                      (change)=\"vehicleTypeOnchange(); affecting('vehicleType', 'Vehicle Type')\"\n                      [(ngModel)]=\"carDetails.vehicleType\"\n                      [attr.disabled]=\"editMode && LOV.vehicleTypeLOV?.length ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let vehicleType of LOV.vehicleTypeLOV\" [ngValue]=\"vehicleType.COD_TIP_VEHI\">\n                        {{ vehicleType.NOM_TIP_VEHI }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['vehicleType'].errors?.required\">\n                      * vehicle type is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['modelYear'].invalid \n                  && (quoteForm.controls['modelYear'].dirty \n                  || quoteForm.controls['modelYear'].touched)}\">\n                    <label for=\"modelYear\">Model Year</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"modelYear\"\n                      (change)=\"modelYearOnchange(); affecting('modelYear', 'Model Year')\"\n                      [(ngModel)]=\"carDetails.modelYear\"\n                      [attr.disabled]=\"editMode && LOV.modelYearLOV?.length ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let modelYear of LOV.modelYearLOV\" [ngValue]=\"modelYear.ANIO_SUB_MODELO\">\n                        {{ modelYear.ANIO_SUB_MODELO }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['modelYear'].errors?.required\">\n                      * model year is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['subModel'].invalid \n                  && (quoteForm.controls['subModel'].dirty \n                  || quoteForm.controls['subModel'].touched)}\">\n                    <label for=\"subModel\">Sub Model</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"subModel\"\n                      (change)=\"subModelOnchange(); affecting('subModel', 'Sub Model')\"\n                      [(ngModel)]=\"carDetails.subModel\"\n                      [attr.disabled]=\"editMode && LOV.subModelLOV?.length ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let subModel of LOV.subModelLOV\" [ngValue]=\"subModel.COD_SUB_MODELO\">\n                        {{subModel.NOM_SUB_MODELO + '('+ subModel.TIP_CAJA_CAMBIO+ ') '+ (subModel.NOM_TRACCION == 'UNKNOWN' ? \"\": subModel.NOM_TRACCION)}}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['subModel'].errors?.required\">\n                      * sub model is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['typeOfUse'].invalid \n                  && (quoteForm.controls['typeOfUse'].dirty \n                  || quoteForm.controls['typeOfUse'].touched)}\">\n                    <label for=\"typeOfUse\">Type of Use</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"typeOfUse\"\n                      (change)=\"typeOfUseOnchange(); affecting('typeOfUse', 'Type of Use')\"\n                      [(ngModel)]=\"carDetails.typeOfUse\"\n                      [attr.disabled]=\"editMode && LOV.typeOfUseLOV?.length ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let typeOfUse of LOV.typeOfUseLOV\" [ngValue]=\"typeOfUse.COD_USO_VEHI\">\n                        {{ typeOfUse.NOM_USO_VEHI }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['typeOfUse'].errors?.required\">\n                      * type of use is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['subline'].invalid \n                  && (quoteForm.controls['subline'].dirty \n                  || quoteForm.controls['subline'].touched)}\">\n                    <label for=\"subline\">Subline</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"subline\"\n                      (change)=\"sublineOnchange($event); affecting('subline', 'Subline')\"\n                      [(ngModel)]=\"carDetails.subline\"\n                      [attr.disabled]=\"editMode && LOV.sublineLOV?.length ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let subline of LOV.sublineLOV\" [ngValue]=\"subline.value\"\n                        [attr.data-sublinedate]=\"subline.effectivityDate\">{{ subline.name }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['subline'].errors?.required\">\n                      * subline is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['vehicleValue'].invalid \n                  && (quoteForm.controls['vehicleValue'].dirty \n                  || quoteForm.controls['vehicleValue'].touched)}\">\n                    <label for=\"vehicleValue\">Vehicle Value</label>\n                    <input type=\"text\" formControlName=\"vehicleValue\" class=\"form-control required\"\n                      (change)=\"affecting('vehicleValue', 'Vehicle Value')\"\n                      [(ngModel)]=\"carDetails.vehicleValue\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['vehicleValue'].errors?.required\">\n                      * vehicle value is required\n                    </p>\n                  </div>\n                </div>\n                <div class=\"clearfix\"></div>\n\n                <div class=\"form-divider\"></div>\n                <div class=\"col-xl-12\">\n                  <h6>Vehicle Information</h6>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['color'].invalid \n                    && (quoteForm.controls['color'].dirty \n                    || quoteForm.controls['color'].touched)}\">\n                    <label for=\"color\">Color</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"color\"\n                      [(ngModel)]=\"carDetails.color\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                      <option *ngFor=\"let color of LOV.colorLOV\" [ngValue]=\"color.COD_COLOR\">{{ color.NOM_COLOR }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['color'].errors?.required\">\n                      * color is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['areaOfUsage'].invalid \n                    && (quoteForm.controls['areaOfUsage'].dirty \n                    || quoteForm.controls['areaOfUsage'].touched)}\">\n                    <label for=\"areaOfUsage\">Area of Usage</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"areaOfUsage\"\n                      [(ngModel)]=\"carDetails.areaOfUsage\"\n                      [attr.disabled]=\"editMode && LOV.areaOfUsageLOV?.length ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let areaOfUsage of LOV.areaOfUsageLOV\" [ngValue]=\"areaOfUsage.COD_VALOR\">\n                        {{ areaOfUsage.NOM_VALOR }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['areaOfUsage'].errors?.required\">\n                      * area of usage is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['conductionNumber'].invalid \n                  && (quoteForm.controls['conductionNumber'].dirty \n                  || quoteForm.controls['conductionNumber'].touched)}\">\n                    <label for=\"conductionNumber\">Conduction Number</label>\n                    <input type=\"text\" formControlName=\"conductionNumber\" class=\"form-control\" \n                      [ngClass]=\"{'required' : (carDetails.plateNumber === undefined\n                      || carDetails.plateNumber === null\n                      || carDetails.plateNumber === '')\n                      && carDetails.subline !== 120}\"\n                      [(ngModel)]=\"carDetails.conductionNumber\"\n                      (change)=\"affecting('conductionNumber', 'Conduction Number')\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['conductionNumber'].errors?.required\">\n                      * conduction number is required\n                    </p>\n                    <p class=\"form-error\"\n                      *ngIf=\"quoteForm.controls['conductionNumber'].errors?.invalidConductionNumber\">\n                      * conduction number is invalid\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['plateNumber'].invalid \n                  && (quoteForm.controls['plateNumber'].dirty \n                  || quoteForm.controls['plateNumber'].touched)}\">\n                    <label for=\"plateNumber\">Plate Number</label>\n                    <input type=\"text\" formControlName=\"plateNumber\" class=\"form-control\"\n                      [ngClass]=\"{'required' : (carDetails.conductionNumber === undefined\n                      || carDetails.conductionNumber === null\n                      || carDetails.conductionNumber === '')\n                      && carDetails.subline !== 120}\" \n                      [(ngModel)]=\"carDetails.plateNumber\"\n                      (change)=\"affecting('plateNumber', 'Plate Number')\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode && (LOV.sublineLOV?.length && LOV.modelYearLOV?.length) ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['plateNumber'].errors?.required\">\n                      * plate number is required\n                    </p>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['plateNumber'].errors?.invalidPlateNumber\">\n                      * plate number is invalid\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['serialNumber'].invalid \n                  && (quoteForm.controls['serialNumber'].dirty \n                  || quoteForm.controls['serialNumber'].touched)}\">\n                    <label for=\"serialNumber\">Chassis Number/Serial Number</label>\n                    <input type=\"text\" formControlName=\"serialNumber\" class=\"form-control required\"\n                      [(ngModel)]=\"carDetails.serialNumber\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['serialNumber'].errors?.required\">\n                      * serial number is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['engineNumber'].invalid \n                  && (quoteForm.controls['engineNumber'].dirty \n                  || quoteForm.controls['engineNumber'].touched)}\">\n                    <label for=\"engineNumber\">Motor Number/Engine Number</label>\n                    <input type=\"text\" formControlName=\"engineNumber\" class=\"form-control required\"\n                      [(ngModel)]=\"carDetails.engineNumber\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['engineNumber'].errors?.required\">\n                      * engine number is required\n                    </p>\n                  </div>\n                </div>\n\n                <!-- <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['mvFileNumber'].invalid \n                    && (quoteForm.controls['mvFileNumber'].dirty \n                    || quoteForm.controls['mvFileNumber'].touched)}\">\n                    <label for=\"mvFileNumber\">MV File Number</label>\n                    <input type=\"text\" formControlName=\"mvFileNumber\" class=\"form-control {{isIssuance ? 'required' : ''}}\"\n                      [(ngModel)]=\"carDetails.mvFileNumber\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                      <p class=\"form-error\" *ngIf=\"quoteForm.controls['mvFileNumber'].errors?.required\">\n                        * MV File Number is required\n                      </p>\n                  </div>\n                </div> -->\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\">\n                    <label for=\"mvFileNumber\">MV File Number</label>\n                    <input type=\"text\" formControlName=\"mvFileNumber\" class=\"form-control\"\n                      [(ngModel)]=\"carDetails.mvFileNumber\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\">\n                    <label for=\"purchaseDate\">Purchase Date</label>\n                    <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control\" [maxDate]=\"today\"\n                      formControlName=\"purchaseDate\" [(ngModel)]=\"carDetails.purchaseDate\"\n                      [attr.disabled]=\"editMode ? null : true\"\n                      bsDatepicker>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['receivedBy'].invalid \n                  && (quoteForm.controls['receivedBy'].dirty \n                  || quoteForm.controls['receivedBy'].touched)}\">\n                    <label for=\"receivedBy\">Received By</label>\n                    <input type=\"text\" formControlName=\"receivedBy\" class=\"form-control required\"\n                      [(ngModel)]=\"carDetails.receivedBy\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['receivedBy'].errors?.required\">\n                      * received by is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['receivedDate'].invalid \n                      && (quoteForm.controls['receivedDate'].dirty \n                      || quoteForm.controls['receivedDate'].touched)}\">\n                    <label for=\"receivedDate\">Received Date</label>\n                    <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\" [maxDate]=\"today\"\n                      formControlName=\"receivedDate\" [(ngModel)]=\"carDetails.receivedDate\"\n                      [attr.disabled]=\"editMode ? null : true\"\n                      bsDatepicker>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['receivedDate'].errors?.required\">\n                      * received date is required\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <app-policy-holder\n            #appPolicyHolder\n            [title]=\"'Policy Holder Information'\"\n            [showCreateBtn]=\"true\"\n            [details]=\"carDetails\"\n            [(policyHolder)]=\"policyHolder\"\n            [compareTo]=\"assigneePolicyHolder\"\n            [isIssuance]=\"isIssuance\"\n            [editMode]=\"editMode\"\n            [type]=\"'primary'\"\n            [optional]=\"false\"\n            [loadQuotation]=\"triggerCounter\">\n          </app-policy-holder>\n\n          <app-policy-holder\n            *ngIf=\"isIssuance\"\n            [title]=\"'Alternative Policy Holder (Optional)'\"\n            [showCreateBtn]=\"true\"\n            [details]=\"carDetails\"\n            [(policyHolder)]=\"secondaryPolicyHolder\"\n            [isIssuance]=\"isIssuance\"\n            [editMode]=\"editMode\"\n            [type]=\"'secondary'\"\n            [optional]=\"true\">\n          </app-policy-holder>\n\n          <app-group-policy\n            #appGroupPolicy\n            [subline]=\"carDetails.subline\"\n            [prevDetails]=\"prevCarDetails\"\n            [groupPolicy]=\"groupPolicy\"\n            [editMode]=\"editMode\"\n            [showExpiring]=\"true\"\n            [(changedValues)]=\"changedValues\"\n            [loadQuotation]=\"triggerCounter\">\n          </app-group-policy>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>General Information</strong>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <h6>Movement Dates</h6>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['effectivityDate'].invalid \n                    && (quoteForm.controls['effectivityDate'].dirty \n                    || quoteForm.controls['effectivityDate'].touched)}\">\n                    <label for=\"effectivityDate\">Effectivity Date</label>\n                    <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\"\n                      (bsValueChange)=\"affecting('effectivityDate', 'Effectivity Date')\"\n                      formControlName=\"effectivityDate\"\n                      [(ngModel)]=\"carDetails.effectivityDate\"\n                      [attr.disabled]=\"editMode ? null : true\"\n                      bsDatepicker>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['effectivityDate'].errors?.required\">\n                      * effectivity date is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['expiryDate'].invalid \n                    && (quoteForm.controls['expiryDate'].dirty \n                    || quoteForm.controls['expiryDate'].touched)}\">\n                    <label for=\"expiryDate\">Expiry Date</label>\n                    <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\"\n                      [minDate]=\"expiryDateMinDate\"\n                      (bsValueChange)=\"affecting('expiryDate', 'Expirty Date')\"\n                      formControlName=\"expiryDate\"\n                      [(ngModel)]=\"carDetails.expiryDate\"\n                      [attr.disabled]=\"editMode ? null : true\"\n                      bsDatepicker>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['expiryDate'].errors?.required\">\n                      * expiry date is required\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header d-flex justify-content-between optional\"\n              (click)=\"showAccessories = !showAccessories\" matTooltip=\"click to show/hide accessories\">\n              <strong>Accessories (Optional)</strong>\n              <div class=\"dropdown no-arrow\">\n                <i class=\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\"></i>\n              </div>\n            </div>\n            <div class=\"card-body\" *ngIf=\"showAccessories\">\n\n              <div formArrayName=\"accessories\">\n                <div *ngFor=\"let accessories of quoteForm.get('accessories')['controls']; let i=index\">\n                  <div [formGroupName]=\"i\" class=\"card accessory-card\">\n                    <div class=\"card-body\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-10 col-md-9\">\n                          <div class=\"row\">\n                            <div class=\"col-md-4\">\n                              <div class=\"form-group\" [ngClass]=\"{'input-error': accessories.controls['accessory'].invalid \n                                && (accessories.controls['accessory'].dirty \n                                || accessories.controls['accessory'].touched)}\">\n                                <label for=\"accessory\">Accessory List</label>\n                                <select class=\"custom-select mr-sm-2 required\" formControlName=\"accessory\"\n                                  (change)=\"accessoryOnchange($event, i)\"\n                                  [attr.disabled]=\"editMode ? null : true\">\n                                  <option *ngFor=\"let accessoryList of LOV.accessoryListLOV\"\n                                    [ngValue]=\"accessoryList.COD_ACCESORIO\"\n                                    [attr.disabled]=\"accessoryList.disabled ? '' : null\"\n                                    [attr.data-price]=\"accessoryList.IMP_ACCESORIO\"\n                                    [attr.data-type]=\"accessoryList.ABR_AGRUP_ACCESORIO\">\n                                    {{ accessoryList.NOM_ACCESORIO }}\n                                    ( {{ \n                                      accessoryList.ABR_AGRUP_ACCESORIO == 'A' ? 'Additional' :\n                                      accessoryList.ABR_AGRUP_ACCESORIO == 'B' ? 'Built-in' : 'Free'\n                                    }} )</option>\n                                </select>\n                                <p class=\"form-error\" *ngIf=\"accessories.controls['accessory'].errors?.required\">\n                                  * accessory list is required\n                                </p>\n                              </div>\n                            </div>\n\n                            <div class=\"col-md-4\">\n                              <div class=\"form-group\" [ngClass]=\"{'input-error': accessories.controls['accessoryType'].invalid \n                                && (accessories.controls['accessoryType'].dirty \n                                || accessories.controls['accessoryType'].touched)}\">\n                                <label for=\"accessoryType\">Accessory Type</label>\n                                <input type=\"text\" formControlName=\"accessoryType\" class=\"form-control required\"\n                                  readonly>\n                                <p class=\"form-error\" *ngIf=\"accessories.controls['accessoryType'].errors?.required\">\n                                  * accessory type is required\n                                </p>\n                              </div>\n                            </div>\n\n                            <div class=\"col-md-4\">\n                              <div class=\"form-group\" [ngClass]=\"{'input-error': accessories.controls['price'].invalid \n                                && (accessories.controls['price'].dirty \n                                || accessories.controls['price'].touched)}\">\n                                <label for=\"price\">Price</label>\n                                <input type=\"number\"  class=\"form-control required\"\n                                  formControlName=\"price\"\n                                  [attr.disabled]=\"editMode ? null : true\">\n                                <p class=\"form-error\" *ngIf=\"accessories.controls['price'].errors?.required\">\n                                  * price is required\n                                </p>\n                              </div>\n                            </div>\n\n                            <div class=\"col-md-12\">\n                              <div class=\"form-group\" [ngClass]=\"{'input-error': accessories.controls['description'].invalid \n                                && (accessories.controls['description'].dirty \n                                || accessories.controls['description'].touched)}\">\n                                <label for=\"description\">Description</label>\n                                <textarea type=\"text\" formControlName=\"description\"\n                                  class=\"form-control required\"\n                                  [attr.disabled]=\"editMode ? null : true\"></textarea>\n                                <p class=\"form-error\" *ngIf=\"accessories.controls['description'].errors?.required\">\n                                  * description is required\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"col-lg-2 col-md-3\">\n                          <div *ngIf=\"editMode\" class=\"btn-group\">\n                            <button class=\"btn btn-primary\" (click)=\"removeAccessory(i)\">Remove</button>\n                          </div>\n                        </div>\n\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"btn-group\">\n                <button [disabled]=\"!editMode || quoteForm.get('accessories').status !== 'VALID' || !carDetails.subline\"\n                  type=\"button\" (click)=\"addAccessory()\" class=\"btn btn-primary\">Add Accessory</button>\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header d-flex justify-content-between optional\"\n              (click)=\"showAdditionalInformation = !showAdditionalInformation\"\n              matTooltip=\"click to show/hide additional policy information\">\n              <strong>Additional Policy Information (Optional)</strong>\n              <div class=\"dropdown no-arrow\">\n                <i class=\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\"></i>\n              </div>\n            </div>\n            <div class=\"card-body\" *ngIf=\"showAdditionalInformation\">\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <h6>Additional Vehicle Information</h6>\n                </div>\n\n                <div class=\"col-lg-9\">\n                  <div class=\"form-group\">\n                    <label for=\"customRiskName\">Custom Risk Name</label>\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"carDetails.customRiskName\"\n                      formControlName=\"customRiskName\">\n                  </div>\n                </div>\n\n                <div class=\"clearfix\"></div>\n\n                <div class=\"col-md-3\">\n                  <div class=\"form-group\">\n                    <label for=\"seatingCapacity\">Seating Capacity</label>\n                    <input type=\"number\" class=\"form-control\"\n                      (change)=\"affecting('seatingCapacity', 'Seating Capacity')\"\n                      [(ngModel)]=\"carDetails.seatingCapacity\"\n                      formControlName=\"seatingCapacity\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\">\n                  <div class=\"form-group\">\n                    <label for=\"weight\">Weight</label>\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"carDetails.weight\" formControlName=\"weight\"\n                      readonly>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\">\n                  <div class=\"form-group\">\n                    <label for=\"displacement\">Displacement</label>\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"carDetails.displacement\"\n                      formControlName=\"displacement\" readonly>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\">\n                  <div class=\"form-group\">\n                    <label for=\"classification\">Classification</label>\n                    <select class=\"custom-select mr-sm-2\" formControlName=\"classification\"\n                      [(ngModel)]=\"carDetails.classification\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let classification of LOV.classificationLOV\"\n                        [ngValue]=\"classification.TIP_VEHI_PESO\">{{ classification.NOM_VALOR }}</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label for=\"price\">Coverage Area</label>\n                    <select class=\"custom-select mr-sm-2\" formControlName=\"coverageArea\"\n                      (change)=\"affecting('coverageArea', 'Coverage Area')\"\n                      [(ngModel)]=\"carDetails.coverageArea\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let coverageArea of LOV.coverageAreaLOV\" [ngValue]=\"coverageArea.COD_AREA_COVER\">\n                        {{ coverageArea.NOM_VALOR }}</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['assuredsCoinsuranceShare'].invalid \n                  && (quoteForm.controls['assuredsCoinsuranceShare'].dirty \n                  || quoteForm.controls['assuredsCoinsuranceShare'].touched)}\">\n                    <label for=\"assuredCoinsuranceShare\">Assured's Coinsurance Share</label>\n                    <input type=\"number\" class=\"form-control\" [(ngModel)]=\"carDetails.assuredsCoinsuranceShare\"\n                      formControlName=\"assuredsCoinsuranceShare\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['assuredsCoinsuranceShare'].errors?.max\">\n                      * assured's coinsurance share max value is 100\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\">\n                    <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"checkbox\" id=\"cbWaivedMinPremium\"\n                        (change)=\"affecting('cbWaivedMinPremium', 'Waived Min. Premium')\"\n                        [(ngModel)]=\"carDetails.cbWaivedMinPremium\"\n                        formControlName=\"cbWaivedMinPremium\"\n                        [attr.disabled]=\"editMode ? null : true\">\n                      <label class=\"form-check-label\" for=\"cbWaivedMinPremium\">\n                        Waived Min. Premium\n                      </label>\n                    </div>\n                  </div>\n                </div>\n\n                <div *ngIf=\"isIssuance\" class=\"col-xl-12\">\n                  <div class=\"row\">\n\n                    <div class=\"form-divider\"></div>\n\n                    <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                      <div class=\"form-group\">\n                        <div class=\"form-check\">\n                          <input class=\"form-check-input\" type=\"checkbox\" id=\"cbPolicyOnlyDriver\"\n                            [(ngModel)]=\"carDetails.cbPolicyOnlyDriver\" formControlName=\"cbPolicyOnlyDriver\"\n                            [attr.disabled]=\"editMode ? null : true\">\n                          <label class=\"form-check-label\" for=\"cbPolicyOnlyDriver\">\n                            Is the Policy Holder the only Driver?\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n    \n                    <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                      <div class=\"form-group\">\n                        <div class=\"form-check\">\n                          <input class=\"form-check-input\" type=\"checkbox\" id=\"cbPolicyOwner\"\n                            [(ngModel)]=\"carDetails.cbPolicyOwner\" formControlName=\"cbPolicyOwner\"\n                            [attr.disabled]=\"editMode ? null : true\">\n                          <label class=\"form-check-label\" for=\"cbPolicyOwner\">\n                            Is the Policy Holder the Owner?\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n    \n                    <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                      <div class=\"form-group\">\n                        <div class=\"form-check\">\n                          <input class=\"form-check-input\" type=\"checkbox\" id=\"cbHasAssignee\"\n                            [(ngModel)]=\"carDetails.cbHasAssignee\"\n                            formControlName=\"cbHasAssignee\"\n                            (change)=\"showAssignee = !showAssignee\"\n                            [attr.disabled]=\"editMode ? null : true\">\n                          <label class=\"form-check-label\" for=\"cbHasAssignee\">\n                            Has Assignee?\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n    \n                    <div class=\"form-divider\"></div>\n    \n                    <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                      <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['mortgageClause'].invalid \n                      && (quoteForm.controls['mortgageClause'].dirty \n                      || quoteForm.controls['mortgageClause'].touched)}\">\n                        <div class=\"form-check\">\n                          <input class=\"form-check-input\" type=\"checkbox\" id=\"cbVehicleMortgaged\"\n                            [(ngModel)]=\"carDetails.cbVehicleMortgaged\"\n                            formControlName=\"cbVehicleMortgaged\"\n                            (change)=\"showMortgagee = !showMortgagee\"\n                            [attr.disabled]=\"editMode ? null : true\">\n                          <label class=\"form-check-label\" for=\"cbVehicleMortgaged\">\n                            Vehicle Mortgaged\n                          </label>\n                        </div>\n                        <label class=\"form-check-label\" for=\"mortgageClause\">\n                          Mortgage Clause\n                        </label>\n                        <select class=\"custom-select mr-sm-2 required\" formControlName=\"mortgageClause\"\n                          [attr.disabled]=\"editMode && carDetails.cbVehicleMortgaged ? null : ''\"\n                          [(ngModel)]=\"carDetails.mortgageClause\">\n                          <option></option>\n                          <option *ngFor=\"let mortgageClause of LOV.mortgageClauseLOV\"\n                            [ngValue]=\"mortgageClause.TIP_MORT_CLAUSE\">{{ mortgageClause.NOM_VALOR }}</option>\n                        </select>\n                        <p class=\"form-error\" *ngIf=\"quoteForm.controls['mortgageClause'].errors?.required\">\n                          * mortgage clause is required\n                        </p>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n\n                <div class=\"form-divider\"></div>\n                <div class=\"col-xl-12\">\n                  <h6>Other Details</h6>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\">\n                    <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"checkbox\" id=\"cbGlassEtchingEntitled\"\n                        [(ngModel)]=\"carDetails.cbGlassEtchingEntitled\" formControlName=\"cbGlassEtchingEntitled\"\n                        [attr.disabled]=\"editMode ? null : true\">\n                      <label class=\"form-check-label\" for=\"cbGlassEtchingEntitled\">\n                        Glass Etching Entitled\n                      </label>\n                    </div>\n                    <label class=\"form-check-label\" for=\"glassEtchingAvailmentDate\">\n                      Glass Etching Availment Date\n                    </label>\n                    <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\" [minDate]=\"today\"\n                      [attr.disabled]=\"editMode && carDetails.cbGlassEtchingEntitled ? null : ''\"\n                      formControlName=\"glassEtchingAvailmentDate\" [(ngModel)]=\"carDetails.glassEtchingAvailmentDate\"\n                      bsDatepicker>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\">\n                    <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"checkbox\" id=\"cbPrepaidPremium\"\n                        [(ngModel)]=\"carDetails.cbPrepaidPremium\" formControlName=\"cbPrepaidPremium\"\n                        [attr.disabled]=\"editMode ? null : true\">\n                      <label class=\"form-check-label\" for=\"cbPrepaidPremium\">\n                        Prepaid Premium\n                      </label>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-divider\"></div>\n                <div class=\"col-xl-12\">\n                  <h6>Inspection Details</h6>\n                </div>\n\n                <div class=\"col-xl-12\">\n                  <div class=\"alert alert-info note\">\n                    <p><strong>Important Reminder:</strong> Only fill up the following details when advised by the\n                      UNDERWRITER.\n                    </p>\n                  </div>\n                  <!-- .note -->\n                </div>\n\n                <div class=\"col-md-8\">\n                  <div class=\"form-group\">\n                    <label for=\"existingDamages\">Existing Damages</label>\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"carDetails.existingDamages\"\n                      formControlName=\"existingDamages\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                  </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\">\n                    <label for=\"price\">Inspection Assessment</label>\n                    <select class=\"custom-select mr-sm-2\" formControlName=\"inspectionAssessment\"\n                      [(ngModel)]=\"carDetails.inspectionAssessment\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let inspectionAssessment of LOV.inspectionAssessmentLOV\"\n                        [ngValue]=\"inspectionAssessment.COD_VALOR\">{{ inspectionAssessment.NOM_VALOR }}</option>\n                    </select>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <app-policy-holder\n            *ngIf=\"isIssuance && showAssignee\"\n            [title]=\"'Assignee Policy Holder Information'\"\n            [showCreateBtn]=\"true\"\n            [details]=\"carDetails\"\n            [(policyHolder)]=\"assigneePolicyHolder\"\n            [compareTo]=\"policyHolder\"\n            [isIssuance]=\"isIssuance\"\n            [editMode]=\"editMode\"\n            [type]=\"'assignee'\"\n            [optional]=\"false\">\n          </app-policy-holder>\n\n          <app-policy-holder\n            *ngIf=\"isIssuance && showMortgagee\"\n            [title]=\"'Mortgagee Policy Holder Information'\"\n            [showCreateBtn]=\"false\"\n            [details]=\"carDetails\"\n            [(policyHolder)]=\"mortgageePolicyHolder\"\n            [isIssuance]=\"isIssuance\"\n            [editMode]=\"editMode\"\n            [type]=\"'mortgagee'\"\n            [optional]=\"false\">\n          </app-policy-holder>\n\n          <div *ngIf='isIssuance' class=\"card shadow mb-3\">\n            <div class=\"card-header d-flex justify-content-between optional\" (click)=\"showSubAgent = !showSubAgent\"\n              matTooltip=\"click to show/hide subagents\">\n              <strong>Subagent (Optional)</strong>\n              <div class=\"dropdown no-arrow\">\n                <i class=\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\"></i>\n              </div>\n            </div>\n            <div class=\"card-body\" *ngIf=\"showSubAgent\">\n              <div class=\"row\">\n                <div class=\"col-sm-6\">\n                  <h6>Subagent List</h6>\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['subAgents'].invalid \n                      && (quoteForm.controls['subAgents'].dirty \n                      || quoteForm.controls['subAgents'].touched)}\">\n                    <ng-select [items]=\"LOV.subagentLOV\" bindLabel=\"name\" placeholder=\"Select Subagent\" appendTo=\"body\"\n                      formControlName=\"subAgents\" multiple=\"true\" [(ngModel)]=\"carDetails.subAgents\">\n                    </ng-select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['subAgents'].errors?.required\">\n                      * subagent is required\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div *ngIf=\"isIssuance && showCTPL\" class=\"card shadow mb-3\" id=\"CTPLAuth\">\n            <!-- <div *ngIf=\"isIssuance\" class=\"card shadow mb-3\" id=\"CTPLAuth\"> -->\n            <div class=\"card-header\">\n              <strong>CTPL Authentication (for products with CTPL)</strong>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-lg-4 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['automaticAuth'].invalid \n                    && (quoteForm.controls['automaticAuth'].dirty \n                    || quoteForm.controls['automaticAuth'].touched)}\">\n                    <label for=\"automaticAuth\">Automatic Authentication</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"automaticAuth\"\n                      [(ngModel)]=\"carDetails.automaticAuth\">\n                      <option value=\"S\">YES</option>\n                      <option value=\"N\">NO</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['automaticAuth'].errors?.required\">\n                      * automatic authentication is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-4 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['registrationType'].invalid \n                    && (quoteForm.controls['registrationType'].dirty \n                    || quoteForm.controls['registrationType'].touched)}\">\n                    <label for=\"registrationType\">Registration Type</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"registrationType\"\n                      [(ngModel)]=\"carDetails.registrationType\">\n                      <option selected></option>\n                      <option *ngFor=\"let rType of LOV.registrationTypeLOV\" [ngValue]=\"rType.COD_VALOR\">\n                        {{ rType.NOM_VALOR }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['registrationType'].errors?.required\">\n                      * registration type is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-4 col-md-4 col-sm-6\">\n                  <div class=\"form-group\">\n                    <label for=\"mvType\">MV Type (leave blank to set default value)</label>\n                    <select class=\"custom-select mr-sm-2\" formControlName=\"mvType\" [(ngModel)]=\"carDetails.mvType\">\n                      <option selected></option>\n                      <option *ngFor=\"let mv of LOV.mvTypeLOV\" [ngValue]=\"mv.COD_VALOR\">{{ mv.NOM_VALOR }}</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-4 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['cocNumber'].invalid \n                  && (quoteForm.controls['cocNumber'].dirty \n                  || quoteForm.controls['cocNumber'].touched)}\">\n                    <label for=\"cocNumber\">COC Number</label>\n                    <input type=\"text\" formControlName=\"cocNumber\" class=\"form-control required\"\n                      [(ngModel)]=\"carDetails.cocNumber\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['cocNumber'].errors?.required\">\n                      * coc number is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-sm-8\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['authNumber'].invalid \n                    && (quoteForm.controls['authNumber'].dirty \n                    || quoteForm.controls['authNumber'].touched)}\">\n                    <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"checkbox\" id=\"cbIsNotRequiredAuthNumber\"\n                        formControlName=\"cbIsNotRequiredAuthNumber\" [(ngModel)]=\"carDetails.cbIsNotRequiredAuthNumber\"\n                        (change)=\"cbIsNotRequiredAuthNumberChange()\">\n                      <label class=\"form-check-label\" for=\"cbIsNotRequiredAuthNumber\">\n                        Do not require Authentication Number\n                      </label>\n                    </div>\n                    <label class=\"form-check-label\" for=\"cbIsNotRequiredAuthNumber\">\n                      Authentication Number (ISAP Authentication)\n                    </label>\n                    <div class=\"input-group mb-3\">\n                      <input type=\"text\" formControlName=\"authNumber\"\n                        [attr.disabled]=\"carDetails.cbIsNotRequiredAuthNumber ? '' : null\" class=\"form-control required\"\n                        [(ngModel)]=\"carDetails.authNumber\">\n                      <div class=\"input-group-append\">\n                        <button (click)=\"authCOCRegistration()\" [attr.disabled]=\"carDetails.cbIsNotRequiredAuthNumber ? '' : null\"\n                          class=\"btn btn-primary\" type=\"button\">Authenticate</button>\n                      </div>\n                      <p class=\"form-error\" *ngIf=\"quoteForm.controls['authNumber'].errors?.required\">\n                        * authentication number is required\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- cannot use reference variable and ngIf -->\n          <app-coverages\n            *ngIf=\"showCoverage\"\n            [carDetails]=\"carDetails\"\n            [(showCTPL)]=\"showCTPL\"\n            [quoteForm]=\"quoteForm\"\n            [coverageList]=\"coverageList\"\n            [coverageVariable]=\"coverageVariable\"\n            [amountList]=\"amountList\"\n            [premiumAmount]=\"premiumAmount\"\n            [coverageAmount]=\"coverageAmount\"\n            [coverageVariableData]=\"coverageVariableData\"\n            [isModifiedCoverage]=\"isModifiedCoverage\"\n            [isIssuance]=\"isIssuance\"\n            [hasRoadAssist]=\"hasRoadAssist\"\n            [loadCoverage]=\"triggerCoverage\">\n          </app-coverages>\n\n          <app-payment-breakdown\n            *ngIf=\"showPaymentBreakdown\"\n            #appPaymentBreakdown\n            [paymentReceipt]=\"paymentReceipt\"\n            [paymentBreakdown]=\"paymentBreakdown\"\n            [showExchangeRate]=\"false\"\n            [loadBreakdown]=\"triggerBreakdown\">\n          </app-payment-breakdown>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Product</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <h6>Product Data</h6>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['paymentMethod'].invalid \n                        && (quoteForm.controls['paymentMethod'].dirty \n                        || quoteForm.controls['paymentMethod'].touched)}\">\n                    <label for=\"paymentMethod\">Payment Method</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"paymentMethod\"\n                      [(ngModel)]=\"carDetails.paymentMethod\"\n                      (change)=\"affecting('paymentMethod', 'Payment Method')\"\n                      [attr.disabled]=\"editMode && LOV.paymentMethodLOV?.length ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let paymentMethod of LOV.paymentMethodLOV\"\n                        [ngValue]=\"paymentMethod.COD_FRACC_PAGO\">\n                        {{ paymentMethod.NOM_FRACC_PAGO }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['paymentMethod'].errors?.required\">\n                      * payment method is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['product'].invalid \n                        && (quoteForm.controls['product'].dirty \n                        || quoteForm.controls['product'].touched)}\">\n                    <label for=\"product\">Product List</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"product\"\n                      [(ngModel)]=\"carDetails.productList\"\n                      (change)=\"affecting('productList', 'Product List')\"\n                      [attr.disabled]=\"editMode && LOV.productListLOV?.length ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let product of LOV.productListLOV\" [ngValue]=\"product.COD_MODALIDAD\">\n                        {{ product.NOM_MODALIDAD }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['product'].errors?.required\">\n                      * product list is required\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <div *ngIf=\"secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined\" class=\"alert alert-warning note\">\n            <p>\n              <strong>Required:</strong> You need to fill out Alternative Policy holder <strong>Separator</strong>.\n              Scroll to <button class=\"btn btn-warning\" (click)=\"scrollTo('secondary_panel')\">Alternative</button>\n            </p>\n          </div>\n          <!-- .note -->\n\n          <div *ngIf=\"carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')\" class=\"alert alert-warning note\">\n            <p>\n              <strong>Required:</strong> You are required to add <strong>Assignee</strong>.\n              Scroll to <button class=\"btn btn-warning\" (click)=\"scrollTo('assignee_panel')\">Assignee</button>\n            </p>\n          </div>\n          <!-- .note -->\n\n          <div *ngIf=\"carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == '')\" class=\"alert alert-warning note\">\n            <p>\n              <strong>Required:</strong> You are required to add <strong>Mortgagee</strong>. \n              Scroll to <button class=\"btn btn-warning\" (click)=\"scrollTo('mortgagee_panel')\">Mortgagee</button>\n            </p>\n          </div>\n          <!-- .note -->\n\n          <!-- button controls for quotation -->\n          <div *ngIf=\"!isIssuance\">\n            <div *ngIf=\"showGenerateBtnGrp\" class=\"btn-group\" role=\"group\">\n              <button *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Generate</button>\n              <button *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\" (click)=\"proceed(1)\">Generate</button>\n            </div>\n  \n            <div *ngIf=\"showIssueQuoteBtnGrp\" class=\"btn-group\" role=\"group\">\n              <button *ngIf=\"!editMode\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"manageBtn(1)\">Edit Details</button>\n              <button type=\"button\" class=\"btn btn-primary\"\n                (click)=\"manageBtn(1, true)\">Edit Coverage</button>\n              <button\n                [disabled]=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"proceed(2)\">Issue Quote</button>\n            </div>\n  \n            <div *ngIf=\"showProceedToIssuanceBtnGrp\" class=\"text-right\">\n              <h5><small>Your quotation number:</small> {{carDetails.quotationNumber}}</h5>\n            </div>\n            <div *ngIf=\"showProceedToIssuanceBtnGrp\" class=\"btn-group\" role=\"group\">\n              <button type=\"button\" (click)=\"newQuote()\" class=\"btn btn-primary\">New Quote</button>\n              <button type=\"button\" (click)=\"printQuote()\" class=\"btn btn-primary\">Print Quote</button>\n              <button type=\"button\" (click)=\"proceedToIssuance()\" class=\"btn btn-primary\">Proceed to Issuance</button>\n            </div>\n          </div>\n\n          <!-- button controls for issuance -->\n          <div *ngIf=\"isIssuance\">\n            <div *ngIf=\"(showSaveBtn && withTechControl) || (showPostBtn && withTechControl)\">\n              <div class=\"alert alert-warning note\">\n                <p>\n                  <strong>Quotation has tech control!</strong> Unable to issue policy.\n                </p>\n              </div>\n              <!-- .note -->\n              <div class=\"btn-group\" role=\"group\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"newQuote()\">New Quote</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"newPolicy()\">New Policy</button>\n              </div>\n            </div>\n\n            <div *ngIf=\"showNewPolicyBtn\">\n              <div class=\"alert alert-danger note\">\n                <p>\n                  <strong>Quotation has error!</strong> Unable to issue policy.\n                </p>\n              </div>\n              <!-- .note -->\n              <div class=\"btn-group\" role=\"group\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"newQuote()\">New Quote</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"newPolicy()\">New Policy</button>\n              </div>\n            </div>\n\n            <div *ngIf=\"showIssuanceGenerateBtn\" class=\"btn-group\" role=\"group\">\n              <button \n                *ngIf=\"\n                  quoteForm.invalid ||\n                  appGroupPolicy.gpForm.invalid ||\n                  appPolicyHolder.phForm.invalid ||\n                  (secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) ||\n                  (carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) ||\n                  (carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\"\n                type=\"button\"\n                class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">\n                  Generate\n              </button>\n              <button \n                *ngIf=\"\n                  !quoteForm.invalid &&\n                  !appGroupPolicy.gpForm.invalid &&\n                  !appPolicyHolder.phForm.invalid &&\n                  !(secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) &&\n                  !(carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) &&\n                  !(carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\"\n                type=\"button\"\n                class=\"btn btn-primary\"\n                (click)=\"proceed(1)\">\n                  Generate\n              </button>\n            </div>\n\n            <div *ngIf=\"showSaveBtn && !withTechControl\" class=\"btn-group\" role=\"group\">\n              <button *ngIf=\"!editMode\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"manageBtn(1)\">Edit Details</button>\n              <button type=\"button\" class=\"btn btn-primary\"\n                (click)=\"manageBtn(1, true)\">Edit Coverage</button>\n              <button \n                *ngIf=\"\n                  quoteForm.invalid ||\n                  appGroupPolicy.gpForm.invalid ||\n                  appPolicyHolder.phForm.invalid ||\n                  (secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) ||\n                  (carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) ||\n                  (carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\"\n                type=\"button\"\n                class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">\n                  Save\n              </button>\n              <button \n                *ngIf=\"\n                  !quoteForm.invalid &&\n                  !appGroupPolicy.gpForm.invalid &&\n                  !appPolicyHolder.phForm.invalid &&\n                  !(secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) &&\n                  !(carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) &&\n                  !(carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\"\n                type=\"button\"\n                class=\"btn btn-primary\"\n                (click)=\"proceed(3)\">\n                Save\n              </button>\n            </div>\n\n            <div *ngIf=\"showPostBtn && !withTechControl\" class=\"btn-group\" role=\"group\">\n              <button *ngIf=\"!editMode\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"editMode = !editMode\">Edit Details</button>\n              <button \n                *ngIf=\"\n                  quoteForm.invalid ||\n                  appGroupPolicy.gpForm.invalid ||\n                  appPolicyHolder.phForm.invalid ||\n                  (secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) ||\n                  (carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) ||\n                  (carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\"\n                type=\"button\"\n                class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">\n                  Post\n              </button>\n              <button \n                *ngIf=\"\n                  !quoteForm.invalid &&\n                  !appGroupPolicy.gpForm.invalid &&\n                  !appPolicyHolder.phForm.invalid &&\n                  !(secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) &&\n                  !(carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) &&\n                  !(carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\"\n                type=\"button\"\n                class=\"btn btn-primary\"\n                (click)=\"proceed(4)\">\n                Post\n              </button>\n            </div>\n\n            <div *ngIf=\"showPrintBtn\" class=\"text-right\">\n              <h5><small>Your policy number:</small> {{carDetails.policyNumber}}</h5>\n            </div>\n            <div *ngIf=\"showPrintBtn\" class=\"btn-group\" role=\"group\">\n              <button type=\"button\" class=\"btn btn-primary\"\n                (click)=\"newPolicy()\">New Policy</button>\n              <button type=\"button\" class=\"btn btn-primary\"\n                (click)=\"printPolicy()\">Print</button>\n            </div>\n          </div>\n\n        </form>\n        <!-- .regular-quote-form -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #quotationCar -->\n\n<ng-template #proceedModal let-data>\n  <div class=\"mat-dialog-header border-bottom\">\n    <div class=\"header row\">\n      <div class=\"col-md-12\">\n        <h4>Are you sure you want to proceed?</h4>\n      </div>\n    </div>\n  </div>\n  <mat-dialog-content>\n    <br>\n    <h6>You have changes to this following field/s: </h6>\n    <ul>\n      <li *ngFor=\"let item of changedValues\">\n        {{item}}\n      </li>\n\n      <li *ngFor=\"let item of changedAccessoryValues\">\n        {{item}}\n      </li>\n    </ul>\n    <h6>Changes may affect your premium and will create a new quotation.</h6>\n  </mat-dialog-content>\n  <div mat-dialog-actions align=\"end\">\n    <div class=\"btn-group\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-primary\" matDialogClose>\n        Cancel\n      </button>\n      <button *ngIf=\"data.generateBtn\" type=\"button\" class=\"btn btn-primary\" matDialogClose (click)=\"issueQuote('S')\">\n        Generate\n      </button>\n      <button *ngIf=\"data.saveBtn\" type=\"button\" class=\"btn btn-primary\" matDialogClose (click)=\"savePolicy()\">\n        Save\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #validationModal let-data>\n  <div class=\"mat-dialog-header border-bottom\">\n    <div class=\"header row\">\n      <div class=\"col-md-12\">\n        <h4>Your application is incomplete</h4>\n      </div>\n    </div>\n  </div>\n  <mat-dialog-content>\n    <br>\n    <h6>You have invalid/empty data to this following field/s: </h6>\n    <ul>\n      <li *ngFor=\"let item of invalidForms\">\n        {{item}}\n      </li>\n      <li *ngIf=\"secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined\">\n        Alternative Policy holder Separator\n      </li>\n      <li *ngIf=\"carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')\">\n        Assignee\n      </li>\n      <li *ngIf=\"carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == '')\">\n        Mortgagee\n      </li>\n    </ul>\n  </mat-dialog-content>\n  <div mat-dialog-actions align=\"end\">\n    <div class=\"btn-group\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-primary\" matDialogClose>\n        Okay\n      </button>\n    </div>\n  </div>\n</ng-template>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quotation-home/quotation-home.component.html":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/quotation-home/quotation-home.component.html ***!
  \***************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"quotationHome\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4 class=\"all-caps\">\n        <span class=\"fa-stack fa-md\">\n          <i class=\"fa fa-circle fa-stack-2x\"></i>\n          <i class=\"fa fa-home fa-stack-1x fa-inverse\"></i>\n        </span>\n        {{pageLabel}}\n      </h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-lg-12\">\n    <img class=\"product-img-banner\" src=\"./assets/images/banner/home.jpg\" alt=\"credits to freepik @stories\" />\n  </div>\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n        <form [formGroup]=\"quoteForm\">\n\n          <div *ngIf='isIssuance' class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Individual Policy</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <div class=\"alert alert-info note\">\n                    <p><strong>Important Reminder:</strong> You need to have an approved quotation to proceed issuing a policy.</p>\n                  </div>\n                  <!-- .note -->\n                </div>\n                <div class=\"col-lg-12\">\n                  <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                      <label class=\"input-group-text\" for=\"quotationNumber\">Quotation Number</label>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Quotation Number here..\"\n                      formControlName=\"quotationNumber\" [(ngModel)]=\"homeDetails.quotationNumber\">\n                    <div class=\"input-group-append\">\n                      <button [disabled]=\"disableLoadBtn\" class=\"btn btn-outline-secondary\" (click)=\"loadQuotation()\"\n                        type=\"button\">Load</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Risk Details</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['subline'].invalid \n                    && (quoteForm.controls['subline'].dirty \n                    || quoteForm.controls['subline'].touched)}\">\n                    <label for=\"subline\">Business Line</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"subline\"\n                      [(ngModel)]=\"homeDetails.subline\" [attr.disabled]=\"true\">\n                      <option *ngFor=\"let subline of LOV.sublineLOV\" [ngValue]=\"subline.COD_RAMO\">\n                        {{ subline.NOM_RAMO }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['subline'].errors?.required\">\n                      * business line is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['currency'].invalid \n                  && (quoteForm.controls['currency'].dirty \n                  || quoteForm.controls['currency'].touched)}\">\n                    <label for=\"currency\">Currency</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"currency\"\n                      [(ngModel)]=\"homeDetails.currency\" [attr.disabled]=\"true\">\n                      <option selected></option>\n                      <option *ngFor=\"let currency of LOV.currencyLOV\" [ngValue]=\"currency.COD_MON\">\n                        {{ currency.NOM_MON }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['currency'].errors?.required\">\n                      * currency is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"form-divider\"></div>\n                <div class=\"col-xl-12\">\n                  <h6>Location of Risk</h6>\n                </div>\n\n                <div *ngIf=\"isIssuance\" class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['district'].invalid \n                  && (quoteForm.controls['district'].dirty \n                  || quoteForm.controls['district'].touched)}\">\n                    <label for=\"district\">District</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"district\"\n                      [(ngModel)]=\"homeDetails.district\" (change)=\"getBlockNumber()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let district of LOV.districtLOV\" [ngValue]=\"district.NUM_DISTRICT\">\n                        {{ district.NUM_DISTRICT }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['district'].errors?.required\">\n                      * district is required\n                    </p>\n                  </div>\n                </div>\n\n                <div *ngIf=\"isIssuance\" class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['blockNumber'].invalid \n                  && (quoteForm.controls['blockNumber'].dirty \n                  || quoteForm.controls['blockNumber'].touched)}\">\n                    <label for=\"blockNumber\">Block Number</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"blockNumber\"\n                      [(ngModel)]=\"homeDetails.blockNumber\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let blockNumber of LOV.blockNumberLOV\" [ngValue]=\"blockNumber.NUM_BLOCK\">\n                        {{ blockNumber.NUM_BLOCK }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['blockNumber'].errors?.required\">\n                      * block number is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['buildingNumber'].invalid \n                  && (quoteForm.controls['buildingNumber'].dirty \n                  || quoteForm.controls['buildingNumber'].touched)}\">\n                    <label for=\"buildingNumber\">House/Building Number</label>\n                    <input type=\"text\" formControlName=\"buildingNumber\" class=\"form-control\"\n                      [(ngModel)]=\"homeDetails.buildingNumber\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['buildingNumber'].errors?.required\">\n                      * building number is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['subdivision'].invalid \n                  && (quoteForm.controls['subdivision'].dirty \n                  || quoteForm.controls['subdivision'].touched)}\">\n                    <label for=\"subdivision\">Village/Subdivision</label>\n                    <input type=\"text\" formControlName=\"subdivision\" class=\"form-control\"\n                      [(ngModel)]=\"homeDetails.subdivision\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['subdivision'].errors?.required\">\n                      * subdivision is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['buildingName'].invalid \n                  && (quoteForm.controls['buildingName'].dirty \n                  || quoteForm.controls['buildingName'].touched)}\">\n                    <label for=\"buildingName\">Building Name</label>\n                    <input type=\"text\" formControlName=\"buildingName\" class=\"form-control\"\n                      [(ngModel)]=\"homeDetails.buildingName\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['buildingName'].errors?.required\">\n                      * building name is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['streetName'].invalid \n                  && (quoteForm.controls['streetName'].dirty \n                  || quoteForm.controls['streetName'].touched)}\">\n                    <label for=\"streetName\">Street Name</label>\n                    <input type=\"text\" formControlName=\"streetName\" class=\"form-control\"\n                      [(ngModel)]=\"homeDetails.streetName\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['streetName'].errors?.required\">\n                      * street name is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['barangay'].invalid \n                  && (quoteForm.controls['barangay'].dirty \n                  || quoteForm.controls['barangay'].touched)}\">\n                    <label for=\"barangay\">Barangay</label>\n                    <input type=\"text\" formControlName=\"barangay\" class=\"form-control\"\n                      [(ngModel)]=\"homeDetails.barangay\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['barangay'].errors?.required\">\n                      * barangay is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['region'].invalid \n                  && (quoteForm.controls['region'].dirty \n                  || quoteForm.controls['region'].touched)}\">\n                    <label for=\"region\">Region</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"region\"\n                      [(ngModel)]=\"homeDetails.region\" (change)=\"getProvince()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let region of LOV.regionLOV\" [ngValue]=\"region.COD_ESTADO\">\n                        {{ region.NOM_ESTADO }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['region'].errors?.required\">\n                      * region is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['province'].invalid \n                  && (quoteForm.controls['province'].dirty \n                  || quoteForm.controls['province'].touched)}\">\n                    <label for=\"province\">Province</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"province\"\n                      [(ngModel)]=\"homeDetails.province\" (change)=\"getCity()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let province of LOV.provinceLOV\" [ngValue]=\"province.COD_PROV\">\n                        {{ province.NOM_PROV }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['province'].errors?.required\">\n                      * province is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['city'].invalid \n                  && (quoteForm.controls['city'].dirty \n                  || quoteForm.controls['city'].touched)}\">\n                    <label for=\"city\">City</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"city\"\n                      [(ngModel)]=\"homeDetails.city\" (change)=\"getZipCode()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let city of LOV.cityLOV\" [ngValue]=\"city.COD_LOCALIDAD\">\n                        {{ city.NOM_LOCALIDAD }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['city'].errors?.required\">\n                      * city is required\n                    </p>\n                  </div>\n                </div>\n                <div class=\"clearfix\"></div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Building / Content Details</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <h6>Building/Content</h6>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['buildingCapital'].invalid \n                  && (quoteForm.controls['buildingCapital'].dirty \n                  || quoteForm.controls['buildingCapital'].touched)}\">\n                    <label for=\"buildingCapital\">Building Capital</label>\n                    <input type=\"number\" formControlName=\"buildingCapital\" class=\"form-control required\" \n                      [(ngModel)]=\"homeDetails.buildingCapital\"\n                      (change)=\"affecting('buildingCapital', 'Building Capital')\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['buildingCapital'].errors?.required\">\n                      * building capital is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\">\n                    <label for=\"contentValue\">Content Value</label>\n                    <input type=\"number\" formControlName=\"contentValue\" class=\"form-control\"\n                      (change)=\"affecting('contentValue', 'Content Value')\"\n                      [(ngModel)]=\"homeDetails.contentValue\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                  </div>\n                </div>\n\n                <div *ngIf=\"isIssuance\" class=\"col-lg-12\">\n                  <div class=\"form-group\">\n                    <label for=\"buildingContent\">Content</label>\n                    <textarea type=\"text\" formControlName=\"buildingContent\" class=\"form-control\"\n                      [(ngModel)]=\"homeDetails.buildingContent\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\"></textarea>\n                  </div>\n                </div>\n\n                <div class=\"form-divider\"></div>\n                <div class=\"col-xl-12\">\n                  <h6>Additional Details</h6>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['constructionOfBuilding'].invalid \n                  && (quoteForm.controls['constructionOfBuilding'].dirty \n                  || quoteForm.controls['constructionOfBuilding'].touched)}\">\n                    <label for=\"constructionOfBuilding\">Construction of Building</label>\n                    <textarea type=\"text\" formControlName=\"constructionOfBuilding\" class=\"form-control required\"\n                      [(ngModel)]=\"homeDetails.constructionOfBuilding\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\"></textarea>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['constructionOfBuilding'].errors?.required\">\n                      * construction of building required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['occupancyOfBuilding'].invalid \n                  && (quoteForm.controls['occupancyOfBuilding'].dirty \n                  || quoteForm.controls['occupancyOfBuilding'].touched)}\">\n                    <label for=\"occupancyOfBuilding\">Occupancy of Building</label>\n                    <textarea type=\"text\" formControlName=\"occupancyOfBuilding\" class=\"form-control required\"\n                      [(ngModel)]=\"homeDetails.occupancyOfBuilding\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\"></textarea>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['occupancyOfBuilding'].errors?.required\">\n                      * occupancy of building is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"form-divider\"></div>\n                <div class=\"col-xl-12\">\n                  <h6>Boundaries</h6>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['front'].invalid \n                  && (quoteForm.controls['front'].dirty \n                  || quoteForm.controls['front'].touched)}\">\n                    <label for=\"front\">Front</label>\n                    <textarea type=\"text\" formControlName=\"front\" class=\"form-control required\"\n                      [(ngModel)]=\"homeDetails.front\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\"></textarea>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['front'].errors?.required\">\n                      * front is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['right'].invalid \n                  && (quoteForm.controls['right'].dirty \n                  || quoteForm.controls['right'].touched)}\">\n                    <label for=\"right\">Right</label>\n                    <textarea type=\"text\" formControlName=\"right\" class=\"form-control required\"\n                      [(ngModel)]=\"homeDetails.right\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\"></textarea>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['right'].errors?.required\">\n                      * right is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['left'].invalid \n                  && (quoteForm.controls['left'].dirty \n                  || quoteForm.controls['left'].touched)}\">\n                    <label for=\"left\">Left</label>\n                    <textarea type=\"text\" formControlName=\"left\" class=\"form-control required\"\n                      [(ngModel)]=\"homeDetails.left\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\"></textarea>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['left'].errors?.required\">\n                      * left is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['rear'].invalid \n                  && (quoteForm.controls['rear'].dirty \n                  || quoteForm.controls['rear'].touched)}\">\n                    <label for=\"rear\">Rear</label>\n                    <textarea type=\"text\" formControlName=\"rear\" class=\"form-control required\"\n                      [(ngModel)]=\"homeDetails.rear\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\"></textarea>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['rear'].errors?.required\">\n                      * rear is required\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header d-flex justify-content-between optional\"\n              (click)=\"showImprovement = !showImprovement\" matTooltip=\"click to show/hide improvement details\">\n              <strong>Improvement Details</strong>\n              <div class=\"dropdown no-arrow\">\n                <i class=\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\"></i>\n              </div>\n            </div>\n            <div class=\"card-body\" *ngIf=\"showImprovement\">\n              <div class=\"row\">\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['improvement'].invalid \n                  && (quoteForm.controls['improvement'].dirty \n                  || quoteForm.controls['improvement'].touched)}\">\n                    <label for=\"improvement\">Improvement</label>\n                    <input type=\"number\" formControlName=\"improvement\" class=\"form-control\"\n                      [(ngModel)]=\"homeDetails.improvement\"\n                      (change)=\"affecting('improvement', 'Improvement')\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['improvement'].errors?.min\">\n                      * should be higher than 0\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header d-flex justify-content-between optional\"\n              (click)=\"showRelatedStructure = !showRelatedStructure\"\n              matTooltip=\"click to show/hide other related structure details\">\n              <strong>Other Related Structure Details</strong>\n              <div class=\"dropdown no-arrow\">\n                <i class=\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\"></i>\n              </div>\n            </div>\n            <div class=\"card-body\" *ngIf=\"showRelatedStructure\">\n\n              <div class=\"row\" formArrayName=\"relatedStructure\">\n                <div class=\"col-lg-3 col-md-4 col-sm-6\"\n                  *ngFor=\"let item of quoteForm.get('relatedStructure')['controls']; let i=index\">\n                  <div class=\"form-group\" [formGroupName]=\"i\" [ngClass]=\"{'input-error': item.controls['_value'].invalid \n                  && (item.controls['_value'].dirty \n                  || item.controls['_value'].touched)}\">\n                    <label>{{item.get('_name').value}}</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"_value\" [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"item.controls['_value'].errors?.min\">\n                      * should be higher than 0\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header d-flex justify-content-between optional\"\n              (click)=\"showRelatedContent = !showRelatedContent\"\n              matTooltip=\"click to show/hide other related content details\">\n              <strong>Other Related Content Details</strong>\n              <div class=\"dropdown no-arrow\">\n                <i class=\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\"></i>\n              </div>\n            </div>\n            <div class=\"card-body\" *ngIf=\"showRelatedContent\">\n\n              <div class=\"row\" formArrayName=\"relatedContent\">\n                <div class=\"col-lg-3 col-md-4 col-sm-6\"\n                  *ngFor=\"let item of quoteForm.get('relatedContent')['controls']; let i=index\">\n                  <div class=\"form-group\" [formGroupName]=\"i\" [ngClass]=\"{'input-error': item.controls['_value'].invalid \n                  && (item.controls['_value'].dirty \n                  || item.controls['_value'].touched)}\">\n                    <label>{{item.get('_name').value}}</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"_value\" [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"item.controls['_value'].errors?.min\">\n                      * should be higher than 0\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <app-group-policy \n            #appGroupPolicy\n            [subline]=\"homeDetails.subline\"\n            [prevDetails]=\"prevHomeDetails\"\n            [groupPolicy]=\"groupPolicy\"\n            [editMode]=\"editMode\"\n            [showExpiring]=\"true\"\n            [(changedValues)]=\"changedValues\"\n            [loadQuotation]=\"triggerCounter\">\n          </app-group-policy>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>General Information</strong>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <h6>Movement Dates</h6>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['effectivityDate'].invalid \n                    && (quoteForm.controls['effectivityDate'].dirty \n                    || quoteForm.controls['effectivityDate'].touched)}\">\n                    <label for=\"effectivityDate\">Effectivity Date</label>\n                    <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\"\n                      (bsValueChange)=\"affecting('effectivityDate', 'Effectivity Date')\"\n                      formControlName=\"effectivityDate\" [(ngModel)]=\"homeDetails.effectivityDate\"\n                      [attr.disabled]=\"editMode ? null : true\" bsDatepicker>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['effectivityDate'].errors?.required\">\n                      * effectivity date is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['expiryDate'].invalid \n                    && (quoteForm.controls['expiryDate'].dirty \n                    || quoteForm.controls['expiryDate'].touched)}\">\n                    <label for=\"expiryDate\">Expiry Date</label>\n                    <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\"\n                      [minDate]=\"expiryDateMinDate\" (bsValueChange)=\"affecting('expiryDate', 'Expirty Date')\"\n                      formControlName=\"expiryDate\" [(ngModel)]=\"homeDetails.expiryDate\"\n                      [attr.disabled]=\"editMode ? null : true\" bsDatepicker>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['expiryDate'].errors?.required\">\n                      * expiry date is required\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <app-policy-holder #appPolicyHolder\n            [title]=\"'Policy Holder Information'\"\n            [showCreateBtn]=\"true\"\n            [details]=\"homeDetails\"\n            [(policyHolder)]=\"policyHolder\"\n            [isIssuance]=\"isIssuance\" \n            [editMode]=\"editMode\"\n            [type]=\"'primary'\"\n            [optional]=\"false\" \n            [loadQuotation]=\"triggerCounter\">\n          </app-policy-holder>\n\n          <app-policy-holder\n            *ngIf=\"isIssuance\"\n            [title]=\"'Alternative Policy Holder (Optional)'\"\n            [showCreateBtn]=\"true\"\n            [details]=\"homeDetails\"\n            [(policyHolder)]=\"secondaryPolicyHolder\"\n            [isIssuance]=\"isIssuance\"\n            [editMode]=\"editMode\"\n            [type]=\"'secondary'\"\n            [optional]=\"true\"\n            [showPrefix]=\"false\">\n          </app-policy-holder>\n\n          <div class=\"card shadow mb-3\" *ngIf=\"isIssuance\">\n            <div class=\"card-header d-flex justify-content-between\">\n              <strong>Additional Policy Information</strong>\n              <div class=\"dropdown no-arrow\">\n                <i class=\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\"></i>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <h6>Additional Details for Location of Risk</h6>\n                </div>\n\n                <div class=\"col-xl-12\">\n                  <div class=\"row\">\n\n                    <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                      <div class=\"form-group\">\n                        <label for=\"crestaZone\">Cresta Zone</label>\n                        <input type=\"number\" formControlName=\"crestaZone\" class=\"form-control\"\n                          [(ngModel)]=\"homeDetails.crestaZone\"\n                          [attr.disabled]=\"true\">\n                      </div>\n                    </div>\n\n                    <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                      <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['zipCode'].invalid \n                        && (quoteForm.controls['zipCode'].dirty \n                        || quoteForm.controls['zipCode'].touched)}\">\n                        <label for=\"zipCode\">Zip Code</label>\n                        <select class=\"custom-select mr-sm-2 required\" formControlName=\"zipCode\"\n                          [(ngModel)]=\"homeDetails.zipCode\" [attr.disabled]=\"editMode ? null : true\">\n                          <option selected></option>\n                          <option *ngFor=\"let zipCode of LOV.zipCodeLOV\" [ngValue]=\"zipCode.COD_POSTAL\">\n                            {{ zipCode.COD_POSTAL }}\n                          </option>\n                        </select>\n                        <p class=\"form-error\" *ngIf=\"quoteForm.controls['zipCode'].errors?.required\">\n                          * zip code is required\n                        </p>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-divider\"></div>\n\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <div class=\"alert alert-info note\">\n                    <p><strong>Important Reminder:</strong> Please provide mortgagee details if you selected <strong>Mortgagee</strong>.\n                    </p>\n                  </div>\n                  <!-- .note -->\n                </div>\n\n                <div class=\"col-xl-12\">\n                  <h6>Mortgagee</h6>\n                </div>\n\n                <div class=\"col-xl-12\">\n                  <div class=\"row\">\n\n                    <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                      <div class=\"form-group\">\n                        <div class=\"form-check\">\n                          <input class=\"form-check-input\" type=\"checkbox\" id=\"cbMortgagee\"\n                            [(ngModel)]=\"homeDetails.cbMortgagee\" formControlName=\"cbMortgagee\"\n                            (change)=\"showMortgagee = !showMortgagee\" [attr.disabled]=\"editMode ? null : true\">\n                          <label class=\"form-check-label\" for=\"cbMortgagee\">\n                            Mortgagee\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <app-policy-holder\n            *ngIf=\"isIssuance && showMortgagee\"\n            [title]=\"'Mortgagee Policy Holder Information'\"\n            [showCreateBtn]=\"false\"\n            [details]=\"homeDetails\"\n            [(policyHolder)]=\"mortgageePolicyHolder\"\n            [isIssuance]=\"isIssuance\"\n            [editMode]=\"editMode\"\n            [type]=\"'mortgagee'\"\n            [optional]=\"false\">\n          </app-policy-holder>\n\n          <div class=\"card shadow mb-3\" *ngIf=\"showRatePercentage\">\n            <div class=\"card-header d-flex justify-content-between\">\n              <strong>Rate Percentage</strong>\n              <div class=\"dropdown no-arrow\">\n                <i class=\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\"></i>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n\n                <div class=\"col-xl-12\">\n                  <div class=\"alert alert-info note\">\n                    <p><strong>Important Reminder:</strong> Rate should be modified <strong>higher</strong> than the original rate.\n                    </p>\n                  </div>\n                  <!-- .note -->\n                </div>\n\n                <div class=\"col-xl-12\">\n                  <div class=\"row\">\n\n                    <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                      <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['ratePercentage'].invalid \n                      && (quoteForm.controls['ratePercentage'].dirty \n                      || quoteForm.controls['ratePercentage'].touched)}\">\n                        <label for=\"ratePercentage\">Rate Percentage</label>\n                        <input type=\"number\" formControlName=\"ratePercentage\" class=\"form-control\"\n                          [(ngModel)]=\"homeDetails.ratePercentage\"\n                          [attr.disabled]=\"editMode ? null : true\"\n                          (change)=\"affecting('ratePercentage', 'Rate Percentage')\">\n                          <p class=\"form-error\" *ngIf=\"quoteForm.controls['ratePercentage'].errors?.required\">\n                            * rate percentage is required\n                          </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\" *ngIf=\"isIssuance\">\n            <div class=\"card-header d-flex justify-content-between\">\n              <strong>Warranted No Loss</strong>\n              <div class=\"dropdown no-arrow\">\n                <i class=\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\"></i>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n\n                <div class=\"col-xl-12\">\n                  <div class=\"row\">\n\n                    <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                      <div class=\"form-group\">\n                        <label for=\"warrantedNoLoss\">Warranted No Loss</label>\n                        <input type=\"number\" formControlName=\"warrantedNoLoss\" class=\"form-control\"\n                          [(ngModel)]=\"homeDetails.warrantedNoLoss\"\n                          [attr.disabled]=\"editMode ? null : true\">\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <app-payment-breakdown\n            *ngIf=\"showPaymentBreakdown\"\n            #appPaymentBreakdown\n            [paymentReceipt]=\"paymentReceipt\"\n            [paymentBreakdown]=\"paymentBreakdown\"\n            [showExchangeRate]=\"false\"\n            [loadBreakdown]=\"triggerBreakdown\">\n          </app-payment-breakdown>\n\n          <app-fixed-coverages\n            *ngIf=\"showCoverage\"\n            [line]=\"'home'\"\n            [coverageList]=\"coverageList\"\n            [loadCoverage]=\"triggerCoverage\">\n          </app-fixed-coverages>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Product</strong>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <h6>Product Data</h6>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['paymentMethod'].invalid \n                    && (quoteForm.controls['paymentMethod'].dirty \n                    || quoteForm.controls['paymentMethod'].touched)}\">\n                    <label for=\"paymentMethod\">Payment Method</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"paymentMethod\"\n                      [(ngModel)]=\"homeDetails.paymentMethod\"\n                      [attr.disabled]=\"editMode && LOV.paymentMethodLOV?.length ? null : true\">\n                      <option *ngFor=\"let paymentMethod of LOV.paymentMethodLOV\"\n                        [ngValue]=\"paymentMethod.COD_FRACC_PAGO\">\n                        {{ paymentMethod.NOM_FRACC_PAGO }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['paymentMethod'].errors?.required\">\n                      * payment method is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['product'].invalid \n                    && (quoteForm.controls['product'].dirty \n                    || quoteForm.controls['product'].touched)}\">\n                    <label for=\"product\">Product List</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"product\"\n                      [(ngModel)]=\"homeDetails.product\"\n                      [attr.disabled]=\"editMode && LOV.productListLOV?.length ? null : true\">\n                      <option *ngFor=\"let product of LOV.productListLOV\" [ngValue]=\"product.COD_MODALIDAD\">\n                        {{ product.NOM_MODALIDAD }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['product'].errors?.required\">\n                      * product list is required\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <!-- button controls for quotation -->\n          <div *ngIf=\"!isIssuance\">\n            <div *ngIf=\"showGenerateBtn\" class=\"btn-group\" role=\"group\">\n              <button *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Generate</button>\n              <button *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\" (click)=\"proceed(1)\">Generate</button>\n            </div>\n            <div *ngIf=\"showIssueQuoteBtn\" class=\"btn-group\" role=\"group\">\n              <button *ngIf=\"!editMode\" type=\"button\" class=\"btn btn-primary\" (click)=\"manageBtn(1)\">Edit\n                Details</button>\n              <button *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Issue\n                Quote</button>\n              <button *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\" (click)=\"proceed(2)\">Issue Quote</button>\n            </div>\n            <div *ngIf=\"showProceedToIssuanceBtn\" class=\"text-right\">\n              <h5><small>Your quotation number:</small> {{homeDetails.quotationNumber}}</h5>\n            </div>\n            <div *ngIf=\"showProceedToIssuanceBtn\" class=\"btn-group\" role=\"group\">\n              <button type=\"button\" (click)=\"newQuote()\" class=\"btn btn-primary\">New Quote</button>\n              <button type=\"button\" (click)=\"printQuote()\" class=\"btn btn-primary\">Print Quote</button>\n              <button type=\"button\" (click)=\"proceedToIssuance()\" class=\"btn btn-primary\">Proceed to Issuance</button>\n            </div>\n          </div>\n\n          <!-- button controls for issuance -->\n          <div *ngIf=\"isIssuance\">\n            <!-- <div *ngIf=\"showIssuanceGenerateBtn\" class=\"btn-group\" role=\"group\">\n              <button *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                [disabled]=\"!editMode\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Generate</button>\n              <button *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\" (click)=\"proceed(1)\">Generate</button>\n            </div> -->\n            <div *ngIf=\"(showSaveBtn && withTechControl) || (showPostBtn && withTechControl)\">\n              <div class=\"alert alert-warning note\">\n                <p>\n                  <strong>Quotation has tech control!</strong> Unable to issue policy.\n                </p>\n              </div>\n              <!-- .note -->\n              <div class=\"btn-group\" role=\"group\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"newQuote()\">New Quote</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"newPolicy()\">New Policy</button>\n              </div>\n            </div>\n\n            <div *ngIf=\"showNewPolicyBtn\">\n              <div class=\"alert alert-danger note\">\n                <p>\n                  <strong>Quotation has error!</strong> Unable to issue policy.\n                </p>\n              </div>\n              <!-- .note -->\n              <div class=\"btn-group\" role=\"group\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"newQuote()\">New Quote</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"newPolicy()\">New Policy</button>\n              </div>\n            </div>\n\n            <div *ngIf=\"showSaveBtn && !withTechControl\" class=\"btn-group\" role=\"group\">\n              <button *ngIf=\"!editMode\" type=\"button\" class=\"btn btn-primary\" (click)=\"manageBtn(1)\">Edit\n                Details</button>\n              <button *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Save</button>\n              <button *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\" (click)=\"proceed(3)\">Save</button>\n            </div>\n\n            <div *ngIf=\"showPostBtn && !withTechControl\" class=\"btn-group\" role=\"group\">\n              <button *ngIf=\"!editMode\" type=\"button\" class=\"btn btn-primary\" (click)=\"editMode = !editMode\">Edit\n                Details</button>\n              <button *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Post</button>\n              <button *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\" (click)=\"proceed(4)\">Post</button>\n            </div>\n\n            <div *ngIf=\"showPrintBtn\" class=\"text-right\">\n              <h5><small>Your policy number:</small> {{homeDetails.policyNumber}}</h5>\n            </div>\n            <div *ngIf=\"showPrintBtn\" class=\"btn-group\" role=\"group\">\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"newPolicy()\">New Policy</button>\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"printPolicy()\">Print</button>\n            </div>\n          </div>\n\n        </form>\n        <!-- .quote-form -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #quotationHome -->\n\n<ng-template #proceedModal let-data>\n  <div class=\"mat-dialog-header border-bottom\">\n    <div class=\"header row\">\n      <div class=\"col-md-12\">\n        <h4>Are you sure you want to proceed?</h4>\n      </div>\n    </div>\n  </div>\n  <mat-dialog-content>\n    <br>\n    <h6>You have changes to this following field/s: </h6>\n    <ul>\n      <li *ngFor=\"let item of changedValues\">\n        {{item}}\n      </li>\n\n      <li *ngIf=\"hasRSChanges\">\n        Other Related Structure Details\n      </li>\n\n      <li *ngIf=\"hasRCChanges\">\n        Other Related Content Details\n      </li>\n    </ul>\n    <h6>Changes may affect your premium and will create a new quotation.</h6>\n  </mat-dialog-content>\n  <div mat-dialog-actions align=\"end\">\n    <div class=\"btn-group\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-primary\" matDialogClose>\n        Cancel\n      </button>\n      <button *ngIf=\"data.generateBtn\" type=\"button\" class=\"btn btn-primary\" matDialogClose (click)=\"issueQuote('S')\">\n        Generate\n      </button>\n      <button *ngIf=\"data.saveBtn\" type=\"button\" class=\"btn btn-primary\" matDialogClose (click)=\"savePolicy()\">\n        Save\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #validationModal let-data>\n  <div class=\"mat-dialog-header border-bottom\">\n    <div class=\"header row\">\n      <div class=\"col-md-12\">\n        <h4>Your application is incomplete</h4>\n      </div>\n    </div>\n  </div>\n  <mat-dialog-content>\n    <br>\n    <h6>You have invalid/empty data to this following field/s: </h6>\n    <ul>\n      <li *ngFor=\"let item of invalidForms\">\n        {{item}}\n      </li>\n    </ul>\n  </mat-dialog-content>\n  <div mat-dialog-actions align=\"end\">\n    <div class=\"btn-group\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-primary\" matDialogClose>\n        Okay\n      </button>\n    </div>\n  </div>\n</ng-template>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quotation-travel/quotation-travel.component.html":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/quotation-travel/quotation-travel.component.html ***!
  \*******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"quickQuotationTravel\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4 class=\"all-caps\">\n        <span class=\"fa-stack fa-md\">\n          <i class=\"fa fa-circle fa-stack-2x\"></i>\n          <i class=\"fa fa-plane fa-stack-1x fa-inverse\"></i>\n        </span>\n        {{pageLabel}}\n      </h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-lg-12\">\n    <img class=\"product-img-banner\" src=\"./assets/images/banner/travel.jpg\" alt=\"credits to freepik @stories\" />\n  </div>\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n        <form [formGroup]=\"quoteForm\" class=\"quote-form\">\n\n          <div *ngIf='isIssuance' class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Individual Policy</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-lg-12\">\n                  <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                      <label class=\"input-group-text\" for=\"quotationNumber\">Quotation Number</label>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Quotation Number here..\"\n                      formControlName=\"quotationNumber\" [(ngModel)]=\"travelDetails.quotationNumber\">\n                    <div class=\"input-group-append\">\n                      <button [disabled]=\"disableLoadBtn\" class=\"btn btn-outline-secondary\" (click)=\"loadQuotation()\"\n                        type=\"button\">Load</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Travel Itinerary</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-md-3 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['currency'].invalid \n                    && (quoteForm.controls['currency'].dirty \n                    || quoteForm.controls['currency'].touched)}\">\n                    <label for=\"currency\">Currency</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"currency\"\n                      [(ngModel)]=\"travelDetails.currency\"\n                      (change)=\"currencyOnchange(); affecting('currency', 'Currency')\"\n                      [attr.disabled]=\"editMode && LOV.currencyLOV?.length ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let currency of LOV.currencyLOV\" [ngValue]=\"currency.COD_MON\">\n                        {{ currency.NOM_MON }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['currency'].errors?.required\">\n                      * currency is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-5 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['countries'].invalid \n                    && (quoteForm.controls['countries'].dirty \n                    || quoteForm.controls['countries'].touched)}\">\n                    <label for=\"currency\">Itinerary</label>\n                    <ng-select [items]=\"LOV.countryLOV\" bindLabel=\"name\" placeholder=\"Select Country to visit\"\n                      appendTo=\"body\" formControlName=\"countries\" multiple=\"true\" [(ngModel)]=\"travelDetails.countries\"\n                      [readonly]=\"!editMode\">\n                    </ng-select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['countries'].errors?.required\">\n                      * country is required\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>General Information</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['travelPackage'].invalid \n                    && (quoteForm.controls['travelPackage'].dirty \n                    || quoteForm.controls['travelPackage'].touched)}\">\n                    <label for=\"travelPackage\">Travel Package</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"travelPackage\"\n                      [(ngModel)]=\"travelDetails.travelPackage\"\n                      (change)=\"affecting('travelPackage', 'Travel Package')\"\n                      [attr.disabled]=\"true\">\n                      <option selected></option>\n                      <option *ngFor=\"let package of LOV.packageLOV\" [ngValue]=\"package.TRAVEL_PACK\">\n                        {{ package.NOM_VALOR }}\n                      </option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['travelPackage'].errors?.required\">\n                      * travel package is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['travelType'].invalid \n                    && (quoteForm.controls['travelType'].dirty \n                    || quoteForm.controls['travelType'].touched)}\">\n                    <label for=\"travelType\">Travel Type</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"travelType\"\n                      [(ngModel)]=\"travelDetails.travelType\" [attr.disabled]=\"true\">\n                      <option value=\"D\">Domestic</option>\n                      <option value=\"I\">International</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['travelType'].errors?.required\">\n                      * travel type is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"clearfix\"></div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['startDate'].invalid \n                    && (quoteForm.controls['startDate'].dirty \n                    || quoteForm.controls['startDate'].touched)}\">\n                    <label for=\"startDate\">Start Date</label>\n                    <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\" [minDate]=\"mindate\"\n                      formControlName=\"startDate\" [(ngModel)]=\"travelDetails.startDate\" bsDatepicker\n                      (bsValueChange)=\"affecting('startDate', 'Start Date')\"\n                      [attr.disabled]=\"(editMode && travelDetails.currency) ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['startDate'].errors?.required\">\n                      * start date is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['endDate'].invalid \n                    && (quoteForm.controls['endDate'].dirty \n                    || quoteForm.controls['endDate'].touched)}\">\n                    <label for=\"endDate\">End Date</label>\n                    <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\" [minDate]=\"endDateMinDate\"\n                      formControlName=\"endDate\" [(ngModel)]=\"travelDetails.endDate\" bsDatepicker\n                      (ngModelChange)=\"getOneTrip()\"\n                      (bsValueChange)=\"affecting('endDate', 'End Date')\"\n                      [attr.disabled]=\"(editMode && enableEndDate && travelDetails.currency) ? null : ''\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['endDate'].errors?.required\">\n                      * end date is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['noOfDays'].invalid \n                    && (quoteForm.controls['noOfDays'].dirty \n                    || quoteForm.controls['noOfDays'].touched)}\">\n                    <label for=\"noOfDays\">No. of Days</label>\n                    <input class=\"form-control required\" id=\"noOfDays\" formControlName=\"noOfDays\"\n                      [(ngModel)]=\"travelDetails.noOfDays\"\n                      (change)=\"affecting('noOfDays', 'No. of Days')\"\n                      [attr.disabled]=\"true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['noOfDays'].errors?.required\">\n                      * number of days is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"clearfix\"></div>\n\n                <div class=\"col-sm-12\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['completeItinerary'].invalid \n                    && (quoteForm.controls['completeItinerary'].dirty \n                    || quoteForm.controls['completeItinerary'].touched)}\">\n                    <label for=\"completeItinerary\">Complete Itinerary</label>\n                    <input type=\"text\" formControlName=\"completeItinerary\" class=\"form-control required\"\n                      placeholder=\"ex. Manila-Japan-China-Manila\" [(ngModel)]=\"travelDetails.completeItinerary\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['completeItinerary'].errors?.required\">\n                      * complete itinerary is required\n                    </p>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['completeItinerary'].errors?.invalidItinerary\">\n                      * invalid itinerary\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"clearfix\"></div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['purposeOfTrip'].invalid \n                    && (quoteForm.controls['purposeOfTrip'].dirty \n                    || quoteForm.controls['purposeOfTrip'].touched)}\">\n                    <label for=\"purposeOfTrip\">Purpose of Trip</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"purposeOfTrip\"\n                      [(ngModel)]=\"travelDetails.purposeOfTrip\"\n                      (change)=\"affecting('purposeOfTrip', 'Purpose of Trip')\"\n                      [attr.disabled]=\"editMode && LOV.purposeOfTripLOV?.length ? null : true\">\n                      <option selected></option>\n                      <option *ngFor=\"let purposeOfTrip of LOV.purposeOfTripLOV\" [ngValue]=\"purposeOfTrip.COD_BUSINESS\">\n                        {{ purposeOfTrip.NOM_BUSINESS }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['purposeOfTrip'].errors?.required\">\n                      * purpose of trip is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\">\n                    <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"checkbox\" id=\"cbOneTripOnly\"\n                        [(ngModel)]=\"travelDetails.cbOneTripOnly\" formControlName=\"cbOneTripOnly\"\n                        [attr.disabled]=\"true\">\n                      <label class=\"form-check-label\" for=\"cbOneTripOnly\">\n                        One Trip Only?\n                      </label>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-3 col-md-4 col-sm-6\">\n                  <div class=\"form-group\">\n                    <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"checkbox\" id=\"cbWithCruise\"\n                        [(ngModel)]=\"travelDetails.cbWithCruise\" formControlName=\"cbWithCruise\"\n                        [attr.disabled]=\"editMode && travelDetails.travelType != 'D' ? null : true\">\n                      <label class=\"form-check-label\" for=\"cbWithCruise\">\n                        With Cruise?\n                      </label>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"clearfix\"></div>\n\n                <div *ngIf=\"showOthersDescription\" class=\"col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['othersDescription'].invalid \n                    && (quoteForm.controls['othersDescription'].dirty \n                    || quoteForm.controls['othersDescription'].touched)}\">\n                    <label for=\"othersDescription\">If others, please specify</label>\n                    <input type=\"text\" formControlName=\"othersDescription\" class=\"form-control required\"\n                      [(ngModel)]=\"travelDetails.othersDescription\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['othersDescription'].errors?.required\">\n                      * please specify your purpose of trip\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <app-group-policy #appGroupPolicy\n            [subline]=\"travelDetails.subline\"\n            [prevDetails]=\"prevTravelDetails\"\n            [groupPolicy]=\"groupPolicy\"\n            [editMode]=\"editMode\"\n            [showExpiring]=\"false\"\n            [(changedValues)]=\"changedValues\"\n            [loadQuotation]=\"triggerCounter\">\n          </app-group-policy>\n\n          <app-policy-holder #appPolicyHolder\n            [title]=\"'Policy Holder Information'\"\n            [showCreateBtn]=\"true\"\n            [details]=\"travelDetails\"\n            [(policyHolder)]=\"policyHolder\"\n            [isIssuance]=\"isIssuance\"\n            [editMode]=\"editMode\"\n            [type]=\"'primary'\"\n            [optional]=\"false\"\n            [loadQuotation]=\"triggerCounter\">\n          </app-policy-holder>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Travelers</strong>\n            </div>\n            <div class=\"card-body\">\n\n              <div class=\"alert alert-info note\">\n                <p>\n                  <strong>Important Reminder:</strong> Family risk should be max of 6 members, age of primary should be from 18-65 and age of children \n                  should be from 0-21 years old only. Please also be advised that family is considered as 1 risk and no multirisk is allowed for quotation.\n                </p>\n              </div>\n              <!-- .note -->\n\n              <div formArrayName=\"travelers\">\n                <div *ngFor=\"let traveler of quoteForm.get('travelers')['controls']; let i=index\">\n                  <div [formGroupName]=\"i\" class=\"card traveler-card\">\n                    <div class=\"card-body\">\n                      <div class=\"row\">\n                        <div class=\"col-md-4 col-sm-6\">\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': traveler.controls['completeName'].invalid \n                              && (traveler.controls['completeName'].dirty \n                              || traveler.controls['completeName'].touched)}\">\n                            <label for=\"completeName\">Complete Name</label>\n                            <input type=\"text\" formControlName=\"completeName\" class=\"form-control required\"\n                              oninput=\"this.value = this.value.toUpperCase()\"\n                              [attr.disabled]=\"editMode ? null : true\">\n                            <p class=\"form-error\" *ngIf=\"traveler.controls['completeName'].errors?.required\">\n                              * complete name is required\n                            </p>\n                          </div>\n                        </div>\n\n                        <div class=\"col-md-4 col-sm-6\">\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': traveler.controls['relationship'].invalid \n                          && (traveler.controls['relationship'].dirty \n                          || traveler.controls['relationship'].touched)}\">\n                            <label for=\"relationship\">Relationship</label>\n                            <select class=\"custom-select mr-sm-2 required\" formControlName=\"relationship\"\n                              (change)=\"relationshipOnChange(traveler)\"\n                              [attr.disabled]=\"editMode && LOV.relationshipLOV?.length && i != 0 ? null: true\">\n                              <option \n                                *ngFor=\"let relationship of LOV.relationshipLOV\"\n                                [attr.disabled]=\"relationship.disabled ? '' : null\"\n                                [ngValue]=\"relationship.COD_VALOR\">\n                                {{ relationship.NOM_VALOR }}</option>\n                            </select>\n                            <p class=\"form-error\" *ngIf=\"traveler.controls['relationship'].errors?.required\">\n                              * relationship is required\n                            </p>\n                          </div>\n                        </div>\n\n                        <div class=\"col-md-4 col-sm-6\">\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': traveler.controls['birthDate'].invalid \n                          && (traveler.controls['birthDate'].dirty \n                          || traveler.controls['birthDate'].touched)}\">\n                            <label for=\"birthDate\">Birthdate</label>\n                            <input type=\"text\" placeholder=\"Datepicker\" class=\"form-control required\"\n                              [maxDate]=\"traveler.controls['bdaymaxdate'].value\" [minDate]=\"traveler.controls['bdaymindate'].value\"\n                              formControlName=\"birthDate\" bsDatepicker\n                              [attr.disabled]=\"editMode ? null : true\">\n                            <p class=\"form-error\" *ngIf=\"traveler.controls['birthDate'].errors?.required\">\n                              * birthdate is required\n                            </p>\n                          </div>\n                        </div>\n\n                        <div class=\"col-md-6 col-sm-6\">\n                          <div class=\"form-group\" [ngClass]=\"{'input-error': traveler.controls['passportNumber'].invalid \n                          && (traveler.controls['passportNumber'].dirty \n                          || traveler.controls['passportNumber'].touched)}\">\n                            <label for=\"passportNumber\">Passport Number</label>\n                            <input type=\"text\" formControlName=\"passportNumber\" class=\"form-control required\"\n                              oninput=\"this.value = this.value.toUpperCase()\"\n                              [attr.disabled]=\"editMode ? null : true\">\n                            <p class=\"form-error\" *ngIf=\"traveler.controls['passportNumber'].errors?.required\">\n                              * passport number is required\n                            </p>\n                          </div>\n                        </div>\n\n                        <div class=\"col-md-6 col-sm-6\">\n                          <div class=\"form-group\">\n                            <label for=\"physicianName\">Usual Physician Name and Number</label>\n                            <input type=\"text\" formControlName=\"physicianName\" class=\"form-control\"\n                              oninput=\"this.value = this.value.toUpperCase()\"\n                              [attr.disabled]=\"editMode ? null : true\">\n                          </div>\n                        </div>\n\n                        <div class=\"clearfix\"></div>\n                        <div class=\"col-lg-12\">\n                          <div class=\"btn-group\" *ngIf=\"i > 0 && editMode\">\n                            <button class=\"btn btn-primary\" (click)=\"removeTraveler(i)\">Remove</button>\n                          </div>\n                        </div>\n\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div *ngIf=\"travelerHeadCount <= 5\" class=\"btn-group\">\n                <button [disabled]=\"!editMode || quoteForm.get('travelers').status !== 'VALID'\" type=\"button\"\n                  (click)=\"addTraveler()\" class=\"btn btn-primary\">Add Traveler</button>\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header d-flex justify-content-between optional\"\n              (click)=\"showAdditionalInformation = !showAdditionalInformation\"\n              matTooltip=\"click to show/hide additional policy information\">\n              <strong>Additional Policy Information (Optional)</strong>\n              <div class=\"dropdown no-arrow\">\n                <i class=\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\"></i>\n              </div>\n            </div>\n            <div class=\"card-body\" *ngIf=\"showAdditionalInformation\">\n              <div class=\"row\">\n\n                <div class=\"col-lg-12\">\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"cbSportsEquipment\"\n                      formControlName=\"cbSportsEquipment\" [(ngModel)]=\"travelDetails.cbSportsEquipment\"\n                      (change)=\"affecting('cbSportsEquipment', 'Sports Equipment Checkbox')\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <label class=\"form-check-label\" for=\"cbSportsEquipment\">\n                      will bring sports equipment?\n                    </label>\n                  </div>\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['sportsEquipment'].invalid \n                    && (quoteForm.controls['sportsEquipment'].dirty \n                    || quoteForm.controls['sportsEquipment'].touched)}\">\n                    <textarea class=\"form-control required\"\n                      [attr.disabled]=\"editMode && travelDetails.cbSportsEquipment ? null : ''\" type=\"text\"\n                      id=\"sportsEquipment\" formControlName=\"sportsEquipment\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [(ngModel)]=\"travelDetails.sportsEquipment\"></textarea>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['sportsEquipment'].errors?.required\">\n                      * please indicate sport equipment/s\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"cbHazardousSports\"\n                      formControlName=\"cbHazardousSports\" [(ngModel)]=\"travelDetails.cbHazardousSports\"\n                      (change)=\"affecting('cbHazardousSports', 'Hazardous Sports Checkbox')\"\n                      [attr.disabled]=\"editMode ? null : true\">\n                    <label class=\"form-check-label\" for=\"cbHazardousSports\">\n                      will do hazardous sports?\n                    </label>\n                  </div>\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['hazardousSports'].invalid \n                    && (quoteForm.controls['hazardousSports'].dirty \n                    || quoteForm.controls['hazardousSports'].touched)}\">\n                    <textarea class=\"form-control required\"\n                      [attr.disabled]=\"editMode && travelDetails.cbHazardousSports ? null : ''\" type=\"text\"\n                      id=\"hazardousSports\" formControlName=\"hazardousSports\"\n                      oninput=\"this.value = this.value.toUpperCase()\"\n                      [(ngModel)]=\"travelDetails.hazardousSports\"></textarea>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['hazardousSports'].errors?.required\">\n                      * please indicate the sport\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <app-payment-breakdown\n            *ngIf=\"showPaymentBreakdown\"\n            #appPaymentBreakdown\n            [paymentReceipt]=\"paymentReceipt\"\n            [paymentBreakdown]=\"paymentBreakdown\"\n            [showExchangeRate]=\"true\"\n            [loadBreakdown]=\"triggerBreakdown\">\n          </app-payment-breakdown>\n\n          <app-fixed-coverages\n            *ngIf=\"showCoverage\"\n            [line]=\"'travel'\"\n            [coverageList]=\"coverageList\"\n            [loadCoverage]=\"triggerCoverage\">\n          </app-fixed-coverages>\n\n          <div class=\"card shadow mb-3\">\n            <div class=\"card-header\">\n              <strong>Coverages</strong>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-12\">\n                  <h6>Coverage Option</h6>\n                </div>\n\n                <div class=\"col-lg-4 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['insuranceCoverage'].invalid \n                      && (quoteForm.controls['insuranceCoverage'].dirty \n                      || quoteForm.controls['insuranceCoverage'].touched)}\">\n                    <label for=\"insuranceCoverage\">Travel Insurance Coverage</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"insuranceCoverage\"\n                      [(ngModel)]=\"travelDetails.insuranceCoverage\"\n                      (change)=\"affecting('insuranceCoverage', 'Travel Insurance Coverage')\"\n                      [attr.disabled]=\"true\">\n                      <option *ngFor=\"let insuranceCoverage of LOV.insuranceCoverageLOV\" [ngValue]=\"insuranceCoverage.INSURANCE_COVERAGE\">\n                        {{ insuranceCoverage.NOM_VALOR }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['insuranceCoverage'].errors?.required\">\n                      * travel insurance coverage is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-4 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['coverageOption'].invalid \n                        && (quoteForm.controls['coverageOption'].dirty \n                        || quoteForm.controls['coverageOption'].touched)}\">\n                    <label for=\"coverageOption\">Coverage Option Pack</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"coverageOption\"\n                      [(ngModel)]=\"travelDetails.coverageOption\"\n                      (change)=\"affecting('coverageOption', 'Coverage Option Pack')\"\n                      [attr.disabled]=\"editMode && LOV.coverageOptionLOV?.length ? null : true\">\n                      <option></option>\n                      <option *ngFor=\"let coverageOption of LOV.coverageOptionLOV\" [ngValue]=\"coverageOption.COVERAGE_OPTIONS\">\n                        {{ coverageOption.NOM_VALOR }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['coverageOption'].errors?.required\">\n                      * coverage option pack is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-4 col-md-4 col-sm-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': quoteForm.controls['medicalExpenses'].invalid \n                          && (quoteForm.controls['medicalExpenses'].dirty \n                          || quoteForm.controls['medicalExpenses'].touched)}\">\n                    <label for=\"medicalExpenses\">Medical Expenses Coverage</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"medicalExpenses\"\n                      [(ngModel)]=\"travelDetails.medicalExpenses\"\n                      (change)=\"affecting('medicalExpenses', 'Medical Expenses Coverage')\"\n                      [attr.disabled]=\"editMode && LOV.medicalExpensesLOV?.length ? null : true\">\n                      <option></option>\n                      <option *ngFor=\"let medicalExpenses of LOV.medicalExpensesLOV\" [ngValue]=\"medicalExpenses.VAL_CAMPO1\">\n                        {{ medicalExpenses.VAL_CAMPO2 }}</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"quoteForm.controls['medicalExpenses'].errors?.required\">\n                      * medical expenses coverage is required\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <!-- button controls for quotation -->\n          <div *ngIf=\"!isIssuance\">\n            <div *ngIf=\"showGenerateBtn\" class=\"btn-group\" role=\"group\">\n              <button\n                *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Generate</button>\n              <button\n                *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"proceed(1)\">Generate</button>\n            </div>\n            <div *ngIf=\"showIssueQuoteBtn\" class=\"btn-group\" role=\"group\">\n              <button *ngIf=\"!editMode\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"manageBtn(1)\">Edit Details</button>\n              <button\n                *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Issue Quote</button>\n              <button\n                *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"proceed(2)\">Issue Quote</button>\n            </div>\n            <div *ngIf=\"showProceedToIssuanceBtn\" class=\"text-right\">\n              <h5><small>Your quotation number:</small> {{travelDetails.quotationNumber}}</h5>\n            </div>\n            <div *ngIf=\"showProceedToIssuanceBtn\" class=\"btn-group\" role=\"group\">\n              <button type=\"button\" (click)=\"newQuote()\" class=\"btn btn-primary\">New Quote</button>\n              <button type=\"button\" (click)=\"printQuote()\" class=\"btn btn-primary\">Print Quote</button>\n              <button type=\"button\" (click)=\"proceedToIssuance()\" class=\"btn btn-primary\">Proceed to Issuance</button>\n            </div>\n          </div>\n\n          <!-- button controls for issuance -->\n          <div *ngIf=\"isIssuance\">\n            <div *ngIf=\"(showSaveBtn && withTechControl) || (showPostBtn && withTechControl)\">\n              <div class=\"alert alert-warning note\">\n                <p>\n                  <strong>Quotation has tech control!</strong> Unable to issue policy.\n                </p>\n              </div>\n              <!-- .note -->\n              <div class=\"btn-group\" role=\"group\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"newQuote()\">New Quote</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"newPolicy()\">New Policy</button>\n              </div>\n            </div>\n\n            <div *ngIf=\"showNewPolicyBtn\">\n              <div class=\"alert alert-danger note\">\n                <p>\n                  <strong>Quotation has error!</strong> Unable to issue policy.\n                </p>\n              </div>\n              <!-- .note -->\n              <div class=\"btn-group\" role=\"group\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"newQuote()\">New Quote</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"newPolicy()\">New Policy</button>\n              </div>\n            </div>\n\n            <div *ngIf=\"showIssuanceGenerateBtn\" class=\"btn-group\" role=\"group\">\n              <button\n                *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Generate</button>\n              <button\n                *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"proceed(1)\">Generate</button>\n            </div>\n\n            <div *ngIf=\"showSaveBtn && !withTechControl\" class=\"btn-group\" role=\"group\">\n              <button *ngIf=\"!editMode\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"manageBtn(1)\">Edit Details</button>\n              <button\n                *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Save</button>\n              <button\n                *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"proceed(3)\">Save</button>\n            </div>\n\n            <div *ngIf=\"showPostBtn && !withTechControl\" class=\"btn-group\" role=\"group\">\n              <button *ngIf=\"!editMode\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"editMode = !editMode\">Edit Details</button>\n              <button\n                *ngIf=\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\">Post</button>\n              <button\n                *ngIf=\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\"\n                type=\"button\" class=\"btn btn-primary\"\n                (click)=\"proceed(4)\">Post</button>\n            </div>\n\n            <div *ngIf=\"showPrintBtn\" class=\"text-right\">\n              <h5><small>Your policy number:</small> {{travelDetails.policyNumber}}</h5>\n            </div>\n            <div *ngIf=\"showPrintBtn\" class=\"btn-group\" role=\"group\">\n              <button type=\"button\" class=\"btn btn-primary\"\n                (click)=\"newPolicy()\">New Policy</button>\n              <button type=\"button\" class=\"btn btn-primary\"\n                (click)=\"printPolicy()\">Print</button>\n            </div>\n          </div>\n\n          <div class=\"clearfix\"></div>\n        </form>\n        <!-- .quote-form -->\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #QuotationTravel -->\n\n<ng-template #proceedModal let-data>\n  <div class=\"mat-dialog-header border-bottom\">\n    <div class=\"header row\">\n      <div class=\"col-md-12\">\n        <h4>Are you sure you want to proceed?</h4>\n      </div>\n    </div>\n  </div>\n  <mat-dialog-content>\n    <br>\n    <h6>You have changes to this following field/s: </h6>\n    <ul>\n      <li *ngFor=\"let item of changedValues\">\n        {{item}}\n      </li>\n\n      <li *ngFor=\"let item of changedTravelerValues\">\n        {{item}}\n      </li>\n    </ul>\n    <h6>Changes may affect your premium and will create a new quotation.</h6>\n  </mat-dialog-content>\n  <div mat-dialog-actions align=\"end\">\n    <div class=\"btn-group\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-primary\" matDialogClose>\n        Cancel\n      </button>\n      <button *ngIf=\"data.generateBtn\" type=\"button\" class=\"btn btn-primary\" matDialogClose (click)=\"issueQuote('S')\">\n        Generate\n      </button>\n      <button *ngIf=\"data.saveBtn\" type=\"button\" class=\"btn btn-primary\" matDialogClose (click)=\"savePolicy()\">\n        Save\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #validationModal let-data>\n  <div class=\"mat-dialog-header border-bottom\">\n    <div class=\"header row\">\n      <div class=\"col-md-12\">\n        <h4>Your application is incomplete</h4>\n      </div>\n    </div>\n  </div>\n  <mat-dialog-content>\n    <br>\n    <h6>You have invalid/empty data to this following field/s: </h6>\n    <ul>\n      <li *ngFor=\"let item of invalidForms\">\n        {{item}}\n      </li>\n    </ul>\n  </mat-dialog-content>\n  <div mat-dialog-actions align=\"end\">\n    <div class=\"btn-group\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-primary\" matDialogClose>\n        Okay\n      </button>\n    </div>\n  </div>\n</ng-template>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/reload/reload.component.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/reload/reload.component.html ***!
  \***********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<p>reloading page</p>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/request-create/request-create.component.html":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/request-create/request-create.component.html ***!
  \***************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"requests\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n\n      <h4 class=\"all-caps\">\n        <span class=\"fa-stack fa-md\">\n          <i class=\"fa fa-circle fa-stack-2x\"></i>\n          <i class=\"fa fa-plus fa-stack-1x fa-inverse\"></i>\n        </span>\n        Create Requests\n      </h4>\n\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <form [formGroup]=\"requestForm\">\n          <div class=\"row\">\n            <div class=\"col-xl-5 col-md-5 col-sm-12\">\n              <div class=\"form-group input-group mb-3\" [ngClass]=\"{'input-error': requestForm.controls['type'].invalid \n                  && (requestForm.controls['type'].dirty \n                  || requestForm.controls['type'].touched)}\">\n                <div class=\"input-group-prepend\">\n                  <label class=\"input-group-text\" for=\"inputGroupSelect01\">Request Type</label>\n                </div>\n\n                <select class=\"custom-select mr-sm-2\" formControlName=\"type\" [(ngModel)]=\"requestDetails.type\">\n                  <option selected>\n                    <p *ngIf=\"requestForm.controls['type'].errors?.required\">\n                      Select Request Type\n                    </p>\n                  </option>\n                  <option value=\"P\">Policy Request</option>\n                  <option value=\"E\">Endorsement</option>\n                  <option value=\"R\">Renewal</option>\n                  <option value=\"U\">Underwriting</option>\n                </select>\n\n              </div>\n            </div>\n            <div class=\"clearfix\"></div>\n            <div class=\"form-divider\"></div>\n\n            <div class=\"col-md-12\" *ngIf=\"showPolicyDetails\">\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['type1'].invalid \n                              && (requestForm.controls['type1'].dirty \n                              || requestForm.controls['type1'].touched)}\">\n\n                    <label for=\"type1\">Type 1</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"type1\"\n                      [(ngModel)]=\"requestDetails.type1\">\n                      <option *ngIf=\"showEndorsementRT\" value=\"1\">Endorsement</option>\n                      <option *ngIf=\"showEndorsementRT\" value=\"2\">Cancellation</option>\n                      <option *ngIf=\"showRenewalRT\" value=\"5\">Renewal</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Approval</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Rejection</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['type1'].errors?.required\">\n                      * type 1 is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['type2'].invalid \n                              && (requestForm.controls['type2'].dirty \n                              || requestForm.controls['type2'].touched)}\">\n\n                    <label for=\"type2\">Type 2</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"type2\"\n                      [(ngModel)]=\"requestDetails.type2\">\n                      <option *ngIf=\"showEndorsementRT\" value=\"1\">Endorsement</option>\n                      <option *ngIf=\"showEndorsementRT\" value=\"2\">Cancellation</option>\n                      <option *ngIf=\"showRenewalRT\" value=\"5\">Renewal</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Approval</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Rejection</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['type2'].errors?.required\">\n                      * type 2 is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"clearfix\"></div>\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['branch'].invalid \n                              && (requestForm.controls['branch'].dirty \n                              || requestForm.controls['branch'].touched)}\">\n\n                    <label for=\"branch\">Branch</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"branch\"\n                      [(ngModel)]=\"requestDetails.branch\">\n                      <option *ngIf=\"showEndorsementRT\" value=\"1\">Endorsement</option>\n                      <option *ngIf=\"showEndorsementRT\" value=\"2\">Cancellation</option>\n                      <option *ngIf=\"showRenewalRT\" value=\"5\">Renewal</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Approval</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Rejection</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['branch'].errors?.required\">\n                      * branch is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['line'].invalid \n                              && (requestForm.controls['line'].dirty \n                              || requestForm.controls['line'].touched)}\">\n\n                    <label for=\"line\">Line</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"line\"\n                      [(ngModel)]=\"requestDetails.line\">\n                      <option *ngIf=\"showEndorsementRT\" value=\"1\">Endorsement</option>\n                      <option *ngIf=\"showEndorsementRT\" value=\"2\">Cancellation</option>\n                      <option *ngIf=\"showRenewalRT\" value=\"5\">Renewal</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Approval</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Rejection</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['line'].errors?.required\">\n                      * line is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['subline'].invalid \n                              && (requestForm.controls['subline'].dirty \n                              || requestForm.controls['subline'].touched)}\">\n\n                    <label for=\"subline\">Subline</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"subline\"\n                      [(ngModel)]=\"requestDetails.subline\">\n                      <option *ngIf=\"showEndorsementRT\" value=\"1\">Endorsement</option>\n                      <option *ngIf=\"showEndorsementRT\" value=\"2\">Cancellation</option>\n                      <option *ngIf=\"showRenewalRT\" value=\"5\">Renewal</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Approval</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Rejection</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['subline'].errors?.required\">\n                      * subline is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['typeOfPolicy'].invalid \n                        && (requestForm.controls['typeOfPolicy'].dirty \n                        || requestForm.controls['typeOfPolicy'].touched)}\">\n\n                    <label for=\"typeOfPolicy\">Type of Policy</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"typeOfPolicy\"\n                      [(ngModel)]=\"requestDetails.typeOfPolicy\">\n                      <option *ngIf=\"showEndorsementRT\" value=\"1\">Endorsement</option>\n                      <option *ngIf=\"showEndorsementRT\" value=\"2\">Cancellation</option>\n                      <option *ngIf=\"showRenewalRT\" value=\"5\">Renewal</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Approval</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Rejection</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['typeOfPolicy'].errors?.required\">\n                      * type of policy is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['clientName'].invalid \n                          && (requestForm.controls['clientName'].dirty \n                          || requestForm.controls['clientName'].touched)}\">\n                    <label for=\"clientName\">Client Name</label>\n                    <input type=\"text\" formControlName=\"clientName\" class=\"form-control required\"\n                      [(ngModel)]=\"requestDetails.clientName\">\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['clientName'].errors?.required\">\n                      * client name is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['clientGroup'].invalid \n                              && (requestForm.controls['clientGroup'].dirty \n                              || requestForm.controls['clientGroup'].touched)}\">\n\n                    <label for=\"clientGroup\">Client Group</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"clientGroup\"\n                      [(ngModel)]=\"requestDetails.clientGroup\">\n                      <option *ngIf=\"showEndorsementRT\" value=\"1\">Endorsement</option>\n                      <option *ngIf=\"showEndorsementRT\" value=\"2\">Cancellation</option>\n                      <option *ngIf=\"showRenewalRT\" value=\"5\">Renewal</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Approval</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Rejection</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['clientGroup'].errors?.required\">\n                      * client group is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"clearfix\"></div>\n\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['copyNotify'].invalid \n                          && (requestForm.controls['copyNotify'].dirty \n                          || requestForm.controls['copyNotify'].touched)}\">\n                    <label for=\"copyNotify\">Copy Notify</label>\n                    <input type=\"text\" formControlName=\"copyNotify\" class=\"form-control required\"\n                      [(ngModel)]=\"requestDetails.copyNotify\" placeholder=\"Use semicolon (;) as email separator\">\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['copyNotify'].errors?.required\">\n                      * copy notify is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['comments'].invalid \n                      && (requestForm.controls['comments'].dirty \n                      || requestForm.controls['comments'].touched)}\">\n                    <label for=\"comments\">Comments or Remarks</label>\n                    <textarea type=\"text\" formControlName=\"comments\" class=\"form-control required\"\n                      [(ngModel)]=\"requestDetails.comments\"></textarea>\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['comments'].errors?.required\">\n                      * comments/remarks is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-12\">\n                  <div class=\"row\">\n                    <ngx-dropzone (change)=\"onSelect($event)\"\n                      accept=\"image/jpeg,\n                      image/jpg,\n                      image/png,\n                      image/gif,\n                      application/pdf,\n                      application/xls,\n                      application/xlsx,\n                      application/doc,\n                      application/docx,\n                      application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,\n                      application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                      >\n                      <ngx-dropzone-label>Drop file here</ngx-dropzone-label>\n                      <ngx-dropzone-preview *ngFor=\"let f of files\" [removable]=\"true\" (removed)=\"onRemove(f)\">\n                        <ngx-dropzone-label>{{ f.name }}</ngx-dropzone-label>\n                      </ngx-dropzone-preview>\n                    </ngx-dropzone>\n                  </div>\n                  \n                </div>\n\n                \n\n              </div>\n            </div>\n\n            <div class=\"col-md-12\" *ngIf=\"showDetails\">\n              <div class=\"row\">\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['requestType'].invalid \n                        && (requestForm.controls['requestType'].dirty \n                        || requestForm.controls['requestType'].touched)}\">\n\n                    <label for=\"requestType\">Request Type</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"requestType\"\n                      [(ngModel)]=\"requestDetails.requestType\">\n                      <option *ngIf=\"showEndorsementRT\" value=\"1\">Endorsement</option>\n                      <option *ngIf=\"showEndorsementRT\" value=\"2\">Cancellation</option>\n                      <option *ngIf=\"showRenewalRT\" value=\"5\">Renewal</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Approval</option>\n                      <option *ngIf=\"showUnderwritingRT\" value=\"S\">Rejection</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4\" *ngIf=\"showUnderwritingRT\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['issueType'].invalid \n                        && (requestForm.controls['issueType'].dirty \n                        || requestForm.controls['issueType'].touched)}\">\n                    <label for=\"issueType\">Issue Type</label>\n                    <select class=\"custom-select mr-sm-2 required\" formControlName=\"issueType\"\n                      [(ngModel)]=\"requestDetails.issueType\">\n                      <option value=\"P\">Policy</option>\n                      <option value=\"C\">Quotation</option>\n                    </select>\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['issueType'].errors?.required\">\n                      * issue type is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['policyNumber'].invalid \n                        && (requestForm.controls['policyNumber'].dirty \n                        || requestForm.controls['policyNumber'].touched)}\">\n                    <label for=\"policyNumber\">Policy Number</label>\n                    <input type=\"text\" formControlName=\"policyNumber\" class=\"form-control required\"\n                      [(ngModel)]=\"requestDetails.policyNumber\">\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['policyNumber'].errors?.required\">\n                      * policy number is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['reason'].invalid \n                    && (requestForm.controls['reason'].dirty \n                    || requestForm.controls['reason'].touched)}\">\n                    <label for=\"reason\">Reason</label>\n                    <textarea type=\"text\" formControlName=\"reason\" class=\"form-control required\"\n                      [(ngModel)]=\"requestDetails.reason\"></textarea>\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['reason'].errors?.required\">\n                      * reason is required\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['agentEmail'].invalid \n                    && (requestForm.controls['agentEmail'].dirty \n                    || requestForm.controls['agentEmail'].touched)}\">\n                    <label for=\"agentEmail\">Agent's Email</label>\n                    <input type=\"text\" formControlName=\"agentEmail\" class=\"form-control required\"\n                      [(ngModel)]=\"requestDetails.agentEmail\">\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['agentEmail'].errors?.required\">\n                      * agent's email is required\n                    </p>\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['agentEmail'].errors?.email\">\n                      * invalid email format\n                    </p>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['name'].invalid \n                    && (requestForm.controls['name'].dirty \n                    || requestForm.controls['name'].touched)}\">\n                    <label for=\"name\">Name</label>\n                    <input type=\"text\" formControlName=\"name\" class=\"form-control required\"\n                      [(ngModel)]=\"requestDetails.name\">\n                    <p class=\"form-error\" *ngIf=\"requestForm.controls['name'].errors?.required\">\n                      * name is required\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n            <div class=\"clearfix\"></div>\n\n          </div>\n          <!-- .row -->\n\n          <div class=\"alert alert-info note\">\n            <p>\n              <strong>Important Reminder:</strong> Please make sure to fill out all required fields to enable the button below.\n            </p>\n          </div>\n          <!-- .note -->\n\n          <div class=\"btn-group\" role=\"group\">\n            <button [disabled]=\"requestForm.invalid\" type=\"button\" class=\"btn btn-primary\"\n              (click)=\"request(requestDetails)\">Create Request</button>\n          </div>\n\n          <!-- .btn-group -->\n\n        </form>\n\n      </div>\n      <!-- .card-body -->\n    </div>\n    <!-- .card.shadow -->\n  </div>\n  <!-- .col-xl-12 -->\n</div>\n<!-- #requests -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/request-details-modal/request-details-modal.component.html":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/request-details-modal/request-details-modal.component.html ***!
  \*****************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form [formGroup]=\"requestForm\">\n  <h2 mat-dialog-title>View Details</h2>\n  <div mat-dialog-content>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <h5>Main Details</h5>\n        </div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"requestId\">Request ID</label>\n            <input type=\"text\" formControlName=\"requestId\" class=\"form-control required\"\n              [(ngModel)]=\"requestDetailsList.requestId\" [readOnly]=\"true\">\n          </div>\n        </div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"requestHandler\">Request Handler</label>\n            <input type=\"text\" formControlName=\"requestHandler\" class=\"form-control required\"\n              [(ngModel)]=\"requestDetailsList.requestHandler\" [attr.disabled]=\"true\">\n          </div>\n        </div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"requestType\">Request Type</label>\n            <input type=\"text\" formControlName=\"requestType\" class=\"form-control required\"\n              [(ngModel)]=\"requestDetailsList.requestType\" [attr.disabled]=\"true\">\n          </div>\n        </div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"policyNumber\">Policy Number</label>\n            <input type=\"text\" formControlName=\"policyNumber\" class=\"form-control required\"\n              [(ngModel)]=\"requestDetailsList.policyNumber\" [attr.disabled]=\"true\">\n          </div>\n        </div>\n\n        <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <label for=\"status\">Status</label>\n            <input type=\"text\" formControlName=\"status\" class=\"form-control required\"\n              [(ngModel)]=\"requestDetailsList.status\" [attr.disabled]=\"true\">\n          </div>\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-lg-12\">\n          <div class=\"form-group\">\n            <label for=\"address\">Message</label>\n            <textarea type=\"text\" formControlName=\"message\" class=\"form-control required\"\n              [(ngModel)]=\"requestDetailsList.message\" [attr.disabled]=\"true\"></textarea>\n          </div>\n        </div>\n\n        <div class=\"form-divider\"></div>\n        \n        <div class=\"col-lg-12\">\n          <div class=\"flexitable\">\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  \n              <ng-container matColumnDef=\"requestHandler\">\n                <th mat-header-cell *matHeaderCellDef> Request Handler </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.requestHandler}} </td>\n              </ng-container>\n  \n              <ng-container matColumnDef=\"message\">\n                <th mat-header-cell *matHeaderCellDef> Message </th>\n                <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.message\"> {{element.message}} </td>\n              </ng-container>\n  \n              <ng-container matColumnDef=\"user\">\n                <th mat-header-cell *matHeaderCellDef> User </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.user}} </td>\n              </ng-container>\n  \n              <ng-container matColumnDef=\"source\">\n                <th mat-header-cell *matHeaderCellDef> Source </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.source}} </td>\n              </ng-container>\n  \n              <ng-container matColumnDef=\"postDate\">\n                <th mat-header-cell *matHeaderCellDef> Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.postDate}} </td>\n              </ng-container>\n  \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  \n            </table>\n          </div>\n        </div>\n\n        <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n        \n        <div class=\"form-divider\"></div>\n\n        <div class=\"col-lg-12\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['replyMessage'].invalid \n              && (requestForm.controls['replyMessage'].dirty \n              || requestForm.controls['replyMessage'].touched)}\">\n            <label for=\"address\">Reply</label>\n            <textarea type=\"text\" formControlName=\"replyMessage\" class=\"form-control required\"\n              [(ngModel)]=\"replyDetails.message\"></textarea>\n            <p class=\"form-error\" *ngIf=\"requestForm.controls['replyMessage'].errors?.required\">\n              * reply is required\n            </p>\n          </div>\n        </div>\n\n        <div class=\"col-md-6\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['agentEmail'].invalid \n              && (requestForm.controls['agentEmail'].dirty \n              || requestForm.controls['agentEmail'].touched)}\">\n            <label for=\"agentEmail\">Agent's Email</label>\n            <input type=\"text\" formControlName=\"agentEmail\" class=\"form-control required\"\n              [(ngModel)]=\"replyDetails.agentEmail\">\n            <p class=\"form-error\" *ngIf=\"requestForm.controls['agentEmail'].errors?.required\">\n              * agent's email is required\n            </p>\n            <p class=\"form-error\" *ngIf=\"requestForm.controls['agentEmail'].errors?.email\">\n              * invalid email format\n            </p>\n          </div>\n        </div>\n\n        <div class=\"col-md-6\">\n          <div class=\"form-group\" [ngClass]=\"{'input-error': requestForm.controls['name'].invalid \n              && (requestForm.controls['name'].dirty \n              || requestForm.controls['name'].touched)}\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control required\"\n              oninput=\"this.value = this.value.toUpperCase()\" [(ngModel)]=\"replyDetails.name\">\n            <p class=\"form-error\" *ngIf=\"requestForm.controls['name'].errors?.required\">\n              * name is required\n            </p>\n          </div>\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n      </div>\n    </div>\n  </div>\n\n  <div mat-dialog-actions align=\"end\">\n    <div class=\"btn-group\" role=\"group\">\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"close()\">\n        Close\n      </button>\n      <button [disabled]=\"requestForm.invalid\" type=\"submit\" class=\"btn btn-primary\" (click)=\"reply()\">\n        Reply\n      </button>\n    </div>\n  </div>\n</form>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/request-list/request-list.component.html":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/request-list/request-list.component.html ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"row\" id=\"requestList\">\n  <div class=\"col-xl-12\">\n    <div class=\"page-header\">\n      <h4>Request List</h4>\n    </div>\n    <!-- .page-header -->\n  </div>\n  <!-- .col-xl-12 -->\n\n  <div class=\"col-xl-12\">\n    <div class=\"card shadow\">\n      <div class=\"card-body\">\n\n        <div class=\"col-lg-12\">\n\n          <div class=\"card-body\">\n            <form [formGroup]=\"filterForm\">\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"requestType\" class=\"col-md-12 col-lg-4 col-form-label\">Request Type</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"requestType\" id=\"requestType\" [(ngModel)]=\"pageFilter.requestType\">\n                        <option></option>\n                        <option *ngFor=\"let item of requestTypeItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n    \n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"requestId\" class=\"col-md-12 col-lg-4 col-form-label\">Request ID</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"requestId\" id=\"requestId\" [(ngModel)]=\"pageFilter.requestId\">\n                    </div>\n                  </div>\n                </div>\n    \n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"policyNumber\" class=\"col-md-12 col-lg-4 col-form-label\">Policy Number</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"policyNumber\" id=\"policyNumber\" [(ngModel)]=\"pageFilter.policyNumber\">\n                    </div>\n                  </div>\n                </div>\n    \n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"status\" class=\"col-md-12 col-lg-4 col-form-label\">Status</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <select class=\"custom-select mr-sm-2\" formControlName=\"status\" id=\"status\" [(ngModel)]=\"pageFilter.status\">\n                        <option></option>\n                        <option *ngFor=\"let item of statusItems\" [ngValue]=\"item\">{{ item }}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n    \n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"requestHandler\" class=\"col-md-12 col-lg-4 col-form-label\">Request Handler</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"requestHandler\" id=\"requestHandler\" [(ngModel)]=\"pageFilter.requestHandler\">\n                    </div>\n                  </div>\n                </div>\n    \n                <div class=\"form-group col-md-6\">\n                  <div class=\"row\">\n                    <label for=\"user\" class=\"col-md-12 col-lg-4 col-form-label\">User</label>\n                    <div class=\"col-md-12 col-lg-8\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"user\" id=\"user\" oninput=\"this.value = this.value.toUpperCase()\" [(ngModel)]=\"pageFilter.user\">\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-lg-12\">\n                  <div class=\"btn-group\">\n                    <button class=\"btn btn-primary\" (click)=\"apply()\">Apply</button>\n                    <button class=\"btn btn-info\" (click)=\"reset()\">Reset</button>\n                  </div>\n                </div>\n              </div>\n              \n            </form>\n            \n\n          </div>\n\n          <div class=\"clearfix\"></div>\n          <div class=\"divider\"></div>\n\n          <div class=\"flexitable\">\n\n            <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortChange($event)\"\n              class=\"mat-elevation-z8\">\n\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"requestType\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Request Type </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.requestType}} </td>\n              </ng-container>\n\n              <!-- Name Column -->\n              <ng-container matColumnDef=\"requestId\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Request ID </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.requestId}} </td>\n              </ng-container>\n\n              <!-- Weight Column -->\n              <ng-container matColumnDef=\"policyNumber\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.policyNumber}} </td>\n              </ng-container>\n\n              <!-- Symbol Column -->\n              <ng-container matColumnDef=\"status\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n              </ng-container>\n\n              <!-- Symbol Column -->\n              <ng-container matColumnDef=\"requestHandler\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Request Hanlder </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.requestHandler}} </td>\n              </ng-container>\n\n              <!-- Symbol Column -->\n              <ng-container matColumnDef=\"user\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> User </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.user}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getDetails(row)\"></tr>\n\n            </table>\n          </div>\n\n          <div *ngIf=\"dataSource.filteredData.length === 0\" class=\"no-data-found\">No Data Found</div>\n\n          <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" [length]=\"totalItem\" [pageIndex]=\"currentPage\"\n            [pageSize]=\"pageSize\" showFirstLastButtons (page)=\"pageChange($event)\"></mat-paginator>\n\n        </div>\n        <!-- .card-body -->\n      </div>\n      <!-- .card.shadow -->\n    </div>\n    <!-- .col-xl-12 -->\n  </div>\n  <!-- #requestList -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/sidenav/sidenav.component.html":
/*!*************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/sidenav/sidenav.component.html ***!
  \*************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ul class=\"navbar-nav sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n  <!-- Sidebar - Brand -->\n  <a class=\"sidebar-brand d-flex align-items-center justify-content-center\" (click)=\"setPage(p.DAS.N)\">\n    <img src=\"./assets/images/{{logo}}.png\" alt=\"brand-logo\" />\n  </a>\n\n  <!-- Divider -->\n  <hr class=\"sidebar-divider my-0\">\n\n  <!-- Nav Item - Dashboard -->\n  <li *ngIf=\"menu.dash\" [ngClass]=\"{'active': page==p.DAS.N}\" class=\"nav-item\" (click)=\"setPage(p.DAS.N)\">\n    <a class=\"nav-link\">\n      <i class=\"fas fa-fw fa-tachometer-alt\"></i>\n      <span>Dashboard</span></a>\n  </li>\n\n  <!-- Divider -->\n  <hr class=\"sidebar-divider\">\n\n  <!-- Nav Item - Pages Collapse Menu -->\n  <li *ngIf=\"menu.account\" class=\"nav-item\">\n    <a class=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#myAccount\" aria-expanded=\"true\"\n      aria-controls=\"myAccount\">\n      <i class=\"fas fa-fw fa-user\"></i>\n      <span>My Account</span>\n    </a>\n    <div id=\"myAccount\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n      <div class=\"bg-white py-2 collapse-inner rounded\">\n        <a *ngIf=\"menu.outstanding\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.ACC.OUT}\"\n          (click)=\"setPage(p.ACC.OUT)\"><i class=\"fas fa-fw fa-star\"></i> Outstanding Bills</a>\n        <a *ngIf=\"menu.commissionsPaid\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.ACC.COM}\"\n          (click)=\"setPage(p.ACC.COM)\"><i class=\"fas fa-fw fa-money-bill-wave\"></i> Commissions Paid</a>\n        <a *ngIf=\"menu.estimatedCommissions\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.ACC.EST}\"\n          (click)=\"setPage(p.ACC.EST)\"><i class=\"fas fa-fw fa-calculator\"></i> Estimated Commissions</a>\n        <a *ngIf=\"menu.premiumCollection\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.ACC.PRE}\"\n          (click)=\"setPage(p.ACC.PRE)\"><i class=\"fas fa-fw fa-award\"></i> Premium Collection</a>\n      </div>\n    </div>\n  </li>\n\n  <li *ngIf=\"menu.client\" class=\"nav-item\">\n    <a class=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#myClient\" aria-expanded=\"true\"\n      aria-controls=\"myClient\">\n      <i class=\"fas fa-fw fa-handshake\"></i>\n      <span>My Client</span>\n    </a>\n    <div id=\"myClient\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n      <div class=\"bg-white py-2 collapse-inner rounded\">\n        <h6 class=\"collapse-header\">Clients:</h6>\n        <a *ngIf=\"menu.clientDetails\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.CLI.CLI}\"\n          (click)=\"setPage(p.CLI.CLI)\"><i class=\"fas fa-fw fa-info-circle\"></i> Details</a>\n        <h6 class=\"collapse-header\">Policies:</h6>\n        <a *ngIf=\"menu.active\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.CLI.ACT}\"\n          (click)=\"setPage(p.CLI.ACT)\"><i class=\"fas fa-fw fa-user-check\"></i> Active</a>\n        <a *ngIf=\"menu.cancelled\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.CLI.CAN}\"\n          (click)=\"setPage(p.CLI.CAN)\"><i class=\"fas fa-fw fa-user-times\"></i> Cancelled</a>\n        <a *ngIf=\"menu.renewed\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.CLI.REN}\"\n          (click)=\"setPage(p.CLI.REN)\"><i class=\"fas fa-fw fa-sync\"></i> Renewed</a>\n        <a *ngIf=\"menu.notRenewed\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.CLI.NOT}\"\n          (click)=\"setPage(p.CLI.NOT)\"><i class=\"fas fa-fw fa-user-slash\"></i> Not Renewed</a>\n        <a *ngIf=\"menu.expiring\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.CLI.EXP}\"\n          (click)=\"setPage(p.CLI.EXP)\"><i class=\"fas fa-fw fa-exclamation-triangle\"></i> Expiring</a>\n        <a *ngIf=\"menu.provisional\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.CLI.PRO}\"\n          (click)=\"setPage(p.CLI.PRO)\"><i class=\"fas fa-fw fa-user-clock\"></i> Provisional</a>\n        <h6 class=\"collapse-header\">Quotations:</h6>\n        <a *ngIf=\"menu.activeQuotation\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.CLI.ACTQ}\"\n          (click)=\"setPage(p.CLI.ACTQ)\"><i class=\"fas fa-fw fa-user-check\"></i> Active</a>\n        <a *ngIf=\"menu.provisionalQuotation\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.CLI.PROQ}\"\n          (click)=\"setPage(p.CLI.PROQ)\"><i class=\"fas fa-fw fa-user-clock\"></i> Provisional</a>\n        <h6 class=\"collapse-header\">Claims:</h6>\n        <a *ngIf=\"menu.claims\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.CLI.CLA}\"\n          (click)=\"setPage(p.CLI.CLA)\"><i class=\"fas fa-fw fa-info-circle\"></i> Details</a>\n      </div>\n    </div>\n  </li>\n\n  <li *ngIf=\"menu.quick\" class=\"nav-item\">\n    <a class=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#quickQuotation\" aria-expanded=\"true\"\n      aria-controls=\"quickQuotation\">\n      <i class=\"fas fa-fw fa-play\"></i>\n      <span>Quick Quotation</span>\n    </a>\n    <div id=\"quickQuotation\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n      <div class=\"bg-white py-2 collapse-inner rounded\">\n        <a *ngIf=\"menu.quickCar\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.QUI.CAR}\"\n          (click)=\"setPage(p.QUI.CAR)\"><i class=\"fas fa-fw fa-car\"></i> Car</a>\n        <a *ngIf=\"menu.quickHome\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.QUI.HOM}\"\n          (click)=\"setPage(p.QUI.HOM)\"><i class=\"fas fa-fw fa-home\"></i> Home</a>\n        <a *ngIf=\"menu.quickTravel\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.QUI.TRA}\"\n          (click)=\"setPage(p.QUI.TRA)\"><i class=\"fas fa-fw fa-plane\"></i> Travel</a>\n        <a *ngIf=\"menu.quickAccident\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.QUI.ACC}\"\n          (click)=\"setPage(p.QUI.ACC)\"><i class=\"fas fa-fw fa-shield-alt\"></i> Accident</a>\n      </div>\n    </div>\n  </li>\n\n  <li *ngIf=\"menu.quotation\" class=\"nav-item\">\n    <a class=\"nav-link{{appType!='Q' ? ' collapsed' : ''}}\" data-toggle=\"collapse\" data-target=\"#quotation\" aria-expanded=\"true\"\n      aria-controls=\"quotation\">\n      <i class=\"fas fa-fw fa-play\"></i>\n      <span>Quotation</span>\n    </a>\n    <div id=\"quotation\" class=\"collapse{{appType=='Q' ? ' show' : ''}}\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n      <div class=\"bg-white py-2 collapse-inner rounded\">\n        <a *ngIf=\"menu.quotationCar\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.QUO.CAR}\"\n          (click)=\"setAppPage(p.QUO.CAR)\"><i class=\"fas fa-fw fa-car\"></i> Car</a>\n        <a *ngIf=\"menu.quotationHome\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.QUO.HOM}\"\n          (click)=\"setPage(p.QUO.HOM)\"><i class=\"fas fa-fw fa-home\"></i> Home</a>\n        <a *ngIf=\"menu.quotationTravel\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.QUO.TRA}\"\n          (click)=\"setAppPage(p.QUO.TRA)\"><i class=\"fas fa-fw fa-plane\"></i> Travel</a>\n        <a *ngIf=\"menu.quotationAccident\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.QUO.ACC}\"\n          (click)=\"setPage(p.QUO.ACC)\"><i class=\"fas fa-fw fa-shield-alt\"></i> Accident</a>\n      </div>\n    </div>\n  </li>\n\n  <li *ngIf=\"menu.issuance\" class=\"nav-item\">\n    <a class=\"nav-link{{appType!='I' ? ' collapsed' : ''}}\" data-toggle=\"collapse\" data-target=\"#policyIssuance\" aria-expanded=\"true\"\n      aria-controls=\"policyIssuance\">\n      <i class=\"fas fa-fw fa-play\"></i>\n      <span>Policy Issuance</span>\n    </a>\n    <div id=\"policyIssuance\" class=\"collapse{{appType=='I' ? ' show' : ''}}\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n      <div class=\"bg-white py-2 collapse-inner rounded\">\n        <a *ngIf=\"menu.issuanceCar\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.ISS.CAR}\"\n          (click)=\"setAppPage(p.ISS.CAR)\"><i class=\"fas fa-fw fa-car\"></i> Car</a>\n        <a *ngIf=\"menu.issuanceHome\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.ISS.HOM}\"\n          (click)=\"setAppPage(p.ISS.HOM)\"><i class=\"fas fa-fw fa-home\"></i> Home</a>\n        <a *ngIf=\"menu.issuanceTravel\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.ISS.TRA}\"\n          (click)=\"setAppPage(p.ISS.TRA)\"><i class=\"fas fa-fw fa-plane\"></i> Travel</a>\n        <a *ngIf=\"menu.issuanceAccident\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.ISS.ACC}\"\n          (click)=\"setPage(p.ISS.ACC)\"><i class=\"fas fa-fw fa-shield-alt\"></i> Accident</a>\n      </div>\n    </div>\n  </li>\n\n  <li *ngIf=\"menu.requests\" class=\"nav-item\">\n    <a class=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#requests\" aria-expanded=\"true\"\n      aria-controls=\"requests\">\n      <i class=\"fas fa-fw fa-bell\"></i>\n      <span>Requests</span>\n    </a>\n    <div id=\"requests\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n      <div class=\"bg-white py-2 collapse-inner rounded\">\n        <a *ngIf=\"menu.requestCreate\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.REQ.CRE}\"\n          (click)=\"setPage(p.REQ.CRE)\"><i class=\"fas fa-fw fa-plus\"></i> Create Request</a>\n        <a *ngIf=\"menu.requestList\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.REQ.LIS}\"\n          (click)=\"setPage(p.REQ.LIS)\"><i class=\"fas fa-fw fa-clipboard-list\"></i> Request List</a>\n      </div>\n    </div>\n  </li>\n\n  <li *ngIf=\"menu.utilities\" class=\"nav-item\">\n    <a class=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#utilities\" aria-expanded=\"true\"\n      aria-controls=\"utilities\">\n      <i class=\"fas fa-fw fa-tools\"></i>\n      <span>Utilities</span>\n    </a>\n    <div id=\"utilities\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n      <div class=\"bg-white py-2 collapse-inner rounded\">\n        <a *ngIf=\"menu.query\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.UTI.QUE}\"\n          (click)=\"setPage(p.UTI.QUE)\"><i class=\"fas fa-fw fa-clipboard-list\"></i> Query</a>\n        <a *ngIf=\"menu.documentPrinting\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.UTI.DOC}\"\n          (click)=\"setPage(p.UTI.DOC)\"><i class=\"fas fa-fw fa-print\"></i> Document Printing</a>\n        <!-- <a *ngIf=\"menu.changePassword\" class=\"collapse-item\" [ngClass]=\"{'active': page==p.UTI.CHA}\"\n          (click)=\"setPage(p.UTI.CHA)\"><i class=\"fas fa-fw fa-key\"></i> Change Password</a> -->\n      </div>\n    </div>\n  </li>\n\n  <li *ngIf=\"menu.news\" [ngClass]=\"{'active': page==p.NEW.N}\" class=\"nav-item\" (click)=\"setPage(p.NEW.N)\">\n    <a class=\"nav-link\">\n      <i class=\"fas fa-fw fa-newspaper\"></i>\n      <span>News</span>\n    </a>\n  </li>\n\n  <li *ngIf=\"menu.faq\" [ngClass]=\"{'active': page==p.FAQ.N}\" class=\"nav-item\" (click)=\"setPage(p.FAQ.N)\">\n    <a class=\"nav-link\">\n      <i class=\"fas fa-fw fa-question\"></i>\n      <span>FAQ</span>\n    </a>\n  </li>\n\n  <!-- Divider -->\n  <hr class=\"sidebar-divider\">\n\n  <!-- Heading -->\n  <div class=\"sidebar-heading\">\n    User Information\n  </div>\n\n  <li class=\"nav-item\">\n    <div class=\"nav-link\">\n      <i class=\"fas fa-fw fa-user\"></i>\n      <span>{{currentUser.userName}}</span></div>\n  </li>\n\n  <li *ngIf=\"currentUser.address\" class=\"nav-item\">\n    <div class=\"nav-link\">\n      <i class=\"fas fa-fw fa-map-marked-alt\"></i>\n      <span>{{currentUser.address}}</span></div>\n  </li>\n\n  <!-- <li class=\"nav-item\">\n    <div class=\"nav-link\">\n      <i class=\"fas fa-fw fa-key\"></i>\n      <span>Your password will expire in <strong>{{currentUser.expiryDay}}\n          {{currentUser.expiryDay <= 1 ? 'day' : 'days' }}</strong></span></div>\n  </li> -->\n\n  <div *ngIf=\"hasSelectedAgent\">\n    <!-- Divider -->\n    <hr class=\"sidebar-divider d-none d-md-block\">\n\n    <!-- Heading -->\n    <div class=\"sidebar-heading\">\n      Agent Information\n    </div>\n\n    <li class=\"nav-item\">\n      <div class=\"nav-link\">\n        <i class=\"fas fa-fw fa-user\"></i>\n        <span>{{currentUser.selectedAgent.agentName}}</span></div>\n    </li>\n\n    <li *ngIf=\"currentUser.selectedAgent.agentAddress\" class=\"nav-item\">\n      <div class=\"nav-link\">\n        <i class=\"fas fa-fw fa-map-marked-alt\"></i>\n        <span>{{currentUser.selectedAgent.agentAddress}}</span></div>\n    </li>\n  </div>\n\n  <!-- Sidebar Toggler (Sidebar) -->\n  <!-- <div class=\"text-center d-none d-md-inline\">\n    <button class=\"rounded-circle border-0\" id=\"sidebarToggle\"></button>\n  </div> -->\n</ul>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/template/template.component.html":
/*!***************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/template/template.component.html ***!
  \***************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("  <!-- Page Wrapper -->\n  <div id=\"wrapper\">\n\n    <!-- Sidebar -->\n    <app-sidenav class=\"{{sideNavClass}}\"></app-sidenav>\n\n    <!-- Content Wrapper -->\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\">\n\n      <!-- Main Content -->\n      <div id=\"content\">\n\n        <!-- Header -->\n        <app-header></app-header>\n\n        <!-- Begin Page Content -->\n        <div class=\"container-fluid\">\n          <app-dashboard *ngIf=\"page === p.DAS.N\"></app-dashboard>\n\n          <app-profile *ngIf=\"page === p.UTI.CHA\"></app-profile>\n\n          <app-account-outstanding-bills-list *ngIf=\"page === p.ACC.OUT\"></app-account-outstanding-bills-list>\n          <app-account-commissions-paid-list *ngIf=\"page === p.ACC.COM\"></app-account-commissions-paid-list>\n          <app-account-estimated-commissions-list *ngIf=\"page === p.ACC.EST\"></app-account-estimated-commissions-list>\n          <app-account-premium-collection-list *ngIf=\"page === p.ACC.PRE\"></app-account-premium-collection-list>\n\n          <app-client-details-list *ngIf=\"page === p.CLI.CLI\"></app-client-details-list>\n          <app-client-policy-active-list *ngIf=\"page === p.CLI.ACT\"></app-client-policy-active-list>\n          <app-client-policy-cancelled-list *ngIf=\"page === p.CLI.CAN\"></app-client-policy-cancelled-list>\n          <app-client-policy-renewed-list *ngIf=\"page === p.CLI.REN\"></app-client-policy-renewed-list>\n          <app-client-policy-not-renewed-list *ngIf=\"page === p.CLI.NOT\"></app-client-policy-not-renewed-list>\n          <app-client-policy-expiring-list *ngIf=\"page === p.CLI.EXP\"></app-client-policy-expiring-list>\n          <app-client-policy-provisional-list *ngIf=\"page === p.CLI.PRO\"></app-client-policy-provisional-list>\n          <app-client-quotation-active-list *ngIf=\"page === p.CLI.ACTQ\"></app-client-quotation-active-list>\n          <app-client-quotation-provisional-list *ngIf=\"page === p.CLI.PROQ\"></app-client-quotation-provisional-list>\n          <app-client-claims-list *ngIf=\"page === p.CLI.CLA\"></app-client-claims-list>\n\n          <app-quick-quotation-car *ngIf=\"page === p.QUI.CAR\"></app-quick-quotation-car>\n          <app-quick-quotation-home *ngIf=\"page === p.QUI.HOM\"></app-quick-quotation-home>\n          <app-quick-quotation-travel *ngIf=\"page === p.QUI.TRA\"></app-quick-quotation-travel>\n          <app-quick-quotation-accident *ngIf=\"page === p.QUI.ACC\"></app-quick-quotation-accident>\n\n          <app-quotation-car *ngIf=\"page === p.QUO.CAR\"></app-quotation-car>\n          <app-quotation-home *ngIf=\"page === p.QUO.HOM\"></app-quotation-home>\n          <app-quotation-travel *ngIf=\"page === p.QUO.TRA\"></app-quotation-travel>\n          <app-quotation-accident *ngIf=\"page === p.QUO.ACC\"></app-quotation-accident>\n\n          <app-quotation-car *ngIf=\"page === p.ISS.CAR\"></app-quotation-car>\n          <app-quotation-home *ngIf=\"page === p.ISS.HOM\"></app-quotation-home>\n          <app-quotation-travel *ngIf=\"page === p.ISS.TRA\"></app-quotation-travel>\n          <app-quotation-accident *ngIf=\"page === p.ISS.ACC\"></app-quotation-accident>\n\n          <app-request-list *ngIf=\"page === p.REQ.LIS\"></app-request-list>\n          <app-request-create *ngIf=\"page === p.REQ.CRE\"></app-request-create>\n          \n          <app-query *ngIf=\"page === p.UTI.QUE\"></app-query>\n          <app-document-printing *ngIf=\"page === p.UTI.DOC\"></app-document-printing>\n\n          <app-missing-page *ngIf=\"page === p.NEW.N\"></app-missing-page>\n\n          <app-faq *ngIf=\"page === p.FAQ.N\"></app-faq>\n        </div>\n        <!-- End Page Content -->\n\n      </div>\n      <!-- End of Main Content -->\n\n      <!-- Footer -->\n      <app-footer></app-footer>\n\n    </div>\n    <!-- End of Content Wrapper -->\n\n    <!-- Scroll to Top Button-->\n    <a class=\"scroll-to-top rounded\" href=\"#page-top\">\n      <i class=\"fas fa-angle-up\"></i>\n    </a>\n  </div>\n  <!-- End of Page Wrapper -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/terms-and-condition/terms-and-condition.component.html":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/terms-and-condition/terms-and-condition.component.html ***!
  \*************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id=\"termsAndCondition\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"container\">\n          <div class=\"wrap\">\n            <div class=\"row\">\n\n              <div class=\"col-lg-4 menu\">\n                <a class=\"brand-logo\" (click)=\"redirect()\">\n                    <img src=\"./assets/images/mivo-logo/mivo-logo-light.png\" alt=\"brand-logo\" />\n                </a>\n\n                <ul class=\"terms-menu\">\n                  <li (click)=\"scrollTo('cancellation')\">\n                    CANCELLATION AND REFUND\n                  </li>\n                  <li (click)=\"scrollTo('security')\">\n                    SECURITY CAPABILITIES & POLICY FOR TRANSMISSION OF PAYMENT\n                  </li>\n                  <li (click)=\"scrollTo('copyright')\">\n                    COPYRIGHT\n                  </li>\n                  <li (click)=\"scrollTo('disclaimer')\">\n                    DISCLAIMER\n                  </li>\n                  <li (click)=\"scrollTo('jurisdiction')\">\n                    JURISDICTION\n                  </li>\n                </ul>\n              </div>\n              <!-- .col-lg-4 -->\n\n              <div class=\"col-lg-8 details\">\n\n                <div class=\"scroll\">\n                  <div class=\"scroll-wrapper\">\n                    <h2>\n                      TERMS AND CONDITIONS\n                    </h2>\n\n                    <div id=\"cancellation\" class=\"top-20\">\n                      <h5>\n                        CANCELLATION AND REFUND\n                      </h5>\n                      <div class=\"terms\">\n                        <p>\n                          For policy cancellation and refund, Terms and Conditions of Mapfre Insurance Corporation shall apply.\n                        </p>\n                      </div>\n                    </div>\n\n                    <div id=\"security\" class=\"top-20\">\n                      <h5>\n                        SECURITY CAPABILITIES & POLICY FOR TRANSMISSION OF PAYMENT\n                      </h5>\n                      <div class=\"terms\">\n                        <ol>\n                          <li>\n                            What information do we collect and how do we use it? When you make credit card transaction through\n                            this website, we need your personal information such as (e.g. name, e-mail, phone number, address,\n                            and etc). This allows us to process and fulfill your transaction successfully. It also helps us in\n                            maintaining your account.\n                          </li>\n                          <li>\n                            How does MAPFRE Insurance protect customer information? When you make transaction, we use a secure\n                            server. The secure server software (SSL) encrypts all information you input before it is sent to\n                            us. Furthermore, all of the sensitive customer data we collect is protected by several layers of\n                            encryption and several layers of security to prevent unauthorized access.\n                          </li>\n                          <li>\n                            Credit Card Details All credit card payments are processed securely through Paynamics. MAPFRE\n                            Insurance does not store any credit card information on our servers.\n                          </li>\n                        </ol>\n                      </div>\n                    </div>\n\n                    <div id=\"copyright\" class=\"top-20\">\n                      <h5>\n                        COPYRIGHT\n                      </h5>\n                      <div class=\"terms\">\n                        <p>All contents included in this site, such as text, graphics, logos, button icons, images, audio\n                          clips and software are property of mapfre.com.ph or its content suppliers and protected by\n                          Philippine and International copyright laws. The compilation of all contents on this site is the\n                          exclusive property of mapfre.com.ph and protected by Philippine and International copyright laws.\n                          The reproduction, distribution, transmission, republication or display of the content in this\n                          website without consent from mapfre.com.ph is strictly prohibited.</p>\n                      </div>\n                    </div>\n\n                    <div id=\"disclaimer\" class=\"top-20\">\n                      <h5>\n                        DISCLAIMER\n                      </h5>\n                      <div class=\"terms\">\n                        <p>This website and the information, services, products and materials available through it are\n                          provided \"as is\" basis, without warranty of any kind, either express or implied, to the extent\n                          permitted under any applicable law, including without limitation, implied warranties or\n                          conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual\n                          property or other violation of rights, Further Mapfre.com.ph does not warrant or make any representations\n                          concerning the accuracy, likely results or reliability of the use of the materials on its Internet\n                          web or otherwise relating to such materials or on any sites linked to this site.</p>\n                      </div>\n                    </div>\n\n                    <div id=\"jurisdiction\" class=\"top-20\">\n                      <h5>\n                        JURISDICTION\n                      </h5>\n                      <div class=\"terms\">\n                        <p>\n                          For products and services only available for purchase in the Philippines, these terms and conditions\n                          shall be governed by and construed in accordance with Philippine Law. Disputes arising between you\n                          and Mapfre.com.ph shall be subject to the exclusive jurisdiction of the courts of the\n                          Philippines.\n                        </p>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n                <!-- .scroll -->\n\n              </div>\n              <!-- .col-lg-8 -->\n\n            </div>\n            <!-- .row -->\n          </div>\n          <!-- .wrap -->\n        </div>\n        <!-- .container -->\n      </div>\n      <!-- .col-lg-12 -->\n\n      <div class=\"clearfix\"></div>\n    </div>\n    <!-- .row -->\n  </div>\n  <!-- .container-fluid -->\n</div>\n<!-- #termsAndCondition -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/view-details-modal/view-details-modal.component.html":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/view-details-modal/view-details-modal.component.html ***!
  \***********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<h2 mat-dialog-title>{{ title || 'View Details'}}</h2>\n<div mat-dialog-content>\n  <div class=\"container\">\n    <!-- MY CLIENT lists -->\n    <!-- CLIENT DETAILS -->\n    <div *ngIf=\"type == 'client-details'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Client Details</h5>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClientDetails.name}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClientDetails.email}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"address\">Address</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClientDetails.address}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"documentType\">Document Type</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClientDetails.documentType}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"documentCode\">Document Code</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClientDetails.documentCode}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"homeTelNumber\">Home Tel. No.</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClientDetails.homeTelNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"BusinessTelNumber\">Business Tel. No.</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listClientDetails.businessTelNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"mobileNumber\">Mobile Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClientDetails.mobileNumber}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- ACTIVE POLICY -->\n    <div *ngIf=\"type == 'client-active'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Active Policy Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyNumber\">Policy Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyActive.policyNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyEffectivityDate\">Effectivity Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyActive.policyEffectivityDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyDueDate\">Due Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyActive.policyDueDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"line\">Line</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyActive.line}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"policyHolder\">Policy Holder</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyActive.policyHolder}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"documentType\">Document Type</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyActive.documentType}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"documentCode\">Document Code</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyActive.documentCode}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"source\">Source</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyActive.source}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- CANCELLED POLICY -->\n    <div *ngIf=\"type == 'client-cancelled'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Cancelled Policy Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyNumber\">Policy Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyCancelled.policyNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyEffectivityDate\">Effectivity Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyCancelled.policyEffectivityDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"line\">Line</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyCancelled.line}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"policyHolder\">Policy Holder</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyCancelled.policyHolder}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"source\">Source</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyCancelled.source}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- RENEWED POLICY -->\n    <div *ngIf=\"type == 'client-renewed'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Renewed Policy Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyNumber\">Policy Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyRenewed.policyNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyEffectivityDate\">Effectivity Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyRenewed.policyEffectivityDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyDueDate\">Due Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyRenewed.policyDueDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"policyHolder\">Policy Holder</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyRenewed.policyHolder}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"documentType\">Document Type</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyRenewed.documentType}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"documentCode\">Document Code</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyRenewed.documentCode}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- NOT RENEWED POLICY -->\n    <div *ngIf=\"type == 'client-not-renewed'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Not Renewed Policy Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyNumber\">Policy Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyNotRenewed.policyNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyEffectivityDate\">Effectivity Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyNotRenewed.policyEffectivityDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyDueDate\">Due Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyNotRenewed.policyDueDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"line\">Line</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyNotRenewed.line}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"policyHolder\">Policy Holder</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyNotRenewed.policyHolder}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"source\">Source</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyNotRenewed.source}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- EXPIRING POLICY -->\n    <div *ngIf=\"type == 'client-expiring'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Expiring Policy Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyNumber\">Policy Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyExpiring.policyNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyEffectivityDate\">Effectivity Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyExpiring.policyEffectivityDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyExpiryDate\">Expirty Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyExpiring.policyExpiryDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"policyHolder\">Policy Holder</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyExpiring.policyHolder}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyExpiring.email}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"telephoneNumber\">Telephone Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyExpiring.telephoneNumber}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- PROVISIONAL POLICY -->\n    <div *ngIf=\"type == 'client-provisional'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Provisional Policy Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyNumber\">Policy Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyProvisional.policyNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyEffectivityDate\">Effectivity Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyProvisional.policyEffectivityDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyDueDate\">Due Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyProvisional.policyDueDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"line\">Line</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyProvisional.line}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"policyHolder\">Policy Holder</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listPolicyProvisional.policyHolder}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"source\">Source</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listPolicyProvisional.source}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- ACTIVE QUOTATION -->\n    <div *ngIf=\"type == 'client-active-quotation'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Active Quotation Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"quotationNumber\">Quotation Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listQuotationActive.quotationNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyEffectivityDate\">Effectivity Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listQuotationActive.policyEffectivityDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyDueDate\">Due Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listQuotationActive.policyDueDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"line\">Line</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listQuotationActive.line}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"policyHolder\">Policy Holder</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listQuotationActive.policyHolder}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"source\">Source</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listQuotationActive.source}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- PROVISIONAL QUOTATION -->\n    <div *ngIf=\"type == 'client-provisional-quotation'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Provisional Quotation Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"quotationNumber\">Quotation Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listQuotationProvisional.quotationNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyEffectivityDate\">Effectivity Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listQuotationProvisional.policyEffectivityDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyDueDate\">Due Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listQuotationProvisional.policyDueDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"line\">Line</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listQuotationProvisional.line}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"policyHolder\">Policy Holder</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listQuotationProvisional.policyHolder}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"source\">Source</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listQuotationProvisional.source}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- CLAIM DETAILS -->\n    <div *ngIf=\"type == 'client-claims'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Claim Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"claimNumber\">Claim Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClaimDetails.claimNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"fileNumber\">File Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClaimDetails.fileNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"fileName\">File Name</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClaimDetails.fileName}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"lossDate\">Loss Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClaimDetails.lossDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"notificationDate\">Notification Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listClaimDetails.notificationDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"reserveAmount\">Reserve Amount</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClaimDetails.reserveAmount}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"source\">Source</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listClaimDetails.source}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- MY ACCOUNT lists -->\n    <!-- OUTSTANDING BILLS -->\n    <div *ngIf=\"type == 'account-outstanding-bills' && !isProceedToPayment\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Outstanding Bills Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"claimNumber\">Policy Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountOutstandingBills.policyNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"policyHolder\">Policy Holder</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountOutstandingBills.policyHolder}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"prn\">PRN</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listAccountOutstandingBills.prn}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"invoiceNumber\">Invoice Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountOutstandingBills.invoiceNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"currency\">Currency</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountOutstandingBills.currency}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"effectivityDate\">Effectivity Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountOutstandingBills.effectivityDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"expiryDate\">Expiry Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountOutstandingBills.expiryDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"paymentDateExpiry\">Payment Date Expiry</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountOutstandingBills.paymentDateExpiry}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"age\">Age</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\" value={{listAccountOutstandingBills.age}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"amount\">Amount</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountOutstandingBills.amount}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"paymentStatus\">Payment Status</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountOutstandingBills.paymentStatus}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"source\">Source</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountOutstandingBills.source}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"subline\">Subline</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountOutstandingBills.subline}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- OUTSTANDING BILLS PROCEED TO PAYMENT -->\n    <form [formGroup]=\"paymentForm\">\n      <div *ngIf=\"type == 'account-outstanding-bills' && isProceedToPayment\" class=\"row\">\n        <div class=\"col-md-12\">\n          <h5>Additional Information for Payment</h5>\n        </div>\n        <div class=\"col-md-12\">\n          <h6>Pay via:</h6>\n        </div>\n        <div class=\"col-md-12\">\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"radio\" value=\"paynamics\" formControlName=\"paymentMethod\" id=\"radioPaynamics\" (change)=\"changePaymentMethod($event)\">\n            <label class=\"form-check-label\" for=\"radioPaynamics\">\n              Paynamics\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"radio\" value=\"globalpay\" formControlName=\"paymentMethod\" id=\"radioGlobalPay\" (change)=\"changePaymentMethod($event)\">\n            <label class=\"form-check-label\" for=\"radioGlobalPay\">\n              Global Pay\n            </label>\n          </div>\n        </div>\n        <hr class=\"w-100\" />\n        <ng-container *ngIf=\"paymentMethod === 'paynamics'\">\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"claimNumber\"><span class=\"required-indicator\">*</span>Email</label>\n              <input type=\"text\" class=\"form-control required\" formControlName=\"email\">\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"claimNumber\">Phone</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"phone\">\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"claimNumber\">Mobile</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"mobile\">\n            </div>\n          </div>\n          <div class=\"col-md-6\">\n            <div class=\"form-group\">\n              <label for=\"claimNumber\"><span class=\"required-indicator\">*</span>Address 1</label>\n              <input type=\"text\" class=\"form-control required\" formControlName=\"address1\">\n            </div>\n          </div>\n\n          <div class=\"col-md-6\">\n            <div class=\"form-group\">\n              <label for=\"policyHolder\">Address 2</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"address2\">\n            </div>\n          </div>\n\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"prn\"><span class=\"required-indicator\">*</span>City/Town</label>\n              <input type=\"text\" class=\"form-control required\"  formControlName=\"city\">\n            </div>\n          </div>\n\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"invoiceNumber\"><span class=\"required-indicator\">*</span>Province/State</label>\n              <input type=\"text\" class=\"form-control required\" formControlName=\"province\">\n            </div>\n          </div>\n\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              <label for=\"currency\">Zip</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"zip\">\n            </div>\n          </div>\n          <hr class=\"w-100\" />\n        </ng-container>\n        <div class=\"col-md-12\">\n          <h5>TERMS AND CONDITION</h5>\n        </div>\n        <div class=\"col-md-12\">\n          <h6>CANCELLATION AND REFUND</h6>\n        </div>\n        <div class=\"col-md-12\">\n          <p>For policy cancellation and refund, Terms and Conditions of Mapfre Insurance Corporation shall apply.</p>\n        </div>\n        <div class=\"col-md-12\">\n          <h6>SECURITY CAPABILITIES & POLICY FOR TRANSMISSION OF PAYMENT</h6>\n        </div>\n        <div class=\"col-md-12\">\n          <ul>1. What information do we collect and how do we use it? When you make credit card transaction through this website, we need your personal information such as (e.g. name, e-mail, phone number, address, and etc). This allows us to process and fulfill your transaction successfully. It also helps us in maintaining your account.</ul>\n          <ul>2. How does MAPFRE Insurance protect customer information? When you make transaction, we use a secure server. The secure server software (SSL) encrypts all information you input before it is sent to us. Furthermore, all of the sensitive customer data we collect is protected by several layers of encryption and several layers of security to prevent unauthorized access.</ul>\n          <ul>3. Credit Card Details All credit card payments are processed securely through Paynamics. MAPFRE Insular does not store any credit card information on our servers.</ul>\n        </div>\n        <div class=\"col-md-12\">\n          <h6>COPYRIGHT</h6>\n        </div>\n        <div class=\"col-md-12\">\n          <p>All contents included in this site, such as text, graphics, logos, button icons, images, audio clips and software are property of mapfre.com.ph or its content suppliers and protected by Philippine and International copyright laws. The compilation of all contents on this site is the exclusive property of mapfre.com.ph and protected by Philippine and International copyright laws. The reproduction, distribution, transmission, republication or display of the content in this website without consent from mapfre.com.ph is strictly prohibited.</p>\n        </div>\n        <div class=\"col-md-12\">\n          <h6>DISCLAIMER</h6>\n        </div>\n        <div class=\"col-md-12\">\n          <p>This website and the information, services, products and materials available through it are provided \"as is\" basis, without warranty of any kind, either express or implied, to the extent permitted under any applicable law, including without limitation, implied warranties or conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual property or other violation of rights, Further Mapfre.com.ph does not warrant or make any representations concerning the accuracy, likely results or reliability of the use of the materials on its Internet web or otherwise relating to such materials or on any sites linked to this site.</p>  \n        </div>\n        <div class=\"col-md-12\">\n          <h6>JURISDICTION</h6>\n        </div>\n        <div class=\"col-md-12\">\n          <p>For products and services only available for purchase in the Philippines, these terms and conditions shall be governed by and construed in accordance with Philippine Law. Disputes arising between you and Mapfre.com.ph shall be subject to the exclusive jurisdiction of the courts of the Philippines.</p>  \n        </div>\n        <div class=\"col-md-12\">\n          <span>By clicking 'I agree', you are accepting to the Mapfre's Payment terms and condition.</span>\n        </div>\n        <div class=\"clearfix\"></div>\n      </div>\n    </form>\n\n    <!-- COMMISSIONS PAID -->\n    <div *ngIf=\"type == 'account-commissions-paid'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Commissions Paid Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyNumber\">Policy Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountCommissionsPaid.policyNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"policyHolder\">Policy Holder</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountCommissionsPaid.policyHolder}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"currency\">Currency</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountCommissionsPaid.currency}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"invoiceNumber\">Invoice Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountCommissionsPaid.invoiceNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"receiptAmount\">Receipt Amount</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountCommissionsPaid.receiptAmount}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"commissionAmount\">Commission Amount</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountCommissionsPaid.commissionAmount}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"withholdingTaxAmount\">Withholding Tax Amount</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountCommissionsPaid.withholdingTaxAmount}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"source\">Source</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountCommissionsPaid.source}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- ESTIMATED COMMISSIONS -->\n    <div *ngIf=\"type == 'account-estimated-commissions'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Estimated Commissions Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyNumber\">Policy Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountEstimatedCommissions.policyNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"policyHolder\">Policy Holder</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountEstimatedCommissions.policyHolder}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"currency\">Currency</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountEstimatedCommissions.currency}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"invoiceNumber\">Invoice Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountEstimatedCommissions.invoiceNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"movementDate\">Movement Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountEstimatedCommissions.movementDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"receiptAmount\">Receipt Amount</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountEstimatedCommissions.receiptAmount}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"estimatedCommission\">Estimated Commission</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountEstimatedCommissions.estimatedCommission}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"source\">Source</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountEstimatedCommissions.source}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n    <!-- PREMIUM COLLECTION -->\n    <div *ngIf=\"type == 'account-premium-collection'\" class=\"row\">\n      <div class=\"col-md-12\">\n        <h5>Premium Collection Details</h5>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"policyNumber\">Policy Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.policyNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"currency\">Currency</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.currency}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"subline\">Subline</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.subline}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"invoiceNumber\">Invoice Number</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.invoiceNumber}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"effectivityDate\">Effectivity Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.effectivityDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"expiryDate\">Expiry Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.expiryDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"collectedDate\">Collected Date</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.collectedDate}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-8\">\n        <div class=\"form-group\">\n          <label for=\"collectionType\">Collection Type</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.collectionType}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"receiptAmount\">Receipt Amount</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.receiptAmount}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"netPremium\">Net Premium</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.netPremium}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"surcharge\">Surcharge</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.surcharge}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"tax\">Tax</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.tax}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"interest\">Interest</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.interest}}>\n        </div>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label for=\"source\">Source</label>\n          <input type=\"text\" class=\"form-control required\" [readOnly]=\"true\"\n            value={{listAccountPremiumCollection.source}}>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n    </div>\n\n  </div>\n  <!-- .container -->\n</div>\n<!-- mat-dialog-content -->\n\n<div mat-dialog-actions align=\"end\">\n  <div class=\"btn-group\" role=\"group\">\n    <button *ngIf=\"type == 'account-outstanding-bills' && !isProceedToPayment\" type=\"button\" class=\"btn btn-success\" (click)=\"pay()\">\n      Proceed to Payment\n    </button>\n    <button *ngIf=\"type == p.ACC.SUC\"  type=\"button\" class=\"btn btn-success\">\n      Print Policy\n    </button>\n    <button *ngIf=\"type == 'account-outstanding-bills' && isProceedToPayment\" type=\"button\" class=\"btn btn-success\" (click)=\"redirectToPayment(listAccountOutstandingBills)\">\n      I agree\n    </button>\n    <button *ngIf=\"type == 'client-active' || type == 'client-claims'\" type=\"button\" class=\"btn btn-danger\" (click)=\"inquire()\">\n      Inquire\n    </button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"close()\">\n      Close\n    </button>\n  </div>\n</div>");

/***/ }),

/***/ "./src/app/app-routing.module.ts":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");



const routes = [];
let AppRoutingModule = class AppRoutingModule {
};
AppRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forRoot(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
    })
], AppRoutingModule);



/***/ }),

/***/ "./src/app/app.component.css":
/*!***********************************!*\
  !*** ./src/app/app.component.css ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var ng_http_loader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ng-http-loader */ "./node_modules/ng-http-loader/__ivy_ngcc__/fesm2015/ng-http-loader.js");



let AppComponent = class AppComponent {
    constructor() {
        this.title = 'mivo';
        this.spinnerStyle = ng_http_loader__WEBPACK_IMPORTED_MODULE_2__["Spinkit"];
    }
};
AppComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-root',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./app.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./app.component.css */ "./src/app/app.component.css")).default]
    })
], AppComponent);



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var ngx_dropzone__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-dropzone */ "./node_modules/ngx-dropzone/__ivy_ngcc__/fesm2015/ngx-dropzone.js");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/animations.js");
/* harmony import */ var ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-bootstrap/datepicker */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/datepicker/fesm2015/ngx-bootstrap-datepicker.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ng-multiselect-dropdown */ "./node_modules/ng-multiselect-dropdown/__ivy_ngcc__/fesm2015/ng-multiselect-dropdown.js");
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ng-select/ng-select */ "./node_modules/@ng-select/ng-select/__ivy_ngcc__/fesm2015/ng-select-ng-select.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var ng2_charts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ng2-charts */ "./node_modules/ng2-charts/__ivy_ngcc__/fesm2015/ng2-charts.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
/* harmony import */ var ng_http_loader__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ng-http-loader */ "./node_modules/ng-http-loader/__ivy_ngcc__/fesm2015/ng-http-loader.js");
/* harmony import */ var _services_service_module__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./services/service.module */ "./src/app/services/service.module.ts");
/* harmony import */ var _components_login_login_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./components/login/login.component */ "./src/app/components/login/login.component.ts");
/* harmony import */ var _components_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./components/dashboard/dashboard.component */ "./src/app/components/dashboard/dashboard.component.ts");
/* harmony import */ var _components_footer_footer_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./components/footer/footer.component */ "./src/app/components/footer/footer.component.ts");
/* harmony import */ var _components_header_header_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./components/header/header.component */ "./src/app/components/header/header.component.ts");
/* harmony import */ var _components_sidenav_sidenav_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/sidenav/sidenav.component */ "./src/app/components/sidenav/sidenav.component.ts");
/* harmony import */ var _components_template_template_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./components/template/template.component */ "./src/app/components/template/template.component.ts");
/* harmony import */ var _components_missing_page_missing_page_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./components/missing-page/missing-page.component */ "./src/app/components/missing-page/missing-page.component.ts");
/* harmony import */ var _components_profile_profile_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./components/profile/profile.component */ "./src/app/components/profile/profile.component.ts");
/* harmony import */ var _components_query_query_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./components/query/query.component */ "./src/app/components/query/query.component.ts");
/* harmony import */ var _components_faq_faq_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./components/faq/faq.component */ "./src/app/components/faq/faq.component.ts");
/* harmony import */ var _components_outstanding_bills_outstanding_bills_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./components/outstanding-bills/outstanding-bills.component */ "./src/app/components/outstanding-bills/outstanding-bills.component.ts");
/* harmony import */ var _components_quotation_car_quotation_car_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./components/quotation-car/quotation-car.component */ "./src/app/components/quotation-car/quotation-car.component.ts");
/* harmony import */ var _components_quotation_home_quotation_home_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./components/quotation-home/quotation-home.component */ "./src/app/components/quotation-home/quotation-home.component.ts");
/* harmony import */ var _components_quotation_travel_quotation_travel_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./components/quotation-travel/quotation-travel.component */ "./src/app/components/quotation-travel/quotation-travel.component.ts");
/* harmony import */ var _components_quotation_accident_quotation_accident_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./components/quotation-accident/quotation-accident.component */ "./src/app/components/quotation-accident/quotation-accident.component.ts");
/* harmony import */ var _components_quick_quotation_car_quick_quotation_car_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./components/quick-quotation-car/quick-quotation-car.component */ "./src/app/components/quick-quotation-car/quick-quotation-car.component.ts");
/* harmony import */ var _components_quick_quotation_home_quick_quotation_home_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./components/quick-quotation-home/quick-quotation-home.component */ "./src/app/components/quick-quotation-home/quick-quotation-home.component.ts");
/* harmony import */ var _components_quick_quotation_travel_quick_quotation_travel_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./components/quick-quotation-travel/quick-quotation-travel.component */ "./src/app/components/quick-quotation-travel/quick-quotation-travel.component.ts");
/* harmony import */ var _components_quick_quotation_accident_quick_quotation_accident_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./components/quick-quotation-accident/quick-quotation-accident.component */ "./src/app/components/quick-quotation-accident/quick-quotation-accident.component.ts");
/* harmony import */ var _components_modal_modal_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./components/modal/modal.component */ "./src/app/components/modal/modal.component.ts");
/* harmony import */ var _components_group_policy_group_policy_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./components/group-policy/group-policy.component */ "./src/app/components/group-policy/group-policy.component.ts");
/* harmony import */ var _helpers_auth_guard__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./helpers/auth.guard */ "./src/app/helpers/auth.guard.ts");
/* harmony import */ var _helpers_jwt_interceptor__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./helpers/jwt.interceptor */ "./src/app/helpers/jwt.interceptor.ts");
/* harmony import */ var _helpers_error_interceptor__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./helpers/error.interceptor */ "./src/app/helpers/error.interceptor.ts");
/* harmony import */ var _helpers_fake_backend__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./helpers/fake-backend */ "./src/app/helpers/fake-backend.ts");
/* harmony import */ var _components_individual_policy_individual_policy_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./components/individual-policy/individual-policy.component */ "./src/app/components/individual-policy/individual-policy.component.ts");
/* harmony import */ var _components_choose_agent_choose_agent_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./components/choose-agent/choose-agent.component */ "./src/app/components/choose-agent/choose-agent.component.ts");
/* harmony import */ var _components_document_printing_document_printing_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./components/document-printing/document-printing.component */ "./src/app/components/document-printing/document-printing.component.ts");
/* harmony import */ var _components_policy_holder_policy_holder_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./components/policy-holder/policy-holder.component */ "./src/app/components/policy-holder/policy-holder.component.ts");
/* harmony import */ var _components_payment_breakdown_payment_breakdown_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./components/payment-breakdown/payment-breakdown.component */ "./src/app/components/payment-breakdown/payment-breakdown.component.ts");
/* harmony import */ var _components_coverages_coverages_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./components/coverages/coverages.component */ "./src/app/components/coverages/coverages.component.ts");
/* harmony import */ var _components_payment_breakdown_modal_payment_breakdown_modal_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./components/payment-breakdown-modal/payment-breakdown-modal.component */ "./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.ts");
/* harmony import */ var _components_reload_reload_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./components/reload/reload.component */ "./src/app/components/reload/reload.component.ts");
/* harmony import */ var _components_coverage_variable_data_coverage_variable_data_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./components/coverage-variable-data/coverage-variable-data.component */ "./src/app/components/coverage-variable-data/coverage-variable-data.component.ts");
/* harmony import */ var _components_create_third_party_create_third_party_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./components/create-third-party/create-third-party.component */ "./src/app/components/create-third-party/create-third-party.component.ts");
/* harmony import */ var _components_fixed_coverages_fixed_coverages_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./components/fixed-coverages/fixed-coverages.component */ "./src/app/components/fixed-coverages/fixed-coverages.component.ts");
/* harmony import */ var _components_request_create_request_create_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./components/request-create/request-create.component */ "./src/app/components/request-create/request-create.component.ts");
/* harmony import */ var _components_request_list_request_list_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./components/request-list/request-list.component */ "./src/app/components/request-list/request-list.component.ts");
/* harmony import */ var _components_request_details_modal_request_details_modal_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./components/request-details-modal/request-details-modal.component */ "./src/app/components/request-details-modal/request-details-modal.component.ts");
/* harmony import */ var _components_client_details_list_client_details_list_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./components/client-details-list/client-details-list.component */ "./src/app/components/client-details-list/client-details-list.component.ts");
/* harmony import */ var _components_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./components/view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var _components_client_policy_active_list_client_policy_active_list_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./components/client-policy-active-list/client-policy-active-list.component */ "./src/app/components/client-policy-active-list/client-policy-active-list.component.ts");
/* harmony import */ var _components_client_policy_cancelled_list_client_policy_cancelled_list_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./components/client-policy-cancelled-list/client-policy-cancelled-list.component */ "./src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.ts");
/* harmony import */ var _components_client_policy_renewed_list_client_policy_renewed_list_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./components/client-policy-renewed-list/client-policy-renewed-list.component */ "./src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.ts");
/* harmony import */ var _components_client_policy_not_renewed_list_client_policy_not_renewed_list_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./components/client-policy-not-renewed-list/client-policy-not-renewed-list.component */ "./src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.ts");
/* harmony import */ var _components_client_policy_expiring_list_client_policy_expiring_list_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./components/client-policy-expiring-list/client-policy-expiring-list.component */ "./src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.ts");
/* harmony import */ var _components_client_policy_provisional_list_client_policy_provisional_list_component__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./components/client-policy-provisional-list/client-policy-provisional-list.component */ "./src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.ts");
/* harmony import */ var _components_client_quotation_active_list_client_quotation_active_list_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./components/client-quotation-active-list/client-quotation-active-list.component */ "./src/app/components/client-quotation-active-list/client-quotation-active-list.component.ts");
/* harmony import */ var _components_client_quotation_provisional_list_client_quotation_provisional_list_component__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./components/client-quotation-provisional-list/client-quotation-provisional-list.component */ "./src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.ts");
/* harmony import */ var _components_client_claims_list_client_claims_list_component__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./components/client-claims-list/client-claims-list.component */ "./src/app/components/client-claims-list/client-claims-list.component.ts");
/* harmony import */ var _components_account_outstanding_bills_list_account_outstanding_bills_list_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./components/account-outstanding-bills-list/account-outstanding-bills-list.component */ "./src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.ts");
/* harmony import */ var _components_account_commissions_paid_list_account_commissions_paid_list_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./components/account-commissions-paid-list/account-commissions-paid-list.component */ "./src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.ts");
/* harmony import */ var _components_account_estimated_commissions_list_account_estimated_commissions_list_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./components/account-estimated-commissions-list/account-estimated-commissions-list.component */ "./src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.ts");
/* harmony import */ var _components_account_premium_collection_list_account_premium_collection_list_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./components/account-premium-collection-list/account-premium-collection-list.component */ "./src/app/components/account-premium-collection-list/account-premium-collection-list.component.ts");
/* harmony import */ var _components_terms_and_condition_terms_and_condition_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./components/terms-and-condition/terms-and-condition.component */ "./src/app/components/terms-and-condition/terms-and-condition.component.ts");
/* harmony import */ var _components_health_check_health_check_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./components/health-check/health-check.component */ "./src/app/components/health-check/health-check.component.ts");




















//login component

//page component





//other feature components




//table list components

// quotation components




// quick quotation components









































const routes = [{
        path: "login",
        component: _components_login_login_component__WEBPACK_IMPORTED_MODULE_19__["LoginComponent"],
    },
    {
        path: "agent",
        component: _components_choose_agent_choose_agent_component__WEBPACK_IMPORTED_MODULE_45__["ChooseAgentComponent"],
        canActivate: [_helpers_auth_guard__WEBPACK_IMPORTED_MODULE_40__["AuthGuard"]],
    },
    {
        path: "",
        component: _components_template_template_component__WEBPACK_IMPORTED_MODULE_24__["TemplateComponent"],
        canActivate: [_helpers_auth_guard__WEBPACK_IMPORTED_MODULE_40__["AuthGuard"]],
    },
    {
        path: "reload",
        component: _components_reload_reload_component__WEBPACK_IMPORTED_MODULE_51__["ReloadComponent"],
        canActivate: [_helpers_auth_guard__WEBPACK_IMPORTED_MODULE_40__["AuthGuard"]],
    },
    {
        path: "terms-and-condition",
        component: _components_terms_and_condition_terms_and_condition_component__WEBPACK_IMPORTED_MODULE_73__["TermsAndConditionComponent"],
    },
    {
        path: "health-check",
        component: _components_health_check_health_check_component__WEBPACK_IMPORTED_MODULE_74__["HealthCheckComponent"],
    },
    {
        path: "404",
        component: _components_missing_page_missing_page_component__WEBPACK_IMPORTED_MODULE_25__["MissingPageComponent"],
    },
    // otherwise redirect to home
    {
        path: "**",
        redirectTo: "404",
    },
];
let AppModule = class AppModule {
};
AppModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
        declarations: [
            _app_component__WEBPACK_IMPORTED_MODULE_7__["AppComponent"],
            _components_login_login_component__WEBPACK_IMPORTED_MODULE_19__["LoginComponent"],
            _components_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_20__["DashboardComponent"],
            _components_footer_footer_component__WEBPACK_IMPORTED_MODULE_21__["FooterComponent"],
            _components_header_header_component__WEBPACK_IMPORTED_MODULE_22__["HeaderComponent"],
            _components_sidenav_sidenav_component__WEBPACK_IMPORTED_MODULE_23__["SidenavComponent"],
            _components_template_template_component__WEBPACK_IMPORTED_MODULE_24__["TemplateComponent"],
            _components_faq_faq_component__WEBPACK_IMPORTED_MODULE_28__["FaqComponent"],
            _components_outstanding_bills_outstanding_bills_component__WEBPACK_IMPORTED_MODULE_29__["OutstandingBillsComponent"],
            _components_query_query_component__WEBPACK_IMPORTED_MODULE_27__["QueryComponent"],
            _components_missing_page_missing_page_component__WEBPACK_IMPORTED_MODULE_25__["MissingPageComponent"],
            _components_profile_profile_component__WEBPACK_IMPORTED_MODULE_26__["ProfileComponent"],
            _components_quotation_car_quotation_car_component__WEBPACK_IMPORTED_MODULE_30__["QuotationCarComponent"],
            _components_quotation_home_quotation_home_component__WEBPACK_IMPORTED_MODULE_31__["QuotationHomeComponent"],
            _components_quotation_travel_quotation_travel_component__WEBPACK_IMPORTED_MODULE_32__["QuotationTravelComponent"],
            _components_quotation_accident_quotation_accident_component__WEBPACK_IMPORTED_MODULE_33__["QuotationAccidentComponent"],
            _components_quick_quotation_car_quick_quotation_car_component__WEBPACK_IMPORTED_MODULE_34__["QuickQuotationCarComponent"],
            _components_quick_quotation_home_quick_quotation_home_component__WEBPACK_IMPORTED_MODULE_35__["QuickQuotationHomeComponent"],
            _components_quick_quotation_travel_quick_quotation_travel_component__WEBPACK_IMPORTED_MODULE_36__["QuickQuotationTravelComponent"],
            _components_quick_quotation_accident_quick_quotation_accident_component__WEBPACK_IMPORTED_MODULE_37__["QuickQuotationAccidentComponent"],
            _components_modal_modal_component__WEBPACK_IMPORTED_MODULE_38__["ModalComponent"],
            _components_group_policy_group_policy_component__WEBPACK_IMPORTED_MODULE_39__["GroupPolicyComponent"],
            _components_individual_policy_individual_policy_component__WEBPACK_IMPORTED_MODULE_44__["IndividualPolicyComponent"],
            _components_choose_agent_choose_agent_component__WEBPACK_IMPORTED_MODULE_45__["ChooseAgentComponent"],
            _components_document_printing_document_printing_component__WEBPACK_IMPORTED_MODULE_46__["DocumentPrintingComponent"],
            _components_policy_holder_policy_holder_component__WEBPACK_IMPORTED_MODULE_47__["PolicyHolderComponent"],
            _components_payment_breakdown_payment_breakdown_component__WEBPACK_IMPORTED_MODULE_48__["PaymentBreakdownComponent"],
            _components_coverages_coverages_component__WEBPACK_IMPORTED_MODULE_49__["CoveragesComponent"],
            _components_payment_breakdown_modal_payment_breakdown_modal_component__WEBPACK_IMPORTED_MODULE_50__["PaymentBreakdownModalComponent"],
            _components_reload_reload_component__WEBPACK_IMPORTED_MODULE_51__["ReloadComponent"],
            _components_coverage_variable_data_coverage_variable_data_component__WEBPACK_IMPORTED_MODULE_52__["CoverageVariableDataComponent"],
            _components_create_third_party_create_third_party_component__WEBPACK_IMPORTED_MODULE_53__["CreateThirdPartyComponent"],
            _components_fixed_coverages_fixed_coverages_component__WEBPACK_IMPORTED_MODULE_54__["FixedCoveragesComponent"],
            _components_request_create_request_create_component__WEBPACK_IMPORTED_MODULE_55__["RequestCreateComponent"],
            _components_request_list_request_list_component__WEBPACK_IMPORTED_MODULE_56__["RequestListComponent"],
            _components_request_details_modal_request_details_modal_component__WEBPACK_IMPORTED_MODULE_57__["RequestDetailsModalComponent"],
            _components_client_details_list_client_details_list_component__WEBPACK_IMPORTED_MODULE_58__["ClientDetailsListComponent"],
            _components_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_59__["ViewDetailsModalComponent"],
            _components_client_policy_active_list_client_policy_active_list_component__WEBPACK_IMPORTED_MODULE_60__["ClientPolicyActiveListComponent"],
            _components_client_policy_cancelled_list_client_policy_cancelled_list_component__WEBPACK_IMPORTED_MODULE_61__["ClientPolicyCancelledListComponent"],
            _components_client_policy_renewed_list_client_policy_renewed_list_component__WEBPACK_IMPORTED_MODULE_62__["ClientPolicyRenewedListComponent"],
            _components_client_policy_not_renewed_list_client_policy_not_renewed_list_component__WEBPACK_IMPORTED_MODULE_63__["ClientPolicyNotRenewedListComponent"],
            _components_client_policy_expiring_list_client_policy_expiring_list_component__WEBPACK_IMPORTED_MODULE_64__["ClientPolicyExpiringListComponent"],
            _components_client_policy_provisional_list_client_policy_provisional_list_component__WEBPACK_IMPORTED_MODULE_65__["ClientPolicyProvisionalListComponent"],
            _components_client_quotation_active_list_client_quotation_active_list_component__WEBPACK_IMPORTED_MODULE_66__["ClientQuotationActiveListComponent"],
            _components_client_quotation_provisional_list_client_quotation_provisional_list_component__WEBPACK_IMPORTED_MODULE_67__["ClientQuotationProvisionalListComponent"],
            _components_client_claims_list_client_claims_list_component__WEBPACK_IMPORTED_MODULE_68__["ClientClaimsListComponent"],
            _components_account_outstanding_bills_list_account_outstanding_bills_list_component__WEBPACK_IMPORTED_MODULE_69__["AccountOutstandingBillsListComponent"],
            _components_account_commissions_paid_list_account_commissions_paid_list_component__WEBPACK_IMPORTED_MODULE_70__["AccountCommissionsPaidListComponent"],
            _components_account_estimated_commissions_list_account_estimated_commissions_list_component__WEBPACK_IMPORTED_MODULE_71__["AccountEstimatedCommissionsListComponent"],
            _components_account_premium_collection_list_account_premium_collection_list_component__WEBPACK_IMPORTED_MODULE_72__["AccountPremiumCollectionListComponent"],
            _components_terms_and_condition_terms_and_condition_component__WEBPACK_IMPORTED_MODULE_73__["TermsAndConditionComponent"],
            _components_health_check_health_check_component__WEBPACK_IMPORTED_MODULE_74__["HealthCheckComponent"],
        ],
        entryComponents: [
            _components_modal_modal_component__WEBPACK_IMPORTED_MODULE_38__["ModalComponent"],
            _components_payment_breakdown_modal_payment_breakdown_modal_component__WEBPACK_IMPORTED_MODULE_50__["PaymentBreakdownModalComponent"],
            _components_create_third_party_create_third_party_component__WEBPACK_IMPORTED_MODULE_53__["CreateThirdPartyComponent"],
            _components_request_details_modal_request_details_modal_component__WEBPACK_IMPORTED_MODULE_57__["RequestDetailsModalComponent"],
            _components_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_59__["ViewDetailsModalComponent"]
        ],
        imports: [
            _app_routing_module__WEBPACK_IMPORTED_MODULE_6__["AppRoutingModule"],
            _angular_router__WEBPACK_IMPORTED_MODULE_15__["RouterModule"].forRoot(routes),
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_8__["BrowserAnimationsModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_13__["MatTableModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_13__["MatPaginatorModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_13__["MatSortModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_13__["MatTooltipModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_13__["MatDialogModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClientModule"],
            _services_service_module__WEBPACK_IMPORTED_MODULE_18__["ServiceModule"],
            _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_12__["NgSelectModule"],
            ngx_dropzone__WEBPACK_IMPORTED_MODULE_5__["NgxDropzoneModule"],
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_16__["TranslateModule"].forRoot(),
            ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_10__["ModalModule"].forRoot(),
            ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_9__["BsDatepickerModule"].forRoot(),
            ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_11__["NgMultiSelectDropDownModule"].forRoot(),
            ng_http_loader__WEBPACK_IMPORTED_MODULE_17__["NgHttpLoaderModule"].forRoot(),
            ng2_charts__WEBPACK_IMPORTED_MODULE_14__["ChartsModule"]
        ],
        providers: [{
                provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HTTP_INTERCEPTORS"],
                useClass: _helpers_jwt_interceptor__WEBPACK_IMPORTED_MODULE_41__["JwtInterceptor"],
                multi: true,
            },
            {
                provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HTTP_INTERCEPTORS"],
                useClass: _helpers_error_interceptor__WEBPACK_IMPORTED_MODULE_42__["ErrorInterceptor"],
                multi: true,
            },
            // provider used to create fake backend
            _helpers_fake_backend__WEBPACK_IMPORTED_MODULE_43__["fakeBackendProvider"],
        ],
        bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_7__["AppComponent"]],
    })
], AppModule);



/***/ }),

/***/ "./src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.css":
/*!******************************************************************************************************!*\
  !*** ./src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.css ***!
  \******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LWNvbW1pc3Npb25zLXBhaWQtbGlzdC9hY2NvdW50LWNvbW1pc3Npb25zLXBhaWQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC1jb21taXNzaW9ucy1wYWlkLWxpc3QvYWNjb3VudC1jb21taXNzaW9ucy1wYWlkLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoLm1hdC1zb3J0LWhlYWRlci1zb3J0ZWQge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmRpdmlkZXIge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbn1cblxuLmNvbC1mb3JtLWxhYmVsIHtcbiAgZm9udC1zaXplOiA5MCU7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.ts":
/*!*****************************************************************************************************!*\
  !*** ./src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.ts ***!
  \*****************************************************************************************************/
/*! exports provided: AccountCommissionsPaidListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountCommissionsPaidListComponent", function() { return AccountCommissionsPaidListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterAccount__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterAccount */ "./src/app/objects/PageFilterAccount.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_account_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");













let AccountCommissionsPaidListComponent = class AccountCommissionsPaidListComponent {
    constructor(dialog, as, bms, fb) {
        this.dialog = dialog;
        this.as = as;
        this.bms = bms;
        this.fb = fb;
        this.displayedColumns = [
            'policyNumber',
            'policyHolder',
            'currency',
            'invoiceNumber',
            'receiptAmount',
            'commissionAmount',
            'withholdingTaxAmount',
            'source'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.currencyItems = ['PHP', 'EUR', 'USD'];
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterAccount__WEBPACK_IMPORTED_MODULE_5__["PageFilterAccount"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'polilcyNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
    }
    ngOnInit() {
        this.getList();
        this.createForm();
    }
    createForm() {
        this.filterForm = this.fb.group({
            policyNumber: [null],
            policyHolder: [null],
            currency: [null],
            invoiceNumber: [null],
            receiptAmount: [null],
            commissionAmount: [null],
            withholdingTaxAmount: [null],
            source: [null]
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
    }
    getList() {
        this.setPageFilters();
        this.as.getCommissionsPaidList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'polilcyNumber';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_12__["page"].ACC.COM;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('policyNumber').setValue('');
        this.filterForm.get('policyHolder').setValue('');
        this.filterForm.get('currency').setValue('');
        this.filterForm.get('invoiceNumber').setValue('');
        this.filterForm.get('receiptAmount').setValue('');
        this.filterForm.get('commissionAmount').setValue('');
        this.filterForm.get('withholdingTaxAmount').setValue('');
        this.filterForm.get('source').setValue('');
        this.getList();
    }
};
AccountCommissionsPaidListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_account_service__WEBPACK_IMPORTED_MODULE_10__["AccountService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], AccountCommissionsPaidListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], AccountCommissionsPaidListComponent.prototype, "paginator", void 0);
AccountCommissionsPaidListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-account-commissions-paid-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./account-commissions-paid-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./account-commissions-paid-list.component.css */ "./src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.css")).default]
    })
], AccountCommissionsPaidListComponent);



/***/ }),

/***/ "./src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.css":
/*!****************************************************************************************************************!*\
  !*** ./src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.css ***!
  \****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LWVzdGltYXRlZC1jb21taXNzaW9ucy1saXN0L2FjY291bnQtZXN0aW1hdGVkLWNvbW1pc3Npb25zLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FjY291bnQtZXN0aW1hdGVkLWNvbW1pc3Npb25zLWxpc3QvYWNjb3VudC1lc3RpbWF0ZWQtY29tbWlzc2lvbnMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.ts":
/*!***************************************************************************************************************!*\
  !*** ./src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.ts ***!
  \***************************************************************************************************************/
/*! exports provided: AccountEstimatedCommissionsListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountEstimatedCommissionsListComponent", function() { return AccountEstimatedCommissionsListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterAccount__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterAccount */ "./src/app/objects/PageFilterAccount.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_account_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");













let AccountEstimatedCommissionsListComponent = class AccountEstimatedCommissionsListComponent {
    constructor(dialog, as, bms, fb) {
        this.dialog = dialog;
        this.as = as;
        this.bms = bms;
        this.fb = fb;
        this.displayedColumns = [
            'policyNumber',
            'policyHolder',
            'currency',
            'invoiceNumber',
            'movementDate',
            'receiptAmount',
            'estimatedCommission',
            'source'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.currencyItems = ['PHP', 'EUR', 'USD'];
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterAccount__WEBPACK_IMPORTED_MODULE_5__["PageFilterAccount"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'policyNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
    }
    ngOnInit() {
        this.getList();
        this.createForm();
    }
    createForm() {
        this.filterForm = this.fb.group({
            policyNumber: [null],
            policyHolder: [null],
            currency: [null],
            invoiceNumber: [null],
            movementDate: [null],
            receiptAmount: [null],
            estimatedCommission: [null],
            source: [null]
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
        this.pageFilter.movementDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.movementDate);
    }
    getList() {
        this.setPageFilters();
        this.as.getEstimatedCommissionsList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'name';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_12__["page"].ACC.EST;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('policyNumber').setValue('');
        this.filterForm.get('policyHolder').setValue('');
        this.filterForm.get('currency').setValue('');
        this.filterForm.get('invoiceNumber').setValue('');
        this.filterForm.get('movementDate').setValue('');
        this.filterForm.get('receiptAmount').setValue('');
        this.filterForm.get('estimatedCommission').setValue('');
        this.filterForm.get('source').setValue('');
        this.getList();
    }
};
AccountEstimatedCommissionsListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_account_service__WEBPACK_IMPORTED_MODULE_10__["AccountService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], AccountEstimatedCommissionsListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], AccountEstimatedCommissionsListComponent.prototype, "paginator", void 0);
AccountEstimatedCommissionsListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-account-estimated-commissions-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./account-estimated-commissions-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./account-estimated-commissions-list.component.css */ "./src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.css")).default]
    })
], AccountEstimatedCommissionsListComponent);



/***/ }),

/***/ "./src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.css":
/*!********************************************************************************************************!*\
  !*** ./src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.css ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n\n/* modal css */\n\n.mat-dialog-container {\n  padding: 0px !important;\n}\n\n.header {\n  padding-bottom: 20px;\n}\n\n.header img {\n  height: 30px;\n}\n\n.footer {\n  text-align: center;\n}\n\n.footer p {\n  color: #979797;\n  font-size: 12px;\n  text-shadow: 0 0 black;\n}\n\n.paynamics-logo {\n  display: block;\n  margin-left: auto;\n  margin-right: 0;\n}\n\n.payment-icon {\n  font-size: 45px;\n}\n\n.payment-icon.success {\n  color: #4caf50;\n}\n\n.payment-icon.failed {\n  color: #c31f09;\n}\n\n.payment-result-content {\n  text-align: center;\n  padding: 30px 0;\n}\n\n.fa-times {\n  color: #fff !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LW91dHN0YW5kaW5nLWJpbGxzLWxpc3QvYWNjb3VudC1vdXRzdGFuZGluZy1iaWxscy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBLGNBQWM7O0FBQ2Q7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LW91dHN0YW5kaW5nLWJpbGxzLWxpc3QvYWNjb3VudC1vdXRzdGFuZGluZy1iaWxscy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufVxuXG4vKiBtb2RhbCBjc3MgKi9cbi5tYXQtZGlhbG9nLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xufVxuXG4uaGVhZGVyIHtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG59XG5cbi5oZWFkZXIgaW1nIHtcbiAgaGVpZ2h0OiAzMHB4O1xufVxuXG4uZm9vdGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZm9vdGVyIHAge1xuICBjb2xvcjogIzk3OTc5NztcbiAgZm9udC1zaXplOiAxMnB4O1xuICB0ZXh0LXNoYWRvdzogMCAwIGJsYWNrO1xufVxuXG4ucGF5bmFtaWNzLWxvZ28ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cblxuLnBheW1lbnQtaWNvbiB7XG4gIGZvbnQtc2l6ZTogNDVweDtcbn1cblxuLnBheW1lbnQtaWNvbi5zdWNjZXNzIHtcbiAgY29sb3I6ICM0Y2FmNTA7XG59XG5cbi5wYXltZW50LWljb24uZmFpbGVkIHtcbiAgY29sb3I6ICNjMzFmMDk7XG59XG5cbi5wYXltZW50LXJlc3VsdC1jb250ZW50IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAzMHB4IDA7XG59XG5cbi5mYS10aW1lcyB7XG4gIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.ts":
/*!*******************************************************************************************************!*\
  !*** ./src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.ts ***!
  \*******************************************************************************************************/
/*! exports provided: AccountOutstandingBillsListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountOutstandingBillsListComponent", function() { return AccountOutstandingBillsListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_account_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");
/* harmony import */ var src_app_objects_PageFilterAccount__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/objects/PageFilterAccount */ "./src/app/objects/PageFilterAccount.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");















let AccountOutstandingBillsListComponent = class AccountOutstandingBillsListComponent {
    constructor(dialog, as, bms, fb, route) {
        this.dialog = dialog;
        this.as = as;
        this.bms = bms;
        this.fb = fb;
        this.route = route;
        this.displayedColumns = [
            'policyNumber',
            'policyHolder',
            'prn',
            'invoiceNumber',
            'currency',
            'effectivityDate',
            'expiryDate',
            'paymentDateExpiry',
            'age',
            'amount',
            'paymentStatus',
            'source',
            'subline'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.paymentStatusItems = ['Processing'];
        this.currencyItems = ['PHP', 'EUR', 'USD'];
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterAccount__WEBPACK_IMPORTED_MODULE_12__["PageFilterAccount"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'policyNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
    }
    ngOnInit() {
        var _this = this;
        //opening modal for success/failed payment
        this.route.queryParams
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["filter"])(params => params.successPage))
            .subscribe(params => {
            setTimeout(function () {
                params.message;
                _this.openPaymentResultModal(params.successPage == 'true', params.message);
            }, 500);
        });
        this.getList();
        this.createForm();
    }
    createForm() {
        this.filterForm = this.fb.group({
            policyNumber: [null],
            policyHolder: [null],
            prn: [null],
            invoiceNumber: [null],
            currency: [null],
            effectivityDate: [null],
            expiryDate: [null],
            paymentDateExpiry: [null],
            amount: [null],
            paymentStatus: [null],
            source: [null],
            subline: [null],
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
        this.pageFilter.effectivityDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].convertDatePickerDate(this.pageFilter.effectivityDate);
        this.pageFilter.expiryDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].convertDatePickerDate(this.pageFilter.expiryDate);
        this.pageFilter.paymentDateExpiry = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].convertDatePickerDate(this.pageFilter.paymentDateExpiry);
    }
    getList() {
        this.setPageFilters();
        this.as.getOutstandingBillsList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'policyNumber';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_11__["page"].ACC.OUT;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_10__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    openPaymentResultModal(status, error) {
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialogConfig"]();
        dialogConfig.restoreFocus = false;
        dialogConfig.autoFocus = false;
        dialogConfig.role = 'dialog';
        dialogConfig.width = '600px';
        dialogConfig.data = { status: status, errorMessage: error };
        this.dialogRef = this.dialog.open(this.paymentResultModal, dialogConfig);
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('policyNumber').setValue('');
        this.filterForm.get('policyHolder').setValue('');
        this.filterForm.get('prn').setValue('');
        this.filterForm.get('invoiceNumber').setValue('');
        this.filterForm.get('currency').setValue('');
        this.filterForm.get('effectivityDate').setValue('');
        this.filterForm.get('expiryDate').setValue('');
        this.filterForm.get('paymentDateExpiry').setValue('');
        this.filterForm.get('amount').setValue('');
        this.filterForm.get('paymentStatus').setValue('');
        this.filterForm.get('source').setValue('');
        this.filterForm.get('subline').setValue('');
        this.getList();
    }
};
AccountOutstandingBillsListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"] },
    { type: src_app_services_account_service__WEBPACK_IMPORTED_MODULE_9__["AccountService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_13__["ActivatedRoute"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], AccountOutstandingBillsListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], AccountOutstandingBillsListComponent.prototype, "paginator", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('paymentResult')
], AccountOutstandingBillsListComponent.prototype, "paymentResultModal", void 0);
AccountOutstandingBillsListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-account-outstanding-bills-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./account-outstanding-bills-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./account-outstanding-bills-list.component.css */ "./src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.css")).default]
    })
], AccountOutstandingBillsListComponent);



/***/ }),

/***/ "./src/app/components/account-premium-collection-list/account-premium-collection-list.component.css":
/*!**********************************************************************************************************!*\
  !*** ./src/app/components/account-premium-collection-list/account-premium-collection-list.component.css ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LXByZW1pdW0tY29sbGVjdGlvbi1saXN0L2FjY291bnQtcHJlbWl1bS1jb2xsZWN0aW9uLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FjY291bnQtcHJlbWl1bS1jb2xsZWN0aW9uLWxpc3QvYWNjb3VudC1wcmVtaXVtLWNvbGxlY3Rpb24tbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/account-premium-collection-list/account-premium-collection-list.component.ts":
/*!*********************************************************************************************************!*\
  !*** ./src/app/components/account-premium-collection-list/account-premium-collection-list.component.ts ***!
  \*********************************************************************************************************/
/*! exports provided: AccountPremiumCollectionListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountPremiumCollectionListComponent", function() { return AccountPremiumCollectionListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterAccount__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterAccount */ "./src/app/objects/PageFilterAccount.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_account_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");













let AccountPremiumCollectionListComponent = class AccountPremiumCollectionListComponent {
    constructor(dialog, as, bms, fb) {
        this.dialog = dialog;
        this.as = as;
        this.bms = bms;
        this.fb = fb;
        this.displayedColumns = [
            'policyNumber',
            'currency',
            'subline',
            'invoiceNumber',
            'effectivityDate',
            'expiryDate',
            'collectedDate',
            'collectionType',
            'receiptAmount',
            'netPremium',
            'surcharge',
            'tax',
            'interest',
            'source'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.currencyItems = ['PHP', 'EUR', 'USD'];
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterAccount__WEBPACK_IMPORTED_MODULE_5__["PageFilterAccount"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'policyNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
    }
    ngOnInit() {
        this.getList();
        this.createForm();
    }
    createForm() {
        this.filterForm = this.fb.group({
            policyNumber: [null],
            currency: [null],
            subline: [null],
            invoiceNumber: [null],
            effectivityDate: [null],
            expiryDate: [null],
            collectedDate: [null],
            collectionType: [null],
            receiptAmount: [null],
            netPremium: [null],
            surcharge: [null],
            tax: [null],
            interest: [null],
            source: [null],
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
        this.pageFilter.effectivityDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.effectivityDate);
        this.pageFilter.expiryDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.expiryDate);
        this.pageFilter.collectedDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.collectedDate);
    }
    getList() {
        this.setPageFilters();
        this.as.getPremiumCollectionList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'policyNumber';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_12__["page"].ACC.PRE;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('policyNumber').setValue('');
        this.filterForm.get('currency').setValue('');
        this.filterForm.get('subline').setValue('');
        this.filterForm.get('invoiceNumber').setValue('');
        this.filterForm.get('effectivityDate').setValue('');
        this.filterForm.get('expiryDate').setValue('');
        this.filterForm.get('collectedDate').setValue('');
        this.filterForm.get('collectionType').setValue('');
        this.filterForm.get('receiptAmount').setValue('');
        this.filterForm.get('netPremium').setValue('');
        this.filterForm.get('surcharge').setValue('');
        this.filterForm.get('tax').setValue('');
        this.filterForm.get('interest').setValue('');
        this.filterForm.get('source').setValue('');
        this.getList();
    }
};
AccountPremiumCollectionListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_account_service__WEBPACK_IMPORTED_MODULE_10__["AccountService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], AccountPremiumCollectionListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], AccountPremiumCollectionListComponent.prototype, "paginator", void 0);
AccountPremiumCollectionListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-account-premium-collection-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./account-premium-collection-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/account-premium-collection-list/account-premium-collection-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./account-premium-collection-list.component.css */ "./src/app/components/account-premium-collection-list/account-premium-collection-list.component.css")).default]
    })
], AccountPremiumCollectionListComponent);



/***/ }),

/***/ "./src/app/components/choose-agent/choose-agent.component.css":
/*!********************************************************************!*\
  !*** ./src/app/components/choose-agent/choose-agent.component.css ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".container {\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  padding: 15px;\n\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  position: relative;\n  z-index: 1;\n}\n\n.container::before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.wrap {\n  max-width: 450px;\n  width: 100%;\n  border-radius: 5px;\n  overflow: hidden;\n  padding: 15px 25px;\n  background: #fff;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jaG9vc2UtYWdlbnQvY2hvb3NlLWFnZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0VBS2pCLGFBQWE7RUFDYixlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixhQUFhOztFQUViLDRCQUE0QjtFQUM1QiwyQkFBMkI7RUFDM0Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsV0FBVztFQUNYLFlBQVk7RUFDWixNQUFNO0VBQ04sT0FBTztBQUNUOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Nob29zZS1hZ2VudC9jaG9vc2UtYWdlbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMTVweDtcblxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbn1cblxuLmNvbnRhaW5lcjo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogLTE7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbn1cblxuLndyYXAge1xuICBtYXgtd2lkdGg6IDQ1MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAxNXB4IDI1cHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/choose-agent/choose-agent.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/components/choose-agent/choose-agent.component.ts ***!
  \*******************************************************************/
/*! exports provided: ChooseAgentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChooseAgentComponent", function() { return ChooseAgentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _services_authentication_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/authentication.service */ "./src/app/services/authentication.service.ts");
/* harmony import */ var _services_agent_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/agent.service */ "./src/app/services/agent.service.ts");
/* harmony import */ var _constants_local_storage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../constants/local.storage */ "./src/app/constants/local.storage.ts");
/* harmony import */ var src_app_objects_SelectedAgent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/objects/SelectedAgent */ "./src/app/objects/SelectedAgent.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");









let ChooseAgentComponent = class ChooseAgentComponent {
    constructor(router, auths, as, fb) {
        this.router = router;
        this.auths = auths;
        this.as = as;
        this.fb = fb;
        this.currentUser = this.auths.currentUserValue;
        this.hasSelectedAgent = !src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(this.currentUser.selectedAgent);
        this.showCancelBtn = false;
    }
    ngOnInit() {
        this.createForm();
        const _this = this;
        if (this.hasSelectedAgent) {
            this.showCancelBtn = true;
            this.as.getAgentList(this.currentUser.selectedAgent.commStructure).then(res => {
                _this.agentLOV = res;
            });
            this.chooseAgentForm.get('commercialStructure').markAsDirty();
            this.chooseAgentForm.get('agent').markAsDirty();
        }
        this.as.getCommercialStructure().then(res => {
            _this.commercialStructureLOV = res;
        });
    }
    createForm() {
        let comval = null;
        let agentval = null;
        if (this.hasSelectedAgent) {
            comval = this.currentUser.selectedAgent.commStructure;
            agentval = this.currentUser.selectedAgent.agentCode;
        }
        this.chooseAgentForm = this.fb.group({
            commercialStructure: [comval, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            agent: [agentval, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
        });
    }
    comStructureChange() {
        const _this = this;
        const commercialStructure = parseInt(this.chooseAgentForm.get('commercialStructure').value);
        this.as.getAgentList(commercialStructure).then(res => {
            _this.agentLOV = res;
        });
    }
    cancel() {
        this.router.navigate(['']);
    }
    ;
    next() {
        const currentUser = this.auths.currentUserValue;
        const agentCode = parseInt(this.chooseAgentForm.get('agent').value);
        currentUser.agentCode = agentCode;
        //adds chosen agent to current user detail
        localStorage.setItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_6__["CURRENT_USER"], JSON.stringify(currentUser));
        const param = {
            agentCode: agentCode
        };
        this.as.getProductionAgentProfile(JSON.stringify(param)).then(res => {
            if (res.status) {
                var sa = new src_app_objects_SelectedAgent__WEBPACK_IMPORTED_MODULE_7__["SelectedAgent"]();
                const agentInfo = res.obj["agentInfo"];
                sa.agentCode = parseInt(agentInfo["codAgente"]);
                sa.agentName = agentInfo["nomAgente"];
                sa.documentCode = agentInfo["codDocumento"];
                sa.documentType = agentInfo["tipoDocumento"];
                sa.documentName = agentInfo["nomTipoDocumento"];
                sa.agentType = agentInfo["tipoAgente"];
                sa.agentTypeName = agentInfo["nomTipoAgente"];
                sa.agentAddress = agentInfo["dirAgente"];
                sa.commStructure = parseInt(this.chooseAgentForm.get('commercialStructure').value);
                currentUser.selectedAgent = sa;
                currentUser.commercialStructure = sa.commStructure;
                currentUser.token = "Bearer " + res.obj["token"];
                //adds chosen agent to current user detail
                localStorage.setItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_6__["CURRENT_USER"], JSON.stringify(currentUser));
                localStorage.removeItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_6__["DASH_INFO"]);
            }
            this.router.navigate(['']);
        });
    }
};
ChooseAgentComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_4__["AuthenticationService"] },
    { type: _services_agent_service__WEBPACK_IMPORTED_MODULE_5__["AgentService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] }
];
ChooseAgentComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-choose-agent',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./choose-agent.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/choose-agent/choose-agent.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./choose-agent.component.css */ "./src/app/components/choose-agent/choose-agent.component.css")).default]
    })
], ChooseAgentComponent);



/***/ }),

/***/ "./src/app/components/client-claims-list/client-claims-list.component.css":
/*!********************************************************************************!*\
  !*** ./src/app/components/client-claims-list/client-claims-list.component.css ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtY2xhaW1zLWxpc3QvY2xpZW50LWNsYWltcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtY2xhaW1zLWxpc3QvY2xpZW50LWNsYWltcy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/client-claims-list/client-claims-list.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/components/client-claims-list/client-claims-list.component.ts ***!
  \*******************************************************************************/
/*! exports provided: ClientClaimsListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientClaimsListComponent", function() { return ClientClaimsListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterClient */ "./src/app/objects/PageFilterClient.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/client.service */ "./src/app/services/client.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");













let ClientClaimsListComponent = class ClientClaimsListComponent {
    constructor(dialog, cs, bms, fb) {
        this.dialog = dialog;
        this.cs = cs;
        this.bms = bms;
        this.fb = fb;
        this.displayedColumns = [
            'claimNumber',
            'fileNumber',
            'fileName',
            'lossDate',
            'notificationDate',
            'reserveAmount',
            'source'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__["PageFilterClient"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'claimNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
        this.today = new Date();
    }
    ngOnInit() {
        this.getList();
        this.createForm();
    }
    createForm() {
        this.filterForm = this.fb.group({
            claimNumber: [null],
            fileNumber: [null],
            fileName: [null],
            lossDate: [null],
            notificationDate: [null],
            source: [null],
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
        this.pageFilter.lossDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.lossDate);
        this.pageFilter.notificationDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.notificationDate);
    }
    getList() {
        this.setPageFilters();
        this.cs.getClaimsList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'claimNumber';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_12__["page"].CLI.CLA;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('claimNumber').setValue('');
        this.filterForm.get('fileNumber').setValue('');
        this.filterForm.get('fileName').setValue('');
        this.filterForm.get('lossDate').setValue('');
        this.filterForm.get('notificationDate').setValue('');
        this.filterForm.get('source').setValue('');
        this.getList();
    }
};
ClientClaimsListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__["ClientService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], ClientClaimsListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], ClientClaimsListComponent.prototype, "paginator", void 0);
ClientClaimsListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-client-claims-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./client-claims-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-claims-list/client-claims-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./client-claims-list.component.css */ "./src/app/components/client-claims-list/client-claims-list.component.css")).default]
    })
], ClientClaimsListComponent);



/***/ }),

/***/ "./src/app/components/client-details-list/client-details-list.component.css":
/*!**********************************************************************************!*\
  !*** ./src/app/components/client-details-list/client-details-list.component.css ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtZGV0YWlscy1saXN0L2NsaWVudC1kZXRhaWxzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC1kZXRhaWxzLWxpc3QvY2xpZW50LWRldGFpbHMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/client-details-list/client-details-list.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/components/client-details-list/client-details-list.component.ts ***!
  \*********************************************************************************/
/*! exports provided: ClientDetailsListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientDetailsListComponent", function() { return ClientDetailsListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterClient */ "./src/app/objects/PageFilterClient.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/client.service */ "./src/app/services/client.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var src_app_services_lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/services/lov/third-party-lov-service */ "./src/app/services/lov/third-party-lov-service.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");














let ClientDetailsListComponent = class ClientDetailsListComponent {
    constructor(dialog, cs, bms, fb, tpls) {
        this.dialog = dialog;
        this.cs = cs;
        this.bms = bms;
        this.fb = fb;
        this.tpls = tpls;
        this.displayedColumns = [
            'name',
            'documentType',
            'documentCode',
            'address',
            'homeTelNumber',
            'businessTelNumber',
            'mobileNumber',
            'email'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.documentTypeItems = [];
        this.pageFilter = new src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__["PageFilterClient"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'name';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
    }
    ngOnInit() {
        this.getList();
        this.createForm();
        var _this = this;
        this.tpls.getDocumentType().then(res => {
            var types = [];
            res.forEach(r => {
                if (r.TIP_DOCUM != 'OTH') {
                    types.push(r);
                }
            });
            _this.documentTypeItems = types;
        });
    }
    createForm() {
        this.filterForm = this.fb.group({
            name: [null],
            documentType: [null],
            documentCode: [null],
            address: [null],
            homeTelNumber: [null],
            businessTelNumber: [null],
            mobileNumber: [null],
            email: [null]
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
    }
    getList() {
        this.setPageFilters();
        this.cs.getClientDetailsList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'name';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_13__["page"].CLI.CLI;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('name').setValue('');
        this.filterForm.get('documentType').setValue('');
        this.filterForm.get('documentCode').setValue('');
        this.filterForm.get('address').setValue('');
        this.filterForm.get('homeTelNumber').setValue('');
        this.filterForm.get('businessTelNumber').setValue('');
        this.filterForm.get('mobileNumber').setValue('');
        this.filterForm.get('email').setValue('');
        this.getList();
    }
};
ClientDetailsListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__["ClientService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] },
    { type: src_app_services_lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_12__["ThirdPartyLOVServices"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], ClientDetailsListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], ClientDetailsListComponent.prototype, "paginator", void 0);
ClientDetailsListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-client-details-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./client-details-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-details-list/client-details-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./client-details-list.component.css */ "./src/app/components/client-details-list/client-details-list.component.css")).default]
    })
], ClientDetailsListComponent);



/***/ }),

/***/ "./src/app/components/client-policy-active-list/client-policy-active-list.component.css":
/*!**********************************************************************************************!*\
  !*** ./src/app/components/client-policy-active-list/client-policy-active-list.component.css ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LWFjdGl2ZS1saXN0L2NsaWVudC1wb2xpY3ktYWN0aXZlLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC1wb2xpY3ktYWN0aXZlLWxpc3QvY2xpZW50LXBvbGljeS1hY3RpdmUtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/client-policy-active-list/client-policy-active-list.component.ts":
/*!*********************************************************************************************!*\
  !*** ./src/app/components/client-policy-active-list/client-policy-active-list.component.ts ***!
  \*********************************************************************************************/
/*! exports provided: ClientPolicyActiveListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientPolicyActiveListComponent", function() { return ClientPolicyActiveListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterClient */ "./src/app/objects/PageFilterClient.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/client.service */ "./src/app/services/client.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var src_app_services_lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/services/lov/third-party-lov-service */ "./src/app/services/lov/third-party-lov-service.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");














let ClientPolicyActiveListComponent = class ClientPolicyActiveListComponent {
    constructor(dialog, cs, bms, fb, tpls) {
        this.dialog = dialog;
        this.cs = cs;
        this.bms = bms;
        this.fb = fb;
        this.tpls = tpls;
        this.displayedColumns = [
            'policyNumber',
            'policyEffectivityDate',
            'policyDueDate',
            'line',
            'policyHolder',
            'documentType',
            'documentCode',
            'source'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.documentTypeItems = [];
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__["PageFilterClient"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'policyNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
        this.today = new Date();
    }
    ngOnInit() {
        this.getList();
        this.createForm();
        var _this = this;
        this.tpls.getDocumentType().then(res => {
            var types = [];
            res.forEach(r => {
                if (r.TIP_DOCUM != 'OTH') {
                    types.push(r);
                }
            });
            _this.documentTypeItems = types;
        });
    }
    createForm() {
        this.filterForm = this.fb.group({
            policyNumber: [null],
            effectivityDate: [null],
            dueDate: [null],
            line: [null],
            policyHolder: [null],
            documentType: [null],
            documentCode: [null],
            source: [null]
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
        this.pageFilter.effectivityDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.effectivityDate);
        this.pageFilter.dueDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.dueDate);
    }
    getList() {
        this.setPageFilters();
        this.cs.getPolicyActiveList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'policyNumber';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_13__["page"].CLI.ACT;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('policyNumber').setValue('');
        this.filterForm.get('effectivityDate').setValue('');
        this.filterForm.get('dueDate').setValue('');
        this.filterForm.get('line').setValue('');
        this.filterForm.get('policyHolder').setValue('');
        this.filterForm.get('documentType').setValue('');
        this.filterForm.get('documentCode').setValue('');
        this.filterForm.get('source').setValue('');
        this.getList();
    }
};
ClientPolicyActiveListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__["ClientService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] },
    { type: src_app_services_lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_12__["ThirdPartyLOVServices"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], ClientPolicyActiveListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], ClientPolicyActiveListComponent.prototype, "paginator", void 0);
ClientPolicyActiveListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-client-policy-active-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./client-policy-active-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-active-list/client-policy-active-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./client-policy-active-list.component.css */ "./src/app/components/client-policy-active-list/client-policy-active-list.component.css")).default]
    })
], ClientPolicyActiveListComponent);



/***/ }),

/***/ "./src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.css":
/*!****************************************************************************************************!*\
  !*** ./src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.css ***!
  \****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LWNhbmNlbGxlZC1saXN0L2NsaWVudC1wb2xpY3ktY2FuY2VsbGVkLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC1wb2xpY3ktY2FuY2VsbGVkLWxpc3QvY2xpZW50LXBvbGljeS1jYW5jZWxsZWQtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.ts":
/*!***************************************************************************************************!*\
  !*** ./src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.ts ***!
  \***************************************************************************************************/
/*! exports provided: ClientPolicyCancelledListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientPolicyCancelledListComponent", function() { return ClientPolicyCancelledListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterClient */ "./src/app/objects/PageFilterClient.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/client.service */ "./src/app/services/client.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");













let ClientPolicyCancelledListComponent = class ClientPolicyCancelledListComponent {
    constructor(dialog, cs, bms, fb) {
        this.dialog = dialog;
        this.cs = cs;
        this.bms = bms;
        this.fb = fb;
        this.displayedColumns = [
            'policyNumber',
            'policyEffectivityDate',
            'line',
            'policyHolder',
            'source'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__["PageFilterClient"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'policyNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
        this.today = new Date();
    }
    ngOnInit() {
        this.getList();
        this.createForm();
    }
    createForm() {
        this.filterForm = this.fb.group({
            policyNumber: [null],
            effectivityDate: [null],
            line: [null],
            policyHolder: [null],
            source: [null]
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
        this.pageFilter.effectivityDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.effectivityDate);
    }
    getList() {
        this.setPageFilters();
        this.cs.getPolicyCancelledList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'policyNumber';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_12__["page"].CLI.CAN;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('policyNumber').setValue('');
        this.filterForm.get('effectivityDate').setValue('');
        this.filterForm.get('line').setValue('');
        this.filterForm.get('policyHolder').setValue('');
        this.filterForm.get('source').setValue('');
        this.getList();
    }
};
ClientPolicyCancelledListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__["ClientService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], ClientPolicyCancelledListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], ClientPolicyCancelledListComponent.prototype, "paginator", void 0);
ClientPolicyCancelledListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-client-policy-cancelled-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./client-policy-cancelled-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./client-policy-cancelled-list.component.css */ "./src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.css")).default]
    })
], ClientPolicyCancelledListComponent);



/***/ }),

/***/ "./src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.css":
/*!**************************************************************************************************!*\
  !*** ./src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.css ***!
  \**************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LWV4cGlyaW5nLWxpc3QvY2xpZW50LXBvbGljeS1leHBpcmluZy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LWV4cGlyaW5nLWxpc3QvY2xpZW50LXBvbGljeS1leHBpcmluZy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.ts":
/*!*************************************************************************************************!*\
  !*** ./src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: ClientPolicyExpiringListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientPolicyExpiringListComponent", function() { return ClientPolicyExpiringListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterClient */ "./src/app/objects/PageFilterClient.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/client.service */ "./src/app/services/client.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");













let ClientPolicyExpiringListComponent = class ClientPolicyExpiringListComponent {
    constructor(dialog, cs, bms, fb) {
        this.dialog = dialog;
        this.cs = cs;
        this.bms = bms;
        this.fb = fb;
        this.displayedColumns = [
            'policyNumber',
            'policyEffectivityDate',
            'policyExpiryDate',
            'policyHolder',
            'email',
            'telephoneNumber'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__["PageFilterClient"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'policyNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
    }
    ngOnInit() {
        this.getList();
        this.createForm();
    }
    createForm() {
        this.filterForm = this.fb.group({
            policyNumber: [null],
            effectivityDate: [null],
            expiryDate: [null],
            policyHolder: [null],
            email: [null],
            telephoneNumber: [null],
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
        this.pageFilter.effectivityDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.effectivityDate);
        this.pageFilter.expiryDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.expiryDate);
    }
    getList() {
        this.setPageFilters();
        this.cs.getPolicyExpiringList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'policyNumber';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_12__["page"].CLI.EXP;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('policyNumber').setValue('');
        this.filterForm.get('effectivityDate').setValue('');
        this.filterForm.get('expiryDate').setValue('');
        this.filterForm.get('policyHolder').setValue('');
        this.filterForm.get('email').setValue('');
        this.filterForm.get('telephoneNumber').setValue('');
        this.getList();
    }
};
ClientPolicyExpiringListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__["ClientService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], ClientPolicyExpiringListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], ClientPolicyExpiringListComponent.prototype, "paginator", void 0);
ClientPolicyExpiringListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-client-policy-expiring-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./client-policy-expiring-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./client-policy-expiring-list.component.css */ "./src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.css")).default]
    })
], ClientPolicyExpiringListComponent);



/***/ }),

/***/ "./src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.css":
/*!********************************************************************************************************!*\
  !*** ./src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.css ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LW5vdC1yZW5ld2VkLWxpc3QvY2xpZW50LXBvbGljeS1ub3QtcmVuZXdlZC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LW5vdC1yZW5ld2VkLWxpc3QvY2xpZW50LXBvbGljeS1ub3QtcmVuZXdlZC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.ts":
/*!*******************************************************************************************************!*\
  !*** ./src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.ts ***!
  \*******************************************************************************************************/
/*! exports provided: ClientPolicyNotRenewedListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientPolicyNotRenewedListComponent", function() { return ClientPolicyNotRenewedListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterClient */ "./src/app/objects/PageFilterClient.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/client.service */ "./src/app/services/client.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");













let ClientPolicyNotRenewedListComponent = class ClientPolicyNotRenewedListComponent {
    constructor(dialog, cs, bms, fb) {
        this.dialog = dialog;
        this.cs = cs;
        this.bms = bms;
        this.fb = fb;
        this.displayedColumns = [
            'policyNumber',
            'policyEffectivityDate',
            'policyDueDate',
            'line',
            'policyHolder',
            'source'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__["PageFilterClient"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'policyNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
        this.today = new Date();
    }
    ngOnInit() {
        this.getList();
        this.createForm();
    }
    createForm() {
        this.filterForm = this.fb.group({
            policyNumber: [null],
            effectivityDate: [null],
            dueDate: [null],
            line: [null],
            policyHolder: [null],
            source: [null],
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
        this.pageFilter.effectivityDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.effectivityDate);
        this.pageFilter.dueDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.dueDate);
    }
    getList() {
        this.setPageFilters();
        this.cs.getPolicyNotRenewedList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'policyNumber';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_12__["page"].CLI.NOT;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('policyNumber').setValue('');
        this.filterForm.get('effectivityDate').setValue('');
        this.filterForm.get('dueDate').setValue('');
        this.filterForm.get('line').setValue('');
        this.filterForm.get('policyHolder').setValue('');
        this.filterForm.get('source').setValue('');
        this.getList();
    }
};
ClientPolicyNotRenewedListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__["ClientService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], ClientPolicyNotRenewedListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], ClientPolicyNotRenewedListComponent.prototype, "paginator", void 0);
ClientPolicyNotRenewedListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-client-policy-not-renewed-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./client-policy-not-renewed-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./client-policy-not-renewed-list.component.css */ "./src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.css")).default]
    })
], ClientPolicyNotRenewedListComponent);



/***/ }),

/***/ "./src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.css":
/*!********************************************************************************************************!*\
  !*** ./src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.css ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LXByb3Zpc2lvbmFsLWxpc3QvY2xpZW50LXBvbGljeS1wcm92aXNpb25hbC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LXByb3Zpc2lvbmFsLWxpc3QvY2xpZW50LXBvbGljeS1wcm92aXNpb25hbC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.ts":
/*!*******************************************************************************************************!*\
  !*** ./src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.ts ***!
  \*******************************************************************************************************/
/*! exports provided: ClientPolicyProvisionalListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientPolicyProvisionalListComponent", function() { return ClientPolicyProvisionalListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterClient */ "./src/app/objects/PageFilterClient.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/client.service */ "./src/app/services/client.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");













let ClientPolicyProvisionalListComponent = class ClientPolicyProvisionalListComponent {
    constructor(dialog, cs, bms, fb) {
        this.dialog = dialog;
        this.cs = cs;
        this.bms = bms;
        this.fb = fb;
        this.displayedColumns = [
            'policyNumber',
            'policyEffectivityDate',
            'policyDueDate',
            'line',
            'policyHolder',
            'source'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__["PageFilterClient"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'policyNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
        this.today = new Date();
    }
    ngOnInit() {
        this.getList();
        this.createForm();
    }
    createForm() {
        this.filterForm = this.fb.group({
            policyNumber: [null],
            effectivityDate: [null],
            dueDate: [null],
            line: [null],
            policyHolder: [null],
            source: [null],
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
        this.pageFilter.effectivityDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.effectivityDate);
        this.pageFilter.dueDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.dueDate);
    }
    getList() {
        this.setPageFilters();
        this.cs.getPolicyProvisionalList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'policyNumber';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_12__["page"].CLI.PRO;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('policyNumber').setValue('');
        this.filterForm.get('effectivityDate').setValue('');
        this.filterForm.get('dueDate').setValue('');
        this.filterForm.get('line').setValue('');
        this.filterForm.get('policyHolder').setValue('');
        this.filterForm.get('source').setValue('');
        this.getList();
    }
};
ClientPolicyProvisionalListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__["ClientService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], ClientPolicyProvisionalListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], ClientPolicyProvisionalListComponent.prototype, "paginator", void 0);
ClientPolicyProvisionalListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-client-policy-provisional-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./client-policy-provisional-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./client-policy-provisional-list.component.css */ "./src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.css")).default]
    })
], ClientPolicyProvisionalListComponent);



/***/ }),

/***/ "./src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.css":
/*!************************************************************************************************!*\
  !*** ./src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.css ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LXJlbmV3ZWQtbGlzdC9jbGllbnQtcG9saWN5LXJlbmV3ZWQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50LXBvbGljeS1yZW5ld2VkLWxpc3QvY2xpZW50LXBvbGljeS1yZW5ld2VkLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoLm1hdC1zb3J0LWhlYWRlci1zb3J0ZWQge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmRpdmlkZXIge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbn1cblxuLmNvbC1mb3JtLWxhYmVsIHtcbiAgZm9udC1zaXplOiA5MCU7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: ClientPolicyRenewedListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientPolicyRenewedListComponent", function() { return ClientPolicyRenewedListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterClient */ "./src/app/objects/PageFilterClient.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/client.service */ "./src/app/services/client.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var src_app_services_lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/services/lov/third-party-lov-service */ "./src/app/services/lov/third-party-lov-service.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");














let ClientPolicyRenewedListComponent = class ClientPolicyRenewedListComponent {
    constructor(dialog, cs, bms, fb, tpls) {
        this.dialog = dialog;
        this.cs = cs;
        this.bms = bms;
        this.fb = fb;
        this.tpls = tpls;
        this.displayedColumns = [
            'policyNumber',
            'policyEffectivityDate',
            'policyDueDate',
            'policyHolder',
            'documentType',
            'documentCode'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.documentTypeItems = [];
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__["PageFilterClient"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'policyNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
        this.today = new Date();
    }
    ngOnInit() {
        this.getList();
        this.createForm();
        var _this = this;
        this.tpls.getDocumentType().then(res => {
            var types = [];
            res.forEach(r => {
                if (r.TIP_DOCUM != 'OTH') {
                    types.push(r);
                }
            });
            _this.documentTypeItems = types;
        });
    }
    createForm() {
        this.filterForm = this.fb.group({
            policyNumber: [null],
            effectivityDate: [null],
            dueDate: [null],
            policyHolder: [null],
            documentType: [null],
            documentCode: [null],
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
        this.pageFilter.effectivityDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.effectivityDate);
        this.pageFilter.dueDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.dueDate);
    }
    getList() {
        this.setPageFilters();
        this.cs.getPolicyRenewedList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'policyNumber';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_13__["page"].CLI.REN;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('policyNumber').setValue('');
        this.filterForm.get('effectivityDate').setValue('');
        this.filterForm.get('dueDate').setValue('');
        this.filterForm.get('policyHolder').setValue('');
        this.filterForm.get('documentType').setValue('');
        this.filterForm.get('documentCode').setValue('');
        this.getList();
    }
};
ClientPolicyRenewedListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__["ClientService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] },
    { type: src_app_services_lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_12__["ThirdPartyLOVServices"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], ClientPolicyRenewedListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], ClientPolicyRenewedListComponent.prototype, "paginator", void 0);
ClientPolicyRenewedListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-client-policy-renewed-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./client-policy-renewed-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./client-policy-renewed-list.component.css */ "./src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.css")).default]
    })
], ClientPolicyRenewedListComponent);



/***/ }),

/***/ "./src/app/components/client-quotation-active-list/client-quotation-active-list.component.css":
/*!****************************************************************************************************!*\
  !*** ./src/app/components/client-quotation-active-list/client-quotation-active-list.component.css ***!
  \****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcXVvdGF0aW9uLWFjdGl2ZS1saXN0L2NsaWVudC1xdW90YXRpb24tYWN0aXZlLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC1xdW90YXRpb24tYWN0aXZlLWxpc3QvY2xpZW50LXF1b3RhdGlvbi1hY3RpdmUtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/client-quotation-active-list/client-quotation-active-list.component.ts":
/*!***************************************************************************************************!*\
  !*** ./src/app/components/client-quotation-active-list/client-quotation-active-list.component.ts ***!
  \***************************************************************************************************/
/*! exports provided: ClientQuotationActiveListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientQuotationActiveListComponent", function() { return ClientQuotationActiveListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterClient */ "./src/app/objects/PageFilterClient.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/client.service */ "./src/app/services/client.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");













let ClientQuotationActiveListComponent = class ClientQuotationActiveListComponent {
    constructor(dialog, cs, bms, fb) {
        this.dialog = dialog;
        this.cs = cs;
        this.bms = bms;
        this.fb = fb;
        this.displayedColumns = [
            'quotationNumber',
            'policyEffectivityDate',
            'policyDueDate',
            'line',
            'policyHolder',
            'source'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__["PageFilterClient"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'quotationNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
        this.today = new Date();
    }
    ngOnInit() {
        this.getList();
        this.createForm();
    }
    createForm() {
        this.filterForm = this.fb.group({
            quotationNumber: [null],
            effectivityDate: [null],
            dueDate: [null],
            line: [null],
            policyHolder: [null],
            source: [null],
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
        this.pageFilter.effectivityDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.effectivityDate);
        this.pageFilter.dueDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.dueDate);
    }
    getList() {
        this.setPageFilters();
        this.cs.getQuotationActiveList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'quotationNumber';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_12__["page"].CLI.ACTQ;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('quotationNumber').setValue('');
        this.filterForm.get('effectivityDate').setValue('');
        this.filterForm.get('dueDate').setValue('');
        this.filterForm.get('line').setValue('');
        this.filterForm.get('policyHolder').setValue('');
        this.filterForm.get('source').setValue('');
        this.getList();
    }
};
ClientQuotationActiveListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__["ClientService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], ClientQuotationActiveListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], ClientQuotationActiveListComponent.prototype, "paginator", void 0);
ClientQuotationActiveListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-client-quotation-active-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./client-quotation-active-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-quotation-active-list/client-quotation-active-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./client-quotation-active-list.component.css */ "./src/app/components/client-quotation-active-list/client-quotation-active-list.component.css")).default]
    })
], ClientQuotationActiveListComponent);



/***/ }),

/***/ "./src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.css":
/*!**************************************************************************************************************!*\
  !*** ./src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.css ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcXVvdGF0aW9uLXByb3Zpc2lvbmFsLWxpc3QvY2xpZW50LXF1b3RhdGlvbi1wcm92aXNpb25hbC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcXVvdGF0aW9uLXByb3Zpc2lvbmFsLWxpc3QvY2xpZW50LXF1b3RhdGlvbi1wcm92aXNpb25hbC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.ts":
/*!*************************************************************************************************************!*\
  !*** ./src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.ts ***!
  \*************************************************************************************************************/
/*! exports provided: ClientQuotationProvisionalListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientQuotationProvisionalListComponent", function() { return ClientQuotationProvisionalListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/PageFilterClient */ "./src/app/objects/PageFilterClient.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/client.service */ "./src/app/services/client.service.ts");
/* harmony import */ var _view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view-details-modal/view-details-modal.component */ "./src/app/components/view-details-modal/view-details-modal.component.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");













let ClientQuotationProvisionalListComponent = class ClientQuotationProvisionalListComponent {
    constructor(dialog, cs, bms, fb) {
        this.dialog = dialog;
        this.cs = cs;
        this.bms = bms;
        this.fb = fb;
        this.displayedColumns = [
            'quotationNumber',
            'policyEffectivityDate',
            'policyDueDate',
            'line',
            'policyHolder',
            'source'
        ];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.sourceItems = ['MIVO', 'TRONWEB'];
        this.pageFilter = new src_app_objects_PageFilterClient__WEBPACK_IMPORTED_MODULE_5__["PageFilterClient"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'quotationNumber';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
        this.today = new Date();
    }
    ngOnInit() {
        this.getList();
        this.createForm();
    }
    createForm() {
        this.filterForm = this.fb.group({
            quotationNumber: [null],
            effectivityDate: [null],
            dueDate: [null],
            line: [null],
            policyHolder: [null],
            source: [null],
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
        this.pageFilter.effectivityDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.effectivityDate);
        this.pageFilter.dueDate = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].convertDatePickerDate(this.pageFilter.dueDate);
    }
    getList() {
        this.setPageFilters();
        this.cs.getQuotationProvisionalList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'quotationNumber';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        row.type = _constants_page__WEBPACK_IMPORTED_MODULE_12__["page"].CLI.PROQ;
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_view_details_modal_view_details_modal_component__WEBPACK_IMPORTED_MODULE_11__["ViewDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('quotationNumber').setValue('');
        this.filterForm.get('effectivityDate').setValue('');
        this.filterForm.get('dueDate').setValue('');
        this.filterForm.get('line').setValue('');
        this.filterForm.get('policyHolder').setValue('');
        this.filterForm.get('source').setValue('');
        this.getList();
    }
};
ClientQuotationProvisionalListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: src_app_services_client_service__WEBPACK_IMPORTED_MODULE_10__["ClientService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], ClientQuotationProvisionalListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], ClientQuotationProvisionalListComponent.prototype, "paginator", void 0);
ClientQuotationProvisionalListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-client-quotation-provisional-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./client-quotation-provisional-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./client-quotation-provisional-list.component.css */ "./src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.css")).default]
    })
], ClientQuotationProvisionalListComponent);



/***/ }),

/***/ "./src/app/components/coverage-variable-data/coverage-variable-data.component.css":
/*!****************************************************************************************!*\
  !*** ./src/app/components/coverage-variable-data/coverage-variable-data.component.css ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY292ZXJhZ2UtdmFyaWFibGUtZGF0YS9jb3ZlcmFnZS12YXJpYWJsZS1kYXRhLmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/components/coverage-variable-data/coverage-variable-data.component.ts":
/*!***************************************************************************************!*\
  !*** ./src/app/components/coverage-variable-data/coverage-variable-data.component.ts ***!
  \***************************************************************************************/
/*! exports provided: CoverageVariableDataComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoverageVariableDataComponent", function() { return CoverageVariableDataComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var src_app_services_lov_car_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/lov/car.service */ "./src/app/services/lov/car.service.ts");





let CoverageVariableDataComponent = class CoverageVariableDataComponent {
    constructor(dialogRef, data, fb, cls) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.fb = fb;
        this.cls = cls;
        this.coverage = this.data.c.coverage;
        this.code = this.data.c.code;
        this.createVariableForm();
    }
    createVariableForm() {
        this.variableForm = this.fb.group({
            //1101
            lossAndDamageType: {
                value: null,
                disabled: true
            },
            finalRate: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].nullValidator]],
            adjustedCommissionRate: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].nullValidator]],
            lossRatioRate: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].nullValidator]],
            //1002
            ownDamageTowingLimit: {
                value: null,
                disabled: true
            },
            ownDamageRepairLimit: {
                value: null,
                disabled: true
            },
            ownDamageSpecialDeductible: {
                value: null,
                disabled: true
            },
            //1003
            theftTowingLimit: {
                value: null,
                disabled: true
            },
            theftRepairLimit: {
                value: null,
                disabled: true
            },
            theftSpecialDeductible: {
                value: null,
                disabled: true
            },
            //1007
            uppaDiscountType: {
                value: null,
                disabled: true
            },
            uppaDiscountAmount: {
                value: null,
                disabled: true
            },
            uppaCommissionAdjustment: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].nullValidator]],
            sumInsuredPerPassenger: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].nullValidator]],
            //1008
            aonFinalRate: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].nullValidator]],
            aonTowingLimit: {
                value: null,
                disabled: true
            },
            aonRepairLimit: {
                value: null,
                disabled: true
            },
            aonSpecialDeductible: {
                value: null,
                disabled: true
            },
            aonCommissionAdjustment: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].nullValidator]],
            //1020
            srccFinalRate: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].nullValidator]],
            srccTowingLimit: {
                value: null,
                disabled: true
            },
            srccRepairLimit: {
                value: null,
                disabled: true
            },
            srccSpecialDeductible: {
                value: null,
                disabled: true
            },
            srccCommissionAdjustment: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].nullValidator]],
            //1040
            roadAssistDiscount: {
                value: null,
                disabled: true
            },
            //1029
            ra100Discount: {
                value: null,
                disabled: true
            }
        }, {
            updateOn: 'submit'
        });
    }
    ngOnInit() {
        if (this.code == 1007) {
            this.cls.getSumInsuredPerPassenger(this.data.subline).then((res) => {
                this.sumInsuredPerPassengerLOV = res;
            });
        }
    }
    update() {
        this.dialogRef.close(true);
    }
    cancel() {
        this.dialogRef.close();
    }
};
CoverageVariableDataComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: src_app_services_lov_car_service__WEBPACK_IMPORTED_MODULE_4__["CarLOVServices"] }
];
CoverageVariableDataComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-coverage-variable-data',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./coverage-variable-data.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/coverage-variable-data/coverage-variable-data.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./coverage-variable-data.component.css */ "./src/app/components/coverage-variable-data/coverage-variable-data.component.css")).default]
    }),
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]))
], CoverageVariableDataComponent);



/***/ }),

/***/ "./src/app/components/coverages/coverages.component.css":
/*!**************************************************************!*\
  !*** ./src/app/components/coverages/coverages.component.css ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#coverages table {\n  text-align: center !important;\n  width: 100%;\n}\n\n#coverages .mat-header-cell {\n  text-align: center;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-cell.amount,\n.mat-header-cell.amount-header {\n  display: inline-grid;\n  text-align: right !important;\n}\n\n.mat-row.included {\n  background-color: #e1fce3;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb3ZlcmFnZXMvY292ZXJhZ2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2QkFBNkI7RUFDN0IsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBOztFQUVFLG9CQUFvQjtFQUNwQiw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NvdmVyYWdlcy9jb3ZlcmFnZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb3ZlcmFnZXMgdGFibGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbiNjb3ZlcmFnZXMgLm1hdC1oZWFkZXItY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1jZWxsLmFtb3VudCxcbi5tYXQtaGVhZGVyLWNlbGwuYW1vdW50LWhlYWRlciB7XG4gIGRpc3BsYXk6IGlubGluZS1ncmlkO1xuICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LXJvdy5pbmNsdWRlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMWZjZTM7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/coverages/coverages.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/components/coverages/coverages.component.ts ***!
  \*************************************************************/
/*! exports provided: CoveragesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoveragesComponent", function() { return CoveragesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var _coverage_variable_data_coverage_variable_data_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../coverage-variable-data/coverage-variable-data.component */ "./src/app/components/coverage-variable-data/coverage-variable-data.component.ts");
/* harmony import */ var src_app_objects_CoverageVariableData__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/objects/CoverageVariableData */ "./src/app/objects/CoverageVariableData.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_car_quote_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/car-quote.service */ "./src/app/services/car-quote.service.ts");









let CoveragesComponent = class CoveragesComponent {
    constructor(fb, cqs, dialog) {
        this.fb = fb;
        this.cqs = cqs;
        this.dialog = dialog;
        this.showCTPLChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.displayedColumns = ['included', 'coverage', 'sumInsured', 'netPremium', 'action'];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](this.source);
    }
    set loadCoverage(value) {
        this.triggerCounter = value;
        this.generateCoverage();
    }
    ngOnInit() {
        // for testing purposes
        // this.coverageList = coverageList;
        // this.amountList = amountList;
        // this.coverageVariable = coverageVariable;
        // this.premiumAmount = premiumAmount;
        // this.coverageAmount = coverageAmount2;
        this.generateCoverage();
    }
    generateCoverage() {
        //getting and setting defaults to variable data
        const cvd = new src_app_objects_CoverageVariableData__WEBPACK_IMPORTED_MODULE_6__["CoverageVariableData"]();
        this.cvddv = cvd.getDefaultValues(this.coverageVariable, this.coverageVariableData);
        this.source = this.getCoverageData();
        if (this.source.length) {
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](this.source);
            this.setForm(this.dataSource.filteredData);
        }
    }
    editCoverage(coverage) {
        var modalData = {
            c: coverage,
            subline: this.carDetails.subline,
            cvd: this.coverageVariableData,
            cvddv: this.cvddv
        };
        const dialogRef = this.dialog.open(_coverage_variable_data_coverage_variable_data_component__WEBPACK_IMPORTED_MODULE_5__["CoverageVariableDataComponent"], {
            width: '500px',
            data: modalData
        });
        dialogRef.afterClosed().subscribe(result => {
            // if update button is clicked
            if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(result)) {
                const c = new src_app_objects_CoverageVariableData__WEBPACK_IMPORTED_MODULE_6__["CoverageVariableData"]();
                c.validateValues(this.cvddv, this.coverageVariableData);
            }
        });
    }
    setForm(d) {
        this.cForm = this.fb.group({
            coverages: this.fb.array([])
        });
        const control = this.cForm.get('coverages');
        d.forEach((coverage) => {
            control.push(this.setCoverageFormArray(coverage));
        });
    }
    updateRow(row) {
        row.included = !row.included;
        let updateItem = this.source.find(this.findIndexToUpdate, row.coverage);
        let index = this.source.indexOf(updateItem);
        if (row.code == 1020 || row.code == 1008) {
            //if acts of nature or strike and riots is selected
            row.sumInsured = row.included ? this.carDetails.vehicleValue : 0;
        }
        if (row.isRoadAssist) {
            //unselect Road Assits options
            this.unselectRAOptions(row.code);
        }
        this.source[index] = row;
        // updating source
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](this.source);
        this.dataSource._updateChangeSubscription();
        this.dataSource._renderChangesSubscription;
        this.setForm(this.dataSource.filteredData);
    }
    findIndexToUpdate(row) {
        return row.coverage === this;
    }
    unselectRAOptions(code) {
        this.source.forEach(s => {
            if (s.isRoadAssist && s.code != code) {
                s.included = false;
            }
        });
    }
    get coverages() {
        return this.cForm.get('coverages');
    }
    setCoverageFormArray(coverage) {
        return this.fb.group({
            isMandatory: [coverage.isMandatory],
            included: [coverage.included],
            code: [coverage.code],
            coverage: [coverage.coverage],
            options: [coverage.options],
            sumInsured: [coverage.sumInsured],
            netPremium: [coverage.netPremium],
            isRoadAssist: [coverage.isRoadAssist],
            hasVariableData: [coverage.hasVariableData],
            isSelect: [coverage.isSelect]
        });
    }
    getCoverageData() {
        var returnData = [];
        this.coverageList.forEach((cov) => {
            var code = parseInt(cov.COD_COB);
            var product = this.carDetails.productList;
            // for testing
            // product = 10002;
            var name = cov.NOM_COB;
            var type = cov.MCA_TIP_CAPITAL;
            var isMandatory = cov.MCA_OBLIGATORIO == "S";
            var included = isMandatory;
            var options = [];
            var isSelect = false;
            var sumInsured = 0;
            var netPremium = 0;
            //gets the net premium per code
            this.premiumAmount.forEach((prem) => {
                if (code == prem.codCob) {
                    netPremium = prem.impSpto;
                }
            });
            //gets sum insured per code
            this.coverageAmount.forEach((covAmount) => {
                if (code == covAmount.codCob) {
                    sumInsured = covAmount.sumaAseg;
                    included = true;
                }
            });
            if (code == 1040 && !included) {
                // checking for product with Road Assist if code is 1040 or ROAD ASSIST
                included = this.hasRoadAssist;
            }
            else if (code == 1001 && included && this.isIssuance) {
                // opens CTPL panel if code is 1001 or COMP. THIRD PAR. LIAB.
                this.showCTPL = included;
                this.showCTPLChange.emit(this.showCTPL);
                this.cqs.activateCTPL(this.quoteForm, this.carDetails, this.showCTPL);
            }
            if (type == 4) {
                isSelect = true;
                this.amountList.forEach((amount) => {
                    if (code == amount.codCob) {
                        options.push({
                            value: amount.impLimite
                        });
                    }
                });
                var hasCounterpart = false;
                options.forEach((o) => {
                    if (o.value == sumInsured) {
                        hasCounterpart = true;
                    }
                });
                //if has no counterpart to sum insured select options, gets the first option value
                if (!hasCounterpart) {
                    sumInsured = options[0].value;
                }
            }
            else if (!included) {
                sumInsured = 0;
                netPremium = 0;
            }
            var returnObj = {
                isMandatory: isMandatory,
                included: included,
                code: code,
                coverage: name,
                options: options,
                sumInsured: sumInsured,
                netPremium: netPremium,
                isRoadAssist: (code == 1040),
                hasVariableData: (code == 1100 ||
                    code == 1002 ||
                    code == 1003 ||
                    code == 1007 ||
                    code == 1008 ||
                    code == 1020 ||
                    code == 1040),
                isSelect: isSelect
            };
            //exclude to coverages list
            if (code != 1006 &&
                code != 1018 &&
                code != 1026 &&
                code != 1027 &&
                code != 1029 &&
                code != 1037 &&
                !(code == 1036 && product == 10001)) {
                returnData.push(returnObj);
            }
        });
        return returnData;
    }
    ;
};
CoveragesComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: src_app_services_car_quote_service__WEBPACK_IMPORTED_MODULE_8__["CarQuoteServices"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "carDetails", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "coverageList", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "amountList", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "coverageVariable", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "premiumAmount", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "coverageAmount", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "coverageVariableData", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "isModifiedCoverage", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "isIssuance", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "hasRoadAssist", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "quoteForm", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "showCTPL", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CoveragesComponent.prototype, "loadCoverage", null);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], CoveragesComponent.prototype, "showCTPLChange", void 0);
CoveragesComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-coverages',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./coverages.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/coverages/coverages.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./coverages.component.css */ "./src/app/components/coverages/coverages.component.css")).default]
    })
], CoveragesComponent);



/***/ }),

/***/ "./src/app/components/create-third-party/create-third-party.component.css":
/*!********************************************************************************!*\
  !*** ./src/app/components/create-third-party/create-third-party.component.css ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".mat-dialog-title {\n  background: #3a3a3a;\n  color: #fff;\n  text-align: center;\n  padding: 10px 0;\n}\n\nh5 {\n  margin-top: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtdGhpcmQtcGFydHkvY3JlYXRlLXRoaXJkLXBhcnR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtdGhpcmQtcGFydHkvY3JlYXRlLXRoaXJkLXBhcnR5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWRpYWxvZy10aXRsZSB7XG4gIGJhY2tncm91bmQ6ICMzYTNhM2E7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cblxuaDUge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/create-third-party/create-third-party.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/components/create-third-party/create-third-party.component.ts ***!
  \*******************************************************************************/
/*! exports provided: CreateThirdPartyComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateThirdPartyComponent", function() { return CreateThirdPartyComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_objects_LOV_thirdPartyList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/objects/LOV/thirdPartyList */ "./src/app/objects/LOV/thirdPartyList.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/lov/third-party-lov-service */ "./src/app/services/lov/third-party-lov-service.ts");
/* harmony import */ var src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/objects/PolicyHolder */ "./src/app/objects/PolicyHolder.ts");
/* harmony import */ var src_app_services_third_party_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/third-party.service */ "./src/app/services/third-party.service.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");










let CreateThirdPartyComponent = class CreateThirdPartyComponent {
    constructor(dialogRef, data, fb, tpls, tps, bms) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.fb = fb;
        this.tpls = tpls;
        this.tps = tps;
        this.bms = bms;
        this.title = this.data.title;
        this.thirdParty = new src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_7__["PolicyHolder"]();
        this.TPLOV = new src_app_objects_LOV_thirdPartyList__WEBPACK_IMPORTED_MODULE_4__["ThirdPartyListObject"]();
        this.today = new Date();
        this.firstNameLabel = "First Name";
        this.firstNameError = "first name";
        //flag to show data for creating a person policy holder
        this.showPersonDetails = true;
        //flag to show data for creating organization/company 
        this.showOrgDetails = false;
    }
    ngOnInit() {
        // getting all list of values needed for creating of third party person/organizaion/company
        this.getLOVs();
        this.setData();
        this.setValidations();
    }
    createForm(type) {
        this.tpForm = this.fb.group({
            documentCode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            documentType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            policyHolderType: [null],
            prefix: [null],
            suffix: [null],
            firstName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            middleName: [null],
            lastName: type == "P" ? ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : [null],
            gender: type == "P" ? ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : [null],
            birthDate: [null],
            mobileNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            correspondenceType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            country: [null],
            state: [null],
            province: [null],
            city: [null],
            address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            zipcode: [null],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email]],
            orgDocumentType: [null],
            orgDocumentCode: [null],
            orgNationality: [null],
            orgFirstName: [null],
            orgLastName: [null],
            orgPost: [null],
            orgTypeOfBusiness: [null],
            personMaritalStatus: [null],
            personProfession: [null],
            personOccupation: [null],
            personNationality: [null],
            personType: [null],
            personLanguage: type == "P" ? ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : [null],
        });
    }
    setData() {
        const policyHolder = this.data.policyHolder;
        const type = policyHolder.policyHolderType;
        this.createForm(type);
        if (policyHolder.documentType == null || policyHolder.isExisting) {
            this.thirdParty.policyHolderType = "P"; //person
            this.thirdParty.correspondenceType = 1; //home
            this.thirdParty.personLanguage = "EN"; //english
        }
        else {
            this.thirdParty = policyHolder;
            this.tpForm.get('documentType').markAsDirty();
            this.tpForm.get('correspondenceType').markAsDirty();
            if (this.thirdParty.policyHolderType == "P") {
                this.tpForm.get('gender').markAsDirty();
            }
            this.getState();
            this.getProvince();
            this.getCity();
            this.getZipCode();
        }
    }
    setValidations() {
        var policyHolderType = this.tpForm.get('policyHolderType');
        var lastName = this.tpForm.get('lastName');
        var gender = this.tpForm.get('gender');
        policyHolderType.valueChanges.subscribe(type => {
            this.showPersonDetails = type == "P";
            this.showOrgDetails = type == "C";
            this.firstNameLabel = type == "P" ? "First Name" : "Company/Organization";
            this.firstNameError = this.firstNameLabel.toLocaleLowerCase();
            src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(lastName, type == "P" ? _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required : null);
            src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(gender, type == "P" ? _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required : null);
        });
    }
    getLOVs() {
        const _this = this;
        this.tpls.getDocumentType().then(res => {
            var types = [];
            res.forEach(r => {
                if (r.TIP_DOCUM != 'OTH') {
                    types.push(r);
                }
            });
            _this.TPLOV.documentTypeLOV = types;
        });
        this.tpls.getPrefix().then(res => {
            _this.TPLOV.prefixLOV = res;
        });
        this.tpls.getSuffix().then(res => {
            _this.TPLOV.suffixLOV = res;
        });
        this.tpls.getCorrespondenceType().then(res => {
            _this.TPLOV.correspondenceTypeLOV = res;
        });
        this.tpls.getCountry().then(res => {
            _this.TPLOV.countryLOV = res;
        });
        this.tpls.getNationality().then(res => {
            _this.TPLOV.nationalityLOV = res;
        });
        this.tpls.getPost().then(res => {
            _this.TPLOV.orgPostLOV = res;
        });
        this.tpls.getTypeOfBusiness().then(res => {
            _this.TPLOV.orgTypeOfBusinessLOV = res;
        });
        this.tpls.getMaritalStatus().then(res => {
            _this.TPLOV.personMaritalStatusLOV = res;
        });
        this.tpls.getProfession().then(res => {
            _this.TPLOV.personProfessionLOV = res;
            _this.TPLOV.personOccupationLOV = res;
        });
        this.tpls.getType().then(res => {
            _this.TPLOV.personTypeLOV = res;
        });
        this.tpls.getLanguage().then(res => {
            _this.TPLOV.personLanguageLOV = res;
        });
    }
    getState() {
        const _this = this;
        this.tpls.getState(this.thirdParty).then(res => {
            _this.TPLOV.stateLOV = res;
        });
    }
    getProvince() {
        const _this = this;
        this.tpls.getProvince(this.thirdParty).then(res => {
            _this.TPLOV.provinceLOV = res;
        });
    }
    getCity() {
        const _this = this;
        this.tpls.getCity(this.thirdParty).then(res => {
            _this.TPLOV.cityLOV = res;
        });
    }
    getZipCode() {
        const _this = this;
        this.tpls.getZipCode(this.thirdParty).then(res => {
            _this.TPLOV.zipcodeLOV = res;
        });
    }
    create() {
        this.tps.getThirdPartyDetails(this.thirdParty.documentType, this.thirdParty.documentCode).then((res) => {
            if (res.status) {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showWarning(this.bms, "Client information is already existing in the system. Search the client instead or create with a different document ID.");
            }
            else {
                this.thirdParty.isExisting = false;
                this.thirdParty.isPerson = this.thirdParty.policyHolderType == 'P';
                this.dialogRef.close(this.thirdParty);
            }
        });
    }
    cancel() {
        this.dialogRef.close();
    }
};
CreateThirdPartyComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"],] }] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: src_app_services_lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_6__["ThirdPartyLOVServices"] },
    { type: src_app_services_third_party_service__WEBPACK_IMPORTED_MODULE_8__["ThirdPartyService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_9__["BsModalService"] }
];
CreateThirdPartyComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-create-third-party',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./create-third-party.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/create-third-party/create-third-party.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./create-third-party.component.css */ "./src/app/components/create-third-party/create-third-party.component.css")).default]
    }),
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]))
], CreateThirdPartyComponent);



/***/ }),

/***/ "./src/app/components/dashboard/dashboard.component.css":
/*!**************************************************************!*\
  !*** ./src/app/components/dashboard/dashboard.component.css ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".dollar {\n  color: #4caf50;\n}\n\n.euro {\n  color: #03a9f4;\n}\n\n.img-container {\n  margin-bottom: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRvbGxhciB7XG4gIGNvbG9yOiAjNGNhZjUwO1xufVxuXG4uZXVybyB7XG4gIGNvbG9yOiAjMDNhOWY0O1xufVxuXG4uaW1nLWNvbnRhaW5lciB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/dashboard/dashboard.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/components/dashboard/dashboard.component.ts ***!
  \*************************************************************/
/*! exports provided: DashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardComponent", function() { return DashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _services_dashboard_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/dashboard.service */ "./src/app/services/dashboard.service.ts");
/* harmony import */ var _constants_local_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants/local.storage */ "./src/app/constants/local.storage.ts");




let DashboardComponent = class DashboardComponent {
    constructor(ds) {
        this.ds = ds;
        this.forex = {
            dollar: 0.0,
            euro: 0.0
        };
        this.dashboardInfo = {};
        this.showData = false;
        this.chartOptions = {
            responsive: true,
            scales: {
                yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            callback: function (value) {
                                return value.toLocaleString("en-US", {
                                    style: "currency",
                                    currency: "PHP"
                                });
                            }
                        }
                    }],
                xAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
            },
            tooltips: {
                mode: 'label',
                callbacks: {
                    label: function (tooltipItem, data) {
                        var value = Number(data.datasets[0].data[tooltipItem.index]).toFixed(2);
                        return ' PHP ' + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    },
                },
            }
        };
        this.chartLegend = true;
        this.barChartLabels = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        this.barChartType = 'bar';
        this.barChartPlugins = [];
        this.barChartColors = [{
                backgroundColor: "#212529"
            }];
        this.barChartData = [{
                data: [],
                label: 'Monthly Production'
            },];
    }
    ngOnInit() {
        const _this = this;
        this.ds.getForeignExchange().then((res) => {
            if (res.status) {
                _this.forex.dollar = res.obj["dollar"];
                _this.forex.euro = res.obj["euro"];
            }
        });
        const dashInfo = localStorage.getItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_3__["DASH_INFO"]);
        if (dashInfo != null) {
            this.dashboardInfo = JSON.parse(dashInfo);
            this.barChartData = [{
                    data: this.dashboardInfo["month"],
                    label: 'Monthly Production'
                }];
            this.showData = true;
        }
        else {
            this.ds.getDashboardInfo().then((res) => {
                if (res.status) {
                    localStorage.setItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_3__["DASH_INFO"], JSON.stringify(res.obj));
                    _this.dashboardInfo = res.obj;
                    _this.barChartData = [{
                            data: res.obj["month"],
                            label: 'Monthly Production'
                        }];
                    this.showData = true;
                }
            });
        }
        // this.loadScripts();
    }
};
DashboardComponent.ctorParameters = () => [
    { type: _services_dashboard_service__WEBPACK_IMPORTED_MODULE_2__["DashboardService"] }
];
DashboardComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-dashboard',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./dashboard.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/dashboard/dashboard.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./dashboard.component.css */ "./src/app/components/dashboard/dashboard.component.css")).default]
    })
], DashboardComponent);



/***/ }),

/***/ "./src/app/components/document-printing/document-printing.component.css":
/*!******************************************************************************!*\
  !*** ./src/app/components/document-printing/document-printing.component.css ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdW1lbnQtcHJpbnRpbmcvZG9jdW1lbnQtcHJpbnRpbmcuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/components/document-printing/document-printing.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/components/document-printing/document-printing.component.ts ***!
  \*****************************************************************************/
/*! exports provided: DocumentPrintingComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentPrintingComponent", function() { return DocumentPrintingComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _objects_DocumentPrinting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../objects/DocumentPrinting */ "./src/app/objects/DocumentPrinting.ts");
/* harmony import */ var _services_utility_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/utility.service */ "./src/app/services/utility.service.ts");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);








let DocumentPrintingComponent = class DocumentPrintingComponent {
    constructor(fb, us, bms) {
        this.fb = fb;
        this.us = us;
        this.bms = bms;
        this.documentPrintingDetails = new _objects_DocumentPrinting__WEBPACK_IMPORTED_MODULE_3__["DocumentPrinting"]();
        this.showPolicyDetails = false;
        this.showQuotationDetails = false;
        this.showCommissionStatementDetails = false;
        //flag if there is no generated commission statement dates for the agent
        this.showCsDate = false;
        this.showSOADetails = false;
        this.dateNameFormat = 'MMM DD, YYYY';
        this.dateValueFormat = 'DDMMYYYY';
        this.createForm();
        this.setValidations();
    }
    ngOnInit() {
        this.getSOADates();
        this.us.getDateRecord().then((res) => {
            // date records for commission statement dates
            if (res.status) {
                this.csProcessDateLOV = res.obj;
                if (this.csProcessDateLOV.length) {
                    this.formatDate(this.csProcessDateLOV);
                    this.showCsDate = true;
                }
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    formatDate(lov) {
        lov.forEach(el => {
            var date = new Date(el.fec_PROCESO);
            el.date = moment__WEBPACK_IMPORTED_MODULE_7__(date).format(this.dateNameFormat);
            el.value = moment__WEBPACK_IMPORTED_MODULE_7__(date).format(this.dateValueFormat);
        });
    }
    getSOADates() {
        const number = 3;
        let today = new Date();
        var arr = [];
        for (var i = 1; i <= number; i++) {
            var name = moment__WEBPACK_IMPORTED_MODULE_7__(today).subtract(1, 'months').endOf('month').format(this.dateNameFormat);
            var value = moment__WEBPACK_IMPORTED_MODULE_7__(today).subtract(1, 'months').endOf('month').format(this.dateValueFormat);
            today = new Date(name);
            arr.push({
                name,
                value
            });
        }
        this.soaProcessDateLOV = arr;
    }
    createForm() {
        this.documentPrintingForm = this.fb.group({
            documentType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            policyNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            endorsementNumber: [null],
            policyPPRF: [null],
            policyPAC: [null],
            policyPV: [null],
            quotationNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            csProcessDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            csPass: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            soaProcessDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            soaPass: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
    }
    setValidations() {
        var policyNumber = this.documentPrintingForm.get('policyNumber');
        var quotationNumber = this.documentPrintingForm.get('quotationNumber');
        var csProcessDate = this.documentPrintingForm.get('csProcessDate');
        var csPass = this.documentPrintingForm.get('csPass');
        var soaProcessDate = this.documentPrintingForm.get('soaProcessDate');
        var soaPass = this.documentPrintingForm.get('soaPass');
        this.documentPrintingForm.get('documentType').valueChanges.subscribe(documentType => {
            this.showPolicyDetails = false;
            this.showQuotationDetails = false;
            this.showCommissionStatementDetails = false;
            this.showSOADetails = false;
            //removing required validation
            _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(policyNumber, null);
            _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(quotationNumber, null);
            _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(csProcessDate, null);
            _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(csPass, null);
            _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(soaProcessDate, null);
            _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(soaPass, null);
            if (documentType == "P") { //policy
                this.showPolicyDetails = true;
                _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(policyNumber, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
            }
            else if (documentType == "Q") { //quotation
                this.showQuotationDetails = true;
                _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(quotationNumber, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
            }
            else if (documentType == "C") { //commission statement
                this.showCommissionStatementDetails = true;
                _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(csProcessDate, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
                _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(csPass, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
            }
            else if (documentType == "S") { //commission statement
                this.showSOADetails = true;
                _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(soaProcessDate, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
                _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(soaPass, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
            }
        });
    }
    policyNumberOnChange() {
        this.us.getEndorsementNumber(this.documentPrintingDetails).then((res) => {
            if (res.status) {
                this.documentPrintingDetails.endorsementNumber = res.obj;
            }
        });
    }
    print(documentPrintingDetails) {
        this.us.validatePrinting(documentPrintingDetails).then((res) => {
            if (res.status) {
                var ext = res.obj;
                this.us.printDocument(ext.toString()).subscribe(data => {
                    if (data != null) {
                        window.open(URL.createObjectURL(data));
                    }
                });
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.bms, res.message);
            }
        });
    }
};
DocumentPrintingComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_utility_service__WEBPACK_IMPORTED_MODULE_4__["UtilityService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] }
];
DocumentPrintingComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-document-printing',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./document-printing.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/document-printing/document-printing.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./document-printing.component.css */ "./src/app/components/document-printing/document-printing.component.css")).default]
    })
], DocumentPrintingComponent);



/***/ }),

/***/ "./src/app/components/faq/faq.component.css":
/*!**************************************************!*\
  !*** ./src/app/components/faq/faq.component.css ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n#faq span.qa-label {\n    font-size: 35px;\n    font-weight: 700;\n}\n\n#faq .question-panel {\n\tpadding-bottom: 40px;\n\tmargin-bottom: 40px;\n\tborder-bottom: 1px solid #e0e0e0;\n}\n\n#faq .question-container {\n\tpadding: 10px;\n\tbackground: #f5f5f5;\n\tborder-left: 5px solid #dc291e;\n}\n\n#faq .question-section h4 {\n\tmargin: 9px 0;\n}\n\n#faq .answer-container {\n\tbackground: #ffffff;\n\tborder-left: 5px solid #4a4a4a;\n\tpadding: 10px;\n\tcolor: #828282;\n}\n\n#faq .answer-section p, #faq .answer-section li {\n\tfont-size: 14px;\n\tline-height: 25px;\n}\n\n#faq img {\n\twidth: 100%;\n    border: 1px solid #000;\n    max-width: 900px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mYXEvZmFxLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7QUFFQTtDQUNDLG9CQUFvQjtDQUNwQixtQkFBbUI7Q0FDbkIsZ0NBQWdDO0FBQ2pDOztBQUVBO0NBQ0MsYUFBYTtDQUNiLG1CQUFtQjtDQUNuQiw4QkFBOEI7QUFDL0I7O0FBRUE7Q0FDQyxhQUFhO0FBQ2Q7O0FBRUE7Q0FDQyxtQkFBbUI7Q0FDbkIsOEJBQThCO0NBQzlCLGFBQWE7Q0FDYixjQUFjO0FBQ2Y7O0FBRUE7Q0FDQyxlQUFlO0NBQ2YsaUJBQWlCO0FBQ2xCOztBQUVBO0NBQ0MsV0FBVztJQUNSLHNCQUFzQjtJQUN0QixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2ZhcS9mYXEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuI2ZhcSBzcGFuLnFhLWxhYmVsIHtcbiAgICBmb250LXNpemU6IDM1cHg7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuI2ZhcSAucXVlc3Rpb24tcGFuZWwge1xuXHRwYWRkaW5nLWJvdHRvbTogNDBweDtcblx0bWFyZ2luLWJvdHRvbTogNDBweDtcblx0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbiNmYXEgLnF1ZXN0aW9uLWNvbnRhaW5lciB7XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGJhY2tncm91bmQ6ICNmNWY1ZjU7XG5cdGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2RjMjkxZTtcbn1cblxuI2ZhcSAucXVlc3Rpb24tc2VjdGlvbiBoNCB7XG5cdG1hcmdpbjogOXB4IDA7XG59XG5cbiNmYXEgLmFuc3dlci1jb250YWluZXIge1xuXHRiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuXHRib3JkZXItbGVmdDogNXB4IHNvbGlkICM0YTRhNGE7XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGNvbG9yOiAjODI4MjgyO1xufVxuXG4jZmFxIC5hbnN3ZXItc2VjdGlvbiBwLCAjZmFxIC5hbnN3ZXItc2VjdGlvbiBsaSB7XG5cdGZvbnQtc2l6ZTogMTRweDtcblx0bGluZS1oZWlnaHQ6IDI1cHg7XG59XG5cbiNmYXEgaW1nIHtcblx0d2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDtcbiAgICBtYXgtd2lkdGg6IDkwMHB4O1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/faq/faq.component.ts":
/*!*************************************************!*\
  !*** ./src/app/components/faq/faq.component.ts ***!
  \*************************************************/
/*! exports provided: FaqComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FaqComponent", function() { return FaqComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");


let FaqComponent = class FaqComponent {
    constructor() { }
    ngOnInit() {
    }
};
FaqComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-faq',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./faq.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/faq/faq.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./faq.component.css */ "./src/app/components/faq/faq.component.css")).default]
    })
], FaqComponent);



/***/ }),

/***/ "./src/app/components/fixed-coverages/fixed-coverages.component.css":
/*!**************************************************************************!*\
  !*** ./src/app/components/fixed-coverages/fixed-coverages.component.css ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#coverageBreakdown table {\n  text-align: center !important;\n  width: 100%;\n}\n\n#coverageBreakdown .mat-header-cell {\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9maXhlZC1jb3ZlcmFnZXMvZml4ZWQtY292ZXJhZ2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2QkFBNkI7RUFDN0IsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9maXhlZC1jb3ZlcmFnZXMvZml4ZWQtY292ZXJhZ2VzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjY292ZXJhZ2VCcmVha2Rvd24gdGFibGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbiNjb3ZlcmFnZUJyZWFrZG93biAubWF0LWhlYWRlci1jZWxsIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/fixed-coverages/fixed-coverages.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/components/fixed-coverages/fixed-coverages.component.ts ***!
  \*************************************************************************/
/*! exports provided: FixedCoveragesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FixedCoveragesComponent", function() { return FixedCoveragesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");


let FixedCoveragesComponent = class FixedCoveragesComponent {
    constructor() {
        this.coverageList = [];
        this.displayedColumns = ['label', 'sumInsured'];
        this.coverageData = [];
    }
    set loadCoverage(value) {
        this.triggerCounter = value;
        this.generateCoverage();
    }
    ngOnInit() {
        this.generateCoverage();
    }
    generateCoverage() {
        this.coverageData = [];
        let headers = [];
        //coverage headers
        if (this.line == 'travel') {
            headers = [300, 332, 330, 302, 316, 319, 324, 333];
        }
        else if (this.line == 'accident') {
            headers = [340];
        }
        this.coverageList.forEach(coverage => {
            var obj = {};
            // bolder label if it is a header
            obj.code = coverage.codCob;
            if (this.line == 'home') {
                obj.isHeader = coverage.MCA_TIP_CAPITAL == '5' || coverage.nomCob == 'OTHER RELATED STRUCTURES' || coverage.nomCob == 'OTHER RELATED CONTENTS';
            }
            else {
                obj.isHeader = headers.indexOf(obj.code) !== -1;
            }
            obj.label = obj.isHeader ? '<strong>' + coverage.nomCob + '</strong>' : coverage.nomCob;
            obj.sumInsured = coverage.sumaAseg;
            obj.showDetails = false;
            if (obj.isHeader && obj.code != 330 && obj.code != 332) {
                if (this.line != 'home' || obj.sumInsured == 0) {
                    obj.showDetails = true;
                }
                obj.details = '';
            }
            else if (obj.sumInsured == null) {
                obj.showDetails = true;
                obj.details = 'n/a';
            }
            else if (obj.sumInsured == 0) {
                obj.showDetails = true;
                obj.details = obj.isHeader ? '' : 'actual cost';
            }
            if (coverage.codMon == 2) {
                obj.currency = 'USD';
            }
            else if (coverage.codMon == 3) {
                obj.currency = 'EU';
            }
            else {
                obj.currency = 'PHP';
            }
            this.coverageData.push(obj);
            //if selected product has hospital cash benefit coverage
            if (this.line == 'accident' && coverage.codCob == 357) {
                var obj1 = {};
                obj1.showDetails = true;
                obj1.label = 'Daily Cash Benefit - up to 365 days only, starting on the first day of Hospital Confinement or after 24 hours of covered accident / Sudden illness';
                obj1.details = 'Php 1,000.00/day';
                this.coverageData.push(obj1);
                var obj2 = {};
                obj2.showDetails = true;
                obj2.label = '50% increase in Daily Cash Benefit, in case of Intensive Care Unit confinement';
                obj2.details = 'Php 1,500.00/day';
                this.coverageData.push(obj2);
                var obj3 = {};
                obj3.showDetails = true;
                obj3.label = 'Surgical Cash Benefit for every covered surgery (Subject to Schedule of Surgical Benefits)';
                obj3.details = 'max of Php 10,000.00';
                this.coverageData.push(obj3);
            }
        });
    }
};
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], FixedCoveragesComponent.prototype, "line", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], FixedCoveragesComponent.prototype, "coverageList", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], FixedCoveragesComponent.prototype, "loadCoverage", null);
FixedCoveragesComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-fixed-coverages',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./fixed-coverages.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/fixed-coverages/fixed-coverages.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./fixed-coverages.component.css */ "./src/app/components/fixed-coverages/fixed-coverages.component.css")).default]
    })
], FixedCoveragesComponent);



/***/ }),

/***/ "./src/app/components/footer/footer.component.css":
/*!********************************************************!*\
  !*** ./src/app/components/footer/footer.component.css ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("footer.sticky-footer {\n    padding: 0;\n    flex-shrink: 0;\n    text-align: right;\n}\n\n.footer-wrapper {\n    padding-top: 30px;\n}\n\n.footer-wrapper p {\n    margin-bottom: 6px;\n    font-size: 10px;\n}\n\n.footer-wrapper img {\n    width: 200px;\n    margin: 0 -9px 5px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsY0FBYztJQUNkLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9vdGVyLnN0aWNreS1mb290ZXIge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgZmxleC1zaHJpbms6IDA7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5mb290ZXItd3JhcHBlciB7XG4gICAgcGFkZGluZy10b3A6IDMwcHg7XG59XG5cbi5mb290ZXItd3JhcHBlciBwIHtcbiAgICBtYXJnaW4tYm90dG9tOiA2cHg7XG4gICAgZm9udC1zaXplOiAxMHB4O1xufVxuXG4uZm9vdGVyLXdyYXBwZXIgaW1nIHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgbWFyZ2luOiAwIC05cHggNXB4O1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/footer/footer.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/components/footer/footer.component.ts ***!
  \*******************************************************/
/*! exports provided: FooterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FooterComponent", function() { return FooterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _constants_app_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants/app.constant */ "./src/app/constants/app.constant.ts");



let FooterComponent = class FooterComponent {
    constructor() {
        this.version = _constants_app_constant__WEBPACK_IMPORTED_MODULE_2__["VER"];
    }
    ngOnInit() { }
};
FooterComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-footer',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./footer.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/footer/footer.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./footer.component.css */ "./src/app/components/footer/footer.component.css")).default]
    })
], FooterComponent);



/***/ }),

/***/ "./src/app/components/group-policy/group-policy.component.css":
/*!********************************************************************!*\
  !*** ./src/app/components/group-policy/group-policy.component.css ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZ3JvdXAtcG9saWN5L2dyb3VwLXBvbGljeS5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/components/group-policy/group-policy.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/components/group-policy/group-policy.component.ts ***!
  \*******************************************************************/
/*! exports provided: GroupPolicyComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupPolicyComponent", function() { return GroupPolicyComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _validators_validate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../validators/validate */ "./src/app/validators/validate.ts");
/* harmony import */ var _services_lov_group_policy_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/lov/group-policy.service */ "./src/app/services/lov/group-policy.service.ts");
/* harmony import */ var src_app_objects_LOV_groupPolicyList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/objects/LOV/groupPolicyList */ "./src/app/objects/LOV/groupPolicyList.ts");
/* harmony import */ var _services_authentication_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../services/authentication.service */ "./src/app/services/authentication.service.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");









let GroupPolicyComponent = class GroupPolicyComponent {
    constructor(gpls, fb, auths) {
        this.gpls = gpls;
        this.fb = fb;
        this.auths = auths;
        this.user = this.auths.currentUserValue;
        this.changedValues = [];
        this.changedValuesChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.GPLOV = new src_app_objects_LOV_groupPolicyList__WEBPACK_IMPORTED_MODULE_6__["GroupPolicyListObject"]();
        this.today = new Date();
        this.expiryDateMinDate = moment__WEBPACK_IMPORTED_MODULE_3__().add(1, 'years').toDate();
    }
    set subline(subline) {
        this._subline = subline;
        if (subline != null) {
            this.getGroupPolicyLOV();
        }
    }
    set loadQuotation(value) {
        this.triggerCounter = value;
        if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(this.groupPolicy.commercialStructure)) {
            this.gpForm.get('commercialStructure').markAsDirty();
        }
        if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(this.groupPolicy.groupPolicy)) {
            this.gpForm.get('groupPolicy').markAsDirty();
        }
        if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(this.groupPolicy.contract)) {
            this.gpForm.get('contract').markAsDirty();
            this.gpls.getContract(this._subline, this.groupPolicy).then(res => {
                this.GPLOV.contractLOV = res;
            });
        }
        if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(this.groupPolicy.subContract)) {
            this.gpForm.get('subContract').markAsDirty();
            this.gpls.getSubContract(this._subline, this.groupPolicy).then(res => {
                this.GPLOV.subContractLOV = res;
            });
        }
    }
    ngOnInit() {
        this.createForm();
        setTimeout(() => {
            this.groupPolicy.agentCode = this.user.agentCode;
            this.groupPolicy.commercialStructure = this.user.commercialStructure;
            if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(this.groupPolicy.commercialStructure)) {
                this.gpForm.get('commercialStructure').markAsDirty();
            }
            const _this = this;
            this.gpls.getCommercialStructure().then(res => {
                _this.GPLOV.commercialStructureLOV = res;
            });
            _validators_validate__WEBPACK_IMPORTED_MODULE_4__["Validate"].setGroupPolicyValidations(this.gpForm, this.groupPolicy);
        });
    }
    getGroupPolicyLOV() {
        const _this = this;
        this.gpls.getGroupPolicy(this._subline).then(res => {
            _this.GPLOV.groupPolicyLOV = res;
        });
    }
    createForm() {
        this.gpForm = this.fb.group({
            //group policy
            groupPolicy: [null],
            contract: [null],
            subContract: [null],
            commercialStructure: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            agentCode: [{
                    value: '',
                    disabled: true
                }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            cbIsRenewal: [null],
            expiringPolicyNumber: [null]
        });
    }
    groupPolicyOnChange() {
        const _this = this;
        _this.GPLOV.contractLOV = [];
        this.gpls.getContract(this._subline, this.groupPolicy).then(res => {
            _this.GPLOV.contractLOV = res;
        });
        if (this.groupPolicy.groupPolicy == undefined || this.groupPolicy.groupPolicy == 0) {
            this.changedValues = this.changedValues.filter(v => v !== 'Contract');
            this.changedValues = this.changedValues.filter(v => v !== 'Sub Contract');
            this.changedValuesChange.emit(this.changedValues);
        }
    }
    contractOnChange() {
        const _this = this;
        _this.GPLOV.subContractLOV = [];
        this.gpls.getSubContract(this._subline, this.groupPolicy).then(res => {
            _this.GPLOV.subContractLOV = res;
        });
    }
    affecting(key, label) {
        if (this.prevDetails != null && 'groupPolicy' in this.prevDetails) {
            const prev = this.prevDetails.groupPolicy[key] == undefined ? "" : this.prevDetails.groupPolicy[key];
            const curr = this.groupPolicy[key] == undefined ? "" : this.groupPolicy[key];
            if (prev != curr) {
                if (!this.changedValues.includes(label)) {
                    //if changedValues length is greater than 0, request is affecting
                    this.changedValues.push(label);
                }
            }
            else {
                //remove all occurence
                this.changedValues = this.changedValues.filter(v => v !== label);
            }
            this.changedValuesChange.emit(this.changedValues);
        }
    }
};
GroupPolicyComponent.ctorParameters = () => [
    { type: _services_lov_group_policy_service__WEBPACK_IMPORTED_MODULE_5__["GroupPolicyLOVServices"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_7__["AuthenticationService"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], GroupPolicyComponent.prototype, "groupPolicy", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], GroupPolicyComponent.prototype, "prevDetails", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], GroupPolicyComponent.prototype, "changedValues", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], GroupPolicyComponent.prototype, "editMode", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], GroupPolicyComponent.prototype, "showExpiring", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], GroupPolicyComponent.prototype, "subline", null);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], GroupPolicyComponent.prototype, "loadQuotation", null);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], GroupPolicyComponent.prototype, "changedValuesChange", void 0);
GroupPolicyComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-group-policy',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./group-policy.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/group-policy/group-policy.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./group-policy.component.css */ "./src/app/components/group-policy/group-policy.component.css")).default]
    })
], GroupPolicyComponent);



/***/ }),

/***/ "./src/app/components/header/header.component.css":
/*!********************************************************!*\
  !*** ./src/app/components/header/header.component.css ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/components/header/header.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/components/header/header.component.ts ***!
  \*******************************************************/
/*! exports provided: HeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderComponent", function() { return HeaderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _utils_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/global */ "./src/app/utils/global.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _services_authentication_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/authentication.service */ "./src/app/services/authentication.service.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");
/* harmony import */ var src_app_objects_User__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/objects/User */ "./src/app/objects/User.ts");







let HeaderComponent = class HeaderComponent {
    constructor(router, authenticationService) {
        this.router = router;
        this.authenticationService = authenticationService;
        this.p = _constants_page__WEBPACK_IMPORTED_MODULE_5__["page"]; //constant pages
        this.canChooseAgent = false;
        this.currentUser = new src_app_objects_User__WEBPACK_IMPORTED_MODULE_6__["User"]();
    }
    ngOnInit() {
        this.currentUser = this.authenticationService.currentUserValue;
        this.canChooseAgent = this.currentUser.role === 2;
    }
    setPage(val) {
        _utils_global__WEBPACK_IMPORTED_MODULE_2__["Globals"].setPage(val);
    }
    chooseAgent() {
        this.router.navigate(['/agent']);
    }
    logout() {
        this.authenticationService.logout();
        this.router.navigate(['/login']);
    }
};
HeaderComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
    { type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_4__["AuthenticationService"] }
];
HeaderComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-header',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./header.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/header/header.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./header.component.css */ "./src/app/components/header/header.component.css")).default]
    })
], HeaderComponent);



/***/ }),

/***/ "./src/app/components/health-check/health-check.component.css":
/*!********************************************************************!*\
  !*** ./src/app/components/health-check/health-check.component.css ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".container {\n    width: 100%;\n    min-height: 100vh;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    padding: 15px;\n  \n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    position: relative;\n    z-index: 1;\n  }\n  \n  .container::before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n  }\n  \n  .wrap {\n    max-width: 1200px;\n    height: 650px;\n    width: 100%;\n    border-radius: 5px;\n    overflow: hidden;\n    background: #fff;\n  }\n  \n  .brand-logo {\n    cursor: pointer;\n  }\n  \n  .brand-logo img {\n    width: 100%;\n    margin: 35px 0 0;\n    padding: 20px;\n  }\n  \n  .col-lg-4.menu {\n    padding-left: 30px;\n    background: #2a2a2a;\n  }\n  \n  .col-lg-8.details {\n    padding: 30px 40px 0 30px;\n    text-align: justify;\n  }\n  \n  ul.health-menu {\n    display: block;\n    margin: 10px;\n    top: 90px;\n    position: relative;\n    list-style: none;\n    padding: 0;\n  }\n  \n  ul.health-menu li {\n    padding: 10px 5px;\n    background-color: #c64c4c;\n    border: 1px solid #525252;\n    margin: 20px 0;\n    text-align: center;\n    border-radius: 5px;\n    color: #fbfbfb;\n  }\n  \n  ul.health-menu li.live {\n    background-color: #8de865;\n    color: #404040;\n  }\n  \n  .scroll {\n    overflow: scroll;\n    height: 100%;\n  }\n  \n  .scroll-wrapper {\n    height: 635px;\n  }\n  \n  .top-20 {\n    padding-top: 20px;\n  }\n  \n  h5 {\n    font-weight: bold;\n  }\n  \n  h2 {\n    font-weight: bold;\n    text-align: center;\n    margin: 20px 0;\n  }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9oZWFsdGgtY2hlY2svaGVhbHRoLWNoZWNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsaUJBQWlCO0lBS2pCLGFBQWE7SUFDYixlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixhQUFhOztJQUViLDRCQUE0QjtJQUM1QiwyQkFBMkI7SUFDM0Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixVQUFVO0VBQ1o7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsV0FBVztJQUNYLFlBQVk7SUFDWixNQUFNO0lBQ04sT0FBTztFQUNUOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxZQUFZO0lBQ1osU0FBUztJQUNULGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsVUFBVTtFQUNaOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6Qix5QkFBeUI7SUFDekIsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsY0FBYztFQUNoQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsY0FBYztFQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhbHRoLWNoZWNrL2hlYWx0aC1jaGVjay5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogMTAwdmg7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tb3otYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMTVweDtcbiAgXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMTtcbiAgfVxuICBcbiAgLmNvbnRhaW5lcjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAtMTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gIH1cbiAgXG4gIC53cmFwIHtcbiAgICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgICBoZWlnaHQ6IDY1MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gIH1cbiAgXG4gIC5icmFuZC1sb2dvIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgXG4gIC5icmFuZC1sb2dvIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAzNXB4IDAgMDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICB9XG4gIFxuICAuY29sLWxnLTQubWVudSB7XG4gICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICAgIGJhY2tncm91bmQ6ICMyYTJhMmE7XG4gIH1cbiAgXG4gIC5jb2wtbGctOC5kZXRhaWxzIHtcbiAgICBwYWRkaW5nOiAzMHB4IDQwcHggMCAzMHB4O1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gIH1cbiAgXG4gIHVsLmhlYWx0aC1tZW51IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgdG9wOiA5MHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbiAgXG4gIHVsLmhlYWx0aC1tZW51IGxpIHtcbiAgICBwYWRkaW5nOiAxMHB4IDVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzY0YzRjO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM1MjUyNTI7XG4gICAgbWFyZ2luOiAyMHB4IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjb2xvcjogI2ZiZmJmYjtcbiAgfVxuXG4gIHVsLmhlYWx0aC1tZW51IGxpLmxpdmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM4ZGU4NjU7XG4gICAgY29sb3I6ICM0MDQwNDA7XG4gIH1cbiAgXG4gIC5zY3JvbGwge1xuICAgIG92ZXJmbG93OiBzY3JvbGw7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG4gIFxuICAuc2Nyb2xsLXdyYXBwZXIge1xuICAgIGhlaWdodDogNjM1cHg7XG4gIH1cbiAgXG4gIC50b3AtMjAge1xuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICB9XG4gIFxuICBoNSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbiAgXG4gIGgyIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAyMHB4IDA7XG4gIH0iXX0= */");

/***/ }),

/***/ "./src/app/components/health-check/health-check.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/components/health-check/health-check.component.ts ***!
  \*******************************************************************/
/*! exports provided: HealthCheckComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HealthCheckComponent", function() { return HealthCheckComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var src_app_services_lov_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/lov.service */ "./src/app/services/lov.service.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _constants_app_constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../constants/app.constant */ "./src/app/constants/app.constant.ts");





let HealthCheckComponent = class HealthCheckComponent {
    constructor(ls) {
        this.ls = ls;
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl;
        this.imgUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].imgUrl;
        this.production = _environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production;
        this.version = _constants_app_constant__WEBPACK_IMPORTED_MODULE_4__["VER"];
        this.backendConfigList = [];
    }
    ngOnInit() {
        this.ls.getConfigList().then(res => {
            if (res.status) {
                this.backendConfigList = res.obj;
            }
        });
    }
};
HealthCheckComponent.ctorParameters = () => [
    { type: src_app_services_lov_service__WEBPACK_IMPORTED_MODULE_2__["LovService"] }
];
HealthCheckComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-health-check',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./health-check.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/health-check/health-check.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./health-check.component.css */ "./src/app/components/health-check/health-check.component.css")).default]
    })
], HealthCheckComponent);



/***/ }),

/***/ "./src/app/components/individual-policy/individual-policy.component.css":
/*!******************************************************************************!*\
  !*** ./src/app/components/individual-policy/individual-policy.component.css ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5kaXZpZHVhbC1wb2xpY3kvaW5kaXZpZHVhbC1wb2xpY3kuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/components/individual-policy/individual-policy.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/components/individual-policy/individual-policy.component.ts ***!
  \*****************************************************************************/
/*! exports provided: IndividualPolicyComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IndividualPolicyComponent", function() { return IndividualPolicyComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");





let IndividualPolicyComponent = class IndividualPolicyComponent {
    constructor(fb, bms) {
        this.fb = fb;
        this.bms = bms;
        this.disableLoadBtn = true;
        this.createForm();
        this.setValidations();
    }
    ngOnInit() { }
    createForm() {
        this.loadForm = this.fb.group({
            quotationNumber: ['', null],
        });
    }
    setValidations() {
        var quotationNumber = this.loadForm.get('quotationNumber');
        quotationNumber.valueChanges.subscribe(number => {
            this.disableLoadBtn = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].isUndefined(number);
        });
    }
};
IndividualPolicyComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_3__["BsModalService"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], IndividualPolicyComponent.prototype, "details", void 0);
IndividualPolicyComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-individual-policy',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./individual-policy.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/individual-policy/individual-policy.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./individual-policy.component.css */ "./src/app/components/individual-policy/individual-policy.component.css")).default]
    })
], IndividualPolicyComponent);



/***/ }),

/***/ "./src/app/components/login/login.component.css":
/*!******************************************************!*\
  !*** ./src/app/components/login/login.component.css ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#login,\n#login .container-fluid,\n#login .row,\n#login .row .login-panel {\n  height: 100%;\n}\n\n#login .left-container img {\n  width: 100%;\n}\n\n.wrap-banner {\n  position: relative;\n  top: calc(50% - 100px);\n  color: #efefef;\n  max-width: 450px;\n  position: relative;\n  margin: 0 auto;\n}\n\n.login-form-title {\n  color: #c31f09;\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  display: block;\n}\n\n.wrap-input {\n  margin-bottom: 20px;\n}\n\n.wrap-login {\n  top: calc(50% - 180px);\n  width: 80%;\n  position: relative;\n  margin: 0px auto;\n}\n\n.login-logo {\n  width: 80%;\n  display: block;\n  margin: 0 auto 40px;\n}\n\n.login-footer {\n  position: absolute;\n  bottom: 10px;\n  margin: 0px auto;\n  padding: 0;\n  width: 94%;\n}\n\n.login-footer ul {\n  margin: 0 auto;\n  padding: 0px;\n  text-align: center;\n}\n\n.login-footer ul li {\n  display: inline-block;\n  margin-left: 15px;\n}\n\n.f-password {\n  color: #c31f09;\n}\n\n.login-version {\n  font-size: 11px;\n}\n\n#rememberMe {\n  margin-right: 5px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0VBSUUsWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsY0FBYztFQUNkLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNsb2dpbixcbiNsb2dpbiAuY29udGFpbmVyLWZsdWlkLFxuI2xvZ2luIC5yb3csXG4jbG9naW4gLnJvdyAubG9naW4tcGFuZWwge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbiNsb2dpbiAubGVmdC1jb250YWluZXIgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi53cmFwLWJhbm5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiBjYWxjKDUwJSAtIDEwMHB4KTtcbiAgY29sb3I6ICNlZmVmZWY7XG4gIG1heC13aWR0aDogNDUwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5sb2dpbi1mb3JtLXRpdGxlIHtcbiAgY29sb3I6ICNjMzFmMDk7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi53cmFwLWlucHV0IHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLndyYXAtbG9naW4ge1xuICB0b3A6IGNhbGMoNTAlIC0gMTgwcHgpO1xuICB3aWR0aDogODAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogMHB4IGF1dG87XG59XG5cbi5sb2dpbi1sb2dvIHtcbiAgd2lkdGg6IDgwJTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCBhdXRvIDQwcHg7XG59XG5cbi5sb2dpbi1mb290ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMTBweDtcbiAgbWFyZ2luOiAwcHggYXV0bztcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IDk0JTtcbn1cblxuLmxvZ2luLWZvb3RlciB1bCB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmxvZ2luLWZvb3RlciB1bCBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XG59XG5cbi5mLXBhc3N3b3JkIHtcbiAgY29sb3I6ICNjMzFmMDk7XG59XG5cbi5sb2dpbi12ZXJzaW9uIHtcbiAgZm9udC1zaXplOiAxMXB4O1xufVxuXG4jcmVtZW1iZXJNZSB7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/login/login.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/components/login/login.component.ts ***!
  \*****************************************************/
/*! exports provided: LoginComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function() { return LoginComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _services_authentication_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../services/authentication.service */ "./src/app/services/authentication.service.ts");
/* harmony import */ var _constants_local_storage__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../constants/local.storage */ "./src/app/constants/local.storage.ts");
/* harmony import */ var _constants_app_constant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../constants/app.constant */ "./src/app/constants/app.constant.ts");
/* harmony import */ var _utils_global__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/global */ "./src/app/utils/global.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");












let LoginComponent = class LoginComponent {
    constructor(router, route, fb, modalService, authenticationService) {
        this.router = router;
        this.route = route;
        this.fb = fb;
        this.modalService = modalService;
        this.authenticationService = authenticationService;
        this.loading = false;
        this.version = _constants_app_constant__WEBPACK_IMPORTED_MODULE_9__["VER"];
        // redirect to home if already logged in
        if (this.authenticationService.currentUserValue) {
            this.router.navigate(["/"]);
        }
        this.createForm();
    }
    ngOnInit() {
        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].modal(this.modalService, "You are about to enter MAPFRE Insurance Information System. The access and use of this system is limited to duly authorized personnel and strictly for official use only. MAPFRE Insurance informs all of its employees, agents, representatives, service providers, and all natural or juridical persons having official transactions with the company involving similar access to its information system that Information accessed in MAPFRE SYSTEM is considered property of MAPFRE Insurance and is subject to obligation of confidentiality and security in accordance with the laws on privacy and protection of personal information. All registered users of this system shall be monitored and all accesses be recorded by MAPFRE INSURANCE as a matter of right, in accordance with existing and applicable laws and Company Rules and regulations.", "MAPFRE INFORMATION USAGE SECURITY NOTICE");
        var mivoLogin = localStorage.getItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_8__["MIVO_LOGIN"]);
        if (mivoLogin != null) {
            var login = JSON.parse(mivoLogin);
            this.loginForm.markAsDirty();
            this.loginForm.setValue({
                username: login.username,
                password: login.password,
                rememberMe: login.rememberMe,
            });
        }
        // get return url from route parameters or default to '/'
        this.returnUrl = this.route.snapshot.queryParams["returnUrl"] || "/";
    }
    createForm() {
        this.loginForm = this.fb.group({
            username: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            password: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            rememberMe: [],
        });
    }
    rememberMe() {
        if (this.loginForm.value.rememberMe) {
            localStorage.setItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_8__["MIVO_LOGIN"], JSON.stringify(this.loginForm.value));
        }
        else {
            localStorage.removeItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_8__["MIVO_LOGIN"]);
        }
    }
    onSubmit() {
        this.rememberMe();
        this.loading = true;
        this.authenticationService
            .login(this.loginForm.value.username, this.loginForm.value.password)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["first"])())
            .subscribe((data) => {
            if (data != null) {
                _utils_global__WEBPACK_IMPORTED_MODULE_10__["Globals"].setPage(_constants_page__WEBPACK_IMPORTED_MODULE_11__["page"].DAS.N);
                if (data.role === 2) { // if employee
                    this.router.navigate(["/agent"]);
                }
                else {
                    this.router.navigate([this.returnUrl]);
                }
            }
            else {
                this.loading = false;
                this.alert = true;
                this.message = "Incorrect useraname or password.";
            }
        }, (err) => {
            this.loading = false;
            this.alert = true;
            this.message = "Application Error! " + err.message;
        });
    }
};
LoginComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__["BsModalService"] },
    { type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_7__["AuthenticationService"] }
];
LoginComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-login",
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./login.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/login/login.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./login.component.css */ "./src/app/components/login/login.component.css")).default]
    })
], LoginComponent);



/***/ }),

/***/ "./src/app/components/missing-page/missing-page.component.css":
/*!********************************************************************!*\
  !*** ./src/app/components/missing-page/missing-page.component.css ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWlzc2luZy1wYWdlL21pc3NpbmctcGFnZS5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/components/missing-page/missing-page.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/components/missing-page/missing-page.component.ts ***!
  \*******************************************************************/
/*! exports provided: MissingPageComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MissingPageComponent", function() { return MissingPageComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");


let MissingPageComponent = class MissingPageComponent {
    constructor() { }
    ngOnInit() {
    }
};
MissingPageComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-missing-page',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./missing-page.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/missing-page/missing-page.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./missing-page.component.css */ "./src/app/components/missing-page/missing-page.component.css")).default]
    })
], MissingPageComponent);



/***/ }),

/***/ "./src/app/components/modal/modal.component.css":
/*!******************************************************!*\
  !*** ./src/app/components/modal/modal.component.css ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".modal-footer {\n  padding: 0.50rem;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9tb2RhbC9tb2RhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9tb2RhbC9tb2RhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLWZvb3RlciB7XG4gIHBhZGRpbmc6IDAuNTByZW07XG59Il19 */");

/***/ }),

/***/ "./src/app/components/modal/modal.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/components/modal/modal.component.ts ***!
  \*****************************************************/
/*! exports provided: ModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalComponent", function() { return ModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");



let ModalComponent = class ModalComponent {
    constructor(bsModalRef) {
        this.bsModalRef = bsModalRef;
        this.icon = 'fa-smile';
        this.btnClass = 'default';
    }
    ngOnInit() {
        if (this.title == "Error") {
            this.icon = 'fa-times';
            this.btnClass = 'danger';
        }
        else if (this.title == "Warning") {
            this.icon = 'fa-exclamation';
        }
        else if (this.title == "Info") {
            this.icon = 'fa-info';
            this.btnClass = 'primary';
        }
    }
    confirm() {
        this.close();
    }
    okay() {
        this.bsModalRef.hide();
    }
    close() {
        this.bsModalRef.hide();
    }
    cancel() {
        this.bsModalRef.hide();
    }
};
ModalComponent.ctorParameters = () => [
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__["BsModalRef"] }
];
ModalComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-modal',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./modal.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/modal/modal.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./modal.component.css */ "./src/app/components/modal/modal.component.css")).default]
    })
], ModalComponent);



/***/ }),

/***/ "./src/app/components/outstanding-bills/outstanding-bills.component.css":
/*!******************************************************************************!*\
  !*** ./src/app/components/outstanding-bills/outstanding-bills.component.css ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-sort-header-container {\n  align-items: center;\n}\n\n.divider {\n  border-top: 1px solid #e0e0e0;\n}\n\n.col-form-label {\n  font-size: 90%;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9vdXRzdGFuZGluZy1iaWxscy9vdXRzdGFuZGluZy1iaWxscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvb3V0c3RhbmRpbmctYmlsbHMvb3V0c3RhbmRpbmctYmlsbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoLm1hdC1zb3J0LWhlYWRlci1zb3J0ZWQge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmRpdmlkZXIge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbn1cblxuLmNvbC1mb3JtLWxhYmVsIHtcbiAgZm9udC1zaXplOiA5MCU7XG59XG4iXX0= */");

/***/ }),

/***/ "./src/app/components/outstanding-bills/outstanding-bills.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/components/outstanding-bills/outstanding-bills.component.ts ***!
  \*****************************************************************************/
/*! exports provided: OutstandingBillsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OutstandingBillsComponent", function() { return OutstandingBillsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");





const ELEMENT_DATA = [{
        policyHolder: "JAMES, LeBRON",
        policyNumber: "1001661000178",
        currency: "PHP",
        invoiceNumber: 33432,
        receiptAmount: "560.00",
        commissionAmount: "44.80",
        withholdingTax: "0.00",
        source: "TRONWEB"
    }, {
        policyHolder: "WADE, DYWANE",
        policyNumber: "2001892000786",
        currency: "PHP",
        invoiceNumber: 416512,
        receiptAmount: "1,974.96",
        commissionAmount: "624.00",
        withholdingTax: "93.60",
        source: "TRONWEB"
    }, {
        policyHolder: "BRYANT, KOBE",
        policyNumber: "2001892000783",
        currency: "PHP",
        invoiceNumber: 33432,
        receiptAmount: "4,605.00",
        commissionAmount: "144.80",
        withholdingTax: "203.00",
        source: "TRONWEB"
    }, {
        policyHolder: "MITCHELL, DONOVAN",
        policyNumber: "2001892000787",
        currency: "PHP",
        invoiceNumber: 87687,
        receiptAmount: "800.00",
        commissionAmount: "444.80",
        withholdingTax: "405.00",
        source: "TRONWEB"
    }, {
        policyHolder: "ROSE, DERRICK",
        policyNumber: "2001892000788",
        currency: "PHP",
        invoiceNumber: 6323,
        receiptAmount: "560.00",
        commissionAmount: "44.80",
        withholdingTax: "0.00",
        source: "TRONWEB"
    }, {
        policyHolder: "IRVING, KYRIE",
        policyNumber: "2001892000789",
        currency: "PHP",
        invoiceNumber: 132433,
        receiptAmount: "5600.00",
        commissionAmount: "4764.80",
        withholdingTax: "6780.00",
        source: "TRONWEB"
    }
];
let OutstandingBillsComponent = class OutstandingBillsComponent {
    constructor() {
        this.displayedColumns = ['policyHolder', 'policyNumber', 'currency', 'invoiceNumber', 'receiptAmount', 'commissionAmount', 'withholdingTax', 'source'];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](ELEMENT_DATA);
    }
    ngOnInit() {
        this.dataSource.sort = this.sort;
        this.dataSource.paginator = this.paginator;
    }
};
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], OutstandingBillsComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], OutstandingBillsComponent.prototype, "paginator", void 0);
OutstandingBillsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-outstanding-bills',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./outstanding-bills.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/outstanding-bills/outstanding-bills.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./outstanding-bills.component.css */ "./src/app/components/outstanding-bills/outstanding-bills.component.css")).default]
    })
], OutstandingBillsComponent);



/***/ }),

/***/ "./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.css":
/*!******************************************************************************************!*\
  !*** ./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.css ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#paymentBreakdown table {\n  text-align: center !important;\n  width: 100%;\n}\n\n.header.row {\n  background: #3a3a3a;\n  color: #fff;\n  text-align: center;\n  padding: 10px 0 0;\n}\n\n#paymentBreakdown .mat-header-cell {\n  text-align: center;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.mat-dialog-actions {\n    border-top: 1px solid #e0e0e0;\n}\n\n.breakdown .col-4 {\n  padding: 10px 0;\n}\n\n.breakdown .col-4.right {\n  text-align: right;\n}\n\n.clearfix.divider {\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.show-more {\n  margin: 10px 0;\n  padding: 10px 0;\n  text-align: center;\n  display: block;\n  cursor: pointer;\n}\n\n.show-more:hover {\n  background: #e7e7e7;\n}\n\n.emphasize {\n  font-size: 16px;\n  font-weight: 600;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXltZW50LWJyZWFrZG93bi1tb2RhbC9wYXltZW50LWJyZWFrZG93bi1tb2RhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNkJBQTZCO0VBQzdCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtJQUNJLDZCQUE2QjtBQUNqQzs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3BheW1lbnQtYnJlYWtkb3duLW1vZGFsL3BheW1lbnQtYnJlYWtkb3duLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcGF5bWVudEJyZWFrZG93biB0YWJsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmhlYWRlci5yb3cge1xuICBiYWNrZ3JvdW5kOiAjM2EzYTNhO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAxMHB4IDAgMDtcbn1cblxuI3BheW1lbnRCcmVha2Rvd24gLm1hdC1oZWFkZXItY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1kaWFsb2ctYWN0aW9ucyB7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5icmVha2Rvd24gLmNvbC00IHtcbiAgcGFkZGluZzogMTBweCAwO1xufVxuXG4uYnJlYWtkb3duIC5jb2wtNC5yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uY2xlYXJmaXguZGl2aWRlciB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uc2hvdy1tb3JlIHtcbiAgbWFyZ2luOiAxMHB4IDA7XG4gIHBhZGRpbmc6IDEwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uc2hvdy1tb3JlOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2U3ZTdlNztcbn1cblxuLmVtcGhhc2l6ZSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: PaymentBreakdownModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaymentBreakdownModalComponent", function() { return PaymentBreakdownModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_animation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/utils/animation */ "./src/app/utils/animation.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_printing_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/printing.service */ "./src/app/services/printing.service.ts");
/* harmony import */ var src_app_constants_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/constants/page */ "./src/app/constants/page.ts");





// import {
//   CarQuoteServices
// } from 'src/app/services/car-quote.service';
// import {
//   TravelIssueServices
// } from 'src/app/services/travel-issue.service';
// import {
//   AccidentIssueServices
// } from 'src/app/services/accident-issue.service';


let PaymentBreakdownModalComponent = class PaymentBreakdownModalComponent {
    constructor(
    // private cqs: CarQuoteServices,
    // private tis: TravelIssueServices,
    // private ais: AccidentIssueServices,
    ps, dialogRef, data) {
        this.ps = ps;
        this.dialogRef = dialogRef;
        this.data = data;
        this.payments = [];
        this.number = this.data.number;
        this.product = this.data.product;
        this.payment = this.data.payment;
        this.isPostPolicy = this.data.isPostPolicy;
        this.line = this.data.line;
    }
    ngOnInit() {
        this.data.receipt.forEach((receipt) => {
            var exchangeRate = receipt["valCambio"];
            var currency = receipt["codMon"];
            var paymentNumber = receipt["numCuota"];
            var paymentBreakdown = [];
            this.data.breakdown.forEach((breakdown) => {
                var breakdownNumber = breakdown["numCuota"];
                if (breakdownNumber == paymentNumber) {
                    paymentBreakdown.push(breakdown);
                }
            });
            var currencyCode = "PHP";
            if (currency == "2") {
                currencyCode = "USD";
            }
            else if (currency == "3") {
                currencyCode = "EUR";
            }
            var efectivityDate = new Date(receipt["fecEfecRecibo"].substr(0, 10));
            var dueDate = new Date(receipt["fecVctoRecibo"].substr(0, 10));
            const data = [{
                    effectivityDate: src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].formatDate(efectivityDate),
                    dueDate: src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].formatDate(dueDate),
                    premium: receipt["impRecibo"],
                    netPremium: receipt["impNeta"],
                    tax: receipt["impImptos"],
                    commission: receipt["impComis"],
                }];
            var dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](data);
            const obj = {
                exchangeRate: exchangeRate,
                currency: currency,
                paymentNumber: paymentNumber,
                currencyCode: currencyCode,
                dataSource: dataSource,
                displayedColumns: ['effectivityDate', 'dueDate', 'premium', 'netPremium', 'tax', 'commission'],
                animationState: 'out',
                showExchangeRate: this.data.showExchangeRate,
                toggleLabel: 'Show Economic Values',
                paymentBreakdown: paymentBreakdown
            };
            this.payments.push(obj);
        });
    }
    toggle(index) {
        this.payments[index].animationState = this.payments[index].animationState === 'out' ? 'in' : 'out';
        this.payments[index].toggleLabel = (this.payments[index].animationState === 'out' ? 'Show' : 'Hide') + ' Economic Values';
    }
    close(b) {
        this.dialogRef.close(b);
    }
    printPolicy() {
        this.ps.printPolicy(this.data.number);
    }
    printQuote() {
        this.ps.printQuote(this.data.number);
    }
    proceedToIssuance(line) {
        this.dialogRef.close(false);
        if (line == "CAR") {
            // this.cqs.proceedToIssuance(this.data.number);
            this.ps.proceedToIssuance(this.data.number, src_app_constants_page__WEBPACK_IMPORTED_MODULE_6__["page"].ISS.CAR);
        }
        else if (line == "TRAVEL") {
            // this.tis.proceedToIssuance(this.data.number);
            this.ps.proceedToIssuance(this.data.number, src_app_constants_page__WEBPACK_IMPORTED_MODULE_6__["page"].ISS.TRA);
        }
        else if (line == "ACCIDENT") {
            // this.ais.proceedToIssuance(this.data.number);
            this.ps.proceedToIssuance(this.data.number, src_app_constants_page__WEBPACK_IMPORTED_MODULE_6__["page"].ISS.ACC);
        }
        else if (line == "HOME") {
            this.ps.proceedToIssuance(this.data.number, src_app_constants_page__WEBPACK_IMPORTED_MODULE_6__["page"].ISS.HOM);
        }
    }
};
PaymentBreakdownModalComponent.ctorParameters = () => [
    { type: src_app_services_printing_service__WEBPACK_IMPORTED_MODULE_5__["PrintingService"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] }
];
PaymentBreakdownModalComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-payment-breakdown-modal',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./payment-breakdown-modal.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.html")).default,
        animations: [src_app_utils_animation__WEBPACK_IMPORTED_MODULE_3__["SlideInOutAnimation"]],
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./payment-breakdown-modal.component.css */ "./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.css")).default]
    }),
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]))
], PaymentBreakdownModalComponent);



/***/ }),

/***/ "./src/app/components/payment-breakdown/payment-breakdown.component.css":
/*!******************************************************************************!*\
  !*** ./src/app/components/payment-breakdown/payment-breakdown.component.css ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#paymentBreakdown table {\n  text-align: center !important;\n  width: 100%;\n}\n\n#paymentBreakdown .mat-header-cell {\n  text-align: center;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.breakdown .col-4 {\n  padding: 10px 0;\n}\n\n.breakdown .col-4.right {\n  text-align: right;\n}\n\n.clearfix.divider {\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.show-more {\n  margin: 10px 0;\n  padding: 10px 0;\n  text-align: center;\n  display: block;\n  cursor: pointer;\n}\n\n.show-more:hover {\n  background: #e7e7e7;\n}\n\n.emphasize {\n  font-size: 16px;\n  font-weight: 600;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXltZW50LWJyZWFrZG93bi9wYXltZW50LWJyZWFrZG93bi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNkJBQTZCO0VBQzdCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3BheW1lbnQtYnJlYWtkb3duL3BheW1lbnQtYnJlYWtkb3duLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcGF5bWVudEJyZWFrZG93biB0YWJsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xuICB3aWR0aDogMTAwJTtcbn1cblxuI3BheW1lbnRCcmVha2Rvd24gLm1hdC1oZWFkZXItY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLmJyZWFrZG93biAuY29sLTQge1xuICBwYWRkaW5nOiAxMHB4IDA7XG59XG5cbi5icmVha2Rvd24gLmNvbC00LnJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5jbGVhcmZpeC5kaXZpZGVyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5zaG93LW1vcmUge1xuICBtYXJnaW46IDEwcHggMDtcbiAgcGFkZGluZzogMTBweCAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5zaG93LW1vcmU6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZTdlN2U3O1xufVxuXG4uZW1waGFzaXplIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNjAwO1xufVxuIl19 */");

/***/ }),

/***/ "./src/app/components/payment-breakdown/payment-breakdown.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/components/payment-breakdown/payment-breakdown.component.ts ***!
  \*****************************************************************************/
/*! exports provided: PaymentBreakdownComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaymentBreakdownComponent", function() { return PaymentBreakdownComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var _utils_animation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/animation */ "./src/app/utils/animation.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");





let PaymentBreakdownComponent = class PaymentBreakdownComponent {
    constructor() {
        this.payments = [];
    }
    set loadBreakdown(value) {
        this.triggerCounter = value;
        this.generateBreakdown();
    }
    ngOnInit() {
        this.generateBreakdown();
    }
    generateBreakdown() {
        this.payments = [];
        this.paymentReceipt.forEach((receipt) => {
            var exchangeRate = receipt["valCambio"];
            var currency = receipt["codMon"];
            var paymentNumber = receipt["numCuota"];
            var paymentBreakdown = [];
            this.paymentBreakdown.forEach((breakdown) => {
                var breakdownNumber = breakdown["numCuota"];
                if (breakdownNumber == paymentNumber) {
                    paymentBreakdown.push(breakdown);
                }
            });
            var currencyCode = "PHP";
            if (currency == "2") {
                currencyCode = "USD";
            }
            else if (currency == "3") {
                currencyCode = "EUR";
            }
            var efectivityDate = new Date(receipt["fecEfecRecibo"].substr(0, 10));
            var dueDate = new Date(receipt["fecVctoRecibo"].substr(0, 10));
            const data = [{
                    effectivityDate: src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].formatDate(efectivityDate),
                    dueDate: src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].formatDate(dueDate),
                    premium: receipt["impRecibo"],
                    netPremium: receipt["impNeta"],
                    tax: receipt["impImptos"],
                    commission: receipt["impComis"],
                }];
            var dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](data);
            const obj = {
                exchangeRate: exchangeRate,
                currency: currency,
                paymentNumber: paymentNumber,
                currencyCode: currencyCode,
                dataSource: dataSource,
                displayedColumns: ['effectivityDate', 'dueDate', 'premium', 'netPremium', 'tax', 'commission'],
                animationState: 'out',
                showExchangeRate: this.showExchangeRate,
                toggleLabel: 'Show Economic Values',
                paymentBreakdown: paymentBreakdown
            };
            this.payments.push(obj);
        });
    }
    toggle(index) {
        this.payments[index].animationState = this.payments[index].animationState === 'out' ? 'in' : 'out';
        this.payments[index].toggleLabel = (this.payments[index].animationState === 'out' ? 'Show' : 'Hide') + ' Economic Values';
    }
};
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PaymentBreakdownComponent.prototype, "paymentBreakdown", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PaymentBreakdownComponent.prototype, "paymentReceipt", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PaymentBreakdownComponent.prototype, "showExchangeRate", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PaymentBreakdownComponent.prototype, "loadBreakdown", null);
PaymentBreakdownComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-payment-breakdown',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./payment-breakdown.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/payment-breakdown/payment-breakdown.component.html")).default,
        animations: [_utils_animation__WEBPACK_IMPORTED_MODULE_3__["SlideInOutAnimation"]],
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./payment-breakdown.component.css */ "./src/app/components/payment-breakdown/payment-breakdown.component.css")).default]
    })
], PaymentBreakdownComponent);



/***/ }),

/***/ "./src/app/components/policy-holder/policy-holder.component.css":
/*!**********************************************************************!*\
  !*** ./src/app/components/policy-holder/policy-holder.component.css ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".btn-group {\n  float: right !important;\n}\n\nform .required.readonly {\n  border-left: 6px solid #7e7e7e !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wb2xpY3ktaG9sZGVyL3BvbGljeS1ob2xkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLHlDQUF5QztBQUMzQyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcG9saWN5LWhvbGRlci9wb2xpY3ktaG9sZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWdyb3VwIHtcbiAgZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7XG59XG5cbmZvcm0gLnJlcXVpcmVkLnJlYWRvbmx5IHtcbiAgYm9yZGVyLWxlZnQ6IDZweCBzb2xpZCAjN2U3ZTdlICFpbXBvcnRhbnQ7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/policy-holder/policy-holder.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/components/policy-holder/policy-holder.component.ts ***!
  \*********************************************************************/
/*! exports provided: PolicyHolderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PolicyHolderComponent", function() { return PolicyHolderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/objects/PolicyHolder */ "./src/app/objects/PolicyHolder.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var src_app_services_third_party_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/third-party.service */ "./src/app/services/third-party.service.ts");
/* harmony import */ var _create_third_party_create_third_party_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../create-third-party/create-third-party.component */ "./src/app/components/create-third-party/create-third-party.component.ts");
/* harmony import */ var src_app_services_lov_car_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/lov/car.service */ "./src/app/services/lov/car.service.ts");










let PolicyHolderComponent = class PolicyHolderComponent {
    constructor(fb, bms, tps, cls, dialog) {
        this.fb = fb;
        this.bms = bms;
        this.tps = tps;
        this.cls = cls;
        this.dialog = dialog;
        this.showPrefix = true;
        this.policyHolderChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.displayedColumns = ['documentType', 'firstName', 'middleName', 'lastName', 'address', 'action'];
        this.source = [];
        this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](this.source);
        this.showSearch = false;
        this.showSearchResult = false;
        this.showLastName = true;
        this.firstNameLabel = "First Name";
        this.firstNameError = "first name";
    }
    set loadQuotation(value) {
        this.triggerCounter = value;
        if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].isUndefined(this.policyHolder.documentCode)) {
            this.phForm.get('documentType').markAsDirty();
            this.phForm.get('documentCode').markAsDirty();
        }
    }
    ngOnInit() {
        this.createForm();
        this.setValidations();
        this.showContent = !this.optional;
        if (this.isIssuance) {
            //can only search company/organization if type is mortgagee
            this.policyHolderType = this.type == 'mortgagee' ? 'C' : 'P';
            if (this.type == 'secondary') {
                var _this = this;
                this.cls.getPHPrefix().then(res => {
                    _this.prefixLOV = res;
                });
                this.cls.getPHSeparator().then(res => {
                    _this.separatorLOV = res;
                });
            }
        }
    }
    createForm() {
        if (this.isIssuance) {
            this.phForm = this.fb.group({
                documentCode: this.optional ? [null] : ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
                documentType: this.optional ? [null] : ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
                secondaryPolicyHolderPrefix: [null],
                secondaryPolicyHolderSeparator: [null]
            });
        }
        else {
            this.phForm = this.fb.group({
                name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            });
        }
        this.searchForm = this.fb.group({
            policyHolderType: [null],
            firstName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            lastName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
        });
    }
    setValidations() {
        var policyHolderType = this.searchForm.get('policyHolderType');
        var lastName = this.searchForm.get('lastName');
        policyHolderType.valueChanges.subscribe(type => {
            this.showLastName = type == "P";
            this.firstNameLabel = type == "P" ? "First Name" : "Company/Organization";
            this.firstNameError = this.firstNameLabel.toLowerCase();
            src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(lastName, type == "P" ? _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required : null);
        });
    }
    browse() {
        this.showSearch = true;
        this.showSearchResult = false;
    }
    create() {
        this.showSearch = false;
        this.showSearchResult = false;
        var label = this.type == 'secondary' ? "Alternative " :
            this.type == 'assignee' ? "Assignee " :
                this.type == 'morgagee' ? "Mortagee " : '';
        let title = "Create " + label + "Policy Holder";
        const modalData = {
            title: title,
            policyHolder: this.policyHolder
        };
        const dialogRef = this.dialog.open(_create_third_party_create_third_party_component__WEBPACK_IMPORTED_MODULE_8__["CreateThirdPartyComponent"], {
            width: '1000px',
            data: modalData
        });
        dialogRef.afterClosed().subscribe(thirdParty => {
            // if create button is clicked
            if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].isUndefined(thirdParty)) {
                this.setPolicyHolder(thirdParty);
            }
        });
    }
    clear() {
        this.showSearch = false;
        this.showSearchResult = false;
        this.setPolicyHolder(new src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_2__["PolicyHolder"]());
    }
    setPolicyHolder(update) {
        this.policyHolder = update;
        this.policyHolderChange.emit(this.policyHolder);
        this.phForm.get('documentType').markAsDirty();
        this.phForm.get('documentCode').markAsDirty();
        var id = this.type + '_panel';
        src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].scroll(id);
    }
    searchResult() {
        this.showSearchResult = false;
        const isPerson = this.policyHolderType == "P";
        this.lastName = isPerson ? this.lastName : "";
        this.tps.getThirdPartyList(1, this.firstName, this.lastName).then((res) => {
            if (res.status) {
                this.source = res.obj;
                if (this.source.length) {
                    this.showSearchResult = true;
                    this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](this.source);
                    setTimeout(() => {
                        this.dataSource.paginator = this.paginator;
                    }, 100);
                }
                else {
                    var completeName = isPerson ? this.firstName + " " + this.lastName : this.firstName;
                    this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showInfo(this.bms, "No results for " + completeName);
                }
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    enableAddBtn(event, input) {
        var val = event.target.value;
        input.disabled = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].isEmpty(val);
    }
    add(row, input) {
        if (src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].isUndefined(input) || row.codDocum == input.value) {
            if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].isUndefined(this.compareTo) &&
                (this.type == 'primary' || this.type == 'assignee') &&
                this.compareTo.documentCode == row.codDocum &&
                this.compareTo.documentType == row.tipDocum) {
                // preventing user to choose same policy holder for both primary and assignee
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showWarning(this.bms, "Policy Holder and Assignee can not be the same, choose or create a new one.");
            }
            else {
                this.showSearch = false;
                this.showSearchResult = false;
                this.policyHolder.isExisting = true;
                this.policyHolder.isPerson = this.policyHolderType == "P";
                this.policyHolder.documentCode = row.codDocum;
                this.policyHolder.documentType = row.tipDocum;
                this.policyHolder.firstName = this.firstName;
                this.policyHolder.lastName = this.lastName;
                this.setPolicyHolder(this.policyHolder);
            }
        }
        else {
            var completeName = this.policyHolderType == "P" ? this.firstName + " " + this.lastName : this.firstName;
            this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.bms, "Incorrect document code entered for " + completeName);
        }
    }
};
PolicyHolderComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: src_app_services_third_party_service__WEBPACK_IMPORTED_MODULE_7__["ThirdPartyService"] },
    { type: src_app_services_lov_car_service__WEBPACK_IMPORTED_MODULE_9__["CarLOVServices"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PolicyHolderComponent.prototype, "title", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PolicyHolderComponent.prototype, "showCreateBtn", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PolicyHolderComponent.prototype, "policyHolder", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PolicyHolderComponent.prototype, "compareTo", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PolicyHolderComponent.prototype, "details", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PolicyHolderComponent.prototype, "isIssuance", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PolicyHolderComponent.prototype, "type", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PolicyHolderComponent.prototype, "optional", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PolicyHolderComponent.prototype, "editMode", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PolicyHolderComponent.prototype, "showPrefix", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PolicyHolderComponent.prototype, "loadQuotation", null);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], PolicyHolderComponent.prototype, "policyHolderChange", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_4__["MatPaginator"], {
        static: false
    })
], PolicyHolderComponent.prototype, "paginator", void 0);
PolicyHolderComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-policy-holder',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./policy-holder.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/policy-holder/policy-holder.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./policy-holder.component.css */ "./src/app/components/policy-holder/policy-holder.component.css")).default]
    })
], PolicyHolderComponent);

// for testing
const thirdPartyList = [{
        "codCia": 1,
        "tipDocum": "PAS",
        "codDocum": "P99999",
        "ape2Tercero": "MANAOIS",
        "nomTercero": "PATRICK",
        "nom2Tercero": "AMIAN",
        "dirDomicilioCliente": "MANILA",
        "codActTercero": "1"
    }, {
        "codCia": 1,
        "tipDocum": "PAS",
        "codDocum": "P00000000",
        "ape2Tercero": "MANAOIS",
        "nomTercero": "PATRICK",
        "nom2Tercero": "AMIAN",
        "dirDomicilioCliente": "MAKATI CITY",
        "codActTercero": "1"
    }, {
        "codCia": 1,
        "tipDocum": "DRI",
        "codDocum": "DRI-77777",
        "ape2Tercero": "MANAOIS",
        "nomTercero": "PATRICK",
        "nom2Tercero": "AMIAN",
        "dirDomicilioCliente": "BUENAVISTA",
        "codActTercero": "1"
    }, {
        "codCia": 1,
        "tipDocum": "PAS",
        "codDocum": "P77777",
        "ape2Tercero": "MANAOIS",
        "nomTercero": "PATRICK",
        "nom2Tercero": "AMIAN",
        "dirDomicilioCliente": "SANTO TOMAS",
        "codActTercero": "1"
    }, {
        "codCia": 1,
        "tipDocum": "PAS",
        "codDocum": "P1232131",
        "ape2Tercero": "MANAOIS",
        "nomTercero": "PATRICK",
        "nom2Tercero": "AMIAN",
        "dirDomicilioCliente": "MANGALDAN",
        "codActTercero": "1"
    }, {
        "codCia": 1,
        "tipDocum": "PAS",
        "codDocum": "P1111111",
        "ape2Tercero": "MANAOIS",
        "nomTercero": "PATRICK",
        "nom2Tercero": "AMIAN",
        "dirDomicilioCliente": "MANILA",
        "codActTercero": "1"
    }, {
        "codCia": 1,
        "tipDocum": "PAS",
        "codDocum": "231123",
        "ape2Tercero": "MANAOIS",
        "nomTercero": "PATRICK",
        "nom2Tercero": "AMIAN",
        "dirDomicilioCliente": "MAKATI CITY",
        "codActTercero": "1"
    }, {
        "codCia": 1,
        "tipDocum": "PAS",
        "codDocum": "9876111",
        "ape2Tercero": "MANAOIS",
        "nomTercero": "PATRICK",
        "nom2Tercero": "AMIAN",
        "dirDomicilioCliente": "MAKATI CITY",
        "codActTercero": "1"
    }, {
        "codCia": 1,
        "tipDocum": "TIN",
        "codDocum": "441-724-648-000",
        "ape2Tercero": "MANAOIS",
        "nomTercero": "PATRICK",
        "nom2Tercero": "AMIAN",
        "dirDomicilioCliente": "LAS PIÑAS CITY",
        "codActTercero": "1"
    }, {
        "codCia": 1,
        "tipDocum": "PAS",
        "codDocum": "02-3499027-4",
        "ape2Tercero": "MANAOIS",
        "nomTercero": "PATRICK",
        "nom2Tercero": "AMIAN",
        "dirDomicilioCliente": "LAS PIÑAS CITY",
        "codActTercero": "1"
    }];
const coverageList = [{
        "MCA_TIP_CAPITAL": "4",
        "MCA_OBLIGATORIO": "N",
        "COD_COB": "1001",
        "IMP_CALCULO": "0",
        "NOM_COB": "COMP. THIRD PAR. LIAB."
    }, {
        "MCA_TIP_CAPITAL": "5",
        "MCA_OBLIGATORIO": "S",
        "COD_COB": "1100",
        "IMP_CALCULO": "0",
        "NOM_COB": "LOSS AND DAMAGE"
    }, {
        "MCA_TIP_CAPITAL": "5",
        "MCA_OBLIGATORIO": "S",
        "COD_COB": "1002",
        "IMP_CALCULO": "0",
        "NOM_COB": "OWN DAMAGE"
    }, {
        "MCA_TIP_CAPITAL": "5",
        "MCA_OBLIGATORIO": "S",
        "COD_COB": "1003",
        "IMP_CALCULO": "0",
        "NOM_COB": "THEFT"
    }, {
        "MCA_TIP_CAPITAL": "4",
        "MCA_OBLIGATORIO": "S",
        "COD_COB": "1004",
        "IMP_CALCULO": "0",
        "NOM_COB": "VTPL-BODILY INJURY"
    }, {
        "MCA_TIP_CAPITAL": "4",
        "MCA_OBLIGATORIO": "S",
        "COD_COB": "1005",
        "IMP_CALCULO": "0",
        "NOM_COB": "VTPL-PROPERTY DAMAGE"
    }, {
        "MCA_TIP_CAPITAL": "5",
        "MCA_OBLIGATORIO": "S",
        "COD_COB": "1007",
        "IMP_CALCULO": "0",
        "NOM_COB": "UNNAMED PASS. P.A."
    }, {
        "MCA_TIP_CAPITAL": "5",
        "MCA_OBLIGATORIO": "S",
        "COD_COB": "1008",
        "IMP_CALCULO": "0",
        "NOM_COB": "ACTS OF NATURE"
    }, {
        "MCA_TIP_CAPITAL": "5",
        "MCA_OBLIGATORIO": "N",
        "COD_COB": "1020",
        "IMP_CALCULO": "0",
        "NOM_COB": "STRIKE AND RIOTS"
    }, {
        "MCA_TIP_CAPITAL": "4",
        "MCA_OBLIGATORIO": "N",
        "COD_COB": "1026",
        "IMP_CALCULO": "0",
        "NOM_COB": "ACCD'L DEATH/DISABL."
    }, {
        "MCA_TIP_CAPITAL": "",
        "MCA_OBLIGATORIO": "N",
        "COD_COB": "1040",
        "IMP_CALCULO": "0",
        "NOM_COB": "ROAD ASSIST"
    }, {
        "MCA_TIP_CAPITAL": "5",
        "MCA_OBLIGATORIO": "N",
        "COD_COB": "1029",
        "IMP_CALCULO": "360",
        "NOM_COB": "ROAD ASSIST 100"
    }, {
        "MCA_TIP_CAPITAL": "",
        "MCA_OBLIGATORIO": "N",
        "COD_COB": "1027",
        "IMP_CALCULO": "500",
        "NOM_COB": "MAPFRE ROAD ASSIST"
    }, {
        "MCA_TIP_CAPITAL": "4",
        "MCA_OBLIGATORIO": "S",
        "COD_COB": "1036",
        "IMP_CALCULO": "1",
        "NOM_COB": "PERSONAL PROPERTY COVER"
    }];


/***/ }),

/***/ "./src/app/components/profile/profile.component.css":
/*!**********************************************************!*\
  !*** ./src/app/components/profile/profile.component.css ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/components/profile/profile.component.ts":
/*!*********************************************************!*\
  !*** ./src/app/components/profile/profile.component.ts ***!
  \*********************************************************/
/*! exports provided: ProfileComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProfileComponent", function() { return ProfileComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _services_authentication_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/authentication.service */ "./src/app/services/authentication.service.ts");




let ProfileComponent = class ProfileComponent {
    constructor(fb, authenticationService) {
        this.fb = fb;
        this.authenticationService = authenticationService;
        this.currentUser = this.authenticationService.currentUserValue;
        this.createChangePasswordForm();
    }
    createChangePasswordForm() {
        this.changePasswordForm = this.fb.group({
            oldPassword: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            newPassword: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            confirmPassword: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
    }
    ngOnInit() {
    }
};
ProfileComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_3__["AuthenticationService"] }
];
ProfileComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-profile',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./profile.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/profile/profile.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./profile.component.css */ "./src/app/components/profile/profile.component.css")).default]
    })
], ProfileComponent);



/***/ }),

/***/ "./src/app/components/query/query.component.css":
/*!******************************************************!*\
  !*** ./src/app/components/query/query.component.css ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVlcnkvcXVlcnkuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/components/query/query.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/components/query/query.component.ts ***!
  \*****************************************************/
/*! exports provided: QueryComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueryComponent", function() { return QueryComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _objects_UtilitiesQueryFilter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../objects/UtilitiesQueryFilter */ "./src/app/objects/UtilitiesQueryFilter.ts");
/* harmony import */ var src_app_services_utility_query_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/utility-query.service */ "./src/app/services/utility-query.service.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var _constants_local_storage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../constants/local.storage */ "./src/app/constants/local.storage.ts");







let QueryComponent = class QueryComponent {
    constructor(utilityQueryService, bms) {
        this.utilityQueryService = utilityQueryService;
        this.bms = bms;
        this.selectedOption = 'policy';
        this.optPlaceholder = 'Policy Number';
        this.filter = new _objects_UtilitiesQueryFilter__WEBPACK_IMPORTED_MODULE_2__["UtilitiesQueryFilter"]();
    }
    ngOnInit() { }
    search() {
        if (this.inputVal.nativeElement.value === '') {
            this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.bms, 'Search value is empty.');
        }
        else {
            const userName = JSON.parse(localStorage.getItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_6__["MIVO_LOGIN"])).username;
            if (userName != null) {
                this.filter.userName = userName;
                this.filter.param = this.inputVal.nativeElement.value;
                this.filter.inquiryType = this.selectedOption === 'policy' ? 'GETPOLICYDETAILS' : 'GETCLAIMDETAILS';
                this.filter.paramName = this.selectedOption;
                this.utilityQueryService.getSearchResult(this.filter).then((res) => {
                    if (res) {
                        const jsonData = JSON.parse(JSON.stringify(res));
                        window.open(jsonData.obj, '_blank');
                    }
                });
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.bms, 'No login credentials found!');
            }
        }
    }
    onSelectOption(opt) {
        this.optPlaceholder = (opt === 'policy' ? 'Policy Number' : 'Claim Number');
    }
};
QueryComponent.ctorParameters = () => [
    { type: src_app_services_utility_query_service__WEBPACK_IMPORTED_MODULE_3__["UtilityQueryService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__["BsModalService"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('inputVal')
], QueryComponent.prototype, "inputVal", void 0);
QueryComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-query',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./query.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/query/query.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./query.component.css */ "./src/app/components/query/query.component.css")).default]
    })
], QueryComponent);



/***/ }),

/***/ "./src/app/components/quick-quotation-accident/quick-quotation-accident.component.css":
/*!********************************************************************************************!*\
  !*** ./src/app/components/quick-quotation-accident/quick-quotation-accident.component.css ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".additional-accident-details,\n.acci-spa,\n.acci-hcbi {\n  width: 100%;\n}\n\n.mat-row:hover {\n  background: azure;\n  cursor: pointer;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdWljay1xdW90YXRpb24tYWNjaWRlbnQvcXVpY2stcXVvdGF0aW9uLWFjY2lkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztFQUdFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9xdWljay1xdW90YXRpb24tYWNjaWRlbnQvcXVpY2stcXVvdGF0aW9uLWFjY2lkZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRkaXRpb25hbC1hY2NpZGVudC1kZXRhaWxzLFxuLmFjY2ktc3BhLFxuLmFjY2ktaGNiaSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LXJvdzpob3ZlciB7XG4gIGJhY2tncm91bmQ6IGF6dXJlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iXX0= */");

/***/ }),

/***/ "./src/app/components/quick-quotation-accident/quick-quotation-accident.component.ts":
/*!*******************************************************************************************!*\
  !*** ./src/app/components/quick-quotation-accident/quick-quotation-accident.component.ts ***!
  \*******************************************************************************************/
/*! exports provided: QuickQuotationAccidentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuickQuotationAccidentComponent", function() { return QuickQuotationAccidentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_objects_LOV_accidentList__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/LOV/accidentList */ "./src/app/objects/LOV/accidentList.ts");
/* harmony import */ var _services_quickquote_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/quickquote.service */ "./src/app/services/quickquote.service.ts");
/* harmony import */ var _services_lov_accident_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../services/lov/accident.service */ "./src/app/services/lov/accident.service.ts");
/* harmony import */ var src_app_objects_Accident__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/objects/Accident */ "./src/app/objects/Accident.ts");









let QuickQuotationAccidentComponent = class QuickQuotationAccidentComponent {
    constructor(fb, qqs, als, changeDetector, bms) {
        this.fb = fb;
        this.qqs = qqs;
        this.als = als;
        this.changeDetector = changeDetector;
        this.bms = bms;
        this.accidentDetails = new src_app_objects_Accident__WEBPACK_IMPORTED_MODULE_8__["Accident"]();
        this.LOV = new src_app_objects_LOV_accidentList__WEBPACK_IMPORTED_MODULE_5__["AccidentListObject"]();
        this.showDetails = false;
        this.showSPADetails = false;
        this.showHCBIDetails = false;
        this.displayedColumns = ['label', 'premium'];
        this.accidentData = [];
        this.coverageData = [];
        //flag to display product comparison
        this.showProductComparison = false;
        //flag to display product coverage
        this.showProductCoverage = false;
        this.createQuickQuoteForm();
        this.setValidations();
    }
    ngAfterViewChecked() {
        this.changeDetector.detectChanges();
    }
    ngOnInit() {
        var _this = this;
        this.als.getSubline().then(res => {
            _this.LOV.sublineLOV = res;
        });
        this.getAge();
        this.getChildNumber();
    }
    createQuickQuoteForm() {
        this.quickQuoteForm = this.fb.group({
            subline: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            occupationalClass: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            disablementValue: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].max(2000000), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].min(10000)]],
            primaryInsuredAge: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            cbSpouseAge: [null],
            spouseAge: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            cbChildNumber: [null],
            childNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
    }
    setValidations() {
        var _this = this;
        var occupationalClass = this.quickQuoteForm.get('occupationalClass');
        var disablementValue = this.quickQuoteForm.get('disablementValue');
        var primaryInsuredAge = this.quickQuoteForm.get('primaryInsuredAge');
        var spouseAge = this.quickQuoteForm.get('spouseAge');
        var cbSpouseAge = this.quickQuoteForm.get('cbSpouseAge');
        var childNumber = this.quickQuoteForm.get('childNumber');
        var cbChildNumber = this.quickQuoteForm.get('cbChildNumber');
        this.quickQuoteForm.get('subline').valueChanges.subscribe(subline => {
            this.accidentDetails.subline = subline;
            this.showDetails = false;
            this.showSPADetails = false;
            this.showHCBIDetails = false;
            //removing required validation
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(occupationalClass, null);
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(disablementValue, null);
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(primaryInsuredAge, null);
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(spouseAge, null);
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(childNumber, null);
            if (subline == 323) { //standard personal accident
                this.showDetails = true;
                this.showSPADetails = true;
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(occupationalClass, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(disablementValue, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].max(2000000), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].min(10000)]);
                this.als.getOccupationalClass(this.accidentDetails).then(res => {
                    _this.LOV.occupationalClassLOV = res;
                });
            }
            else if (subline == 326) { //hospital cash benefit
                this.showDetails = true;
                this.showHCBIDetails = true;
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(primaryInsuredAge, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(spouseAge, cbSpouseAge.value === true ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(childNumber, cbChildNumber.value === true ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
            }
        });
        cbSpouseAge.valueChanges.subscribe(checked => {
            this.accidentDetails.spouseAge = _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].setNull(checked, this.accidentDetails.spouseAge);
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(spouseAge, checked === true ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
        });
        cbChildNumber.valueChanges.subscribe(checked => {
            this.accidentDetails.childNumber = _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].setNull(checked, this.accidentDetails.childNumber);
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(childNumber, checked === true ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
        });
    }
    createQuickQuoteData(quickQuoteDetails, productList) {
        this.accidentData = [];
        productList.forEach(a => {
            quickQuoteDetails.forEach(b => {
                if (a.numSimulacion === b.numSimulacion) {
                    var obj = {};
                    obj.label = a.nomSimulacion;
                    obj.premium = b.impRecibo;
                    obj.product = b.numSimulacion;
                    this.accidentData.push(obj);
                }
            });
        });
    }
    getAge() {
        this.LOV.ageLOV = [{
                value: 20,
                name: "18-29"
            }, {
                value: 32,
                name: "30-29"
            }, {
                value: 42,
                name: "40-49"
            }, {
                value: 52,
                name: "50-59"
            }, {
                value: 62,
                name: "60-65"
            }];
    }
    getChildNumber() {
        this.LOV.childNumberLOV = [{
                value: 1,
                name: "1"
            }, {
                value: 2,
                name: "2"
            }, {
                value: 3,
                name: "3"
            }, {
                value: 4,
                name: "4"
            }];
    }
    generateCoverage(row) {
        this.coverageData = [];
        var headers = [340];
        var exclude = [9998];
        this.coverageList.forEach(coverage => {
            var obj = {};
            if (coverage.numSimulacion == row.product) {
                var code = parseInt(coverage.codCob);
                obj.isHeader = headers.indexOf(code) !== -1;
                // bolder label if it is a header
                obj.label = obj.isHeader ? '<strong>' + coverage.nomCob + '</strong>' : coverage.nomCob;
                obj.premium = coverage.sumaAseg;
                // excluded rows
                if (exclude.indexOf(code) == -1) {
                    this.coverageData.push(obj);
                }
            }
        });
        // displaying product coverage
        this.showProductCoverage = true;
        setTimeout(() => {
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].scroll('productCoverage');
        }, 500);
    }
    quickQuote(accidentDetails) {
        this.qqs.quickQuoteAccident(accidentDetails).then(res => {
            if (!_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].isUndefined(res)) {
                if (res.status) {
                    var quickQuoteDetails = res.obj["quickQuoteDetails"];
                    var productList = res.obj["productList"];
                    this.coverageList = res.obj["coverage"];
                    // generates quick quote accident details
                    this.createQuickQuoteData(quickQuoteDetails, productList);
                    // hiding product coverage
                    this.showProductCoverage = false;
                    // displaying product comparison
                    this.showProductComparison = true;
                    setTimeout(() => {
                        _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].scroll('productComparison');
                    });
                }
                else {
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].showError(this.bms, res.message);
                }
            }
        });
    }
};
QuickQuotationAccidentComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_quickquote_service__WEBPACK_IMPORTED_MODULE_6__["QuickQuoteService"] },
    { type: _services_lov_accident_service__WEBPACK_IMPORTED_MODULE_7__["AccidentLOVServices"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_3__["BsModalService"] }
];
QuickQuotationAccidentComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-quick-quotation-accident',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./quick-quotation-accident.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quick-quotation-accident/quick-quotation-accident.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./quick-quotation-accident.component.css */ "./src/app/components/quick-quotation-accident/quick-quotation-accident.component.css")).default]
    })
], QuickQuotationAccidentComponent);



/***/ }),

/***/ "./src/app/components/quick-quotation-car/quick-quotation-car.component.css":
/*!**********************************************************************************!*\
  !*** ./src/app/components/quick-quotation-car/quick-quotation-car.component.css ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVpY2stcXVvdGF0aW9uLWNhci9xdWljay1xdW90YXRpb24tY2FyLmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/components/quick-quotation-car/quick-quotation-car.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/components/quick-quotation-car/quick-quotation-car.component.ts ***!
  \*********************************************************************************/
/*! exports provided: QuickQuotationCarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuickQuotationCarComponent", function() { return QuickQuotationCarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var _objects_Car__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../objects/Car */ "./src/app/objects/Car.ts");
/* harmony import */ var src_app_objects_LOV_carList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/objects/LOV/carList */ "./src/app/objects/LOV/carList.ts");
/* harmony import */ var _services_quickquote_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../services/quickquote.service */ "./src/app/services/quickquote.service.ts");
/* harmony import */ var _services_car_utility_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../services/car-utility.service */ "./src/app/services/car-utility.service.ts");
/* harmony import */ var _services_lov_car_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../services/lov/car.service */ "./src/app/services/lov/car.service.ts");











let QuickQuotationCarComponent = class QuickQuotationCarComponent {
    constructor(fb, cus, qqs, cls, changeDetector, bms) {
        this.fb = fb;
        this.cus = cus;
        this.qqs = qqs;
        this.cls = cls;
        this.changeDetector = changeDetector;
        this.bms = bms;
        this.carDetails = new _objects_Car__WEBPACK_IMPORTED_MODULE_6__["Car"]();
        this.LOV = new src_app_objects_LOV_carList__WEBPACK_IMPORTED_MODULE_7__["CarListObject"]();
        this.showAutoSelect = true;
        this.displayedColumns = [
            'label',
            'compre',
            'ctpl',
            'autoCompre',
            'autoComprePlus',
            'autoLiabilityRegular',
            'autoLiabilitySelect',
            'autoSelect'
        ];
        this.annualData = [];
        this.plan30Data = [];
        this.plan60Data = [];
        this.plan90Data = [];
        this.coveragelist = [];
        //flag to display product comparison and coverage
        this.showProductComparison = false;
        this.createQuickQuoteForm();
    }
    ngAfterViewChecked() {
        this.changeDetector.detectChanges();
    }
    ngOnInit() {
        var _this = this;
        this.cls.getMakeList().then(res => {
            _this.LOV.makeLOV = res;
        });
    }
    createQuickQuoteForm() {
        this.quickQuoteForm = this.fb.group({
            make: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            model: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            vehicleType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            modelYear: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            subModel: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            typeOfUse: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            subline: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            vehicleValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
        });
    }
    //getting the year difference between the current and selected model year
    getDiff() {
        var today = new Date();
        var currentYear = today.getFullYear();
        return currentYear - parseInt(this.carDetails.modelYear);
    }
    createObj(name, value, installment, product) {
        var diff = this.getDiff();
        //set value to 0 if conditions meets
        if (product != 1 && name == '2') {
            value = "0";
        }
        else if ((name == '3' || name == '4') && diff > 8) {
            value = "0";
        }
        else if ((name == '1') && diff < 8) {
            value = "0";
        }
        return {
            'name': name,
            'value': value,
            'installment': installment,
            'product': product
        };
    }
    createQuickQuoteData(quickQuoteDetails, products, productList) {
        this.annualData = [];
        this.plan30Data = [];
        this.plan60Data = [];
        this.plan90Data = [];
        var annual = [];
        var plan30 = [];
        var plan60 = [];
        var plan90 = [];
        productList.forEach(a => {
            quickQuoteDetails.forEach(b => {
                products.forEach(c => {
                    if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === "1" && b.numSimulacion === c.numSimulacion) {
                        annual.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 1));
                    }
                    else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === "30" && b.numSimulacion === c.numSimulacion) {
                        if (b.numCuota === "1") {
                            plan30.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 30));
                        }
                        else if (b.numCuota === "2") {
                            plan30.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 30));
                        }
                    }
                    else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === "60" && b.numSimulacion === c.numSimulacion) {
                        if (b.numCuota === "1") {
                            plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));
                        }
                        else if (b.numCuota === "2") {
                            plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));
                        }
                        else if (b.numCuota === "3") {
                            plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));
                        }
                    }
                    else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === "90" && b.numSimulacion === c.numSimulacion) {
                        if (b.numCuota === "1") {
                            plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));
                        }
                        else if (b.numCuota === "2") {
                            plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));
                        }
                        else if (b.numCuota === "3") {
                            plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));
                        }
                        else if (b.numCuota === "4") {
                            plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));
                        }
                    }
                });
            });
        });
        this.annualData.push(this.createQQResultDTO(annual, '1', true));
        this.annualData.push(this.getInstallmentTotal(plan30));
        this.plan30Data.push(this.createQQResultDTO(plan30, '1'));
        this.plan30Data.push(this.createQQResultDTO(plan30, '2'));
        this.plan60Data.push(this.createQQResultDTO(plan60, '1'));
        this.plan60Data.push(this.createQQResultDTO(plan60, '2'));
        this.plan60Data.push(this.createQQResultDTO(plan60, '3'));
        this.plan90Data.push(this.createQQResultDTO(plan90, '1'));
        this.plan90Data.push(this.createQQResultDTO(plan90, '2'));
        this.plan90Data.push(this.createQQResultDTO(plan90, '3'));
        this.plan90Data.push(this.createQQResultDTO(plan90, '4'));
    }
    createQuickQuoteCoverage(coverage, hasRoadAssist) {
        var coverages = [];
        var diff = this.getDiff();
        coverage.forEach(cov => {
            var coverageName = cov.nomCob;
            var coverageCode = cov.codCob;
            var product = cov.numSimulacion;
            var isIncluded = "N";
            if ("S" == cov.mcaOligatorio) {
                isIncluded = ((product == 3 || product == 4) && diff > 8) || (product == 1 && diff < 8) ? "N" : "S";
            }
            else if ("N" == cov.mcaOligatorio) {
                if (((product == 3 || product == 4) && diff > 8) || (product == 1 && diff < 8)) {
                    isIncluded = "N";
                }
                else {
                    if (hasRoadAssist && (coverageCode == "1040" || coverageCode == "1027" || coverageCode == "1029")) {
                        if (coverageCode == "1040" && (product != 2 && product != 5 && product != 6)) {
                            isIncluded = "ODRA"; //optional disabled ra with check
                        }
                        else {
                            if ((coverageCode == "1040" || coverageCode == "1027" || coverageCode == "1029") &&
                                (product == 2 || product == 5 || product == 6)) {
                                isIncluded = "ORA"; //optional ra
                            }
                            else {
                                isIncluded = "ORA"; //optional disabled ra without check
                            }
                        }
                    }
                    else {
                        if (coverageCode == '1036' && product == 1) {
                            isIncluded = "N";
                        }
                        else if ((coverageCode == "1004" || coverageCode == "1005") && product == "1") {
                            isIncluded = "O"; //optional
                        }
                        else {
                            isIncluded = "O"; //optional
                        }
                    }
                }
            }
            else {
                isIncluded = coverageCode == '1018' || coverageCode == '1037' || coverageCode == '1026' ? "S" : "N";
            }
            var icon = '';
            if (isIncluded == "S" || isIncluded == "ODRA") {
                icon = "<i class='far fa-check-circle'></i>";
            }
            else if (isIncluded == "N") {
                icon = "<i class='far fa-times-circle'></i>";
            }
            else if (isIncluded == "O" || isIncluded == "ORA") {
                icon = "<i class='far fa-circle'></i>";
            }
            if (!coverages.includes(coverageName)
                && coverageName != "UPPA - MR"
                && coverageName != "ACCD\'L DEATH/DISABL."
                && coverageName != "ALTERNATIVE TRANSPORT BENEFIT") {
                coverages.push(coverageName);
                var obj = {};
                obj.label = coverageName;
                obj.compre = "<i class='far fa-times-circle'></i>";
                obj.ctpl = "<i class='far fa-times-circle'></i>";
                obj.autoCompre = "<i class='far fa-times-circle'></i>";
                obj.autoComprePlus = "<i class='far fa-times-circle'></i>";
                obj.autoLiabilityRegular = "<i class='far fa-times-circle'></i>";
                obj.autoLiabilitySelect = "<i class='far fa-times-circle'></i>";
                obj.autoSelect = "<i class='far fa-times-circle'></i>";
                this.coveragelist.push(obj);
            }
            this.coveragelist.forEach(c => {
                if (c.label == coverageName) {
                    if (product == 1) {
                        c.compre = icon;
                    }
                    else if (product == 2) {
                        c.ctpl = icon;
                    }
                    else if (product == 3) {
                        c.autoCompre = icon;
                    }
                    else if (product == 4) {
                        c.autoComprePlus = icon;
                    }
                    else if (product == 5) {
                        c.autoLiabilityRegular = icon;
                    }
                    else if (product == 6) {
                        c.autoLiabilitySelect = icon;
                    }
                    else if (product == 9) {
                        c.autoSelect = icon;
                    }
                }
            });
        });
    }
    setTotalValue(product, value) {
        if (product === undefined) {
            return value;
        }
        else {
            var x = parseFloat(product);
            var y = parseFloat(value);
            return (x + y).toString();
        }
    }
    getInstallmentTotal(arr) {
        var obj = {};
        // initial values for products
        obj.compre = "0";
        obj.ctpl = "0";
        obj.autoCompre = "0";
        obj.autoComprePlus = "0";
        obj.autoLiabilityRegular = "0";
        obj.autoLiabilitySelect = "0";
        obj.autoSelect = "0";
        obj.label = "Installment";
        arr.forEach((a) => {
            var product = a["name"];
            var value = a["value"];
            if (product == 1) {
                obj.compre = this.setTotalValue(obj.compre, value);
            }
            else if (product == 2) {
                obj.ctpl = this.setTotalValue(obj.ctpl, value);
            }
            else if (product == 3) {
                obj.autoCompre = this.setTotalValue(obj.autoCompre, value);
            }
            else if (product == 4) {
                obj.autoComprePlus = this.setTotalValue(obj.autoComprePlus, value);
            }
            else if (product == 5) {
                obj.autoLiabilityRegular = this.setTotalValue(obj.autoLiabilityRegular, value);
            }
            else if (product == 6) {
                obj.autoLiabilitySelect = this.setTotalValue(obj.autoLiabilitySelect, value);
            }
            else if (product == 9) {
                obj.autoSelect = this.setTotalValue(obj.autoSelect, value);
            }
        });
        return obj;
    }
    createQQResultDTO(arr, installment, isAnnual) {
        var obj = {};
        // initiate values for products
        obj.compre = "0";
        obj.ctpl = "0";
        obj.autoCompre = "0";
        obj.autoComprePlus = "0";
        obj.autoLiabilityRegular = "0";
        obj.autoLiabilitySelect = "0";
        obj.autoSelect = "0";
        if (installment == '1') {
            obj.label = isAnnual ? 'Annual' : '1st Installment';
        }
        else if (installment == '2') {
            obj.label = '2nd Installment';
        }
        else if (installment == '3') {
            obj.label = '3rd Installment';
        }
        else if (installment == '4') {
            obj.label = '4th Installment';
        }
        arr.forEach((a) => {
            var price = a["value"];
            var product = a["name"];
            if (a["installment"] == installment) {
                if (product == 1) {
                    obj.compre = price;
                }
                else if (product == 2) {
                    obj.ctpl = price;
                }
                else if (product == 3) {
                    obj.autoCompre = price;
                }
                else if (product == 4) {
                    obj.autoComprePlus = price;
                }
                else if (product == 5) {
                    obj.autoLiabilityRegular = price;
                }
                else if (product == 6) {
                    obj.autoLiabilitySelect = price;
                }
                else if (product == 9) {
                    obj.autoSelect = price;
                }
            }
        });
        return obj;
    }
    clearRiskDetails(level, type) {
        if (level <= 1) { //if user changes car make
            this.LOV.modelLOV = [];
            this.carDetails.model = undefined;
            this.quickQuoteForm.get('model').reset();
        }
        if (level <= 2) { //if user changes car model
            this.LOV.vehicleTypeLOV = [];
            this.carDetails.vehicleType = undefined;
            this.quickQuoteForm.get('vehicleType').reset();
        }
        if (level <= 3) { //if user changes vehicle type
            this.LOV.modelYearLOV = [];
            this.carDetails.modelYear = undefined;
            this.quickQuoteForm.get('modelYear').reset();
        }
        if (level <= 4) { //if user changes car model year
            this.LOV.subModelLOV = [];
            this.LOV.typeOfUseLOV = [];
            this.carDetails.subModel = undefined;
            this.carDetails.typeOfUse = undefined;
            this.quickQuoteForm.get('subModel').reset();
            this.quickQuoteForm.get('typeOfUse').reset();
        }
        if (level <= 5) { //if user changes car sub model or type of use
            if (level == 5) {
                if (type) {
                    //if user changes type of use
                    this.LOV.sublineLOV = [];
                    this.carDetails.subline = undefined;
                    this.quickQuoteForm.get('subline').reset();
                }
                else {
                    //if user changes sub model
                    this.carDetails.vehicleValue = undefined;
                    this.quickQuoteForm.get('vehicleValue').reset();
                }
            }
            else {
                //if level is below 5, subline and vehicle value will reset
                this.LOV.sublineLOV = [];
                this.carDetails.subline = undefined;
                this.carDetails.vehicleValue = undefined;
                this.quickQuoteForm.get('subline').reset();
                this.quickQuoteForm.get('vehicleValue').reset();
            }
        }
    }
    makeOnchange() {
        this.clearRiskDetails(1);
        var _this = this;
        this.cls.getModelList(this.carDetails).then(res => {
            _this.LOV.modelLOV = res;
        });
    }
    modelOnchange() {
        const _carDetails = this.carDetails;
        this.clearRiskDetails(2);
        this.carDetails.make = _carDetails.make;
        var _this = this;
        this.cls.getVehicleTypeList(this.carDetails).then(res => {
            _this.LOV.vehicleTypeLOV = res;
        });
    }
    vehicleTypeOnchange() {
        const _carDetails = this.carDetails;
        this.clearRiskDetails(3);
        this.carDetails.make = _carDetails.make;
        this.carDetails.model = _carDetails.model;
        if (this.carDetails.vehicleType > 0) {
            var _this = this;
            this.cls.getModelYearList(this.carDetails).then(res => {
                _this.LOV.modelYearLOV = res;
            });
        }
    }
    modelYearOnchange() {
        const _carDetails = this.carDetails;
        this.clearRiskDetails(4);
        this.carDetails.make = _carDetails.make;
        this.carDetails.model = _carDetails.model;
        this.carDetails.vehicleType = _carDetails.vehicleType;
        if (this.carDetails.modelYear != '') {
            var _this = this;
            this.cls.getSubModelList(this.carDetails).then(res => {
                _this.LOV.subModelLOV = res;
            });
            this.cls.getTypeOfUseList(this.carDetails).then(res => {
                _this.LOV.typeOfUseLOV = res;
            });
        }
    }
    subModelOnchange() {
        const _carDetails = this.carDetails;
        this.clearRiskDetails(5, false);
        this.carDetails.make = _carDetails.make;
        this.carDetails.model = _carDetails.model;
        this.carDetails.vehicleType = _carDetails.vehicleType;
        this.carDetails.modelYear = _carDetails.modelYear;
        this.carDetails.subModel = _carDetails.subModel;
        this.carDetails.typeOfUse = _carDetails.typeOfUse;
        this.carDetails.subline = _carDetails.subline;
        this.getVehicleValue();
    }
    typeOfUseOnchange() {
        const _carDetails = this.carDetails;
        this.clearRiskDetails(5, true);
        this.carDetails.make = _carDetails.make;
        this.carDetails.model = _carDetails.model;
        this.carDetails.vehicleType = _carDetails.vehicleType;
        this.carDetails.modelYear = _carDetails.modelYear;
        this.carDetails.subModel = _carDetails.subModel;
        this.carDetails.typeOfUse = _carDetails.typeOfUse;
        this.carDetails.vehicleValue = _carDetails.vehicleValue;
        this.getSubline();
    }
    getVehicleValue() {
        const _this = this;
        this.cus.getFMV(this.carDetails).then(res => {
            _this.carDetails.vehicleValue = res.obj["fmv"];
        });
    }
    getSubline() {
        const _this = this;
        this.cus.getSubline(this.carDetails).then(res => {
            _this.LOV.sublineLOV = res.obj["list"];
        });
    }
    sublineOnchange(event) {
        var options = event.target.options;
        if (options.length) {
            //effectivity date is based on selected subline
            var selectedIndex = event.target.options.selectedIndex;
            var effectivityDate = event.target.options[selectedIndex].dataset.sublinedate;
            //effectivity date change format
            var d = moment__WEBPACK_IMPORTED_MODULE_3__(effectivityDate, 'DDMMYYYY').format('MMDDYYYY');
            this.carDetails.sublineEffectivityDate = d.toString();
        }
    }
    quickQuote(carDetails) {
        this.qqs.quickQuoteCar(carDetails).then(res => {
            if (!_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].isUndefined(res)) {
                if (res.status) {
                    const currentYear = new Date().getFullYear();
                    let modelYear = 0;
                    try {
                        modelYear = parseInt(carDetails.modelYear);
                    }
                    catch (_a) {
                        //do nothing
                    }
                    this.showAutoSelect = currentYear - modelYear < 10;
                    var quickQuoteDetails = res.obj["quickQuoteDetails"];
                    var productList = res.obj["productList"];
                    var products = res.obj["products"];
                    var coverage = res.obj["coverage"];
                    var hasRoadAssist = res.obj["hasRoadAssist"];
                    this.createQuickQuoteData(quickQuoteDetails, productList, products);
                    this.createQuickQuoteCoverage(coverage, hasRoadAssist);
                    this.showProductComparison = true;
                    setTimeout(() => {
                        _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].scroll('productComparison');
                    });
                }
                else {
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.bms, res.message);
                }
            }
        });
    }
};
QuickQuotationCarComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_car_utility_service__WEBPACK_IMPORTED_MODULE_9__["CarUtilityServices"] },
    { type: _services_quickquote_service__WEBPACK_IMPORTED_MODULE_8__["QuickQuoteService"] },
    { type: _services_lov_car_service__WEBPACK_IMPORTED_MODULE_10__["CarLOVServices"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__["BsModalService"] }
];
QuickQuotationCarComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-quick-quotation-car',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./quick-quotation-car.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quick-quotation-car/quick-quotation-car.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./quick-quotation-car.component.css */ "./src/app/components/quick-quotation-car/quick-quotation-car.component.css")).default]
    })
], QuickQuotationCarComponent);



/***/ }),

/***/ "./src/app/components/quick-quotation-home/quick-quotation-home.component.css":
/*!************************************************************************************!*\
  !*** ./src/app/components/quick-quotation-home/quick-quotation-home.component.css ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVpY2stcXVvdGF0aW9uLWhvbWUvcXVpY2stcXVvdGF0aW9uLWhvbWUuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/components/quick-quotation-home/quick-quotation-home.component.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/components/quick-quotation-home/quick-quotation-home.component.ts ***!
  \***********************************************************************************/
/*! exports provided: QuickQuotationHomeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuickQuotationHomeComponent", function() { return QuickQuotationHomeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var _objects_Home__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../objects/Home */ "./src/app/objects/Home.ts");
/* harmony import */ var src_app_objects_LOV_homeList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/objects/LOV/homeList */ "./src/app/objects/LOV/homeList.ts");
/* harmony import */ var _services_quickquote_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../services/quickquote.service */ "./src/app/services/quickquote.service.ts");
/* harmony import */ var _services_lov_home_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../services/lov/home.service */ "./src/app/services/lov/home.service.ts");









let QuickQuotationHomeComponent = class QuickQuotationHomeComponent {
    constructor(fb, hls, changeDetector, qqs, bms) {
        this.fb = fb;
        this.hls = hls;
        this.changeDetector = changeDetector;
        this.qqs = qqs;
        this.bms = bms;
        this.homeDetails = new _objects_Home__WEBPACK_IMPORTED_MODULE_5__["Home"]();
        this.LOV = new src_app_objects_LOV_homeList__WEBPACK_IMPORTED_MODULE_6__["HomeListObject"]();
        this.displayedColumns = ['label', 'fire', 'earth', 'water'];
        this.annualData = [];
        this.plan30Data = [];
        this.plan60Data = [];
        this.plan90Data = [];
        this.coveragelist = [];
        //flag to display product comparison
        this.showProductComparison = false;
        this.createQuickQuoteForm();
        this.setValidations();
    }
    ngAfterViewChecked() {
        this.changeDetector.detectChanges();
    }
    ngOnInit() {
        var _this = this;
        this.hls.getHomeBusinessLine().then(res => {
            res.forEach(businessLine => {
                //display Residential only
                if (businessLine.COD_RAMO == "200" && businessLine.NOM_RAMO == "RESIDENTIAL") {
                    _this.LOV.sublineLOV = [businessLine];
                }
            });
        });
        // default to residential
        this.homeDetails.subline = 200;
    }
    createQuickQuoteForm() {
        this.quickQuoteForm = this.fb.group({
            subline: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            cbBuilding: [null],
            building: [null],
            cbContent: [null],
            content: [null],
            cbImprovements: [null],
            improvements: [null],
            cbRelatedBuild: [null],
            relatedBuild: [null],
            cbRelatedContent: [null],
            relatedContent: [null],
        });
    }
    setValidations() {
        const cbBuilding = this.quickQuoteForm.get('cbBuilding');
        const cbContent = this.quickQuoteForm.get('cbContent');
        const cbImprovements = this.quickQuoteForm.get('cbImprovements');
        const cbRelatedBuild = this.quickQuoteForm.get('cbRelatedBuild');
        const cbRelatedContent = this.quickQuoteForm.get('cbRelatedContent');
        const improvements = this.quickQuoteForm.get('improvements');
        const relatedBuild = this.quickQuoteForm.get('relatedBuild');
        const relatedContent = this.quickQuoteForm.get('relatedContent');
        cbBuilding.valueChanges.subscribe(checked => {
            const building = this.quickQuoteForm.get('building');
            this.homeDetails.building = _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].setNull(checked, this.homeDetails.building);
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(building, checked ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
            if (!checked && cbContent.value !== true) {
                this.homeDetails.improvements = null;
                this.homeDetails.relatedBuild = null;
                this.homeDetails.relatedContent = null;
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(improvements, null);
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(relatedBuild, null);
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(relatedContent, null);
            }
            else if (cbContent.value === true) {
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(improvements, cbImprovements.value === true ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(relatedBuild, cbRelatedBuild.value === true ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(relatedContent, cbRelatedContent.value === true ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
            }
        });
        cbContent.valueChanges.subscribe(checked => {
            const content = this.quickQuoteForm.get('content');
            this.homeDetails.content = _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].setNull(checked, this.homeDetails.content);
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(content, checked ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
            if (!checked && cbBuilding.value !== true) {
                this.homeDetails.improvements = null;
                this.homeDetails.relatedBuild = null;
                this.homeDetails.relatedContent = null;
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(improvements, null);
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(relatedBuild, null);
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(relatedContent, null);
            }
            else if (cbBuilding.value === true) {
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(improvements, cbImprovements.value === true ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(relatedBuild, cbRelatedBuild.value === true ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(relatedContent, cbRelatedContent.value === true ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
            }
        });
        cbImprovements.valueChanges.subscribe(checked => {
            this.homeDetails.improvements = _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].setNull(checked, this.homeDetails.improvements);
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(improvements, checked ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
        });
        cbRelatedBuild.valueChanges.subscribe(checked => {
            this.homeDetails.relatedBuild = _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].setNull(checked, this.homeDetails.relatedBuild);
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(relatedBuild, checked ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
        });
        cbRelatedContent.valueChanges.subscribe(checked => {
            this.homeDetails.relatedContent = _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].setNull(checked, this.homeDetails.relatedContent);
            _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].updateValidator(relatedContent, checked ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
        });
    }
    createObj(name, value, installment, product) {
        return {
            'name': name,
            'value': value,
            'installment': installment,
            'product': product
        };
    }
    createQuickQuoteData(quickQuoteDetails, products, productList) {
        this.annualData = [];
        this.plan30Data = [];
        this.plan60Data = [];
        this.plan90Data = [];
        var annual = [];
        var plan30 = [];
        var plan60 = [];
        var plan90 = [];
        productList.forEach(a => {
            quickQuoteDetails.forEach(b => {
                products.forEach(c => {
                    if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === "1" && b.numSimulacion === c.numSimulacion) {
                        annual.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 1));
                    }
                    else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === "30" && b.numSimulacion === c.numSimulacion) {
                        if (b.numCuota === "1") {
                            plan30.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 30));
                        }
                        else if (b.numCuota === "2") {
                            plan30.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 30));
                        }
                    }
                    else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === "60" && b.numSimulacion === c.numSimulacion) {
                        if (b.numCuota === "1") {
                            plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));
                        }
                        else if (b.numCuota === "2") {
                            plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));
                        }
                        else if (b.numCuota === "3") {
                            plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));
                        }
                    }
                    else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === "90" && b.numSimulacion === c.numSimulacion) {
                        if (b.numCuota === "1") {
                            plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));
                        }
                        else if (b.numCuota === "2") {
                            plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));
                        }
                        else if (b.numCuota === "3") {
                            plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));
                        }
                        else if (b.numCuota === "4") {
                            plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));
                        }
                    }
                });
            });
        });
        this.annualData.push(this.createQQResultDTO(annual, '1', true));
        this.annualData.push(this.getInstallmentTotal(plan30));
        this.plan30Data.push(this.createQQResultDTO(plan30, '1'));
        this.plan30Data.push(this.createQQResultDTO(plan30, '2'));
        this.plan60Data.push(this.createQQResultDTO(plan60, '1'));
        this.plan60Data.push(this.createQQResultDTO(plan60, '2'));
        this.plan60Data.push(this.createQQResultDTO(plan60, '3'));
        this.plan90Data.push(this.createQQResultDTO(plan90, '1'));
        this.plan90Data.push(this.createQQResultDTO(plan90, '2'));
        this.plan90Data.push(this.createQQResultDTO(plan90, '3'));
        this.plan90Data.push(this.createQQResultDTO(plan90, '4'));
    }
    createQuickQuoteCoverage(coverage) {
        var coverages = [];
        coverage.forEach(cov => {
            var coverageName = cov.nomCob;
            var coverageCode = cov.codCob;
            var product = cov.numSimulacion;
            var isIncluded = cov.mcaOligatorio;
            var icon = '';
            if (isIncluded == "S") {
                icon = "<i class='far fa-check-circle'></i>";
            }
            else if (isIncluded == "N") {
                icon = "<i class='far fa-times-circle'></i>";
            }
            if (!coverages.includes(coverageName) && (coverageCode <= '2110' && coverageCode >= '2101')) {
                coverages.push(coverageName);
                var obj = {};
                obj.label = coverageName;
                obj.fire = "<i class='far fa-times-circle'></i>";
                obj.earth = "<i class='far fa-times-circle'></i>";
                obj.water = "<i class='far fa-times-circle'></i>";
                this.coveragelist.push(obj);
            }
            this.coveragelist.forEach(c => {
                if (c.label == coverageName) {
                    if (product == 1) {
                        c.fire = icon;
                    }
                    else if (product == 2) {
                        c.earth = icon;
                    }
                    else if (product == 3) {
                        c.water = icon;
                    }
                }
            });
        });
    }
    setTotalValue(product, value) {
        if (product === undefined) {
            return value;
        }
        else {
            var x = parseFloat(product);
            var y = parseFloat(value);
            return (x + y).toString();
        }
    }
    getInstallmentTotal(arr) {
        var obj = {};
        obj.label = "Installment";
        arr.forEach((a) => {
            var product = a["name"];
            var value = a["value"];
            if (product == 1) {
                obj.fire = this.setTotalValue(obj.fire, value);
            }
            else if (product == 2) {
                obj.earth = this.setTotalValue(obj.earth, value);
            }
            else if (product == 3) {
                obj.water = this.setTotalValue(obj.water, value);
            }
        });
        return obj;
    }
    createQQResultDTO(arr, installment, isAnnual) {
        var obj = {};
        if (installment == '1') {
            obj.label = isAnnual ? 'Annual' : '1st Installment';
        }
        else if (installment == '2') {
            obj.label = '2nd Installment';
        }
        else if (installment == '3') {
            obj.label = '3rd Installment';
        }
        else if (installment == '4') {
            obj.label = '4th Installment';
        }
        arr.forEach((a) => {
            var price = a["value"];
            var product = a["name"];
            if (a["installment"] == installment) {
                if (product == 1) {
                    obj.fire = price;
                }
                else if (product == 2) {
                    obj.earth = price;
                }
                else if (product == 3) {
                    obj.water = price;
                }
            }
        });
        return obj;
    }
    quickQuote(homeDetails) {
        this.qqs.quickQuoteHome(homeDetails).then(res => {
            if (res.status) {
                var quickQuoteDetails = res.obj["quickQuoteDetails"];
                var productList = res.obj["productList"];
                var products = res.obj["products"];
                var coverage = res.obj["coverage"];
                // generates quick quote home details
                this.createQuickQuoteData(quickQuoteDetails, productList, products);
                // generates product coverage
                this.createQuickQuoteCoverage(coverage);
                // displaying product comparison
                this.showProductComparison = true;
                setTimeout(() => {
                    _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].scroll('productComparison');
                });
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].showError(this.bms, res.message);
            }
        });
    }
};
QuickQuotationHomeComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_lov_home_service__WEBPACK_IMPORTED_MODULE_8__["HomeLOVServices"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
    { type: _services_quickquote_service__WEBPACK_IMPORTED_MODULE_7__["QuickQuoteService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_3__["BsModalService"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], QuickQuotationHomeComponent.prototype, "homeDetails", void 0);
QuickQuotationHomeComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-quick-quotation-home',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./quick-quotation-home.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quick-quotation-home/quick-quotation-home.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./quick-quotation-home.component.css */ "./src/app/components/quick-quotation-home/quick-quotation-home.component.css")).default]
    })
], QuickQuotationHomeComponent);



/***/ }),

/***/ "./src/app/components/quick-quotation-travel/quick-quotation-travel.component.css":
/*!****************************************************************************************!*\
  !*** ./src/app/components/quick-quotation-travel/quick-quotation-travel.component.css ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".mat-row:hover{\n    background: azure;\n    cursor: pointer;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdWljay1xdW90YXRpb24tdHJhdmVsL3F1aWNrLXF1b3RhdGlvbi10cmF2ZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9xdWljay1xdW90YXRpb24tdHJhdmVsL3F1aWNrLXF1b3RhdGlvbi10cmF2ZWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtcm93OmhvdmVye1xuICAgIGJhY2tncm91bmQ6IGF6dXJlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/quick-quotation-travel/quick-quotation-travel.component.ts":
/*!***************************************************************************************!*\
  !*** ./src/app/components/quick-quotation-travel/quick-quotation-travel.component.ts ***!
  \***************************************************************************************/
/*! exports provided: QuickQuotationTravelComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuickQuotationTravelComponent", function() { return QuickQuotationTravelComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var _objects_Travel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../objects/Travel */ "./src/app/objects/Travel.ts");
/* harmony import */ var src_app_objects_LOV_travelList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/objects/LOV/travelList */ "./src/app/objects/LOV/travelList.ts");
/* harmony import */ var _services_quickquote_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../services/quickquote.service */ "./src/app/services/quickquote.service.ts");
/* harmony import */ var _services_lov_travel_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../services/lov/travel.service */ "./src/app/services/lov/travel.service.ts");










let QuickQuotationTravelComponent = class QuickQuotationTravelComponent {
    constructor(fb, qqs, tls, changeDetector, bms) {
        this.fb = fb;
        this.qqs = qqs;
        this.tls = tls;
        this.changeDetector = changeDetector;
        this.bms = bms;
        this.travelDetails = new _objects_Travel__WEBPACK_IMPORTED_MODULE_6__["Travel"]();
        this.LOV = new src_app_objects_LOV_travelList__WEBPACK_IMPORTED_MODULE_7__["TravelListObject"]();
        this.displayedColumns = ['label', 'complete', 'personalAssistance', 'assist'];
        this.travelData = [];
        this.coverageData = [];
        this.mindate = new Date();
        this.endDateMinDate = moment__WEBPACK_IMPORTED_MODULE_3__().add(1, 'days').toDate();
        this.enableEndDate = false;
        //flag to display product comparison
        this.showProductComparison = false;
        //flag to display product coverage
        this.showProductCoverage = false;
        this.createQuickQuoteForm();
        this.setValidations();
    }
    ngAfterViewChecked() {
        this.changeDetector.detectChanges();
    }
    ngOnInit() {
        var _this = this;
        this.tls.getCurrencyList().then(res => {
            _this.LOV.currencyLOV = res;
        });
        this.tls.getTravelPackage().then(res => {
            _this.LOV.packageLOV = res;
        });
        this.tls.getTypeOfCoverage().then(res => {
            _this.LOV.coverageLOV = res;
        });
        this.tls.getAgeRange().then(res => {
            var ageList = [];
            res.forEach((age) => {
                //removes ages 66 and above
                if (age.AGE_RANGE < 3) {
                    ageList.push(age);
                }
            });
            _this.LOV.ageRangeLOV = ageList;
        });
    }
    createQuickQuoteForm() {
        this.quickQuoteForm = this.fb.group({
            currency: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            country: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            travelPackage: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            typeOfCoverage: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            startDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            endDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            noOfDays: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            ageRange: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
    }
    onItemSelect(item) {
        console.log(item);
    }
    onSelectAll(items) {
        console.log(items);
    }
    currencyOnchange() {
        var _this = this;
        //if currency is philippine peso
        this.travelDetails.countries = this.travelDetails.currency === 1 ? [{
                NOM_PAIS: "PHILIPPINES",
                COD_PAIS: "PHL",
                NOM_VERNACULO: "PHILIPPINES",
                name: "PHILIPPINES",
                value: "PHL",
                type: "PHILIPPINES"
            }] :
            null;
        this.travelDetails.travelPackage = this.travelDetails.currency === 1 ?
            "P" :
            null;
        this.tls.getCountryList(this.travelDetails).then(res => {
            res.forEach(country => {
                country.name = country.NOM_PAIS;
                country.value = country.COD_PAIS;
                country.type = country.NOM_VERNACULO;
            });
            _this.LOV.countryLOV = res;
        });
    }
    setValidations() {
        this.quickQuoteForm.get('endDate').valueChanges.subscribe(date => {
            var diff = moment__WEBPACK_IMPORTED_MODULE_3__(date).diff(moment__WEBPACK_IMPORTED_MODULE_3__(this.quickQuoteForm.get('startDate').value), 'days') + 1;
            this.travelDetails.noOfDays = diff >= 2 ? diff : 0;
        });
        this.quickQuoteForm.get('startDate').valueChanges.subscribe(date => {
            this.enableEndDate = date !== null && date !== undefined;
            var diff = 0;
            if (this.enableEndDate) {
                var diff = moment__WEBPACK_IMPORTED_MODULE_3__(this.quickQuoteForm.get('endDate').value).diff(moment__WEBPACK_IMPORTED_MODULE_3__(date), 'days') + 1;
                diff = diff === NaN ? 0 : diff;
                this.endDateMinDate = moment__WEBPACK_IMPORTED_MODULE_3__(date).add(1, 'days').toDate();
                if (diff < 1) {
                    this.travelDetails.endDate = null;
                }
            }
            else {
                this.travelDetails.endDate = null;
            }
            this.travelDetails.noOfDays = diff >= 2 ? diff : 0;
        });
        this.quickQuoteForm.get('country').valueChanges.subscribe(countries => {
            var packageList = [];
            if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].isUndefined(countries)) {
                countries.forEach(country => {
                    packageList.push(country.type);
                });
                if (packageList.indexOf("WORLD") !== -1) {
                    this.travelDetails.travelPackage = "W";
                }
                else if (packageList.indexOf("SCHENGEN") !== -1) {
                    this.travelDetails.travelPackage = "S";
                }
                else if (packageList.indexOf("ASIA") !== -1) {
                    this.travelDetails.travelPackage = "A";
                }
                else {
                    this.travelDetails.travelPackage = "P";
                }
            }
        });
    }
    generateCoverage(row) {
        this.coverageData = [];
        var c = this.coverageList[row.label];
        //coverage headers
        var headers = [300, 332, 330, 302, 316, 319, 324, 333];
        c.forEach(coverage => {
            var obj = {};
            // bolder label if it is a header
            obj.isHeader = headers.indexOf(coverage.code) !== -1;
            obj.label = obj.isHeader ? '<strong>' + coverage.label + '</strong>' : coverage.label;
            obj.complete = coverage.complete;
            obj.personalAssistance = coverage.personalAssistance;
            obj.assist = coverage.assistOnly;
            obj.currency = coverage.currency;
            obj.code = coverage.code;
            this.coverageData.push(obj);
        });
        // display product coverage
        this.showProductCoverage = true;
        setTimeout(() => {
            src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].scroll('productCoverage');
        }, 500);
    }
    quickQuote(travelDetails) {
        this.qqs.quickQuoteTravel(travelDetails).then(res => {
            if (res.status) {
                this.travelData = [];
                this.coverageData = [];
                var quickQuoteDetails = res.obj["quickQuoteDetails"];
                this.coverageList = res.obj["coverages"];
                quickQuoteDetails.forEach(details => {
                    var obj = {};
                    obj.label = details.label;
                    obj.complete = details.complete;
                    obj.personalAssistance = details.personalAssistance;
                    obj.assist = details.assistOnly;
                    obj.currency = details.currency;
                    this.travelData.push(obj);
                });
                // hiding product coverage
                this.showProductCoverage = false;
                // displaying product comparison
                this.showProductComparison = true;
                setTimeout(() => {
                    src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].scroll('productComparison');
                });
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.bms, res.message);
            }
        });
    }
};
QuickQuotationTravelComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_quickquote_service__WEBPACK_IMPORTED_MODULE_8__["QuickQuoteService"] },
    { type: _services_lov_travel_service__WEBPACK_IMPORTED_MODULE_9__["TravelLOVServices"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__["BsModalService"] }
];
QuickQuotationTravelComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-quick-quotation-travel',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./quick-quotation-travel.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quick-quotation-travel/quick-quotation-travel.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./quick-quotation-travel.component.css */ "./src/app/components/quick-quotation-travel/quick-quotation-travel.component.css")).default]
    })
], QuickQuotationTravelComponent);



/***/ }),

/***/ "./src/app/components/quotation-accident/quotation-accident.component.css":
/*!********************************************************************************!*\
  !*** ./src/app/components/quotation-accident/quotation-accident.component.css ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".additional-accident-details,\n.acci-spa,\n.acci-hcbi {\n  width: 100%;\n}\n\n.insured-card {\n  margin-bottom: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdW90YXRpb24tYWNjaWRlbnQvcXVvdGF0aW9uLWFjY2lkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztFQUdFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVvdGF0aW9uLWFjY2lkZW50L3F1b3RhdGlvbi1hY2NpZGVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZGl0aW9uYWwtYWNjaWRlbnQtZGV0YWlscyxcbi5hY2NpLXNwYSxcbi5hY2NpLWhjYmkge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmluc3VyZWQtY2FyZCB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/quotation-accident/quotation-accident.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/components/quotation-accident/quotation-accident.component.ts ***!
  \*******************************************************************************/
/*! exports provided: QuotationAccidentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuotationAccidentComponent", function() { return QuotationAccidentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _objects_Accident__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../objects/Accident */ "./src/app/objects/Accident.ts");
/* harmony import */ var src_app_objects_GroupPolicy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/objects/GroupPolicy */ "./src/app/objects/GroupPolicy.ts");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var src_app_constants_page__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/constants/page */ "./src/app/constants/page.ts");
/* harmony import */ var src_app_objects_LOV_accidentList__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/objects/LOV/accidentList */ "./src/app/objects/LOV/accidentList.ts");
/* harmony import */ var src_app_objects_LOV_groupPolicyList__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/objects/LOV/groupPolicyList */ "./src/app/objects/LOV/groupPolicyList.ts");
/* harmony import */ var _services_lov_accident_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../services/lov/accident.service */ "./src/app/services/lov/accident.service.ts");
/* harmony import */ var src_app_services_lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/services/lov/third-party-lov-service */ "./src/app/services/lov/third-party-lov-service.ts");
/* harmony import */ var src_app_utils_global__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/utils/global */ "./src/app/utils/global.ts");
/* harmony import */ var src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/objects/PolicyHolder */ "./src/app/objects/PolicyHolder.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _payment_breakdown_modal_payment_breakdown_modal_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../payment-breakdown-modal/payment-breakdown-modal.component */ "./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.ts");
/* harmony import */ var src_app_services_accident_issue_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/app/services/accident-issue.service */ "./src/app/services/accident-issue.service.ts");
/* harmony import */ var src_app_services_lov_travel_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/app/services/lov/travel.service */ "./src/app/services/lov/travel.service.ts");
/* harmony import */ var src_app_objects_InsuredDetails__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! src/app/objects/InsuredDetails */ "./src/app/objects/InsuredDetails.ts");






















let QuotationAccidentComponent = class QuotationAccidentComponent {
    constructor(fb, 
    // private auths: AuthenticationService,
    als, ais, tpls, tls, router, dialog, bms, changeDetector) {
        this.fb = fb;
        this.als = als;
        this.ais = ais;
        this.tpls = tpls;
        this.tls = tls;
        this.router = router;
        this.dialog = dialog;
        this.bms = bms;
        this.changeDetector = changeDetector;
        // currentUser = this.auths.currentUserValue;
        this.isIssuance = src_app_utils_global__WEBPACK_IMPORTED_MODULE_14__["Globals"].getAppType() == "I";
        this.isLoadQuotation = src_app_utils_global__WEBPACK_IMPORTED_MODULE_14__["Globals"].isLoadQuotation;
        this.pageLabel = 'Quotation';
        this.triggerCounter = 0;
        this.triggerCoverage = 0;
        this.triggerBreakdown = 0;
        this.insuredHeadCount = 1;
        this.accidentDetails = new _objects_Accident__WEBPACK_IMPORTED_MODULE_5__["Accident"]();
        this.prevAccidentDetails = null;
        this.changedValues = [];
        this.invalidForms = [];
        this.withTechControl = false;
        this.groupPolicy = new src_app_objects_GroupPolicy__WEBPACK_IMPORTED_MODULE_6__["GroupPolicy"]();
        this.policyHolder = new src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_15__["PolicyHolder"]();
        this.minDate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(65, 'years').toDate();
        this.maxDate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(18, 'years').toDate();
        this.today = new Date();
        this.expiryDateMinDate = moment__WEBPACK_IMPORTED_MODULE_3__().add(1, 'years').toDate();
        this.showOtherOccupation = false;
        this.showDetails = false;
        this.showSPADetails = false;
        this.showHCBIDetails = false;
        this.showCoverage = false;
        this.showPaymentBreakdown = false;
        this.LOV = new src_app_objects_LOV_accidentList__WEBPACK_IMPORTED_MODULE_10__["AccidentListObject"]();
        this.GPLOV = new src_app_objects_LOV_groupPolicyList__WEBPACK_IMPORTED_MODULE_11__["GroupPolicyListObject"]();
        //allow user to edit the form
        this.editMode = true;
        //flag to show generate btn
        this.showGenerateBtn = true;
        //flag to show issue btn
        this.showIssueQuoteBtn = false;
        //flag to show print quote/proceed to issuance
        this.showProceedToIssuanceBtn = false;
        //flat to show issuance generate btn
        this.showIssuanceGenerateBtn = true;
        //flag to show save btn
        this.showSaveBtn = false;
        //flag to show post btn
        this.showPostBtn = false;
        //flag to show print btn
        this.showPrintBtn = false;
        //flag to show new quote and new policy btn
        this.showNewPolicyBtn = false;
        //disable load button
        this.disableLoadBtn = true;
        this.createQuoteForm();
        this.setValidations();
    }
    ngAfterViewChecked() {
        this.changeDetector.detectChanges();
    }
    ngOnInit() {
        this.loadInit();
        if (this.isIssuance) {
            this.pageLabel = 'Issuance';
            if (this.isLoadQuotation) {
                //if loaded from accident quotation
                this.accidentDetails.quotationNumber = src_app_utils_global__WEBPACK_IMPORTED_MODULE_14__["Globals"].loadNumber;
                this.loadQuotation();
                src_app_utils_global__WEBPACK_IMPORTED_MODULE_14__["Globals"].setLoadNumber('');
                src_app_utils_global__WEBPACK_IMPORTED_MODULE_14__["Globals"].setLoadQuotation(false);
            }
        }
    }
    createQuoteForm() {
        this.quoteForm = this.fb.group({
            quotationNumber: [null],
            subline: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            //general information
            effectivityDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            expiryDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            //insured details
            insured: this.fb.array([this.newInsured(true)]),
            //disablement value
            disablementValue: [null],
            //product data
            product: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
        });
    }
    loadQuotation() {
        this.ais.loadQuotation(this.accidentDetails.quotationNumber).then(res => {
            if (res.status) {
                this.manageBtn(2);
                const variableData = res.obj["variableData"];
                variableData.forEach(v => {
                    const code = v.codCampo;
                    const value = v.valCampo;
                    let valueInt = undefined;
                    try {
                        valueInt = parseInt(value);
                    }
                    catch (e) {
                        // do nothing
                    }
                    switch (code) {
                        //general information details
                        //TODO
                        case "COD_MODALIDAD": {
                            this.accidentDetails.product = valueInt;
                            break;
                        }
                        default: {
                            // do nothing
                        }
                    }
                });
                const generalInfo = res.obj["generalInfo"];
                this.accidentDetails.subline = generalInfo.codRamo;
                // this.accidentDetails.effectivityDate = new Date(generalInfo.fecEfecPoliza);
                this.quoteForm.get('effectivityDate').setValue(new Date(generalInfo.fecEfecPoliza), { emitEvent: false });
                // this.accidentDetails.expiryDate = new Date(generalInfo.fecVctoPoliza);
                this.quoteForm.get('expiryDate').setValue(new Date(generalInfo.fecVctoPoliza), { emitEvent: false });
                this.groupPolicy = new src_app_objects_GroupPolicy__WEBPACK_IMPORTED_MODULE_6__["GroupPolicy"];
                this.groupPolicy.agentCode = generalInfo.codAgt;
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(generalInfo.numPolizaGrupo)) {
                    this.groupPolicy.groupPolicy = parseInt(generalInfo.numPolizaGrupo);
                }
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(generalInfo.numContrato)) {
                    this.groupPolicy.contract = parseInt(generalInfo.numContrato);
                }
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(generalInfo.numSubcontrato)) {
                    this.groupPolicy.subContract = parseInt(generalInfo.numSubcontrato);
                }
                this.groupPolicy.commercialStructure = generalInfo.codNivel3;
                this.accidentDetails.groupPolicy = this.groupPolicy;
                const docType = generalInfo.tipDocum;
                const docCode = generalInfo.codDocum;
                // preventing generic document type and code
                if ("MVO" != docType && !docCode.startsWith("MAPFREXX")) {
                    this.policyHolder.documentType = docType;
                    this.policyHolder.documentCode = docCode;
                    this.policyHolder.isExisting = true;
                }
                var tempInsured = [];
                const insuredDetails = res.obj["insuredDetails"];
                insuredDetails.forEach(i => {
                    const code = i.codCampo;
                    const value = i.valCampo;
                    const occurence = i.numOcurrencia;
                    switch (code) {
                        //insured individual
                        case "TXT_FIRST_NAME": {
                            const obj = { firstName: value, occurence: occurence };
                            tempInsured.push(obj);
                            break;
                        }
                        default: {
                            // do nothing
                        }
                    }
                });
                var insureds = [];
                tempInsured.forEach(t => {
                    const iObj = new src_app_objects_InsuredDetails__WEBPACK_IMPORTED_MODULE_21__["InsuredDetails"]();
                    iObj.firstName = t.firstName;
                    insuredDetails.forEach(id => {
                        const code = id.codCampo;
                        const value = id.valCampo;
                        const text = id.txtCampo;
                        const occurence = id.numOcurrencia;
                        let valueInt = undefined;
                        try {
                            valueInt = parseInt(value);
                        }
                        catch (e) {
                            // do nothing
                        }
                        if (t.occurence == occurence) {
                            iObj.occurence = occurence.toString();
                            switch (code) {
                                case "TXT_FIRST_NAME": {
                                    iObj.firstName = value;
                                    break;
                                }
                                case "TXT_LAST_NAME": {
                                    iObj.lastName = value;
                                    break;
                                }
                                case "TXT_MIDDLE_INITIAL": {
                                    iObj.middleName = value;
                                    break;
                                }
                                case "TXT_SUFFIX": {
                                    iObj.suffix = valueInt;
                                    iObj.suffixLabel = text;
                                    break;
                                }
                                case "MCA_SEXO_ASEG": {
                                    iObj.gender = valueInt;
                                    break;
                                }
                                case "RELATIONSHIP": {
                                    iObj.relationship = value;
                                    iObj.relationshipLabel = text;
                                    break;
                                }
                                case "BIRTHDATE": {
                                    const date = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].convertStringDate(value);
                                    iObj.birthDate = date;
                                    break;
                                }
                                case "TXT_HEALTH_DECLARA": {
                                    iObj.cbWithHealthDeclaration = value == 'S';
                                    break;
                                }
                                case "TXT_HEALTH_DECLARA_EXIST": {
                                    iObj.preExistingIllness = value;
                                    break;
                                }
                                case "COD_OCCUPATIONAL_CLASS": {
                                    iObj.occupationalClass = value;
                                    iObj.occupationalClassLabel = text;
                                    break;
                                }
                                case "TXT_OCCUPATION": {
                                    iObj.occupation = value;
                                    iObj.occupationLabel = text;
                                    break;
                                }
                                case "TXT_OCCUPATIONAL_CLAS_OTH": {
                                    iObj.otherOccupation = value;
                                    break;
                                }
                                default: {
                                    // do nothing
                                }
                            }
                        }
                    });
                    insureds.push(iObj);
                });
                const occupationLists = res.obj["occupationLists"];
                if (insureds.length) {
                    //removes all insured individual
                    this.removeAllInsured();
                    var temp = [];
                    insureds.forEach((ins) => {
                        temp.push({
                            insured: ins.firstName
                        });
                        const showOtherOccupation = !_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(ins.otherOccupation);
                        this.insured().push(this.loadInsured(ins.firstName, ins.lastName, ins.middleName, ins.suffix, ins.suffixLabel, ins.gender, ins.birthDate, ins.relationship, ins.relationshipLabel, ins.cbWithHealthDeclaration, ins.preExistingIllness, ins.occupationalClass, ins.occupationalClassLabel, ins.occupation, ins.occupationLabel, ins.otherOccupation, showOtherOccupation, occupationLists[ins.occurence]));
                    });
                    var insuredForm = this.quoteForm.get('insured').value;
                    this.accidentDetails.insuredDetails = insuredForm;
                }
                else {
                    this.accidentDetails.insuredDetails = []; //TODO
                }
                this.loadLOVs();
                const coverageList = res.obj["coverageList"];
                this.populateCoverage(coverageList);
                //breakdwon
                const breakdown = res.obj["breakdown"];
                const receipt = res.obj["receipt"];
                this.populatePaymentBreakdown(breakdown, receipt);
                //cloning details from load quotation
                const deepClone = JSON.parse(JSON.stringify(this.accidentDetails));
                this.prevAccidentDetails = deepClone;
                //prevent to post policy if quotation has technical control
                const technicalControl = res.obj["technicalControl"];
                if (generalInfo.mcaProvisional == "S" && technicalControl.length > 0) {
                    this.withTechControl = true;
                    this.editMode = false;
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showError(this.bms, "Quotation has technical control. Please request for approval first before posting the policy.");
                }
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showError(this.bms, res.message);
                this.accidentDetails.quotationNumber = "";
            }
        }).finally(() => {
            //trigger child component load quotation function
            this.triggerCounter = this.triggerCounter + 1;
        });
    }
    //loading of all LOV's for load quotation
    loadLOVs() {
        var _this = this;
        this.als.getOccupationalClass(this.accidentDetails).then(res => {
            _this.LOV.occupationalClassLOV = res;
        });
        this.als.getProduct(this.accidentDetails).then(res => {
            _this.LOV.productListLOV = res;
        });
    }
    setValidations() {
        var quotationNumber = this.quoteForm.get('quotationNumber');
        var effectivityDate = this.quoteForm.get('effectivityDate');
        quotationNumber.valueChanges.subscribe(number => {
            this.disableLoadBtn = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(number);
        });
        effectivityDate.valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["distinctUntilChanged"])()).subscribe(date => {
            this.accidentDetails.expiryDate = moment__WEBPACK_IMPORTED_MODULE_3__(date).add(1, 'years').toDate();
            this.expiryDateMinDate = this.accidentDetails.expiryDate;
        });
    }
    loadInit() {
        var _this = this;
        this.als.getSubline().then(res => {
            _this.LOV.sublineLOV = res;
        });
        this.tpls.getSuffix().then(res => {
            _this.LOV.suffixLOV = res;
        });
        this.tls.getRelationship().then(res => {
            _this.LOV.relationshipLOV = res;
            _this.LOV.relationshipLOV.forEach((r) => {
                // disable primary
                r.disabled = r.COD_VALOR == 'P';
            });
        });
        this.setDefaultValue();
    }
    setDefaultValue() {
        //setting default value
        this.accidentDetails.sublineEffectivityDate = "01012016";
        this.accidentDetails.effectivityDate = this.today; // current today
    }
    insured() {
        return this.quoteForm.get("insured");
    }
    newInsured(onLoad) {
        const occupationList = [];
        return this.fb.group({
            firstName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            lastName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            middleName: [null],
            suffix: [null],
            suffixLabel: [''],
            gender: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            birthDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            relationship: [onLoad ? 'P' : '', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            relationshipLabel: [onLoad ? 'PRIMARY' : ''],
            cbWithHealthDeclaration: [null],
            preExistingIllness: [null],
            occupationalClass: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            occupationalClassLabel: [''],
            occupation: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            occupationLabel: [''],
            otherOccupation: [null],
            occupationList: [occupationList],
            showOtherOccupation: [false],
            bdaymindate: [this.minDate],
            bdaymaxdate: [this.maxDate],
        });
    }
    loadInsured(firstName, lastName, middleName, suffix, suffixLabel, gender, birthDate, relationship, relationshipLabel, cbWithHealthDeclaration, preExistingIllness, occupationalClass, occupationalClassLabel, occupation, occupationLabel, otherOccupation, showOtherOccupation, occupationList) {
        const isSPA = this.accidentDetails.subline == 323;
        const minAgeLimit = isSPA ? 70 : 65;
        const maxAgeLimit = isSPA ? 1 : 18;
        const bdaymindate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(relationship == 'C' ? 21 : minAgeLimit, 'years').toDate();
        const bdaymaxdate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(relationship == 'C' ? 1 : maxAgeLimit, 'years').toDate();
        // this.als.getOccupation(this.accidentDetails, occupationalClass).then(res => {
        //   occupationList = res; //TODO
        // });
        return this.fb.group({
            firstName: [firstName, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            lastName: [lastName, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            middleName: [middleName],
            suffix: [suffix],
            suffixLabel: [suffixLabel],
            gender: [gender, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            birthDate: [birthDate, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            relationship: [relationship, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            relationshipLabel: [relationshipLabel],
            cbWithHealthDeclaration: [cbWithHealthDeclaration],
            preExistingIllness: [preExistingIllness],
            occupationalClass: [occupationalClass, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            occupationalClassLabel: [occupationalClassLabel],
            occupation: [occupation, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            occupationLabel: [occupationLabel],
            otherOccupation: [otherOccupation],
            occupationList: [occupationList],
            showOtherOccupation: [showOtherOccupation],
            bdaymindate: [bdaymindate],
            bdaymaxdate: [bdaymaxdate],
        });
    }
    addInsured(onLoad) {
        this.insured().push(this.newInsured(onLoad));
        //hides the add insured button if insured head count is more than 6
        var insured = this.quoteForm.get('insured').value;
        this.insuredHeadCount = insured.length;
    }
    removeInsured(index) {
        this.insured().removeAt(index);
        //shows the add insured button if insured head count is less than 6
        var insured = this.quoteForm.get('insured').value;
        this.insuredHeadCount = insured.length;
    }
    removeAllInsured() {
        // removing all insured
        var insured = this.quoteForm.get('insured').value;
        if (insured.length > 0) {
            // loop until all insured removed
            this.insured().removeAt(0);
            this.removeAllInsured();
        }
    }
    sublineOnChange() {
        var _this = this;
        var disablementValue = this.quoteForm.get('disablementValue');
        var val = this.quoteForm.controls['subline'].value;
        this.showSPADetails = val == 323; //if standard personal accident is selected
        this.showHCBIDetails = val == 326; //if hospital cash benefit is selected
        _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].updateValidator(disablementValue, this.showSPADetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].max(2000000), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].min(10000)] : null);
        this.minDate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(this.showSPADetails ? 70 : 65, 'years').toDate();
        this.maxDate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(this.showSPADetails ? 1 : 18, 'years').toDate();
        //removes all insured inserted by the user
        this.removeAllInsured();
        //adds new form for insured individual with primary relationship
        this.addInsured(true);
        this.als.getOccupationalClass(this.accidentDetails).then(res => {
            _this.LOV.occupationalClassLOV = res;
        });
        this.als.getProduct(this.accidentDetails).then(res => {
            _this.LOV.productListLOV = res;
        });
    }
    suffixOnChange(insured) {
        var val = insured.controls['suffix'].value;
        this.LOV.suffixLOV.forEach(r => {
            if (r.TIPO_SUFIJO_NOMBRE == val) {
                insured.controls['suffixLabel'].setValue(r.NOM_VALOR);
            }
        });
    }
    relationshipOnChange(insured) {
        var val = insured.controls['relationship'].value;
        var maxAge = (val == 'C') ? 23 : 65;
        var minAge = (val == 'C') ? 1 : 18;
        const bdaymindate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(maxAge, 'years').toDate();
        insured.controls['bdaymindate'].setValue(bdaymindate);
        const bdaymaxdate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(minAge, 'years').toDate();
        insured.controls['bdaymaxdate'].setValue(bdaymaxdate);
        insured.controls['birthDate'].setValue('');
        this.LOV.relationshipLOV.forEach(r => {
            if (r.COD_VALOR == val) {
                insured.controls['relationshipLabel'].setValue(r.NOM_VALOR);
            }
        });
    }
    cbWithHealthDeclarationOnChange(insured) {
        var withHD = insured.controls['cbWithHealthDeclaration'].value;
        var preExistingIllness = insured.controls['preExistingIllness'];
        if (withHD != undefined) {
            _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].updateValidator(preExistingIllness, withHD ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
        }
    }
    occupationalClassOnchange(insured) {
        var occupationList = insured.controls['occupationList'];
        var occupationalClass = insured.get('occupationalClass').value;
        this.showOtherOccupation = false;
        var otherOccupation = insured.get('otherOccupation');
        _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].updateValidator(otherOccupation, null);
        this.LOV.occupationalClassLOV.forEach(oc => {
            if (oc.COD_VALOR == occupationalClass) {
                insured.controls['occupationalClassLabel'].setValue(oc.NOM_VALOR);
            }
        });
        this.als.getOccupation(this.accidentDetails, occupationalClass).then(res => {
            occupationList.setValue(res);
        });
    }
    occupationOnchange(insured) {
        var showOtherOccupation = insured.get('showOtherOccupation');
        var occupationalClass = insured.get('occupationalClass').value;
        var occupation = insured.get('occupation').value;
        const selectedOC = occupationalClass + '199';
        showOtherOccupation.setValue(selectedOC == occupation);
        var otherOccupation = insured.get('otherOccupation');
        _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].updateValidator(otherOccupation, showOtherOccupation.value ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
        var occupationList = insured.controls['occupationList'].value;
        occupationList.forEach(o => {
            if (o.COD_VALOR == occupation) {
                insured.controls['occupationLabel'].setValue(o.NOM_VALOR);
            }
        });
    }
    populateCoverage(coverageList) {
        this.coverageList = coverageList;
        this.showCoverage = true;
        this.triggerCoverage = this.triggerCoverage + 1;
    }
    populatePaymentBreakdown(breakdown, receipt) {
        this.paymentBreakdown = breakdown;
        this.paymentReceipt = receipt;
        this.showPaymentBreakdown = true;
        this.triggerBreakdown = this.triggerBreakdown + 1;
        _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].scroll('paymentBreakdown');
    }
    proceed(type) {
        //if user changes affecting values
        const hasChanges = this.changedValues.length != 0;
        const hasQuotationNumber = !_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(this.accidentDetails.quotationNumber);
        const isTemporaryQuotation = hasQuotationNumber && this.accidentDetails.quotationNumber.startsWith('999');
        this.accidentDetails.affecting = !hasQuotationNumber ||
            (hasQuotationNumber && isTemporaryQuotation) ||
            (hasQuotationNumber && !isTemporaryQuotation && hasChanges);
        if (hasChanges) {
            this.openProceedModal(type);
        }
        else {
            switch (type) {
                case 1: {
                    this.issueQuote('S');
                    break;
                }
                case 2: {
                    this.issueQuote('N');
                    break;
                }
                case 3: {
                    this.savePolicy();
                    break;
                }
                default: {
                    this.postPolicy();
                    break;
                }
            }
        }
    }
    openProceedModal(type) {
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatDialogConfig"]();
        dialogConfig.restoreFocus = false;
        dialogConfig.autoFocus = false;
        dialogConfig.role = 'dialog';
        dialogConfig.width = '500px';
        dialogConfig.data = {
            generateBtn: type == 1 || type == 2 || type == 3,
            saveBtn: type == 4
        };
        this.dialogRef = this.dialog.open(this.proceedModal, dialogConfig);
    }
    openValidationModal(q, g, c) {
        //clear arrays
        let invalid = [];
        this.invalidForms = [];
        //list of incorrect label names
        var formLabels = [{
                cbOneTripOnly: 'oneTripOnly'
            },
            {
                name: "client'sName"
            }
        ];
        var quoteArr = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].findInvalidControls(q);
        invalid.push(...quoteArr);
        var groupPolicyArr = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].findInvalidControls(g);
        invalid.push(...groupPolicyArr);
        var policyHolderArr = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].findInvalidControls(c);
        invalid.push(...policyHolderArr);
        invalid.forEach((i) => {
            formLabels.forEach(f => {
                var correctLabel = f[i];
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(correctLabel)) {
                    //replace label
                    i = correctLabel;
                }
            });
            let label = i.replace(/([A-Z])/g, ' $1').trim();
            this.invalidForms.push(label.toLowerCase());
        });
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatDialogConfig"]();
        dialogConfig.restoreFocus = false;
        dialogConfig.autoFocus = false;
        dialogConfig.role = 'dialog';
        dialogConfig.width = '500px';
        this.dialogRef = this.dialog.open(this.validationModal, dialogConfig);
    }
    openPaymentBreakdownModal(receipt, breakdown, isPostPolicy) {
        const modalData = {
            number: isPostPolicy ? this.accidentDetails.policyNumber : this.accidentDetails.quotationNumber,
            product: this.codeName,
            payment: "ANNUAL",
            receipt: receipt,
            breakdown: breakdown,
            showExchangeRate: false,
            isPostPolicy: isPostPolicy,
            line: 'ACCIDENT'
        };
        this.dialog.open(_payment_breakdown_modal_payment_breakdown_modal_component__WEBPACK_IMPORTED_MODULE_18__["PaymentBreakdownModalComponent"], {
            width: '1000px',
            data: modalData
        });
    }
    manageBtn(opt) {
        if (opt == 1) {
            //hides payment breakdown panel
            this.showPaymentBreakdown = false;
            this.editMode = true;
        }
        if (this.isIssuance) {
            this.showIssuanceGenerateBtn = (opt == 1);
            this.showSaveBtn = (opt == 2);
            this.showPostBtn = (opt == 3);
            this.showPrintBtn = (opt == 4);
            this.showNewPolicyBtn = (opt == 5);
        }
        else {
            this.showGenerateBtn = (opt == 1);
            this.showIssueQuoteBtn = (opt == 2);
            this.showProceedToIssuanceBtn = (opt == 3);
        }
    }
    newQuote() {
        this.newPage(src_app_constants_page__WEBPACK_IMPORTED_MODULE_9__["page"].QUO.ACC);
    }
    newPolicy() {
        this.newPage(src_app_constants_page__WEBPACK_IMPORTED_MODULE_9__["page"].ISS.ACC);
    }
    newPage(page) {
        _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].scroll('topDiv');
        setTimeout(() => {
            src_app_utils_global__WEBPACK_IMPORTED_MODULE_14__["Globals"].setPage(page);
            this.router.navigate(['/reload']);
        }, 500);
    }
    affecting(key, label) {
        if (!_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(this.accidentDetails.quotationNumber) && this.prevAccidentDetails != null) {
            let prev = this.prevAccidentDetails[key] == undefined ? "" : this.prevAccidentDetails[key];
            let curr = this.accidentDetails[key] == undefined ? "" : this.accidentDetails[key];
            if (curr instanceof Date) {
                curr = curr.getMonth() + "/" + curr.getDate() + "/" + curr.getFullYear();
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(prev)) {
                    var prevDate = new Date(prev);
                    prev = prevDate.getMonth() + "/" + prevDate.getDate() + "/" + prevDate.getFullYear();
                }
            }
            if (prev != curr) {
                if (!this.changedValues.includes(label)) {
                    //if changedValues length is greater than 0, request is affecting
                    this.changedValues.push(label);
                }
            }
            else {
                //remove all occurence
                this.changedValues = this.changedValues.filter(v => v !== label);
            }
        }
    }
    printQuote() {
        this.ais.printQuote(this.accidentDetails.quotationNumber);
    }
    printPolicy() {
        this.ais.printPolicy(this.accidentDetails.policyNumber);
    }
    proceedToIssuance() {
        this.ais.proceedToIssuance(this.accidentDetails.quotationNumber);
    }
    getProductCode() {
        const _this = this;
        this.codeName = null;
        this.LOV.productListLOV.forEach(p => {
            if (p.COD_MODALIDAD == this.accidentDetails.product) {
                _this.codeName = p.NOM_MODALIDAD;
            }
        });
    }
    //getting error or warning items
    getErrorItems(res, mcaTmpPptoMph, isIssuance) {
        this.withTechControl = false;
        const resErrorCode = res.obj["errorCode"];
        const resError = res.obj["error"];
        const isPostPolicy = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(resErrorCode);
        let items = isPostPolicy ? ["Error occured while posting policy. Please contact administration."] : ["Error code is " + resErrorCode + " but does not return any error message. Please contact administration."];
        if (!_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(resError)) {
            const errArr = resError.split("~");
            if (errArr.length) {
                var arr = [];
                errArr.forEach((err) => {
                    if (!_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isEmpty(err)) {
                        arr.push(err);
                    }
                });
                const resStatus = res.obj["status"];
                if (arr.length) {
                    if (!resStatus && isPostPolicy) {
                        //has error - can't proceed
                        items = ["Failed to generate quotation number due to following reason/s:"].concat(arr);
                    }
                    else {
                        this.withTechControl = true;
                        // has warning - can proceed
                        if (isIssuance) {
                            items = ["Quotation has technical control due to following reason/s:"].concat(arr);
                        }
                        else {
                            items = ("N" == mcaTmpPptoMph) ? ["Routed for approval due to following reason/s:"].concat(arr) : arr;
                        }
                    }
                }
            }
        }
        return items;
    }
    //generate and issue quote button
    issueQuote(mcaTmpPptoMph) {
        // S for generation and N for issue quotation
        this.assembleData(mcaTmpPptoMph);
        this.ais.issueQuote(this.accidentDetails).then(res => {
            if (res.status) {
                //clear affecting fields
                this.changedValues = [];
                const items = this.getErrorItems(res, mcaTmpPptoMph, false);
                const status = res.obj["status"];
                if (status) {
                    //duplicating car details for comparison
                    const deepClone = JSON.parse(JSON.stringify(this.accidentDetails));
                    this.prevAccidentDetails = deepClone;
                    this.editMode = false;
                    const errorCode = res.obj["errorCode"];
                    if (errorCode == "S") {
                        //if quotation has a warning
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showHTMLWarning(this.bms, items);
                    }
                    const policyNumber = res.obj["policyNumber"];
                    this.accidentDetails.quotationNumber = policyNumber;
                    const breakdown = res.obj["breakdown"];
                    const receipt = res.obj["receipt"];
                    if ("S" == mcaTmpPptoMph) {
                        //for generation of quote
                        const message = "You have successfully generated a quotation - " + policyNumber;
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showInfo(this.bms, message);
                        const coverageList = res.obj["coverageList"];
                        this.populateCoverage(coverageList);
                        this.populatePaymentBreakdown(breakdown, receipt);
                        this.manageBtn(2);
                    }
                    else {
                        // for issuing the quote
                        this.openPaymentBreakdownModal(receipt, breakdown, false);
                        this.manageBtn(3);
                    }
                }
                else {
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showHTMLError(this.bms, items);
                }
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    assembleData(mcaTmpPptoMph) {
        this.accidentDetails.mcaTmpPptoMph = mcaTmpPptoMph;
        // includes group policy to accident details DTO
        this.accidentDetails.groupPolicy = this.groupPolicy;
        // includes policy holder to accident details DTO
        this.accidentDetails.policyHolder = this.policyHolder;
        // includes insured individuals to accident details DTO
        var insured = this.quoteForm.get('insured').value;
        this.accidentDetails.insuredDetails = insured.length ? insured : [];
        // get product code
        this.getProductCode();
        // to trigger changes when regenerating quotation
        this.showCoverage = false;
        this.showPaymentBreakdown = false;
    }
    //save policy button
    savePolicy() {
        this.assembleData("N");
        this.ais.savePolicy(this.accidentDetails).then(res => {
            if (res.status) {
                //clear affecting fields
                this.changedValues = [];
                var items = this.getErrorItems(res, this.accidentDetails.mcaTmpPptoMph, true);
                const status = res.obj["status"];
                if (status) {
                    //duplicating accident details for comparison
                    const deepClone = JSON.parse(JSON.stringify(this.accidentDetails));
                    this.prevAccidentDetails = deepClone;
                    this.editMode = false;
                    const errorCode = res.obj["errorCode"];
                    const policyNumber = res.obj["policyNumber"];
                    this.accidentDetails.quotationNumber = policyNumber;
                    const message = "You have successfully generated a new quotation: " + policyNumber;
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showInfo(this.bms, message);
                    const breakdown = res.obj["breakdown"];
                    const receipt = res.obj["receipt"];
                    this.populatePaymentBreakdown(breakdown, receipt);
                    this.withTechControl = errorCode == 'S';
                    if (this.withTechControl) {
                        //if quotation has a warning
                        if (this.accidentDetails.affecting) {
                            items = ["Updated quotation number is: " + policyNumber].concat(items);
                        }
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showHTMLWarning(this.bms, items);
                    }
                    else {
                        const message = "Policy saved successfully.";
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showInfo(this.bms, message);
                    }
                    this.editMode = false;
                    this.manageBtn(3);
                }
                else {
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showHTMLError(this.bms, items);
                }
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    //post policy button
    postPolicy() {
        this.assembleData("N");
        if (this.withTechControl) {
            this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showWarning(this.bms, "Quotation has technical control. Please request for approval first before posting the policy.");
        }
        else {
            this.ais.postPolicy(this.accidentDetails).then(res => {
                if (res.status) {
                    //clear affecting fields
                    this.changedValues = [];
                    var items = this.getErrorItems(res, this.accidentDetails.mcaTmpPptoMph, true);
                    const status = res.obj["status"];
                    const policyNumber = res.obj["policyNumber"];
                    if (status && !_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(policyNumber)) {
                        this.editMode = false;
                        this.accidentDetails.policyNumber = policyNumber;
                        const breakdown = res.obj["breakdown"];
                        const receipt = res.obj["receipt"];
                        this.populatePaymentBreakdown(breakdown, receipt);
                        this.openPaymentBreakdownModal(receipt, breakdown, true);
                        this.manageBtn(4);
                    }
                    else {
                        this.manageBtn(5);
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showHTMLError(this.bms, items);
                    }
                }
                else {
                    this.manageBtn(5);
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].showError(this.bms, res.message);
                }
            });
        }
    }
};
QuotationAccidentComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_lov_accident_service__WEBPACK_IMPORTED_MODULE_12__["AccidentLOVServices"] },
    { type: src_app_services_accident_issue_service__WEBPACK_IMPORTED_MODULE_19__["AccidentIssueServices"] },
    { type: src_app_services_lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_13__["ThirdPartyLOVServices"] },
    { type: src_app_services_lov_travel_service__WEBPACK_IMPORTED_MODULE_20__["TravelLOVServices"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatDialog"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_17__["BsModalService"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('proceedModal')
], QuotationAccidentComponent.prototype, "proceedModal", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('validationModal')
], QuotationAccidentComponent.prototype, "validationModal", void 0);
QuotationAccidentComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-quotation-accident',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./quotation-accident.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quotation-accident/quotation-accident.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./quotation-accident.component.css */ "./src/app/components/quotation-accident/quotation-accident.component.css")).default]
    })
], QuotationAccidentComponent);



/***/ }),

/***/ "./src/app/components/quotation-car/quotation-car.component.css":
/*!**********************************************************************!*\
  !*** ./src/app/components/quotation-car/quotation-car.component.css ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#quickQouteDetails {\n  margin-top: 10px;\n}\n\n.accessory-card {\n  margin-bottom: 10px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdW90YXRpb24tY2FyL3F1b3RhdGlvbi1jYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVvdGF0aW9uLWNhci9xdW90YXRpb24tY2FyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcXVpY2tRb3V0ZURldGFpbHMge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4uYWNjZXNzb3J5LWNhcmQge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuIl19 */");

/***/ }),

/***/ "./src/app/components/quotation-car/quotation-car.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/components/quotation-car/quotation-car.component.ts ***!
  \*********************************************************************/
/*! exports provided: QuotationCarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuotationCarComponent", function() { return QuotationCarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _objects_Car__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../objects/Car */ "./src/app/objects/Car.ts");
/* harmony import */ var src_app_objects_GroupPolicy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/objects/GroupPolicy */ "./src/app/objects/GroupPolicy.ts");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var _services_lov_car_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../services/lov/car.service */ "./src/app/services/lov/car.service.ts");
/* harmony import */ var _services_car_utility_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../services/car-utility.service */ "./src/app/services/car-utility.service.ts");
/* harmony import */ var _services_car_quote_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../services/car-quote.service */ "./src/app/services/car-quote.service.ts");
/* harmony import */ var src_app_objects_LOV_carList__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/objects/LOV/carList */ "./src/app/objects/LOV/carList.ts");
/* harmony import */ var src_app_objects_LOV_groupPolicyList__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/objects/LOV/groupPolicyList */ "./src/app/objects/LOV/groupPolicyList.ts");
/* harmony import */ var _services_authentication_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../services/authentication.service */ "./src/app/services/authentication.service.ts");
/* harmony import */ var src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/objects/PolicyHolder */ "./src/app/objects/PolicyHolder.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var _payment_breakdown_modal_payment_breakdown_modal_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../payment-breakdown-modal/payment-breakdown-modal.component */ "./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var src_app_constants_page__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/app/constants/page */ "./src/app/constants/page.ts");
/* harmony import */ var src_app_utils_global__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/app/utils/global */ "./src/app/utils/global.ts");
/* harmony import */ var src_app_objects_CoverageVariableData__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! src/app/objects/CoverageVariableData */ "./src/app/objects/CoverageVariableData.ts");
/* harmony import */ var _coverages_coverages_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../coverages/coverages.component */ "./src/app/components/coverages/coverages.component.ts");
/* harmony import */ var src_app_services_lto_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! src/app/services/lto.service */ "./src/app/services/lto.service.ts");
/* harmony import */ var src_app_objects_LTODetails__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! src/app/objects/LTODetails */ "./src/app/objects/LTODetails.ts");

























let QuotationCarComponent = class QuotationCarComponent {
    constructor(fb, cus, cls, ltos, cqs, changeDetector, auths, bms, router, dialog) {
        this.fb = fb;
        this.cus = cus;
        this.cls = cls;
        this.ltos = ltos;
        this.cqs = cqs;
        this.changeDetector = changeDetector;
        this.auths = auths;
        this.bms = bms;
        this.router = router;
        this.dialog = dialog;
        this.currentUser = this.auths.currentUserValue;
        this.isIssuance = src_app_utils_global__WEBPACK_IMPORTED_MODULE_20__["Globals"].getAppType() == "I";
        this.isLoadQuotation = src_app_utils_global__WEBPACK_IMPORTED_MODULE_20__["Globals"].isLoadQuotation;
        this.pageLabel = 'Quotation';
        this.triggerCounter = 0;
        this.triggerCoverage = 0;
        this.triggerBreakdown = 0;
        this.carDetails = new _objects_Car__WEBPACK_IMPORTED_MODULE_6__["Car"]();
        this.prevCarDetails = null;
        this.changedValues = [];
        this.changedAccessoryValues = [];
        this.hasRoadAssist = false;
        this.invalidForms = [];
        this.withTechControl = false;
        this.groupPolicy = new src_app_objects_GroupPolicy__WEBPACK_IMPORTED_MODULE_7__["GroupPolicy"]();
        this.policyHolder = new src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_15__["PolicyHolder"]();
        this.secondaryPolicyHolder = new src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_15__["PolicyHolder"]();
        this.assigneePolicyHolder = new src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_15__["PolicyHolder"]();
        this.mortgageePolicyHolder = new src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_15__["PolicyHolder"]();
        this.coverageVariableData = new src_app_objects_CoverageVariableData__WEBPACK_IMPORTED_MODULE_21__["CoverageVariableData"]();
        // cForm: FormGroup;
        this.today = new Date();
        this.expiryDateMinDate = moment__WEBPACK_IMPORTED_MODULE_3__().add(1, 'years').toDate();
        this.LOV = new src_app_objects_LOV_carList__WEBPACK_IMPORTED_MODULE_12__["CarListObject"]();
        this.GPLOV = new src_app_objects_LOV_groupPolicyList__WEBPACK_IMPORTED_MODULE_13__["GroupPolicyListObject"]();
        this.showAccessories = false;
        this.showAdditionalInformation = false;
        this.showSubAgent = false;
        this.showCTPL = false;
        this.showPaymentBreakdown = false;
        this.showCoverage = false;
        this.showAssignee = false;
        this.showMortgagee = false;
        //allow user to edit the form
        this.editMode = true;
        //flag if coverage is modified
        this.isModifiedCoverage = false;
        //flag to include covergae
        this.includeCoverage = false;
        //flag to show generate btn
        this.showGenerateBtnGrp = true;
        //flag to show issue btn
        this.showIssueQuoteBtnGrp = false;
        //flag to show print quote/proceed to issuance
        this.showProceedToIssuanceBtnGrp = false;
        //flat to show issuance generate btn
        this.showIssuanceGenerateBtn = true;
        //flag to show save btn
        this.showSaveBtn = false;
        //flag to show post btn
        this.showPostBtn = false;
        //flag to show print btn
        this.showPrintBtn = false;
        //flag to show new quote and new policy btn
        this.showNewPolicyBtn = false;
        //disable load button
        this.disableLoadBtn = true;
        // this.createQuoteForm();
        // this.setValidations();
    }
    ngAfterViewChecked() {
        this.changeDetector.detectChanges();
    }
    ngOnInit() {
        this.createQuoteForm();
        this.setValidations();
        this.loadInit();
        if (this.isIssuance) {
            this.pageLabel = 'Issuance';
            if (this.isLoadQuotation) {
                //if loaded from car quotation
                this.carDetails.quotationNumber = src_app_utils_global__WEBPACK_IMPORTED_MODULE_20__["Globals"].loadNumber;
                this.loadQuotation();
                src_app_utils_global__WEBPACK_IMPORTED_MODULE_20__["Globals"].setLoadNumber('');
                src_app_utils_global__WEBPACK_IMPORTED_MODULE_20__["Globals"].setLoadQuotation(false);
            }
        }
    }
    loadInit() {
        var _this = this;
        this.cls.getMakeList().then(res => {
            _this.LOV.makeLOV = res;
        });
        this.cls.getColor().then(res => {
            _this.LOV.colorLOV = res;
        });
        this.cls.getClassification().then(res => {
            _this.LOV.classificationLOV = res;
        });
        this.cls.getCoverageArea().then(res => {
            _this.LOV.coverageAreaLOV = res;
        });
        this.cls.getInspectionAssessment().then(res => {
            _this.LOV.inspectionAssessmentLOV = res;
        });
        if (this.isIssuance) {
            var list = [];
            this.cus.getSubagents().then(res => {
                var subAgents = res.obj["subAgents"];
                subAgents.forEach(subAgent => {
                    var obj = {
                        name: subAgent.nomCompleto + "(" + subAgent.tipDocum + ")",
                        documentCode: subAgent.codDocum,
                        documentType: subAgent.tipDocum,
                        beneficiaryType: 20
                    };
                    list.push(obj);
                });
                _this.LOV.subagentLOV = list;
            });
            this.cls.getMortgageClause().then(res => {
                _this.LOV.mortgageClauseLOV = res;
            });
        }
        this.setDefaultValue();
    }
    setDefaultValue() {
        //setting default value
        this.carDetails.color = 9999; // undeclared
        this.carDetails.receivedBy = this.currentUser.userName; //TODO
        //this.carDetails.purchaseDate = this.today; // current today
        this.carDetails.receivedDate = this.today; // current today
        this.carDetails.effectivityDate = this.today; // current today
        this.carDetails.automaticAuth = "N";
        //additional policy information
        this.carDetails.cbPolicyOnlyDriver = true;
        this.carDetails.cbPolicyOwner = true;
    }
    createQuoteForm() {
        this.quoteForm = this.fb.group({
            quotationNumber: [null],
            //risk details
            make: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            model: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            vehicleType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            modelYear: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            subModel: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            typeOfUse: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            subline: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            vehicleValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            //vehicle information
            color: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            areaOfUsage: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            conductionNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, this.validateConductionNumber.bind(this)],
            plateNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, this.validatePlateNumber.bind(this)],
            serialNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            engineNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            // mvFileNumber: this.isIssuance ? ['', Validators.required] : [null],
            mvFileNumber: [null],
            purchaseDate: [null],
            receivedBy: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            receivedDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            //CTPL
            automaticAuth: {
                value: null,
                disabled: true
            },
            registrationType: [null],
            mvType: [null],
            cocNumber: [null],
            cbIsNotRequiredAuthNumber: [null],
            authNumber: [null],
            //accessories
            accessories: this.fb.array([]),
            effectivityDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            expiryDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            //additional policy information
            customRiskName: [null],
            seatingCapacity: [null],
            weight: [null],
            displacement: [null],
            classification: [null],
            coverageArea: [null],
            assuredsCoinsuranceShare: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].max(100)],
            cbWaivedMinPremium: [null],
            cbPrepaidPremium: [null],
            cbGlassEtchingEntitled: [null],
            glassEtchingAvailmentDate: [null],
            existingDamages: [null],
            inspectionAssessment: [null],
            //additional policy information for issuance
            cbPolicyOnlyDriver: [null],
            cbPolicyOwner: [null],
            cbHasAssignee: [null],
            cbVehicleMortgaged: [null],
            mortgageClause: [null],
            //product data
            paymentMethod: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            product: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            //subagent
            subAgents: [null],
        });
    }
    validateConductionNumber(control) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(control.value)) {
                //trigger after 5 characters
                if (control.value.length >= 5) {
                    this.carDetails.conductionNumber = control.value;
                    return this.cus.validateConductionNumberFormat(this.carDetails).then(res => {
                        return res.status && res.obj["valid"] ? null : {
                            invalidConductionNumber: true
                        };
                    });
                }
            }
        });
    }
    validatePlateNumber(control) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(control.value)) {
                //trigger after 5 characters
                if (control.value.length >= 5) {
                    this.carDetails.plateNumber = control.value;
                    return this.cus.validatePlateNumberFormat(this.carDetails).then(res => {
                        return res.status && res.obj["valid"] ? null : {
                            invalidPlateNumber: true
                        };
                    });
                }
            }
        });
    }
    loadQuotation() {
        this.cqs.loadQuotation(this.carDetails.quotationNumber).then(res => {
            if (res.status) {
                this.manageBtn(2);
                const variableData = res.obj["variableData"];
                variableData.forEach(v => {
                    const code = v.codCampo;
                    const value = v.valCampo;
                    let valueInt = undefined;
                    try {
                        valueInt = parseInt(value);
                    }
                    catch (e) {
                        // do nothing
                    }
                    switch (code) {
                        //risk details
                        case "COD_MARCA": {
                            this.carDetails.make = valueInt;
                            break;
                        }
                        case "COD_MODELO": {
                            this.carDetails.model = valueInt;
                            break;
                        }
                        case "COD_TIP_VEHI": {
                            this.carDetails.vehicleType = valueInt;
                            break;
                        }
                        case "ANIO_SUB_MODELO": {
                            this.carDetails.modelYear = value;
                            break;
                        }
                        case "COD_SUB_MODELO": {
                            this.carDetails.subModel = valueInt;
                            break;
                        }
                        case "COD_USO_VEHI": {
                            this.carDetails.typeOfUse = valueInt;
                            break;
                        }
                        case "VAL_SUB_MODELO": {
                            this.carDetails.vehicleValue = valueInt;
                            break;
                        }
                        //vehicle information
                        case "COD_COLOR": {
                            this.carDetails.color = valueInt;
                            break;
                        }
                        case "COD_AREA_USAGE": {
                            this.carDetails.areaOfUsage = valueInt;
                            break;
                        }
                        case "NUM_CONDUCTION": {
                            this.carDetails.conductionNumber = value;
                            break;
                        }
                        case "NUM_MATRICULA": {
                            this.carDetails.plateNumber = value;
                            break;
                        }
                        case "NUM_SERIAL": {
                            this.carDetails.serialNumber = value;
                            break;
                        }
                        case "NUM_MOTOR": {
                            this.carDetails.engineNumber = value;
                            break;
                        }
                        case "NUM_MV_FILE": {
                            this.carDetails.mvFileNumber = value;
                            break;
                        }
                        case "FEC_PURCHASE": {
                            this.carDetails.purchaseDate = new Date(value);
                            this.quoteForm.get('purchaseDate').markAsDirty();
                            break;
                        }
                        case "NOM_RECEIVED_BY": {
                            this.carDetails.receivedBy = value;
                            break;
                        }
                        case "FEC_RECEIVED": {
                            this.carDetails.receivedDate = new Date(value);
                            this.quoteForm.get('receivedDate').markAsDirty();
                            break;
                        }
                        case "NUM_PLAZAS": {
                            this.carDetails.seatingCapacity = valueInt;
                            break;
                        }
                        case "VAL_PESO": {
                            this.carDetails.weight = value;
                            break;
                        }
                        case "VAL_CC": {
                            this.carDetails.displacement = value;
                            break;
                        }
                        case "TIP_VEHI_PESO": {
                            this.carDetails.classification = valueInt;
                            break;
                        }
                        case "COD_AREA_COVER": {
                            this.carDetails.coverageArea = valueInt;
                            break;
                        }
                        case "PCT_CLI_COINS": {
                            this.carDetails.assuredsCoinsuranceShare = value;
                            break;
                        }
                        case "MCA_WAIVE_MIN_PREM": {
                            this.carDetails.cbWaivedMinPremium = (value == 'S');
                            break;
                        }
                        case "MCA_PREPAID_PREM": {
                            this.carDetails.cbPrepaidPremium = (value == 'S');
                            break;
                        }
                        case "MCA_GLASS_ETCHING": {
                            this.carDetails.cbGlassEtchingEntitled = (value == 'S');
                            break;
                        }
                        case "FEC_GLASS_ETCHING": {
                            this.carDetails.glassEtchingAvailmentDate = new Date(value);
                            break;
                        }
                        case "TXT_EXT_DAM_PARTS": {
                            this.carDetails.existingDamages = value;
                            break;
                        }
                        case "TIP_EXT_DAM_PARTS": {
                            this.carDetails.inspectionAssessment = valueInt;
                            break;
                        }
                        //additional policy information for issuance
                        case "MCA_DRIVER": {
                            this.carDetails.cbPolicyOnlyDriver = (value == 'S');
                            break;
                        }
                        case "MCA_OWNER": {
                            this.carDetails.cbPolicyOwner = (value == 'S');
                            break;
                        }
                        case "MCA_ASSIGNEE": {
                            this.carDetails.cbHasAssignee = (value == 'S');
                            break;
                        }
                        case "MCA_MORTGAGED": {
                            this.carDetails.cbVehicleMortgaged = (value == 'S');
                            break;
                        }
                        case "TIP_MORT_CLAUSE": {
                            this.carDetails.mortgageClause = valueInt;
                            break;
                        }
                        case "MCA_AUTO_REGISTRO": {
                            this.carDetails.automaticAuth = value;
                            break;
                        }
                        case "TIP_COCAF_MV": {
                            this.carDetails.mvType = value;
                            break;
                        }
                        case "TIP_COCAF_REGISTRATION": {
                            this.carDetails.registrationType = value;
                            break;
                        }
                        case "NUM_COC": {
                            this.carDetails.cocNumber = value;
                            break;
                        }
                        case "NUM_COC_AUTH": {
                            this.carDetails.authNumber = value;
                            break;
                        }
                        case "COD_MODALIDAD": {
                            this.carDetails.productList = valueInt;
                            break;
                        }
                        default: {
                            // do nothing
                        }
                    }
                });
                const alternative = res.obj["alternative"];
                alternative.forEach(a => {
                    const code = a.codCampo;
                    const value = a.valCampo;
                    const text = a.txtCampo;
                    switch (code) {
                        //risk details
                        case "TIP_ASEG_SEP_LOV": {
                            this.carDetails.secondaryPolicyHolderSeparator = text;
                            break;
                        }
                        default: {
                            // do nothing
                        }
                    }
                });
                const generalInfo = res.obj["generalInfo"];
                this.carDetails.subline = generalInfo.codRamo;
                // this.carDetails.sublineEffectivityDate = Utility.formatDate(new Date(generalInfo.fecValidez), "DDMMYYYY");
                this.carDetails.sublineEffectivityDate = res.obj["sublineEffectivityDate"];
                this.groupPolicy = new src_app_objects_GroupPolicy__WEBPACK_IMPORTED_MODULE_7__["GroupPolicy"];
                this.groupPolicy.agentCode = generalInfo.codAgt;
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(generalInfo.numPolizaGrupo)) {
                    this.groupPolicy.groupPolicy = parseInt(generalInfo.numPolizaGrupo);
                }
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(generalInfo.numContrato)) {
                    this.groupPolicy.contract = parseInt(generalInfo.numContrato);
                }
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(generalInfo.numSubcontrato)) {
                    this.groupPolicy.subContract = parseInt(generalInfo.numSubcontrato);
                }
                this.groupPolicy.commercialStructure = generalInfo.codNivel3;
                this.carDetails.groupPolicy = this.groupPolicy;
                // this.carDetails.effectivityDate = new Date(generalInfo.fecEfecPoliza);
                this.quoteForm.get('effectivityDate').setValue(new Date(generalInfo.fecEfecPoliza), { emitEvent: false });
                // this.carDetails.expiryDate = new Date(generalInfo.fecVctoPoliza);
                this.quoteForm.get('expiryDate').setValue(new Date(generalInfo.fecVctoPoliza), { emitEvent: false });
                const docType = generalInfo.tipDocum;
                const docCode = generalInfo.codDocum;
                // preventing generic document type and code
                if ("MVO" != docType && !docCode.startsWith("MAPFREXX")) {
                    this.policyHolder.documentType = docType;
                    this.policyHolder.documentCode = docCode;
                    this.policyHolder.isExisting = true;
                }
                this.carDetails.paymentMethod = generalInfo.codFraccPago;
                const beneficiary = res.obj["beneficiary"];
                const subAgentList = res.obj["subAgentList"];
                var subAgents = [];
                if (beneficiary.length) {
                    beneficiary.forEach((ben) => {
                        if (ben.tipBenef == 1) {
                            this.secondaryPolicyHolder.documentCode = ben.codDocum;
                            this.secondaryPolicyHolder.documentType = ben.tipDocum;
                            this.secondaryPolicyHolder.isExisting = true;
                        }
                        else if (ben.tipBenef == 27) {
                            this.showAssignee = true;
                            this.assigneePolicyHolder.documentCode = ben.codDocum;
                            this.assigneePolicyHolder.documentType = ben.tipDocum;
                            this.assigneePolicyHolder.isExisting = true;
                        }
                        else if (ben.tipBenef == 8) {
                            this.showMortgagee = true;
                            this.mortgageePolicyHolder.documentCode = ben.codDocum;
                            this.mortgageePolicyHolder.documentType = ben.tipDocum;
                            this.mortgageePolicyHolder.isExisting = true;
                        }
                        else if (ben.tipBenef == 20) {
                            var name = "";
                            subAgentList.forEach(sa => {
                                if (sa.tipDocum == ben.tipDocum && sa.codDocum == ben.codDocum) {
                                    name = sa.nomCompleto + "(" + sa.tipDocum + ")";
                                }
                            });
                            var obj = { name: name, documentCode: ben.codDocum, documentType: ben.tipDocum, beneficiaryType: 20 };
                            subAgents.push(obj);
                        }
                    });
                    if (subAgents.length > 0) {
                        this.carDetails.subAgents = subAgents;
                    }
                }
                this.loadLOVs();
                const accessories = res.obj["accessories"];
                if (accessories.length) {
                    //dispalys the accessory panel 
                    this.showAccessories = true;
                    //removes all accessories
                    this.removeAccessories();
                    var temp = [];
                    accessories.forEach((acc) => {
                        temp.push({
                            accessory: acc.codAccesorio
                        });
                        this.accessory().push(this.loadAccessory(acc.codAccesorio, acc.nomAgrupAccesorio, acc.impAccesorio, acc.txtAccesorio));
                    });
                    const _this = this;
                    this.cls.getAccessoryList(this.carDetails).then(res => {
                        _this.LOV.accessoryListLOV = res;
                        this.disableAccessory(temp);
                    });
                    var accessoriesForm = this.quoteForm.get('accessories').value;
                    this.carDetails.accessories = accessoriesForm;
                }
                else {
                    const _this = this;
                    this.cls.getAccessoryList(this.carDetails).then(res => {
                        _this.LOV.accessoryListLOV = res;
                    });
                    this.carDetails.accessories = [];
                }
                this.cqs.getCoverageByProduct(this.carDetails).then(res1 => {
                    const coverageList = res1.obj["coverageList"];
                    const amountList = res1.obj["amountList"];
                    const premiumAmount = res.obj["premiumAmount"];
                    const coverageVariable = res.obj["coverageVariable"];
                    const coverageAmount = res.obj["coverageAmount"];
                    this.populateCoverage(coverageList, amountList, premiumAmount, coverageAmount, coverageVariable);
                });
                //breakdwon
                const breakdown = res.obj["breakdown"];
                const receipt = res.obj["receipt"];
                this.populatePaymentBreakdown(breakdown, receipt);
                //cloning details from load quotation
                const deepClone = JSON.parse(JSON.stringify(this.carDetails));
                this.prevCarDetails = deepClone;
                //prevent to post policy if quotation has technical control
                const technicalControl = res.obj["technicalControl"];
                if (generalInfo.mcaProvisional == "S" && technicalControl.length > 0) {
                    this.withTechControl = true;
                    this.editMode = false;
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showError(this.bms, "Quotation has technical control. Please request for approval first before posting the policy.");
                }
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showError(this.bms, res.obj['message']);
                this.carDetails.quotationNumber = "";
            }
        }).finally(() => {
            //trigger child component load quotation function
            this.triggerCounter = this.triggerCounter + 1;
        });
    }
    //loading of all LOV's for load quotation
    loadLOVs() {
        var _this = this;
        //loading risk information
        this.quoteForm.get('make').markAsDirty();
        this.quoteForm.get('model').markAsDirty();
        this.cls.getModelList(this.carDetails).then(res => {
            _this.LOV.modelLOV = res;
        });
        this.quoteForm.get('vehicleType').markAsDirty();
        this.cls.getVehicleTypeList(this.carDetails).then(res => {
            _this.LOV.vehicleTypeLOV = res;
        });
        this.quoteForm.get('modelYear').markAsDirty();
        this.cls.getModelYearList(this.carDetails).then(res => {
            _this.LOV.modelYearLOV = res;
        });
        this.quoteForm.get('subModel').markAsDirty();
        this.cls.getSubModelList(this.carDetails).then(res => {
            _this.LOV.subModelLOV = res;
        });
        this.quoteForm.get('typeOfUse').markAsDirty();
        this.cls.getTypeOfUseList(this.carDetails).then(res => {
            _this.LOV.typeOfUseLOV = res;
        });
        this.quoteForm.get('subline').markAsDirty();
        // var qqDetails = new QQCar;
        // qqDetails.vehicleType = this.carDetails.vehicleType;
        // qqDetails.typeOfUse = this.carDetails.typeOfUse;
        // this.cus.getSubline(qqDetails).then(res => {
        this.cus.getSubline(this.carDetails).then(res => {
            _this.LOV.sublineLOV = res.obj["list"];
        });
        //loading vehicle information
        this.quoteForm.get('areaOfUsage').markAsDirty();
        this.cls.getAreaOfUsage(this.carDetails).then(res => {
            _this.LOV.areaOfUsageLOV = res;
        });
        this.cls.getRegistrationType().then(res => {
            _this.LOV.registrationTypeLOV = res;
        });
        this.cls.getMVType().then(res => {
            _this.LOV.mvTypeLOV = res;
        });
        this.quoteForm.get('paymentMethod').markAsDirty();
        this.cls.getPaymentPlan(this.carDetails).then(res => {
            _this.LOV.paymentMethodLOV = res;
        });
        this.quoteForm.get('product').markAsDirty();
        this.cls.getProduct(this.carDetails).then(res => {
            let avalidableProducts = [];
            res.forEach((e) => {
                //removing not MSO products
                if (e.COD_MODALIDAD != 10011 && e.COD_MODALIDAD != 10010) {
                    avalidableProducts.push(e);
                }
            });
            _this.LOV.productListLOV = avalidableProducts;
        });
    }
    setValidations() {
        var conductionNumber = this.quoteForm.get('conductionNumber');
        var plateNumber = this.quoteForm.get('plateNumber');
        var effectivityDate = this.quoteForm.get('effectivityDate');
        var vehicleType = this.quoteForm.get('vehicleType');
        var quotationNumber = this.quoteForm.get('quotationNumber');
        var cbVehicleMortgaged = this.quoteForm.get('cbVehicleMortgaged');
        var mortgageClause = this.quoteForm.get('mortgageClause');
        // if vehicle type is trailer, remove plate number required validation
        vehicleType.valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["distinctUntilChanged"])()).subscribe(type => {
            if (type == 30) {
                _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].updateValidator(plateNumber, null);
            }
        });
        //if has conduction number, plate number is not required / if subline is motorcycle
        conductionNumber.valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["distinctUntilChanged"])()).subscribe(number => {
            _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].updateValidator(plateNumber, !_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(number) ? null : vehicleType.value == 30 ? null : this.carDetails.subline === 120 ? null : _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required);
        });
        //if has plate number, conduction number is not required / if subline is motorcycle
        plateNumber.valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["distinctUntilChanged"])()).subscribe(number => {
            _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].updateValidator(conductionNumber, !_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(number) ? null : this.carDetails.subline === 120 ? null : _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required);
        });
        effectivityDate.valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["distinctUntilChanged"])()).subscribe(date => {
            this.carDetails.expiryDate = moment__WEBPACK_IMPORTED_MODULE_3__(date).add(1, 'years').toDate();
            this.expiryDateMinDate = this.carDetails.expiryDate;
        });
        quotationNumber.valueChanges.subscribe(number => {
            this.disableLoadBtn = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(number);
        });
        cbVehicleMortgaged.valueChanges.subscribe(mortgaged => {
            _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].updateValidator(mortgageClause, mortgaged ? _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required : null);
            this.carDetails.mortgageClause = mortgaged ? 1 : null;
        });
    }
    accessory() {
        return this.quoteForm.get("accessories");
    }
    newAccessory() {
        return this.fb.group({
            accessory: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            accessoryType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            price: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
    }
    loadAccessory(accessory, accessoryType, price, description) {
        return this.fb.group({
            accessory: [accessory, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            accessoryType: [accessoryType, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            price: [price, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            description: [description, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
    }
    addAccessory() {
        this.disableAccessory();
        this.accessory().push(this.newAccessory());
    }
    removeAccessory(index) {
        this.accessory().removeAt(index);
        this.disableAccessory();
    }
    disableAccessory(acc) {
        var accessories = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(acc) ? this.quoteForm.get('accessories').value : acc;
        if (accessories.length > 0) {
            var temp = [];
            accessories.forEach(accessory => {
                temp.push(accessory.accessory);
            });
            this.LOV.accessoryListLOV.forEach(accessory => {
                accessory.disabled = temp.indexOf(accessory.COD_ACCESORIO) !== -1;
            });
        }
    }
    removeAccessories() {
        // removing all accessories
        var accessories = this.quoteForm.get('accessories').value;
        if (accessories.length > 0) {
            // loop until all accessories removed
            this.accessory().removeAt(0);
            this.removeAccessories();
        }
    }
    clearRiskDetails(level, type) {
        //if user changes car make
        if (level <= 1) {
            this.LOV.modelLOV = [];
            this.carDetails.model = undefined;
            this.quoteForm.get('model').reset();
        }
        //if user changes car model
        if (level <= 2) {
            this.LOV.vehicleTypeLOV = [];
            this.carDetails.vehicleType = undefined;
            this.quoteForm.get('vehicleType').reset();
        }
        //if user changes vehicle type
        if (level <= 3) {
            this.LOV.modelYearLOV = [];
            this.carDetails.modelYear = undefined;
            this.quoteForm.get('modelYear').reset();
        }
        //if user changes car model year
        if (level <= 4) {
            this.LOV.subModelLOV = [];
            this.LOV.typeOfUseLOV = [];
            this.carDetails.subModel = undefined;
            this.carDetails.typeOfUse = undefined;
            this.quoteForm.get('subModel').reset();
            this.quoteForm.get('typeOfUse').reset();
        }
        //if user changes car sub model or type of use
        if (level <= 5) {
            this.removeAccessories();
            if (level == 5) {
                if (type) {
                    //if user changes type of use
                    this.LOV.sublineLOV = [];
                    this.carDetails.subline = undefined;
                    this.quoteForm.get('subline').reset();
                }
                else {
                    //if user changes sub model
                    this.carDetails.vehicleValue = undefined;
                    this.quoteForm.get('vehicleValue').reset();
                }
            }
            else {
                //if level is below 5, subline and vehicle value will reset
                this.LOV.sublineLOV = [];
                this.carDetails.subline = undefined;
                this.carDetails.vehicleValue = undefined;
                this.quoteForm.get('subline').reset();
                this.quoteForm.get('vehicleValue').reset();
            }
        }
    }
    makeOnchange() {
        const _carDetails = this.carDetails;
        this.clearRiskDetails(1);
        this.carDetails.make = _carDetails.make;
        var _this = this;
        this.cls.getModelList(this.carDetails).then(res => {
            _this.LOV.modelLOV = res;
        });
    }
    modelOnchange() {
        const _carDetails = this.carDetails;
        this.clearRiskDetails(2);
        this.carDetails.make = _carDetails.make;
        var _this = this;
        this.cls.getVehicleTypeList(this.carDetails).then(res => {
            _this.LOV.vehicleTypeLOV = res;
        });
    }
    vehicleTypeOnchange() {
        const _carDetails = this.carDetails;
        this.clearRiskDetails(3);
        this.carDetails.make = _carDetails.make;
        this.carDetails.model = _carDetails.model;
        if (this.carDetails.vehicleType > 0) {
            var _this = this;
            this.cls.getModelYearList(this.carDetails).then(res => {
                _this.LOV.modelYearLOV = res;
            });
        }
    }
    modelYearOnchange() {
        const _carDetails = this.carDetails;
        this.clearRiskDetails(4);
        this.carDetails.make = _carDetails.make;
        this.carDetails.model = _carDetails.model;
        this.carDetails.vehicleType = _carDetails.vehicleType;
        if (this.carDetails.modelYear != '') {
            var _this = this;
            this.cls.getSubModelList(this.carDetails).then(res => {
                _this.LOV.subModelLOV = res;
            });
            this.cls.getTypeOfUseList(this.carDetails).then(res => {
                _this.LOV.typeOfUseLOV = res;
            });
        }
    }
    subModelOnchange() {
        const _carDetails = this.carDetails;
        this.clearRiskDetails(5, false);
        this.carDetails.make = _carDetails.make;
        this.carDetails.model = _carDetails.model;
        this.carDetails.vehicleType = _carDetails.vehicleType;
        this.carDetails.modelYear = _carDetails.modelYear;
        this.carDetails.typeOfUse = _carDetails.typeOfUse;
        this.carDetails.subline = _carDetails.subline;
        this.getVehicleValue();
    }
    typeOfUseOnchange() {
        const _carDetails = this.carDetails;
        this.clearRiskDetails(5, true);
        this.carDetails.make = _carDetails.make;
        this.carDetails.model = _carDetails.model;
        this.carDetails.vehicleType = _carDetails.vehicleType;
        this.carDetails.modelYear = _carDetails.modelYear;
        this.carDetails.subModel = _carDetails.subModel;
        this.carDetails.vehicleValue = _carDetails.vehicleValue;
        this.getSubline();
    }
    getVehicleValue() {
        const _this = this;
        // var qqDetails = new QQCar;
        // qqDetails.make = this.carDetails.make;
        // qqDetails.model = this.carDetails.model;
        // qqDetails.subModel = this.carDetails.subModel;
        // qqDetails.modelYear = this.carDetails.modelYear;
        // this.cus.getFMV(qqDetails).then(res => {
        this.cus.getFMV(this.carDetails).then(res => {
            _this.carDetails.vehicleValue = res.obj["fmv"];
        });
    }
    getSubline() {
        const _this = this;
        // var qqDetails = new QQCar;
        // qqDetails.vehicleType = this.carDetails.vehicleType;
        // qqDetails.typeOfUse = this.carDetails.typeOfUse;
        // this.cus.getSubline(qqDetails).then(res => {
        this.cus.getSubline(this.carDetails).then(res => {
            _this.LOV.sublineLOV = res.obj["list"];
        });
    }
    sublineOnchange(event) {
        var options = event.target.options;
        if (options.length) {
            //effectivity date is based on selected subline
            var selectedIndex = event.target.options.selectedIndex;
            var effectivityDate = event.target.options[selectedIndex].dataset.sublinedate;
            //effectivity date change format
            var d = moment__WEBPACK_IMPORTED_MODULE_3__(effectivityDate, 'DDMMYYYY').format('MMDDYYYY');
            this.carDetails.sublineEffectivityDate = d.toString();
        }
        const _this = this;
        this.cls.getAreaOfUsage(this.carDetails).then(res => {
            _this.LOV.areaOfUsageLOV = res;
        });
        this.cls.getAccessoryList(this.carDetails).then(res => {
            _this.LOV.accessoryListLOV = res;
        });
        this.removeAccessories();
        this.cls.getRegistrationType().then(res => {
            _this.LOV.registrationTypeLOV = res;
        });
        this.cls.getMVType().then(res => {
            _this.LOV.mvTypeLOV = res;
        });
        this.cls.getPaymentPlan(this.carDetails).then(res => {
            _this.LOV.paymentMethodLOV = res;
        });
        this.cls.getProduct(this.carDetails).then(res => {
            let avalidableProducts = [];
            res.forEach((e) => {
                //removing not MSO products
                if (e.COD_MODALIDAD != 10011 && e.COD_MODALIDAD != 10010) {
                    avalidableProducts.push(e);
                }
            });
            _this.LOV.productListLOV = avalidableProducts;
        });
        this.cus.getPreAdditionalInfo(this.carDetails).then(res => {
            if (res.status) {
                _this.carDetails.weight = res.obj["weight"];
                _this.carDetails.displacement = res.obj["displacement"];
                _this.carDetails.customRiskName = res.obj["customRiskName"];
            }
        });
        // plate number and conduction number not required if subline is motorcycle(120)
        _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].updateValidator(this.quoteForm.get('plateNumber'), this.carDetails.subline === 120 ? null : _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required);
        _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].updateValidator(this.quoteForm.get('conductionNumber'), this.carDetails.subline === 120 ? null : _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required);
    }
    accessoryOnchange(event, index) {
        this.disableAccessory();
        var options = event.target.options;
        if (options.length) {
            var selectedIndex = event.target.options.selectedIndex;
            var price = event.target.options[selectedIndex].dataset.price;
            var type = event.target.options[selectedIndex].dataset.type;
            this.accessory().at(index).get('accessoryType').setValue(type == 'A' ? 'Additional' : type == 'B' ? 'Built-In' : 'Free');
            this.accessory().at(index).get('price').setValue(price);
        }
    }
    cbIsNotRequiredAuthNumberChange() {
        var authNumber = this.quoteForm.get('authNumber');
        _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].updateValidator(authNumber, this.carDetails.cbIsNotRequiredAuthNumber ? null : _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required);
    }
    authCOCRegistration() {
        const lto = new src_app_objects_LTODetails__WEBPACK_IMPORTED_MODULE_24__["LTODetails"];
        var clientName = this.policyHolder.firstName + ' ' + this.policyHolder.lastName;
        var tinNumber = '000-000-000-000';
        if (this.policyHolder.documentType === 'TIN') {
            tinNumber = this.policyHolder.documentCode;
        }
        lto.assuredName = clientName;
        lto.assuredTin = tinNumber;
        lto.engineNumber = this.carDetails.engineNumber;
        lto.chassisNumber = this.carDetails.serialNumber;
        lto.mvFileNumber = this.carDetails.mvFileNumber;
        lto.plateNumber = this.carDetails.plateNumber;
        lto.cocNumber = this.carDetails.cocNumber;
        lto.inceptionDate = this.carDetails.effectivityDate;
        lto.expiryDate = this.carDetails.expiryDate;
        lto.regType = this.carDetails.registrationType;
        lto.subline = this.carDetails.subline;
        lto.vehicleType = this.carDetails.vehicleType;
        lto.typeOfUse = this.carDetails.typeOfUse;
        lto.mvType = this.carDetails.mvType;
        lto.classification = this.carDetails.classification;
        this.ltos.authenticateCOCRegistration(lto).then(res => {
            if (res.status) {
                var registrationMsg = res.obj['registrationMessage'];
                var verificationMsg = res.obj['verificationMessage'];
                var authNumber = registrationMsg.authNo;
                var registrationErrorMsg = registrationMsg.errorMessage;
                var verificationErrorMsg = verificationMsg.errorMessage;
                if (registrationErrorMsg !== null) {
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showError(this.bms, registrationErrorMsg);
                }
                else {
                    if (authNumber !== null) {
                        this.carDetails.authNumber = registrationMsg.authNo;
                        if (verificationErrorMsg !== null) {
                            this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showError(this.bms, verificationErrorMsg);
                        }
                    }
                    else {
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showWarning(this.bms, "Warning! No authentication number returned.");
                    }
                }
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    populateCoverage(coverageList, amountList, premiumAmount, coverageAmount, coverageVariable) {
        this.coverageList = coverageList;
        this.amountList = amountList;
        this.premiumAmount = premiumAmount;
        this.coverageAmount = coverageAmount;
        this.coverageVariable = coverageVariable;
        this.showCoverage = true;
        this.triggerCoverage = this.triggerCoverage + 1;
        _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].scroll('coverages');
    }
    populatePaymentBreakdown(breakdown, receipt) {
        this.paymentBreakdown = breakdown;
        this.paymentReceipt = receipt;
        this.showPaymentBreakdown = true;
        this.triggerBreakdown = this.triggerBreakdown + 1;
    }
    scrollTo(id) {
        _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].scroll(id);
    }
    test(q, g, c) {
        let invalid = [];
        invalid = this.findInvalidControls(invalid, q);
        invalid = this.findInvalidControls(invalid, g);
        invalid = this.findInvalidControls(invalid, c);
        alert(invalid);
    }
    findInvalidControls(invalid, form) {
        const controls = form.controls;
        for (const name in controls) {
            if (controls[name].invalid) {
                invalid.push(name);
            }
            if (controls[name].pristine) {
                invalid.push(name);
            }
        }
        return invalid;
    }
    proceed(type) {
        //if user changes affecting values
        const hasAffectingAccessories = this.checkAffectingAccessories();
        const hasChanges = this.changedValues.length != 0 || hasAffectingAccessories;
        this.includeCoverage = !hasChanges;
        const hasQuotationNumber = !_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(this.carDetails.quotationNumber);
        const isTemporaryQuotation = hasQuotationNumber && this.carDetails.quotationNumber.startsWith('999');
        this.carDetails.affecting = !hasQuotationNumber ||
            (hasQuotationNumber && isTemporaryQuotation) ||
            (hasQuotationNumber && !isTemporaryQuotation && hasChanges);
        if (hasChanges) {
            this.openProceedModal(type);
        }
        else {
            switch (type) {
                case 1: {
                    this.issueQuote('S');
                    break;
                }
                case 2: {
                    this.issueQuote('N');
                    break;
                }
                case 3: {
                    this.savePolicy();
                    break;
                }
                default: {
                    this.postPolicy();
                    break;
                }
            }
        }
    }
    checkAffectingAccessories() {
        let hasAccessoryChanges = false;
        if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(this.prevCarDetails)) {
            this.changedAccessoryValues = [];
            var accessories = this.quoteForm.get('accessories').value;
            const length = accessories.length;
            let prevlength = 0;
            if ('accessories' in this.prevCarDetails) {
                const prevAccessories = this.prevCarDetails.accessories;
                prevlength = prevAccessories.length;
                if (prevlength != length) {
                    if (prevlength > length) {
                        var diff = prevlength - length;
                        var label = diff == 1 ? " accessory" : " accessories";
                        this.changedAccessoryValues.push("Accessory: Deleted " + diff + label);
                    }
                    else {
                        var diff = length - prevlength;
                        var label = diff == 1 ? " accessory" : " accessories";
                        this.changedAccessoryValues.push("Accessory: Added " + diff + label);
                    }
                }
                prevAccessories.forEach((acc) => {
                    let matched = false;
                    accessories.forEach((acc1) => {
                        if (acc.accessory == acc1.accessory) {
                            matched = true;
                            if (acc.description != acc1.description) {
                                this.changedAccessoryValues.push("Accessory Description: Changed " + acc.description + " to " + acc1.description);
                            }
                            if (acc.price != acc1.price) {
                                this.changedAccessoryValues.push("Accessory Price: Changed " + acc.price + " to " + acc1.price);
                            }
                        }
                    });
                    if (!matched) {
                        this.changedAccessoryValues.push("Accessory: Changed Accessory List");
                    }
                });
            }
            hasAccessoryChanges = this.changedAccessoryValues.length > 0;
        }
        return hasAccessoryChanges;
    }
    openProceedModal(type) {
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatDialogConfig"]();
        dialogConfig.restoreFocus = false;
        dialogConfig.autoFocus = false;
        dialogConfig.role = 'dialog';
        dialogConfig.width = '500px';
        dialogConfig.data = {
            generateBtn: type == 1 || type == 2 || type == 3,
            saveBtn: type == 4
        };
        this.dialogRef = this.dialog.open(this.proceedModal, dialogConfig);
    }
    openValidationModal(q, g, c) {
        //clear arrays
        let invalid = [];
        this.invalidForms = [];
        //list of incorrect label names
        var formLabels = [{
                cbOneTripOnly: 'oneTripOnly'
            },
            {
                name: "client'sName"
            }
        ];
        var quoteArr = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].findInvalidControls(q);
        invalid.push(...quoteArr);
        var groupPolicyArr = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].findInvalidControls(g);
        invalid.push(...groupPolicyArr);
        var policyHolderArr = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].findInvalidControls(c);
        invalid.push(...policyHolderArr);
        invalid.forEach((i) => {
            formLabels.forEach(f => {
                var correctLabel = f[i];
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(correctLabel)) {
                    //replace label
                    i = correctLabel;
                }
            });
            let label = i.replace(/([A-Z])/g, ' $1').trim();
            this.invalidForms.push(label.toLowerCase());
        });
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatDialogConfig"]();
        dialogConfig.restoreFocus = false;
        dialogConfig.autoFocus = false;
        dialogConfig.role = 'dialog';
        dialogConfig.width = '500px';
        this.dialogRef = this.dialog.open(this.validationModal, dialogConfig);
    }
    openPaymentBreakdownModal(receipt, breakdown, isPostPolicy) {
        let product = "";
        this.LOV.productListLOV.forEach((p) => {
            if (p.COD_MODALIDAD == this.carDetails.productList) {
                product = p.NOM_MODALIDAD;
            }
        });
        let payment = "";
        this.LOV.paymentMethodLOV.forEach((p) => {
            if (p.COD_FRACC_PAGO == this.carDetails.paymentMethod) {
                payment = p.NOM_FRACC_PAGO;
            }
        });
        const modalData = {
            number: isPostPolicy ? this.carDetails.policyNumber : this.carDetails.quotationNumber,
            product: product,
            payment: payment,
            receipt: receipt,
            breakdown: breakdown,
            showExchangeRate: false,
            isPostPolicy: isPostPolicy,
            line: 'CAR'
        };
        this.dialog.open(_payment_breakdown_modal_payment_breakdown_modal_component__WEBPACK_IMPORTED_MODULE_17__["PaymentBreakdownModalComponent"], {
            width: '1000px',
            data: modalData
        });
    }
    manageBtn(opt, isModified) {
        if (opt == 1) {
            //hides payment breakdown panel
            this.showPaymentBreakdown = false;
            // flag to edit coverage
            const modified = !_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(isModified);
            this.editMode = !modified;
            this.showCoverage = modified;
            this.isModifiedCoverage = modified;
            if (modified) {
                _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].scroll('coverages');
            }
        }
        if (this.isIssuance) {
            this.showIssuanceGenerateBtn = (opt == 1);
            this.showSaveBtn = (opt == 2);
            this.showPostBtn = (opt == 3);
            this.showPrintBtn = (opt == 4);
            this.showNewPolicyBtn = (opt == 5);
        }
        else {
            this.showGenerateBtnGrp = (opt == 1);
            this.showIssueQuoteBtnGrp = (opt == 2);
            this.showProceedToIssuanceBtnGrp = (opt == 3);
        }
    }
    newQuote() {
        this.newPage(src_app_constants_page__WEBPACK_IMPORTED_MODULE_19__["page"].QUO.CAR);
    }
    newPolicy() {
        this.newPage(src_app_constants_page__WEBPACK_IMPORTED_MODULE_19__["page"].ISS.CAR);
    }
    newPage(page) {
        _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].scroll('topDiv');
        setTimeout(() => {
            src_app_utils_global__WEBPACK_IMPORTED_MODULE_20__["Globals"].setPage(page);
            this.router.navigate(['/reload']);
        }, 500);
    }
    affecting(key, label) {
        if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(this.carDetails.quotationNumber) && this.prevCarDetails != null) {
            let prev = this.prevCarDetails[key] == undefined ? "" : this.prevCarDetails[key];
            let curr = this.carDetails[key] == undefined ? "" : this.carDetails[key];
            if (curr instanceof Date) {
                curr = curr.getMonth() + "/" + curr.getDate() + "/" + curr.getFullYear();
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(prev)) {
                    var prevDate = new Date(prev);
                    prev = prevDate.getMonth() + "/" + prevDate.getDate() + "/" + prevDate.getFullYear();
                }
            }
            if (prev != curr) {
                if (!this.changedValues.includes(label)) {
                    //if changedValues length is greater than 0, request is affecting
                    this.changedValues.push(label);
                }
            }
            else {
                //remove all occurence
                this.changedValues = this.changedValues.filter(v => v !== label);
            }
        }
    }
    printQuote() {
        this.cqs.printQuote(this.carDetails.quotationNumber);
    }
    printPolicy() {
        this.cqs.printPolicy(this.carDetails.policyNumber);
    }
    proceedToIssuance() {
        this.cqs.proceedToIssuance(this.carDetails.quotationNumber);
    }
    populateAdditionalInfo(variableData) {
        variableData.forEach(v => {
            const code = v.codCampo;
            const value = v.valCampo;
            let valueInt = undefined;
            try {
                valueInt = parseInt(value);
            }
            catch (e) {
                // do nothing
            }
            switch (code) {
                case "NUM_PLAZAS": {
                    this.carDetails.seatingCapacity = valueInt;
                    break;
                }
                case "VAL_PESO": {
                    this.carDetails.weight = value;
                    break;
                }
                case "VAL_CC": {
                    this.carDetails.displacement = value;
                    break;
                }
                case "TIP_VEHI_PESO": {
                    this.carDetails.classification = valueInt;
                    break;
                }
                case "NUM_COC": {
                    this.carDetails.cocNumber = value;
                    break;
                }
                default: {
                    // do nothing
                }
            }
        });
    }
    //generate and issue quote button
    issueQuote(mcaTmpPptoMph) {
        // S for generation and N for issue quotation
        this.carDetails.mcaTmpPptoMph = mcaTmpPptoMph;
        this.carDetails.isModifiedCoverage = this.isModifiedCoverage;
        // includes group policy to car details DTO
        this.carDetails.groupPolicy = this.groupPolicy;
        // includes policy holder to car details DTO
        this.carDetails.policyHolder = this.policyHolder;
        // includes coverage variable data to car details DTO
        this.carDetails.coverageVariableData = this.coverageVariableData;
        // includes accessories to car details DTO
        var accessories = this.quoteForm.get('accessories').value;
        this.carDetails.accessories = accessories.length ? accessories : [];
        // includes coverages to car details DTO
        this.carDetails.coverages = [];
        if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(this.appCoverage) && (this.carDetails.isModifiedCoverage || this.includeCoverage)) {
            var coverages = this.appCoverage.cForm.get('coverages').value;
            this.carDetails.coverages = coverages.length ? coverages : [];
        }
        // to trigger changes when regenerating quotation
        this.showPaymentBreakdown = false;
        this.showCoverage = false;
        this.cqs.getCoverageByProduct(this.carDetails).then(res => {
            this.cqs.issueQuote(this.carDetails).then(res1 => {
                if (res1.status) {
                    //clear affecting fields
                    this.changedValues = [];
                    const items = this.getErrorItems(res1, mcaTmpPptoMph, false);
                    const status = res1.obj["status"];
                    const coverageAmount = res1.obj["coverageAmount"];
                    if (status && coverageAmount.length) {
                        //duplicating car details for comparison
                        const deepClone = JSON.parse(JSON.stringify(this.carDetails));
                        this.prevCarDetails = deepClone;
                        this.editMode = false;
                        this.hasRoadAssist = res1.obj["hasRoadAssist"];
                        const errorCode = res1.obj["errorCode"];
                        if (errorCode == "S") {
                            //if quotation has a warning
                            this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showHTMLWarning(this.bms, items);
                        }
                        const policyNumber = res1.obj["policyNumber"];
                        this.carDetails.quotationNumber = policyNumber;
                        const breakdown = res1.obj["breakdown"];
                        const receipt = res1.obj["receipt"];
                        if ("S" == mcaTmpPptoMph) {
                            //for generation of quote
                            const message = "You have successfully generated a quotation - " + policyNumber;
                            this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showInfo(this.bms, message);
                            const coverageList = res.obj["coverageList"];
                            const amountList = res.obj["amountList"];
                            const premiumAmount = res1.obj["premiumAmount"];
                            const coverageVariable = res1.obj["coverageVariable"];
                            const variableData = res1.obj['variableData'];
                            this.populateCoverage(coverageList, amountList, premiumAmount, coverageAmount, coverageVariable);
                            this.populateAdditionalInfo(variableData);
                            this.isModifiedCoverage = false;
                            this.populatePaymentBreakdown(breakdown, receipt);
                            this.manageBtn(2);
                        }
                        else {
                            // for issuing the quote
                            this.openPaymentBreakdownModal(receipt, breakdown, false);
                            this.manageBtn(3);
                        }
                    }
                    else {
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showHTMLError(this.bms, items);
                    }
                }
                else {
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showError(this.bms, res1.message);
                }
            });
        });
    }
    assembleIssuePolicyData() {
        // always N for issue policy
        this.carDetails.mcaTmpPptoMph = "N";
        this.carDetails.isModifiedCoverage = this.isModifiedCoverage;
        // includes group policy to car details DTO
        this.carDetails.groupPolicy = this.groupPolicy;
        // includes policy holder to car details DTO
        this.carDetails.policyHolder = this.policyHolder;
        // includes secondary policy holder to car details DTO
        this.carDetails.secondaryPolicyHolder = this.secondaryPolicyHolder;
        // includes assignee policy holder to car details DTO
        this.carDetails.assigneePolicyHolder = this.assigneePolicyHolder;
        // includes mortgagee policy holder to car details DTO
        this.carDetails.mortgageePolicyHolder = this.mortgageePolicyHolder;
        // includes coverage variable data to car details DTO
        this.carDetails.coverageVariableData = this.coverageVariableData;
        // includes accessories to car details DTO
        var accessories = this.quoteForm.get('accessories').value;
        this.carDetails.accessories = accessories.length ? accessories : [];
        // includes coverages to car details DTO
        this.carDetails.coverages = [];
        if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(this.appCoverage) && (this.carDetails.isModifiedCoverage || this.includeCoverage)) {
            var coverages = this.appCoverage.cForm.get('coverages').value;
            this.carDetails.coverages = coverages.length ? coverages : [];
        }
    }
    //getting error or warning items
    getErrorItems(res1, mcaTmpPptoMph, isIssuance) {
        this.withTechControl = false;
        const resCoverageAmount = res1.obj["coverageAmount"];
        const resErrorCode = res1.obj["errorCode"];
        const resError = res1.obj["error"];
        const coverageAmountIsUndefined = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(resCoverageAmount);
        const isPostPolicy = coverageAmountIsUndefined && _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(resErrorCode);
        let items = isPostPolicy ?
            ["Error occured while posting policy. Please contact administration."] :
            ["Error code is " + resErrorCode + " but does not return any error message. Please contact administration."];
        if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(resError)) {
            const errArr = resError.split("~");
            if (errArr.length) {
                var arr = [];
                errArr.forEach((err) => {
                    if (!_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isEmpty(err)) {
                        arr.push(err);
                    }
                });
                const resStatus = res1.obj["status"];
                if (arr.length) {
                    if (!resStatus && (isPostPolicy || (coverageAmountIsUndefined && !resCoverageAmount.length))) {
                        //has error - can't proceed
                        items = ["Failed to generate quotation number due to following reason/s:"].concat(arr);
                    }
                    else {
                        this.withTechControl = true;
                        // has warning - can proceed
                        if (isIssuance) {
                            items = ["Quotation has technical control due to following reason/s:"].concat(arr);
                        }
                        else {
                            items = ("N" == mcaTmpPptoMph) ? ["Routed for approval due to following reason/s:"].concat(arr) : arr;
                        }
                    }
                }
            }
        }
        return items;
    }
    //save policy button
    savePolicy() {
        this.assembleIssuePolicyData();
        // to trigger changes when regenerating quotation
        this.showCoverage = false;
        this.showPaymentBreakdown = false;
        this.cqs.getCoverageByProduct(this.carDetails).then(res => {
            this.cqs.savePolicy(this.carDetails).then(res1 => {
                if (res1.status) {
                    //clear affecting fields
                    this.changedValues = [];
                    var items = this.getErrorItems(res1, this.carDetails.mcaTmpPptoMph, true);
                    const status = res1.obj["status"];
                    const coverageAmount = res1.obj["coverageAmount"];
                    if (status && coverageAmount.length) {
                        //duplicating car details for comparison
                        const deepClone = JSON.parse(JSON.stringify(this.carDetails));
                        this.prevCarDetails = deepClone;
                        this.editMode = false;
                        this.hasRoadAssist = res1.obj["hasRoadAssist"];
                        const errorCode = res1.obj["errorCode"];
                        const policyNumber = res1.obj["policyNumber"];
                        this.carDetails.quotationNumber = policyNumber;
                        const message = "You have successfully generated a new quotation: " + policyNumber;
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showInfo(this.bms, message);
                        const coverageList = res.obj["coverageList"];
                        const amountList = res.obj["amountList"];
                        const premiumAmount = res1.obj["premiumAmount"];
                        const coverageVariable = res1.obj["coverageVariable"];
                        this.populateCoverage(coverageList, amountList, premiumAmount, coverageAmount, coverageVariable);
                        this.isModifiedCoverage = false;
                        const breakdown = res1.obj["breakdown"];
                        const receipt = res1.obj["receipt"];
                        this.populatePaymentBreakdown(breakdown, receipt);
                        this.withTechControl = errorCode == 'S';
                        if (this.withTechControl) {
                            //if quotation has a warning
                            if (this.carDetails.affecting) {
                                items = ["Updated quotation number is: " + policyNumber].concat(items);
                            }
                            this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showHTMLWarning(this.bms, items);
                        }
                        else {
                            const message = "Policy saved successfully.";
                            this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showInfo(this.bms, message);
                        }
                        this.editMode = false;
                        this.manageBtn(3);
                    }
                    else {
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showHTMLError(this.bms, items);
                    }
                }
                else {
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showError(this.bms, res1.message);
                }
            });
        });
    }
    //post policy button
    postPolicy() {
        this.assembleIssuePolicyData();
        // hides coverage and payment breakdown
        this.showCoverage = false;
        this.showPaymentBreakdown = false;
        if (this.withTechControl) {
            this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showWarning(this.bms, "Quotation has technical control. Please request for approval first before posting the policy.");
        }
        else {
            this.cqs.postPolicy(this.carDetails).then(res1 => {
                if (res1.status) {
                    //clear affecting fields
                    this.changedValues = [];
                    var items = this.getErrorItems(res1, this.carDetails.mcaTmpPptoMph, true);
                    const status = res1.obj["status"];
                    const policyNumber = res1.obj["policyNumber"];
                    if (status && !_utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].isUndefined(policyNumber)) {
                        this.editMode = false;
                        this.carDetails.policyNumber = policyNumber;
                        this.isModifiedCoverage = false;
                        const breakdown = res1.obj["breakdown"];
                        const receipt = res1.obj["receipt"];
                        this.populatePaymentBreakdown(breakdown, receipt);
                        this.openPaymentBreakdownModal(receipt, breakdown, true);
                        this.manageBtn(4);
                    }
                    else {
                        this.manageBtn(5);
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showHTMLError(this.bms, items);
                    }
                }
                else {
                    this.manageBtn(5);
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_8__["Utility"].showError(this.bms, res1.message);
                }
            });
        }
    }
};
QuotationCarComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_car_utility_service__WEBPACK_IMPORTED_MODULE_10__["CarUtilityServices"] },
    { type: _services_lov_car_service__WEBPACK_IMPORTED_MODULE_9__["CarLOVServices"] },
    { type: src_app_services_lto_service__WEBPACK_IMPORTED_MODULE_23__["LTOService"] },
    { type: _services_car_quote_service__WEBPACK_IMPORTED_MODULE_11__["CarQuoteServices"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
    { type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_14__["AuthenticationService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__["BsModalService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_18__["Router"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatDialog"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_coverages_coverages_component__WEBPACK_IMPORTED_MODULE_22__["CoveragesComponent"])
], QuotationCarComponent.prototype, "appCoverage", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('proceedModal')
], QuotationCarComponent.prototype, "proceedModal", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('validationModal')
], QuotationCarComponent.prototype, "validationModal", void 0);
QuotationCarComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-quotation-car',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./quotation-car.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quotation-car/quotation-car.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./quotation-car.component.css */ "./src/app/components/quotation-car/quotation-car.component.css")).default]
    })
], QuotationCarComponent);



/***/ }),

/***/ "./src/app/components/quotation-home/quotation-home.component.css":
/*!************************************************************************!*\
  !*** ./src/app/components/quotation-home/quotation-home.component.css ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVvdGF0aW9uLWhvbWUvcXVvdGF0aW9uLWhvbWUuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/components/quotation-home/quotation-home.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/components/quotation-home/quotation-home.component.ts ***!
  \***********************************************************************/
/*! exports provided: QuotationHomeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuotationHomeComponent", function() { return QuotationHomeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _objects_Home__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../objects/Home */ "./src/app/objects/Home.ts");
/* harmony import */ var src_app_objects_GroupPolicy__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/objects/GroupPolicy */ "./src/app/objects/GroupPolicy.ts");
/* harmony import */ var src_app_objects_LOV_homeList__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/objects/LOV/homeList */ "./src/app/objects/LOV/homeList.ts");
/* harmony import */ var src_app_objects_LOV_groupPolicyList__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/objects/LOV/groupPolicyList */ "./src/app/objects/LOV/groupPolicyList.ts");
/* harmony import */ var _services_lov_home_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../services/lov/home.service */ "./src/app/services/lov/home.service.ts");
/* harmony import */ var _services_home_issue_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../services/home-issue.service */ "./src/app/services/home-issue.service.ts");
/* harmony import */ var src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/utils/global */ "./src/app/utils/global.ts");
/* harmony import */ var src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/objects/PolicyHolder */ "./src/app/objects/PolicyHolder.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var src_app_constants_page__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/app/constants/page */ "./src/app/constants/page.ts");
/* harmony import */ var src_app_objects_LOV_thirdPartyList__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/app/objects/LOV/thirdPartyList */ "./src/app/objects/LOV/thirdPartyList.ts");
/* harmony import */ var src_app_services_lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/app/services/lov/third-party-lov-service */ "./src/app/services/lov/third-party-lov-service.ts");
/* harmony import */ var _payment_breakdown_modal_payment_breakdown_modal_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../payment-breakdown-modal/payment-breakdown-modal.component */ "./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.ts");
/* harmony import */ var src_app_services_printing_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! src/app/services/printing.service */ "./src/app/services/printing.service.ts");
/* harmony import */ var src_app_services_lov_car_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! src/app/services/lov/car.service */ "./src/app/services/lov/car.service.ts");























let QuotationHomeComponent = class QuotationHomeComponent {
    constructor(fb, hls, changeDetector, router, tpls, his, ps, bms, cls, dialog) {
        this.fb = fb;
        this.hls = hls;
        this.changeDetector = changeDetector;
        this.router = router;
        this.tpls = tpls;
        this.his = his;
        this.ps = ps;
        this.bms = bms;
        this.cls = cls;
        this.dialog = dialog;
        // currentUser = this.auths.currentUserValue;
        this.isIssuance = src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__["Globals"].getAppType() == "I";
        this.isLoadQuotation = src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__["Globals"].isLoadQuotation;
        this.pageLabel = 'Quotation';
        this.triggerCounter = 0;
        this.triggerCoverage = 0;
        this.triggerBreakdown = 0;
        // insuredHeadCount: number = 1;
        this.homeDetails = new _objects_Home__WEBPACK_IMPORTED_MODULE_7__["Home"]();
        this.prevHomeDetails = null;
        this.changedValues = [];
        this.hasRSChanges = false;
        this.hasRCChanges = false;
        this.invalidForms = [];
        this.withTechControl = false;
        this.groupPolicy = new src_app_objects_GroupPolicy__WEBPACK_IMPORTED_MODULE_8__["GroupPolicy"]();
        this.policyHolder = new src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_14__["PolicyHolder"]();
        this.secondaryPolicyHolder = new src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_14__["PolicyHolder"]();
        this.mortgageePolicyHolder = new src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_14__["PolicyHolder"]();
        this.homeAddress = new src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_14__["PolicyHolder"]();
        this.minDate = moment__WEBPACK_IMPORTED_MODULE_6__().subtract(65, 'years').toDate();
        this.maxDate = moment__WEBPACK_IMPORTED_MODULE_6__().subtract(18, 'years').toDate();
        this.today = new Date();
        this.expiryDateMinDate = moment__WEBPACK_IMPORTED_MODULE_6__().add(1, 'years').toDate();
        this.showImprovement = false;
        this.showRelatedStructure = false;
        this.showRelatedContent = false;
        this.showOtherOccupation = false;
        this.showDetails = false;
        this.showSPADetails = false;
        this.showHCBIDetails = false;
        this.showCoverage = false;
        this.showPaymentBreakdown = false;
        this.showMortgagee = false;
        this.LOV = new src_app_objects_LOV_homeList__WEBPACK_IMPORTED_MODULE_9__["HomeListObject"]();
        this.GPLOV = new src_app_objects_LOV_groupPolicyList__WEBPACK_IMPORTED_MODULE_10__["GroupPolicyListObject"]();
        this.TPLOV = new src_app_objects_LOV_thirdPartyList__WEBPACK_IMPORTED_MODULE_18__["ThirdPartyListObject"]();
        //allow user to edit the form
        this.editMode = true;
        //flag to show generate btn
        this.showGenerateBtn = true;
        //flag to show issue btn
        this.showIssueQuoteBtn = false;
        //flag to show print quote/proceed to issuance
        this.showProceedToIssuanceBtn = false;
        //flat to show issuance generate btn
        this.showIssuanceGenerateBtn = true;
        //flag to show save btn
        this.showSaveBtn = false;
        //flag to show post btn
        this.showPostBtn = false;
        //flag to show print btn
        this.showPrintBtn = false;
        //flag to show new quote and new policy btn
        this.showNewPolicyBtn = false;
        //flag to show rate percentage panel
        this.showRatePercentage = false;
        //disable load button
        this.disableLoadBtn = true;
        this.createQuoteForm();
        this.setValidations();
    }
    ngAfterViewChecked() {
        this.changeDetector.detectChanges();
    }
    ngOnInit() {
        this.loadInit();
        if (this.isIssuance) {
            this.pageLabel = 'Issuance';
            this.editMode = false;
            if (this.isLoadQuotation) {
                //if loaded from home quotation
                this.editMode = true;
                this.homeDetails.quotationNumber = src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__["Globals"].loadNumber;
                this.loadQuotation();
                src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__["Globals"].setLoadNumber('');
                src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__["Globals"].setLoadQuotation(false);
            }
        }
    }
    createQuoteForm() {
        this.quoteForm = this.fb.group({
            quotationNumber: [null],
            subline: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            currency: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            district: this.isIssuance ? ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : [null],
            blockNumber: this.isIssuance ? ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : [null],
            buildingNumber: [null],
            subdivision: [null],
            buildingName: [null],
            streetName: [null],
            barangay: [null],
            region: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            province: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            //building / content details
            buildingCapital: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            contentValue: [null],
            buildingContent: [null],
            constructionOfBuilding: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            occupancyOfBuilding: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            front: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            right: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            left: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            rear: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            improvement: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].min(1)],
            relatedStructure: this.fb.array([]),
            relatedContent: this.fb.array([]),
            crestaZone: [null],
            zipCode: this.isIssuance ? ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : [null],
            cbMortgagee: [null],
            warrantedNoLoss: [null],
            ratePercentage: this.isIssuance ? ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : [null],
            //general information
            effectivityDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            expiryDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            //product data
            paymentMethod: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            product: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
        });
    }
    loadQuotation() {
        this.his.loadQuotation(this.homeDetails.quotationNumber).then(res => {
            if (res.status) {
                this.showRatePercentage = true;
                this.editMode = true;
                this.manageBtn(2);
                const variableData = res.obj["variableData"];
                variableData.forEach(v => {
                    const code = v.codCampo;
                    const value = v.valCampo;
                    let valueInt = undefined;
                    let valueFloat = undefined;
                    try {
                        valueInt = parseInt(value);
                    }
                    catch (e) {
                        // do nothing
                    }
                    try {
                        valueFloat = parseFloat(value);
                    }
                    catch (e) {
                        // do nothing
                    }
                    switch (code) {
                        case "COD_DISTRICT": {
                            this.homeDetails.district = value;
                            break;
                        }
                        case "NUM_BLOCK_DISTRICT": {
                            this.homeDetails.blockNumber = value;
                            break;
                        }
                        case "NUM_HOUSE_LOCATION": {
                            this.homeDetails.buildingNumber = value;
                            break;
                        }
                        case "TXT_VILLAGE_SUBDIVISION": {
                            this.homeDetails.subdivision = value;
                            break;
                        }
                        case "TXT_BUILDING_NAME": {
                            this.homeDetails.buildingName = value;
                            break;
                        }
                        case "TXT_STREET_NAME": {
                            this.homeDetails.streetName = value;
                            break;
                        }
                        case "TXT_BARANGAY": {
                            this.homeDetails.barangay = value;
                            break;
                        }
                        case "COD_REGION": {
                            this.homeDetails.region = valueInt;
                            break;
                        }
                        case "COD_PROVINCE": {
                            this.homeDetails.province = valueInt;
                            break;
                        }
                        case "COD_MUNICIPALITY": {
                            this.homeDetails.city = valueInt;
                            break;
                        }
                        case "TXT_CONSTRUCTION_BUILDING": {
                            this.homeDetails.constructionOfBuilding = value;
                            break;
                        }
                        case "TXT_OCCUPANCY_BUILDING": {
                            this.homeDetails.occupancyOfBuilding = value;
                            break;
                        }
                        case "TXT_BOUNDARY_DESC1": {
                            this.homeDetails.front = value;
                            break;
                        }
                        case "TXT_BOUNDARY_DESC2": {
                            this.homeDetails.right = value;
                            break;
                        }
                        case "TXT_BOUNDARY_DESC3": {
                            this.homeDetails.left = value;
                            break;
                        }
                        case "TXT_BOUNDARY_DESC4": {
                            this.homeDetails.rear = value;
                            break;
                        }
                        case "DES_CONTENTS": {
                            this.homeDetails.buildingContent = value;
                            break;
                        }
                        case "COD_CRESTA_ZONE": {
                            this.homeDetails.crestaZone = value;
                            break;
                        }
                        case "NUM_ZIPCODE": {
                            this.homeDetails.zipCode = valueInt;
                            break;
                        }
                        case "PCT_RATE_MANUAL": {
                            this.homeDetails.ratePercentage = valueFloat;
                            break;
                        }
                        case "COD_MODALIDAD": {
                            this.homeDetails.product = valueInt;
                            break;
                        }
                        default: {
                            // do nothing
                        }
                    }
                });
                const generalInfo = res.obj["generalInfo"];
                this.homeDetails.subline = generalInfo.codRamo;
                // this.homeDetails.effectivityDate = new Date(generalInfo.fecEfecPoliza);
                this.quoteForm.get('effectivityDate').setValue(new Date(generalInfo.fecEfecPoliza), { emitEvent: false });
                // this.homeDetails.expiryDate = new Date(generalInfo.fecVctoPoliza);
                this.quoteForm.get('expiryDate').setValue(new Date(generalInfo.fecVctoPoliza), { emitEvent: false });
                this.homeDetails.paymentMethod = generalInfo.codFraccPago;
                this.groupPolicy = new src_app_objects_GroupPolicy__WEBPACK_IMPORTED_MODULE_8__["GroupPolicy"];
                this.groupPolicy.agentCode = generalInfo.codAgt;
                if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(generalInfo.numPolizaGrupo)) {
                    this.groupPolicy.groupPolicy = parseInt(generalInfo.numPolizaGrupo);
                }
                if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(generalInfo.numContrato)) {
                    this.groupPolicy.contract = parseInt(generalInfo.numContrato);
                }
                if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(generalInfo.numSubcontrato)) {
                    this.groupPolicy.subContract = parseInt(generalInfo.numSubcontrato);
                }
                this.groupPolicy.commercialStructure = generalInfo.codNivel3;
                this.homeDetails.groupPolicy = this.groupPolicy;
                const docType = generalInfo.tipDocum;
                const docCode = generalInfo.codDocum;
                // preventing generic document type and code
                if ("MVO" != docType && !docCode.startsWith("MAPFREXX")) {
                    this.policyHolder.documentType = docType;
                    this.policyHolder.documentCode = docCode;
                    this.policyHolder.isExisting = true;
                }
                var relatedStructure = [];
                var relatedContent = [];
                const relatedDetails = res.obj["relatedDetails"];
                relatedDetails.forEach(i => {
                    const code = i.codCampo;
                    const value = i.valCampo;
                    const occurence = i.numOcurrencia;
                    switch (code) {
                        //related structure
                        case "VAL_RISK_2157": {
                            const obj = { val: value, occ: occurence };
                            relatedStructure.push(obj);
                            break;
                        }
                        //related content
                        case "VAL_RISK_2357": {
                            const obj = { val: value, occ: occurence };
                            relatedContent.push(obj);
                            break;
                        }
                        default: {
                            // do nothing
                        }
                    }
                });
                const buildingCapital = res.obj["buildingCapital"];
                if (buildingCapital.length != 0) {
                    this.homeDetails.buildingCapital = buildingCapital[0].sumaAseg;
                }
                const contentValue = res.obj["contentValue"];
                if (contentValue.length != 0) {
                    this.homeDetails.contentValue = contentValue[0].sumaAseg;
                }
                const improvement = res.obj["improvement"];
                if (improvement.length != 0) {
                    this.homeDetails.improvement = improvement[0].sumaAseg;
                }
                this.relatedStructure().controls.forEach(element => {
                    relatedStructure.forEach(rs => {
                        const stringValue = rs.val;
                        const num = parseInt(stringValue);
                        if (element.value._code == rs.occ && num > 0) {
                            element.get("_value").setValue(stringValue);
                        }
                    });
                });
                this.relatedContent().controls.forEach(element => {
                    relatedContent.forEach(rs => {
                        const stringValue = rs.val;
                        const num = parseInt(stringValue);
                        if (element.value._code == rs.occ && num > 0) {
                            element.get("_value").setValue(stringValue);
                        }
                    });
                });
                // includes related structure to home details DTO
                var rs = this.quoteForm.get('relatedStructure').value;
                this.homeDetails.relatedStructureDetails = rs.length ? rs : [];
                // includes related content to home details DTO
                var rc = this.quoteForm.get('relatedContent').value;
                this.homeDetails.relatedContentDetails = rc.length ? rc : [];
                this.loadLOVs();
                const coverageList = res.obj["coverageList"];
                this.populateCoverage(coverageList);
                //breakdwon
                const breakdown = res.obj["breakdown"];
                const receipt = res.obj["receipt"];
                this.populatePaymentBreakdown(breakdown, receipt);
                //cloning details from load quotation
                const deepClone = JSON.parse(JSON.stringify(this.homeDetails));
                this.prevHomeDetails = deepClone;
                //prevent to post policy if quotation has technical control
                const technicalControl = res.obj["technicalControl"];
                if (generalInfo.mcaProvisional == "S" && technicalControl.length > 0) {
                    this.withTechControl = true;
                    this.editMode = false;
                    this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showError(this.bms, "Quotation has technical control. Please request for approval first before posting the policy.");
                }
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showError(this.bms, res.message);
                this.homeDetails.quotationNumber = "";
            }
        }).finally(() => {
            //trigger child component load quotation function
            this.triggerCounter = this.triggerCounter + 1;
        });
    }
    loadLOVs() {
        var _this = this;
        this.homeAddress.state = this.homeDetails.region;
        this.tpls.getProvince(this.homeAddress).then(res => {
            _this.LOV.provinceLOV = res;
        });
        this.homeAddress.province = this.homeDetails.province;
        this.tpls.getCity(this.homeAddress).then(res => {
            _this.LOV.cityLOV = res;
        });
        this.homeAddress.city = this.homeDetails.city;
        this.tpls.getZipCode(this.homeAddress).then(res => {
            _this.LOV.zipCodeLOV = res;
        });
        if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(this.homeDetails.district)) {
            this.getBlockNumber();
        }
    }
    setValidations() {
        var quotationNumber = this.quoteForm.get('quotationNumber');
        var effectivityDate = this.quoteForm.get('effectivityDate');
        quotationNumber.valueChanges.subscribe(number => {
            this.disableLoadBtn = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(number);
        });
        effectivityDate.valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["distinctUntilChanged"])()).subscribe(date => {
            this.homeDetails.expiryDate = moment__WEBPACK_IMPORTED_MODULE_6__(date).add(1, 'years').toDate();
            this.expiryDateMinDate = this.homeDetails.expiryDate;
        });
    }
    loadInit() {
        this.setDefaultValue();
        var _this = this;
        this.hls.getHomeBusinessLine().then(res => {
            var temp = [];
            res.forEach(subline => {
                //residential only
                if (subline.COD_RAMO === 200) {
                    temp.push(subline);
                }
            });
            _this.LOV.sublineLOV = temp;
        });
        this.hls.getCurrency(this.homeDetails).then(res => {
            _this.LOV.currencyLOV = res;
        });
        this.hls.getRelatedStructureProperty(this.homeDetails).then(res => {
            res.forEach((rs) => {
                this.relatedStructure().push(this.newRelatedDetails(rs.COD_VALOR, rs.NOM_VALOR));
            });
        });
        this.hls.getRelatedContentProperty(this.homeDetails).then(res => {
            res.forEach((rs) => {
                this.relatedContent().push(this.newRelatedDetails(rs.COD_VALOR, rs.NOM_VALOR));
            });
        });
        this.hls.getProduct(this.homeDetails).then(res => {
            _this.LOV.productListLOV = res;
        });
        this.hls.getPaymentPlan(this.homeDetails).then(res => {
            _this.LOV.paymentMethodLOV = res;
        });
        this.tpls.getState(this.homeAddress).then(res => {
            _this.LOV.regionLOV = res;
        });
        this.hls.getDistrict().then(res => {
            _this.LOV.districtLOV = res;
        });
    }
    setDefaultValue() {
        //setting default value
        this.homeDetails.subline = 200; //residential
        this.homeDetails.sublineEffectivityDate = "15102014";
        this.homeDetails.effectivityDate = this.today; // current today
        this.homeDetails.currency = 1; //Philippine peso
        this.homeAddress.country = "PHL"; //Philippines
    }
    relatedStructure() {
        return this.quoteForm.get("relatedStructure");
    }
    relatedContent() {
        return this.quoteForm.get("relatedContent");
    }
    loadRelatedDetails(value, code, name) {
        return this.fb.group({
            _value: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].min(1)],
            _code: [code],
            _name: [name]
        });
    }
    removeRelatedStructure() {
        // removing all related structure details
        var relatedStructure = this.quoteForm.get('relatedStructure').value;
        if (relatedStructure.length > 0) {
            // loop until all related structure details removed
            this.relatedStructure().removeAt(0);
            this.removeRelatedStructure();
        }
    }
    removeRelatedContent() {
        // removing all related content details
        var relatedContent = this.quoteForm.get('relatedContent').value;
        if (relatedContent.length > 0) {
            // loop until all related structure content removed
            this.relatedContent().removeAt(0);
            this.removeRelatedContent();
        }
    }
    newRelatedDetails(code, name) {
        return this.fb.group({
            _value: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].min(1)],
            _code: [code],
            _name: [name]
        });
    }
    getBlockNumber() {
        const _this = this;
        this.hls.getBlockNumber(this.homeDetails.district).then(res => {
            _this.LOV.blockNumberLOV = res;
        });
    }
    getProvince() {
        const _this = this;
        this.homeAddress.state = this.homeDetails.region;
        this.tpls.getProvince(this.homeAddress).then(res => {
            _this.LOV.provinceLOV = res;
            this.homeDetails.province = null;
        });
    }
    getCity() {
        const _this = this;
        this.homeAddress.province = this.homeDetails.province;
        this.tpls.getCity(this.homeAddress).then(res => {
            _this.LOV.cityLOV = res;
            this.homeDetails.city = null;
        });
    }
    getZipCode() {
        const _this = this;
        this.homeAddress.city = this.homeDetails.city;
        this.tpls.getZipCode(this.homeAddress).then(res => {
            _this.LOV.zipCodeLOV = res;
            this.homeDetails.zipCode = null;
        });
    }
    populateCoverage(coverageList) {
        this.coverageList = coverageList;
        this.showCoverage = true;
        this.triggerCoverage = this.triggerCoverage + 1;
    }
    populatePaymentBreakdown(breakdown, receipt) {
        this.paymentBreakdown = breakdown;
        this.paymentReceipt = receipt;
        this.showPaymentBreakdown = true;
        this.triggerBreakdown = this.triggerBreakdown + 1;
        src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].scroll('paymentBreakdown');
    }
    proceed(type) {
        //checking the affecting related details
        this.hasAffectingRelatedDetails();
        //if user changes affecting values
        const hasChanges = this.changedValues.length != 0 || this.hasRSChanges || this.hasRCChanges;
        const hasQuotationNumber = !src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(this.homeDetails.quotationNumber);
        const isTemporaryQuotation = hasQuotationNumber && this.homeDetails.quotationNumber.startsWith('999');
        this.homeDetails.affecting = !hasQuotationNumber ||
            (hasQuotationNumber && isTemporaryQuotation) ||
            (hasQuotationNumber && !isTemporaryQuotation && hasChanges);
        if (hasChanges) {
            this.openProceedModal(type);
        }
        else {
            switch (type) {
                case 1: {
                    this.issueQuote('S');
                    break;
                }
                case 2: {
                    this.issueQuote('N');
                    break;
                }
                case 3: {
                    this.savePolicy();
                    break;
                }
                default: {
                    this.postPolicy();
                    break;
                }
            }
        }
    }
    openProceedModal(type) {
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialogConfig"]();
        dialogConfig.restoreFocus = false;
        dialogConfig.autoFocus = false;
        dialogConfig.role = 'dialog';
        dialogConfig.width = '500px';
        dialogConfig.data = {
            generateBtn: type == 1 || type == 2 || type == 3,
            saveBtn: type == 4
        };
        this.dialogRef = this.dialog.open(this.proceedModal, dialogConfig);
    }
    openValidationModal(q, g, c) {
        //clear arrays
        let invalid = [];
        this.invalidForms = [];
        //list of incorrect label names
        var formLabels = [{
                cbOneTripOnly: 'oneTripOnly'
            },
            {
                name: "client'sName"
            }
        ];
        var quoteArr = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].findInvalidControls(q);
        invalid.push(...quoteArr);
        var groupPolicyArr = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].findInvalidControls(g);
        invalid.push(...groupPolicyArr);
        var policyHolderArr = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].findInvalidControls(c);
        invalid.push(...policyHolderArr);
        invalid.forEach((i) => {
            formLabels.forEach(f => {
                var correctLabel = f[i];
                if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(correctLabel)) {
                    //replace label
                    i = correctLabel;
                }
            });
            let label = i.replace(/([A-Z])/g, ' $1').trim();
            this.invalidForms.push(label.toLowerCase());
        });
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialogConfig"]();
        dialogConfig.restoreFocus = false;
        dialogConfig.autoFocus = false;
        dialogConfig.role = 'dialog';
        dialogConfig.width = '500px';
        this.dialogRef = this.dialog.open(this.validationModal, dialogConfig);
    }
    openPaymentBreakdownModal(receipt, breakdown, isPostPolicy) {
        let product = "";
        this.LOV.productListLOV.forEach((p) => {
            if (p.COD_MODALIDAD == this.homeDetails.product) {
                product = p.NOM_MODALIDAD;
            }
        });
        let payment = "";
        this.LOV.paymentMethodLOV.forEach((p) => {
            if (p.COD_FRACC_PAGO == this.homeDetails.paymentMethod) {
                payment = p.NOM_FRACC_PAGO;
            }
        });
        const modalData = {
            number: isPostPolicy ? this.homeDetails.policyNumber : this.homeDetails.quotationNumber,
            product: product,
            payment: payment,
            receipt: receipt,
            breakdown: breakdown,
            showExchangeRate: false,
            isPostPolicy: isPostPolicy,
            line: 'HOME' //TODO
        };
        this.dialog.open(_payment_breakdown_modal_payment_breakdown_modal_component__WEBPACK_IMPORTED_MODULE_20__["PaymentBreakdownModalComponent"], {
            width: '1000px',
            data: modalData
        });
    }
    manageBtn(opt) {
        if (opt == 1) {
            //hides payment breakdown panel
            this.showPaymentBreakdown = false;
            this.editMode = true;
        }
        if (this.isIssuance) {
            this.showIssuanceGenerateBtn = (opt == 1);
            this.showSaveBtn = (opt == 2);
            this.showPostBtn = (opt == 3);
            this.showPrintBtn = (opt == 4);
            this.showNewPolicyBtn = (opt == 5);
        }
        else {
            this.showGenerateBtn = (opt == 1);
            this.showIssueQuoteBtn = (opt == 2);
            this.showProceedToIssuanceBtn = (opt == 3);
        }
    }
    newQuote() {
        this.newPage(src_app_constants_page__WEBPACK_IMPORTED_MODULE_17__["page"].QUO.HOM);
    }
    newPolicy() {
        this.newPage(src_app_constants_page__WEBPACK_IMPORTED_MODULE_17__["page"].ISS.HOM);
    }
    newPage(page) {
        src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].scroll('topDiv');
        setTimeout(() => {
            src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__["Globals"].setPage(page);
            this.router.navigate(['/reload']);
        }, 500);
    }
    affecting(key, label) {
        if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(this.homeDetails.quotationNumber) && this.prevHomeDetails != null) {
            let prev = this.prevHomeDetails[key] == undefined ? "" : this.prevHomeDetails[key];
            let curr = this.homeDetails[key] == undefined ? "" : this.homeDetails[key];
            if (curr instanceof Date) {
                curr = curr.getMonth() + "/" + curr.getDate() + "/" + curr.getFullYear();
                if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(prev)) {
                    var prevDate = new Date(prev);
                    prev = prevDate.getMonth() + "/" + prevDate.getDate() + "/" + prevDate.getFullYear();
                }
            }
            if (prev != curr) {
                if (!this.changedValues.includes(label)) {
                    //if changedValues length is greater than 0, request is affecting
                    this.changedValues.push(label);
                }
            }
            else {
                //remove all occurence
                this.changedValues = this.changedValues.filter(v => v !== label);
            }
        }
    }
    hasAffectingRelatedDetails() {
        var currentRSTotalAmount = 0;
        var currentRCTotalAmount = 0;
        var prevRSTotalAmount = 0;
        var prevRCTotalAmount = 0;
        var relatedStructure = this.quoteForm.get('relatedStructure').value;
        const relatedStructureArray = relatedStructure.length ? relatedStructure : [];
        currentRSTotalAmount = this.getTotal(relatedStructureArray);
        var relatedContent = this.quoteForm.get('relatedContent').value;
        const relatedContentArray = relatedContent.length ? relatedContent : [];
        currentRCTotalAmount = this.getTotal(relatedContentArray);
        if (this.prevHomeDetails != null) {
            if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(this.prevHomeDetails.relatedStructureDetails)) {
                prevRSTotalAmount = this.getTotal(this.prevHomeDetails.relatedStructureDetails);
            }
            if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(this.prevHomeDetails.relatedContentDetails)) {
                prevRCTotalAmount = this.getTotal(this.prevHomeDetails.relatedContentDetails);
            }
            this.hasRSChanges = currentRSTotalAmount != prevRSTotalAmount;
            this.hasRCChanges = currentRCTotalAmount != prevRCTotalAmount;
        }
    }
    getTotal(arr) {
        var total = 0;
        arr.forEach(relatedDetails => {
            if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(relatedDetails._value) && relatedDetails._value != 0) {
                var val = 0;
                try {
                    val = parseInt(relatedDetails._value);
                }
                catch (e) {
                    //do nothing
                }
                total = total + val;
            }
        });
        return total;
    }
    printQuote() {
        this.ps.printQuote(this.homeDetails.quotationNumber);
    }
    printPolicy() {
        this.ps.printPolicy(this.homeDetails.policyNumber);
    }
    proceedToIssuance() {
        this.ps.proceedToIssuance(this.homeDetails.quotationNumber, src_app_constants_page__WEBPACK_IMPORTED_MODULE_17__["page"].ISS.HOM);
    }
    //getting error or warning items
    getErrorItems(res, mcaTmpPptoMph, isIssuance) {
        this.withTechControl = false;
        const resErrorCode = res.obj["errorCode"];
        const resError = res.obj["error"];
        const isPostPolicy = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(resErrorCode);
        let items = isPostPolicy ?
            ["Error occured while posting policy. Please contact administration."] :
            ["Error code is " + resErrorCode + " but does not return any error message. Please contact administration."];
        if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(resError)) {
            const errArr = resError.split("~");
            if (errArr.length) {
                var arr = [];
                errArr.forEach((err) => {
                    if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isEmpty(err)) {
                        arr.push(err);
                    }
                });
                const resStatus = res.obj["status"];
                if (arr.length) {
                    if (!resStatus && isPostPolicy) {
                        //has error - can't proceed
                        items = ["Failed to generate quotation number due to following reason/s:"].concat(arr);
                    }
                    else {
                        this.withTechControl = true;
                        // has warning - can proceed
                        if (isIssuance) {
                            items = ["Quotation has technical control due to following reason/s:"].concat(arr);
                        }
                        else {
                            items = ("N" == mcaTmpPptoMph) ? ["Routed for approval due to following reason/s:"].concat(arr) : arr;
                        }
                    }
                }
            }
        }
        return items;
    }
    getRatePercentage(variableData) {
        // const variableData = res.obj["variableData"] as any[];
        variableData.forEach(v => {
            const code = v.codCampo;
            const value = v.valCampo;
            let valueFloat = undefined;
            try {
                valueFloat = parseFloat(value);
            }
            catch (e) {
                // do nothing
            }
            switch (code) {
                case "PCT_RATE_MANUAL": {
                    this.homeDetails.ratePercentage = valueFloat;
                    break;
                }
                default: {
                    // do nothing
                }
            }
        });
    }
    //generate and issue quote button
    issueQuote(mcaTmpPptoMph) {
        // S for generation and N for issue quotation
        this.assembleData(mcaTmpPptoMph);
        this.his.issueQuote(this.homeDetails).then(res => {
            if (res.status) {
                //clear affecting fields
                this.changedValues = [];
                this.hasRSChanges = false;
                this.hasRCChanges = false;
                const items = this.getErrorItems(res, mcaTmpPptoMph, false);
                const status = res.obj["status"];
                if (status) {
                    this.showRatePercentage = true;
                    const variableData = res.obj["variableData"];
                    this.getRatePercentage(variableData);
                    //duplicating car details for comparison
                    const deepClone = JSON.parse(JSON.stringify(this.homeDetails));
                    this.prevHomeDetails = deepClone;
                    this.editMode = false;
                    const errorCode = res.obj["errorCode"];
                    if (errorCode == "S") {
                        //if quotation has a warning
                        this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showHTMLWarning(this.bms, items);
                    }
                    const policyNumber = res.obj["policyNumber"];
                    this.homeDetails.quotationNumber = policyNumber;
                    const breakdown = res.obj["breakdown"];
                    const receipt = res.obj["receipt"];
                    if ("S" == mcaTmpPptoMph) {
                        //for generation of quote
                        const message = "You have successfully generated a quotation - " + policyNumber;
                        this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showInfo(this.bms, message);
                        const coverageList = res.obj["coverageList"];
                        this.populateCoverage(coverageList);
                        this.populatePaymentBreakdown(breakdown, receipt);
                        this.manageBtn(2);
                    }
                    else {
                        // for issuing the quote
                        this.openPaymentBreakdownModal(receipt, breakdown, false);
                        this.manageBtn(3);
                    }
                }
                else {
                    this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showHTMLError(this.bms, items);
                }
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    assembleData(mcaTmpPptoMph) {
        this.homeDetails.mcaTmpPptoMph = mcaTmpPptoMph;
        // includes group policy to home details DTO
        this.homeDetails.groupPolicy = this.groupPolicy;
        // includes policy holder to home details DTO
        this.homeDetails.policyHolder = this.policyHolder;
        // includes secondary policy holder to car details DTO
        this.homeDetails.secondaryPolicyHolder = this.secondaryPolicyHolder;
        if (!src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(this.homeDetails.secondaryPolicyHolderSeparator)) {
            const _this = this;
            this.cls.getPHSeparator().then(res => {
                res.forEach(sep => {
                    if (sep.NOM_VALOR == this.homeDetails.secondaryPolicyHolderSeparator) {
                        _this.homeDetails.secondaryPolicyHolderSeparatorCode = sep.TIP_ASEG_SEP_LOV;
                    }
                });
            });
        }
        // includes mortgagee policy holder to car details DTO
        this.homeDetails.mortgageePolicyHolder = this.mortgageePolicyHolder;
        // includes related structure to home details DTO
        var relatedStructure = this.quoteForm.get('relatedStructure').value;
        this.homeDetails.relatedStructureDetails = relatedStructure.length ? relatedStructure : [];
        // includes related content to home details DTO
        var relatedContent = this.quoteForm.get('relatedContent').value;
        this.homeDetails.relatedContentDetails = relatedContent.length ? relatedContent : [];
        // to trigger changes when regenerating quotation
        this.showCoverage = false;
        this.showPaymentBreakdown = false;
    }
    //save policy button
    savePolicy() {
        this.assembleData("N");
        this.his.savePolicy(this.homeDetails).then(res => {
            if (res.status) {
                //clear affecting fields
                this.changedValues = [];
                this.hasRSChanges = false;
                this.hasRCChanges = false;
                var items = this.getErrorItems(res, this.homeDetails.mcaTmpPptoMph, true);
                const status = res.obj["status"];
                if (status) {
                    //duplicating home details for comparison
                    const deepClone = JSON.parse(JSON.stringify(this.homeDetails));
                    this.prevHomeDetails = deepClone;
                    this.editMode = false;
                    const errorCode = res.obj["errorCode"];
                    const policyNumber = res.obj["policyNumber"];
                    this.homeDetails.quotationNumber = policyNumber;
                    const message = "You have successfully generated a new quotation: " + policyNumber;
                    this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showInfo(this.bms, message);
                    const breakdown = res.obj["breakdown"];
                    const receipt = res.obj["receipt"];
                    this.populatePaymentBreakdown(breakdown, receipt);
                    this.withTechControl = errorCode == 'S';
                    if (this.withTechControl) {
                        //if quotation has a warning
                        if (this.homeDetails.affecting) {
                            items = ["Updated quotation number is: " + policyNumber].concat(items);
                        }
                        this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showHTMLWarning(this.bms, items);
                    }
                    else {
                        const message = "Policy saved successfully.";
                        this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showInfo(this.bms, message);
                    }
                    this.editMode = false;
                    this.manageBtn(3);
                }
                else {
                    this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showHTMLError(this.bms, items);
                }
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    //post policy button
    postPolicy() {
        this.assembleData("N");
        if (this.withTechControl) {
            this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showWarning(this.bms, "Quotation has technical control. Please request for approval first before posting the policy.");
        }
        else {
            this.his.postPolicy(this.homeDetails).then(res => {
                this.editMode = false;
                if (res.status) {
                    //clear affecting fields
                    this.changedValues = [];
                    this.hasRSChanges = false;
                    this.hasRCChanges = false;
                    var items = this.getErrorItems(res, this.homeDetails.mcaTmpPptoMph, true);
                    const status = res.obj["status"];
                    const policyNumber = res.obj["policyNumber"];
                    if (status && !src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].isUndefined(policyNumber)) {
                        this.homeDetails.policyNumber = policyNumber;
                        const breakdown = res.obj["breakdown"];
                        const receipt = res.obj["receipt"];
                        this.populatePaymentBreakdown(breakdown, receipt);
                        this.openPaymentBreakdownModal(receipt, breakdown, true);
                        this.manageBtn(4);
                    }
                    else {
                        this.manageBtn(5);
                        this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showHTMLError(this.bms, items);
                    }
                }
                else {
                    this.manageBtn(5);
                    this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_15__["Utility"].showError(this.bms, res.message);
                }
            });
        }
    }
};
QuotationHomeComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_lov_home_service__WEBPACK_IMPORTED_MODULE_11__["HomeLOVServices"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_16__["Router"] },
    { type: src_app_services_lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_19__["ThirdPartyLOVServices"] },
    { type: _services_home_issue_service__WEBPACK_IMPORTED_MODULE_12__["HomeIssueServices"] },
    { type: src_app_services_printing_service__WEBPACK_IMPORTED_MODULE_21__["PrintingService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__["BsModalService"] },
    { type: src_app_services_lov_car_service__WEBPACK_IMPORTED_MODULE_22__["CarLOVServices"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('proceedModal')
], QuotationHomeComponent.prototype, "proceedModal", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('validationModal')
], QuotationHomeComponent.prototype, "validationModal", void 0);
QuotationHomeComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-quotation-home',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./quotation-home.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quotation-home/quotation-home.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./quotation-home.component.css */ "./src/app/components/quotation-home/quotation-home.component.css")).default]
    })
], QuotationHomeComponent);



/***/ }),

/***/ "./src/app/components/quotation-travel/quotation-travel.component.css":
/*!****************************************************************************!*\
  !*** ./src/app/components/quotation-travel/quotation-travel.component.css ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".traveler-card {\n    margin-bottom: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdW90YXRpb24tdHJhdmVsL3F1b3RhdGlvbi10cmF2ZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVvdGF0aW9uLXRyYXZlbC9xdW90YXRpb24tdHJhdmVsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudHJhdmVsZXItY2FyZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/quotation-travel/quotation-travel.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/components/quotation-travel/quotation-travel.component.ts ***!
  \***************************************************************************/
/*! exports provided: QuotationTravelComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuotationTravelComponent", function() { return QuotationTravelComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _objects_Travel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../objects/Travel */ "./src/app/objects/Travel.ts");
/* harmony import */ var src_app_objects_GroupPolicy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/GroupPolicy */ "./src/app/objects/GroupPolicy.ts");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_objects_LOV_travelList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/objects/LOV/travelList */ "./src/app/objects/LOV/travelList.ts");
/* harmony import */ var src_app_objects_LOV_groupPolicyList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/objects/LOV/groupPolicyList */ "./src/app/objects/LOV/groupPolicyList.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _payment_breakdown_modal_payment_breakdown_modal_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../payment-breakdown-modal/payment-breakdown-modal.component */ "./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/utils/global */ "./src/app/utils/global.ts");
/* harmony import */ var src_app_constants_page__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/constants/page */ "./src/app/constants/page.ts");
/* harmony import */ var _coverages_coverages_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../coverages/coverages.component */ "./src/app/components/coverages/coverages.component.ts");
/* harmony import */ var src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/app/objects/PolicyHolder */ "./src/app/objects/PolicyHolder.ts");
/* harmony import */ var _services_lov_travel_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../services/lov/travel.service */ "./src/app/services/lov/travel.service.ts");
/* harmony import */ var src_app_services_travel_utility_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/app/services/travel-utility.service */ "./src/app/services/travel-utility.service.ts");
/* harmony import */ var src_app_services_travel_issue_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/app/services/travel-issue.service */ "./src/app/services/travel-issue.service.ts");
/* harmony import */ var src_app_validators_validate__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/app/validators/validate */ "./src/app/validators/validate.ts");
/* harmony import */ var src_app_objects_Traveler__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! src/app/objects/Traveler */ "./src/app/objects/Traveler.ts");









// import {
//   AuthenticationService
// } from 'src/app/services/authentication.service';













let QuotationTravelComponent = class QuotationTravelComponent {
    constructor(fb, 
    // private auths: AuthenticationService,
    bms, router, tls, tus, tis, dialog, changeDetector) {
        this.fb = fb;
        this.bms = bms;
        this.router = router;
        this.tls = tls;
        this.tus = tus;
        this.tis = tis;
        this.dialog = dialog;
        this.changeDetector = changeDetector;
        // currentUser = this.auths.currentUserValue;
        this.isIssuance = src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__["Globals"].getAppType() == "I";
        this.isLoadQuotation = src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__["Globals"].isLoadQuotation;
        this.pageLabel = 'Quotation';
        this.triggerCounter = 0;
        this.triggerCoverage = 0;
        this.triggerBreakdown = 0;
        this.travelerHeadCount = 1;
        this.travelDetails = new _objects_Travel__WEBPACK_IMPORTED_MODULE_4__["Travel"]();
        this.prevTravelDetails = null;
        this.changedValues = [];
        this.changedTravelerValues = [];
        this.invalidForms = [];
        this.withTechControl = false;
        this.groupPolicy = new src_app_objects_GroupPolicy__WEBPACK_IMPORTED_MODULE_5__["GroupPolicy"]();
        this.policyHolder = new src_app_objects_PolicyHolder__WEBPACK_IMPORTED_MODULE_16__["PolicyHolder"]();
        this.mindate = new Date();
        // bdaymindate: Date = moment().subtract(65, 'years').toDate();
        this.expiryDateMinDate = moment__WEBPACK_IMPORTED_MODULE_3__().add(1, 'years').toDate();
        this.endDateMinDate = moment__WEBPACK_IMPORTED_MODULE_3__().add(1, 'days').toDate();
        this.enableEndDate = false;
        this.LOV = new src_app_objects_LOV_travelList__WEBPACK_IMPORTED_MODULE_7__["TravelListObject"]();
        this.GPLOV = new src_app_objects_LOV_groupPolicyList__WEBPACK_IMPORTED_MODULE_8__["GroupPolicyListObject"]();
        this.showOthersDescription = false;
        this.showAdditionalInformation = false;
        this.showPaymentBreakdown = false;
        this.showCoverage = false;
        //allow user to edit the form
        this.editMode = true;
        //flag to show generate btn
        this.showGenerateBtn = true;
        //flag to show issue btn
        this.showIssueQuoteBtn = false;
        //flag to show print quote/proceed to issuance
        this.showProceedToIssuanceBtn = false;
        //flat to show issuance generate btn
        this.showIssuanceGenerateBtn = true;
        //flag to show save btn
        this.showSaveBtn = false;
        //flag to show post btn
        this.showPostBtn = false;
        //flag to show print btn
        this.showPrintBtn = false;
        //flag to show new quote and new policy btn
        this.showNewPolicyBtn = false;
        //disable load button
        this.disableLoadBtn = true;
        this.createQuoteForm();
        this.setValidations();
    }
    ngAfterViewChecked() {
        this.changeDetector.detectChanges();
    }
    ngOnInit() {
        this.loadInit();
        if (this.isIssuance) {
            this.pageLabel = 'Issuance';
            if (this.isLoadQuotation) {
                //if loaded from travel quotation
                this.travelDetails.quotationNumber = src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__["Globals"].loadNumber;
                this.loadQuotation();
                src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__["Globals"].setLoadNumber('');
                src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__["Globals"].setLoadQuotation(false);
            }
        }
    }
    loadInit() {
        var _this = this;
        this.tls.getCurrencyList().then(res => {
            _this.LOV.currencyLOV = res;
        });
        this.tls.getTravelPackage().then(res => {
            _this.LOV.packageLOV = res;
        });
        this.tls.getTypeOfCoverage().then(res => {
            _this.LOV.coverageLOV = res;
        });
        this.tls.getPurposeOfTrip().then(res => {
            _this.LOV.purposeOfTripLOV = res;
            _this.LOV.purposeOfTripLOV.forEach((p) => {
                var businessLabel = p.NOM_BUSINESS;
                p.COD_BUSINESS = businessLabel.toUpperCase();
            });
        });
        this.tls.getInsuranceCoverage().then(res => {
            _this.LOV.insuranceCoverageLOV = res;
        });
        this.tls.getCoverageOption().then(res => {
            _this.LOV.coverageOptionLOV = res;
        });
        this.tls.getRelationship().then(res => {
            _this.LOV.relationshipLOV = res;
            _this.LOV.relationshipLOV.forEach((r) => {
                // disable primary
                r.disabled = r.COD_VALOR == 'P';
            });
        });
        //setting defualt value
        this.travelDetails.insuranceCoverage = "I"; //individual
    }
    createQuoteForm() {
        this.quoteForm = this.fb.group({
            quotationNumber: [null],
            currency: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            countries: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            //general information
            travelPackage: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            travelType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            startDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            endDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            noOfDays: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            completeItinerary: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, src_app_validators_validate__WEBPACK_IMPORTED_MODULE_20__["validateItinerary"]]],
            purposeOfTrip: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            cbOneTripOnly: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            cbWithCruise: [null],
            othersDescription: [null],
            //travelers
            travelers: this.fb.array([this.newTraveler(true)]),
            //additional policy information
            cbSportsEquipment: [null],
            sportsEquipment: [null],
            cbHazardousSports: [null],
            hazardousSports: [null],
            //coverages
            insuranceCoverage: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            coverageOption: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            medicalExpenses: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
        });
    }
    currencyOnchange() {
        var _this = this;
        this.travelDetails.subline = 380;
        this.travelDetails.startDate = null;
        this.travelDetails.endDate = null;
        //if currency is philippine peso
        this.travelDetails.countries = this.travelDetails.currency === 1 ? [{
                NOM_PAIS: "PHILIPPINES",
                COD_PAIS: "PHL",
                NOM_VERNACULO: "PHILIPPINES",
                name: "PHILIPPINES",
                value: "PHL",
                type: "PHILIPPINES"
            }] :
            null;
        this.travelDetails.travelPackage = this.travelDetails.currency === 1 ?
            "P" :
            null;
        this.tls.getCountryList(this.travelDetails).then(res => {
            res.forEach(country => {
                country.name = country.NOM_PAIS;
                country.value = country.COD_PAIS;
                country.type = country.NOM_VERNACULO;
            });
            _this.LOV.countryLOV = res;
        });
        this.tls.getProduct(this.travelDetails).then(res => {
            _this.LOV.productListLOV = res;
        });
    }
    relationshipOnChange(traveler) {
        var val = traveler.controls['relationship'].value;
        var maxAge = (val == 'C') ? 21 : 65;
        var minAge = (val == 'C') ? 0 : 18;
        const bdaymindate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(maxAge, 'years').toDate();
        traveler.controls['bdaymindate'].setValue(bdaymindate);
        const bdaymaxdate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(minAge, 'years').toDate();
        traveler.controls['bdaymaxdate'].setValue(bdaymaxdate);
        traveler.controls['birthDate'].setValue('');
        this.LOV.relationshipLOV.forEach(r => {
            if (r.COD_VALOR == val) {
                traveler.controls['relationshipLabel'].setValue(r.NOM_VALOR);
            }
        });
    }
    getOneTrip() {
        if (this.travelDetails.endDate != null) {
            this.tus.getOneTrip(this.travelDetails).then((res) => {
                if (res.status) {
                    this.travelDetails.cbOneTripOnly = res.obj['oneTripOnly'];
                }
            });
        }
    }
    loadQuotation() {
        this.tis.loadQuotation(this.travelDetails.quotationNumber).then(res => {
            if (res.status) {
                this.manageBtn(2);
                const variableData = res.obj["variableData"];
                variableData.forEach(v => {
                    const code = v.codCampo;
                    const value = v.valCampo;
                    let valueInt = undefined;
                    try {
                        valueInt = parseInt(value);
                    }
                    catch (e) {
                        // do nothing
                    }
                    switch (code) {
                        //general information details
                        case "TRAVEL_PACK": {
                            this.travelDetails.travelPackage = value;
                            break;
                        }
                        case "TRAVEL_TYPE": {
                            this.travelDetails.travelType = value;
                            break;
                        }
                        // case "ARRIVAL_DATE": {
                        //   const date = Utility.convertStringDate(value);
                        //   this.travelDetails.endDate = date;
                        //   break;
                        // }
                        // case "DEPARTURE_DATE": {
                        //   const date = Utility.convertStringDate(value);
                        //   this.travelDetails.startDate = date;
                        //   break;
                        // }
                        case "VAL_NUM_DAYS_TRIP": {
                            this.travelDetails.noOfDays = valueInt;
                            break;
                        }
                        case "ITINERARY": {
                            this.travelDetails.completeItinerary = value;
                            break;
                        }
                        case "PURPOSE_TRIP": {
                            this.travelDetails.purposeOfTrip = value;
                            break;
                        }
                        case "TXT_OTHERS_DESCRIPTION": {
                            this.travelDetails.othersDescription = value;
                            break;
                        }
                        case "MCA_ONE_TRIP_ONLY": {
                            this.travelDetails.cbOneTripOnly = value == "Y";
                            break;
                        }
                        case "MCA_WITH_CRUISE": {
                            this.travelDetails.cbWithCruise = value == "S";
                            break;
                        }
                        //additional policy information
                        case "TXT_SPORTS_EQUIPMENT": {
                            this.travelDetails.cbSportsEquipment = true;
                            this.travelDetails.sportsEquipment = value;
                            break;
                        }
                        case "TXT_HAZARDOUS_SPORTS": {
                            this.travelDetails.cbHazardousSports = true;
                            this.travelDetails.hazardousSports = value;
                            break;
                        }
                        //coverages
                        case "INSURANCE_COVERAGE": {
                            this.travelDetails.insuranceCoverage = value;
                            break;
                        }
                        case "COVERAGE_OPTIONS": {
                            this.travelDetails.coverageOption = value;
                            break;
                        }
                        case "EXPENSES_COVERAGE": {
                            this.travelDetails.medicalExpenses = value;
                            break;
                        }
                        default: {
                            // do nothing
                        }
                    }
                });
                const country = [];
                var tempTravaler = [];
                const travelerDetails = res.obj["travelerDetails"];
                travelerDetails.forEach(t => {
                    const code = t.codCampo;
                    const value = t.valCampo;
                    const text = t.txtCampo;
                    const occurence = t.numOcurrencia;
                    // const index = occurence - 1;
                    let valueInt = undefined;
                    try {
                        valueInt = parseInt(value);
                    }
                    catch (e) {
                        // do nothing
                    }
                    switch (code) {
                        //country
                        case "TXT_COUNTRY_NAME": {
                            const obj = { NOM_PAIS: text, COD_PAIS: value, name: text, value: value };
                            country.push(obj);
                            break;
                        }
                        case "COMPLETE_NAME": {
                            const obj = { completeName: value, occurence: occurence };
                            tempTravaler.push(obj);
                            break;
                        }
                        default: {
                            // do nothing
                        }
                    }
                });
                this.travelDetails.countries = country;
                var travelers = [];
                tempTravaler.forEach(t => {
                    const tObj = new src_app_objects_Traveler__WEBPACK_IMPORTED_MODULE_21__["Traveler"]();
                    tObj.completeName = t.completeName;
                    travelerDetails.forEach(td => {
                        const code = td.codCampo;
                        const value = td.valCampo;
                        const text = td.txtCampo;
                        const occurence = td.numOcurrencia;
                        let valueInt = undefined;
                        try {
                            valueInt = parseInt(value);
                        }
                        catch (e) {
                            // do nothing
                        }
                        if (t.occurence == occurence) {
                            switch (code) {
                                case "RELATIONSHIP": {
                                    tObj.relationship = value;
                                    tObj.relationshipLabel = text;
                                    break;
                                }
                                case "BIRTHDATE": {
                                    const date = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].convertStringDate(value);
                                    tObj.birthDate = date;
                                    break;
                                }
                                case "PASSPORT_NUMBER": {
                                    tObj.passportNumber = value;
                                    break;
                                }
                                case "USUAL_PHYSICIAN": {
                                    tObj.physicianName = value;
                                    break;
                                }
                                default: {
                                    // do nothing
                                }
                            }
                        }
                    });
                    travelers.push(tObj);
                });
                if (travelers.length) {
                    //removes all accessories
                    this.removeTravelers();
                    var temp = [];
                    travelers.forEach((tra) => {
                        temp.push({
                            traveler: tra.completeName
                        });
                        this.travelers().push(this.loadTraveler(tra.completeName, tra.birthDate, tra.relationship, tra.relationshipLabel, tra.passportNumber, tra.physicianName));
                    });
                    var travelersForm = this.quoteForm.get('travelers').value;
                    this.travelDetails.travelers = travelersForm;
                }
                else {
                    this.travelDetails.travelers = [];
                }
                const generalInfo = res.obj["generalInfo"];
                this.travelDetails.subline = generalInfo.codRamo;
                this.travelDetails.currency = generalInfo.codMon;
                this.travelDetails.startDate = new Date(generalInfo.fecEfecPoliza);
                this.travelDetails.endDate = new Date(generalInfo.fecVctoPoliza);
                // this.travelDetails.sublineEffectivityDate = Utility.formatDate(new Date(generalInfo.fecValidez), "DDMMYYYY");
                this.groupPolicy = new src_app_objects_GroupPolicy__WEBPACK_IMPORTED_MODULE_5__["GroupPolicy"];
                this.groupPolicy.agentCode = generalInfo.codAgt;
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(generalInfo.numPolizaGrupo)) {
                    this.groupPolicy.groupPolicy = parseInt(generalInfo.numPolizaGrupo);
                }
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(generalInfo.numContrato)) {
                    this.groupPolicy.contract = parseInt(generalInfo.numContrato);
                }
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(generalInfo.numSubcontrato)) {
                    this.groupPolicy.subContract = parseInt(generalInfo.numSubcontrato);
                }
                this.groupPolicy.commercialStructure = generalInfo.codNivel3;
                this.travelDetails.groupPolicy = this.groupPolicy;
                const docType = generalInfo.tipDocum;
                const docCode = generalInfo.codDocum;
                // preventing generic document type and code
                if ("MVO" != docType && !docCode.startsWith("MAPFREXX")) {
                    this.policyHolder.documentType = docType;
                    this.policyHolder.documentCode = docCode;
                    this.policyHolder.isExisting = true;
                }
                this.loadLOVs();
                const coverageList = res.obj["coverageList"];
                this.populateCoverage(coverageList);
                //breakdwon
                const breakdown = res.obj["breakdown"];
                const receipt = res.obj["receipt"];
                this.populatePaymentBreakdown(breakdown, receipt);
                //cloning details from load quotation
                const deepClone = JSON.parse(JSON.stringify(this.travelDetails));
                this.prevTravelDetails = deepClone;
                //prevent to post policy if quotation has technical control
                const technicalControl = res.obj["technicalControl"];
                if (generalInfo.mcaProvisional == "S" && technicalControl.length > 0) {
                    this.withTechControl = true;
                    this.editMode = false;
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showError(this.bms, "Quotation has technical control. Please request for approval first before posting the policy.");
                }
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showError(this.bms, res.message);
                this.travelDetails.quotationNumber = "";
            }
        }).finally(() => {
            //trigger child component load quotation function
            this.triggerCounter = this.triggerCounter + 1;
        });
    }
    //loading of all LOV's for load quotation
    loadLOVs() {
        var _this = this;
        this.tls.getCountryList(this.travelDetails).then(res => {
            res.forEach(country => {
                country.name = country.NOM_PAIS;
                country.value = country.COD_PAIS;
                country.type = country.NOM_VERNACULO;
            });
            _this.LOV.countryLOV = res;
        });
        this.tls.getProduct(this.travelDetails).then(res => {
            _this.LOV.productListLOV = res;
        });
        this.tls.getExpensesCoverage(this.travelDetails).then((res) => {
            _this.LOV.medicalExpensesLOV = res;
        });
    }
    setValidations() {
        var endDate = this.quoteForm.get('endDate');
        var startDate = this.quoteForm.get('startDate');
        var countries = this.quoteForm.get('countries');
        var purposeOfTrip = this.quoteForm.get('purposeOfTrip');
        var othersDescription = this.quoteForm.get('othersDescription');
        var cbSportsEquipment = this.quoteForm.get('cbSportsEquipment');
        var sportsEquipment = this.quoteForm.get('sportsEquipment');
        var cbHazardousSports = this.quoteForm.get('cbHazardousSports');
        var hazardousSports = this.quoteForm.get('hazardousSports');
        var quotationNumber = this.quoteForm.get('quotationNumber');
        endDate.valueChanges.subscribe(date => {
            var diff = moment__WEBPACK_IMPORTED_MODULE_3__(date).diff(moment__WEBPACK_IMPORTED_MODULE_3__(startDate.value), 'days') + 1;
            this.travelDetails.noOfDays = diff >= 2 ? diff : 0;
        });
        startDate.valueChanges.subscribe(date => {
            this.enableEndDate = date !== null && date !== undefined;
            var diff = 0;
            if (this.enableEndDate) {
                var diff = moment__WEBPACK_IMPORTED_MODULE_3__(endDate.value).diff(moment__WEBPACK_IMPORTED_MODULE_3__(date), 'days') + 1;
                diff = diff === NaN ? 0 : diff;
                this.endDateMinDate = moment__WEBPACK_IMPORTED_MODULE_3__(date).add(1, 'days').toDate();
                if (diff < 1) {
                    this.travelDetails.endDate = null;
                }
            }
            else {
                this.travelDetails.endDate = null;
            }
            this.travelDetails.noOfDays = diff >= 2 ? diff : 0;
        });
        countries.valueChanges.subscribe(countryList => {
            var packageList = [];
            if (!_utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(countryList)) {
                countryList.forEach(country => {
                    packageList.push(country.type);
                });
                if (packageList.indexOf("WORLD") !== -1) {
                    this.travelDetails.travelPackage = "W";
                    this.travelDetails.travelType = "I";
                }
                else if (packageList.indexOf("SCHENGEN") !== -1) {
                    this.travelDetails.travelPackage = "S";
                    this.travelDetails.travelType = "I";
                }
                else if (packageList.indexOf("ASIA") !== -1) {
                    this.travelDetails.travelPackage = "A";
                    this.travelDetails.travelType = "I";
                }
                else if (packageList.indexOf("PHILIPPINES") !== -1) {
                    this.travelDetails.travelPackage = "P";
                    this.travelDetails.travelType = "D";
                    this.travelDetails.cbWithCruise = false;
                }
                var _this = this;
                this.tls.getExpensesCoverage(this.travelDetails).then((res) => {
                    _this.LOV.medicalExpensesLOV = res;
                });
            }
        });
        purposeOfTrip.valueChanges.subscribe(trip => {
            //if purpose of trip is others, show the others desctiption input and make it required
            this.showOthersDescription = (trip == 'OTHERS');
            _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].updateValidator(othersDescription, trip == 'OTHERS' ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
        });
        cbSportsEquipment.valueChanges.subscribe(checked => {
            this.travelDetails.sportsEquipment = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].setNull(checked, this.travelDetails.sportsEquipment);
            _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].updateValidator(sportsEquipment, checked ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
        });
        cbHazardousSports.valueChanges.subscribe(checked => {
            this.travelDetails.hazardousSports = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].setNull(checked, this.travelDetails.hazardousSports);
            _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].updateValidator(hazardousSports, checked ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
        });
        quotationNumber.valueChanges.subscribe(number => {
            this.disableLoadBtn = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(number);
        });
    }
    travelers() {
        return this.quoteForm.get("travelers");
    }
    newTraveler(onLoad) {
        const bdaymindate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(65, 'years').toDate();
        var ageLimit = onLoad ? 18 : 0;
        const bdaymaxdate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(ageLimit, 'years').toDate();
        return this.fb.group({
            completeName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            birthDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            relationship: [onLoad ? 'P' : '', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            relationshipLabel: [onLoad ? 'PRIMARY' : ''],
            passportNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            physicianName: [null],
            bdaymindate: [bdaymindate],
            bdaymaxdate: [bdaymaxdate],
        });
    }
    loadTraveler(completeName, birthDate, relationship, relationshipLabel, passportNumber, physicianName) {
        const bdaymindate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(relationship == 'C' ? 21 : 65, 'years').toDate();
        const bdaymaxdate = moment__WEBPACK_IMPORTED_MODULE_3__().subtract(relationship == 'C' ? 0 : 18, 'years').toDate();
        return this.fb.group({
            completeName: [completeName, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            birthDate: [birthDate, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            relationship: [relationship, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            relationshipLabel: [relationshipLabel],
            passportNumber: [passportNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            physicianName: [physicianName],
            bdaymindate: [bdaymindate],
            bdaymaxdate: [bdaymaxdate],
        });
    }
    addTraveler() {
        this.travelers().push(this.newTraveler(false));
        //if traveler is more than 1
        this.travelDetails.insuranceCoverage = "F"; //family
        //hides the add travel button if traveler head count is more than 5
        var travelers = this.quoteForm.get('travelers').value;
        this.travelerHeadCount = travelers.length;
    }
    removeTraveler(index) {
        this.travelers().removeAt(index);
        //shows the add travel button if traveler head count is less than 5
        var travelers = this.quoteForm.get('travelers').value;
        this.travelerHeadCount = travelers.length;
        if (travelers.length == 1) {
            //if traveler is primary only
            this.travelDetails.insuranceCoverage = "I"; //individual
        }
    }
    removeTravelers() {
        // removing all travelers
        var travelers = this.quoteForm.get('travelers').value;
        if (travelers.length > 0) {
            // loop until all accessories removed
            this.travelers().removeAt(0);
            this.removeTravelers();
        }
    }
    populateCoverage(coverageList) {
        this.coverageList = coverageList;
        this.showCoverage = true;
        this.triggerCoverage = this.triggerCoverage + 1;
    }
    populatePaymentBreakdown(breakdown, receipt) {
        this.paymentBreakdown = breakdown;
        this.paymentReceipt = receipt;
        this.showPaymentBreakdown = true;
        this.triggerBreakdown = this.triggerBreakdown + 1;
        _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].scroll('paymentBreakdown');
    }
    proceed(type) {
        //if user changes affecting values
        const hasAffectingTraveler = this.checkAffectingTravelers();
        const hasChanges = this.changedValues.length != 0 || hasAffectingTraveler;
        const hasQuotationNumber = !_utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(this.travelDetails.quotationNumber);
        const isTemporaryQuotation = hasQuotationNumber && this.travelDetails.quotationNumber.startsWith('999');
        this.travelDetails.affecting = !hasQuotationNumber ||
            (hasQuotationNumber && isTemporaryQuotation) ||
            (hasQuotationNumber && !isTemporaryQuotation && hasChanges);
        if (hasChanges) {
            this.openProceedModal(type);
        }
        else {
            switch (type) {
                case 1: {
                    this.issueQuote('S');
                    break;
                }
                case 2: {
                    this.issueQuote('N');
                    break;
                }
                case 3: {
                    this.savePolicy();
                    break;
                }
                default: {
                    this.postPolicy();
                    break;
                }
            }
        }
    }
    openProceedModal(type) {
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_12__["MatDialogConfig"]();
        dialogConfig.restoreFocus = false;
        dialogConfig.autoFocus = false;
        dialogConfig.role = 'dialog';
        dialogConfig.width = '500px';
        dialogConfig.data = {
            generateBtn: type == 1 || type == 2 || type == 3,
            saveBtn: type == 4
        };
        this.dialogRef = this.dialog.open(this.proceedModal, dialogConfig);
    }
    openValidationModal(q, g, c) {
        //clear arrays
        let invalid = [];
        this.invalidForms = [];
        //list of incorrect label names
        var formLabels = [
            { cbOneTripOnly: 'oneTripOnly' },
            { name: "client'sName" }
        ];
        var quoteArr = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].findInvalidControls(q);
        invalid.push(...quoteArr);
        var groupPolicyArr = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].findInvalidControls(g);
        invalid.push(...groupPolicyArr);
        var policyHolderArr = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].findInvalidControls(c);
        invalid.push(...policyHolderArr);
        invalid.forEach((i) => {
            formLabels.forEach(f => {
                var correctLabel = f[i];
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(correctLabel)) {
                    //replace label
                    i = correctLabel;
                }
            });
            let label = i.replace(/([A-Z])/g, ' $1').trim();
            this.invalidForms.push(label.toLowerCase());
        });
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_12__["MatDialogConfig"]();
        dialogConfig.restoreFocus = false;
        dialogConfig.autoFocus = false;
        dialogConfig.role = 'dialog';
        dialogConfig.width = '500px';
        this.dialogRef = this.dialog.open(this.validationModal, dialogConfig);
    }
    openPaymentBreakdownModal(receipt, breakdown, isPostPolicy) {
        const modalData = {
            number: isPostPolicy ? this.travelDetails.policyNumber : this.travelDetails.quotationNumber,
            product: this.codeName,
            payment: "ANNUAL",
            receipt: receipt,
            breakdown: breakdown,
            showExchangeRate: true,
            isPostPolicy: isPostPolicy,
            line: 'TRAVEL'
        };
        this.dialog.open(_payment_breakdown_modal_payment_breakdown_modal_component__WEBPACK_IMPORTED_MODULE_10__["PaymentBreakdownModalComponent"], {
            width: '1000px',
            data: modalData
        });
    }
    manageBtn(opt) {
        if (opt == 1) {
            //hides payment breakdown panel
            this.showPaymentBreakdown = false;
            this.editMode = true;
        }
        if (this.isIssuance) {
            this.showIssuanceGenerateBtn = (opt == 1);
            this.showSaveBtn = (opt == 2);
            this.showPostBtn = (opt == 3);
            this.showPrintBtn = (opt == 4);
            this.showNewPolicyBtn = (opt == 5);
        }
        else {
            this.showGenerateBtn = (opt == 1);
            this.showIssueQuoteBtn = (opt == 2);
            this.showProceedToIssuanceBtn = (opt == 3);
        }
    }
    newQuote() {
        this.newPage(src_app_constants_page__WEBPACK_IMPORTED_MODULE_14__["page"].QUO.TRA);
    }
    newPolicy() {
        this.newPage(src_app_constants_page__WEBPACK_IMPORTED_MODULE_14__["page"].ISS.TRA);
    }
    newPage(page) {
        _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].scroll('topDiv');
        setTimeout(() => {
            src_app_utils_global__WEBPACK_IMPORTED_MODULE_13__["Globals"].setPage(page);
            this.router.navigate(['/reload']);
        }, 500);
    }
    checkAffectingTravelers() {
        let hasTravelerChanges = false;
        if (!_utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(this.prevTravelDetails)) {
            this.changedTravelerValues = [];
            var travelers = this.quoteForm.get('travelers').value;
            const length = travelers.length;
            let prevlength = 0;
            if ('travelers' in this.prevTravelDetails) {
                const prevTravelers = this.prevTravelDetails.travelers;
                prevlength = prevTravelers.length;
                if (prevlength != length) {
                    if (prevlength > length) {
                        var diff = prevlength - length;
                        var label = diff == 1 ? " traveler" : " travelers";
                        this.changedTravelerValues.push("Traveler: Deleted " + diff + label);
                    }
                    else {
                        var diff = length - prevlength;
                        var label = diff == 1 ? " traveler" : " travelers";
                        this.changedTravelerValues.push("Traveler: Added " + diff + label);
                    }
                }
                prevTravelers.forEach((tra) => {
                    let matched = false;
                    travelers.forEach((tra1) => {
                        if (tra.completeName == tra1.completeName) {
                            matched = true;
                            if (tra.relationship != tra1.relationship) {
                                this.changedTravelerValues.push("Traveler relationship: Changed " + tra.relationshipLabel + " to " + tra1.relationshipLabel);
                            }
                            if (tra.passportNumber != tra1.passportNumber) {
                                this.changedTravelerValues.push("Traveler Passport Number: Changed " + tra.passportNumber + " to " + tra1.passportNumber);
                            }
                            const prevDate = new Date(tra.birthDate);
                            const prevBdate = prevDate.getMonth() + "/" + prevDate.getDate() + "/" + prevDate.getFullYear();
                            const currDate = tra1.birthDate;
                            const currBdate = currDate.getMonth() + "/" + currDate.getDate() + "/" + currDate.getFullYear();
                            if (prevBdate != currBdate) {
                                this.changedTravelerValues.push("Traveler Birthdate: Changed " + prevBdate + " to " + currBdate);
                            }
                        }
                    });
                    if (!matched) {
                        this.changedTravelerValues.push("Traveler: Changed Traveler List");
                    }
                });
            }
            hasTravelerChanges = this.changedTravelerValues.length > 0;
        }
        return hasTravelerChanges;
    }
    affecting(key, label) {
        if (!_utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(this.travelDetails.quotationNumber) && this.prevTravelDetails != null) {
            let prev = this.prevTravelDetails[key] == undefined ? "" : this.prevTravelDetails[key];
            let curr = this.travelDetails[key] == undefined ? "" : this.travelDetails[key];
            if (curr instanceof Date) {
                curr = curr.getMonth() + "/" + curr.getDate() + "/" + curr.getFullYear();
                if (!_utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(prev)) {
                    var prevDate = new Date(prev);
                    prev = prevDate.getMonth() + "/" + prevDate.getDate() + "/" + prevDate.getFullYear();
                }
            }
            if (prev != curr) {
                if (!this.changedValues.includes(label)) {
                    //if changedValues length is greater than 0, request is affecting
                    this.changedValues.push(label);
                }
            }
            else {
                //remove all occurence
                this.changedValues = this.changedValues.filter(v => v !== label);
            }
        }
    }
    printQuote() {
        this.tis.printQuote(this.travelDetails.quotationNumber);
    }
    printPolicy() {
        this.tis.printPolicy(this.travelDetails.policyNumber);
    }
    proceedToIssuance() {
        this.tis.proceedToIssuance(this.travelDetails.quotationNumber);
    }
    getProductCode() {
        this.codeName = null;
        let travelPack;
        this.LOV.packageLOV.forEach(tp => {
            if (tp.TRAVEL_PACK == this.travelDetails.travelPackage) {
                travelPack = tp.NOM_VALOR;
            }
        });
        let coverageOption;
        this.LOV.coverageOptionLOV.forEach(co => {
            if (co.COVERAGE_OPTIONS == this.travelDetails.coverageOption) {
                coverageOption = co.NOM_VALOR == 'ASSISTANCE ONLY' ? 'ASSIST ONLY' : co.NOM_VALOR;
            }
        });
        let medicalExpenses;
        this.LOV.medicalExpensesLOV.forEach(me => {
            if (me.VAL_CAMPO1 == this.travelDetails.medicalExpenses) {
                const name = me.VAL_CAMPO2;
                const value = me.VAL_CAMPO1;
                medicalExpenses = name.includes("EUROS") ? value.concat(" euros") : value;
            }
        });
        this.codeName = this.travelDetails.travelPackage == 'D' ?
            "DOMESTIC ".concat(medicalExpenses) :
            travelPack + " " + coverageOption + " " + medicalExpenses;
        this.LOV.productListLOV.forEach(product => {
            if (this.codeName == product.NOM_MODALIDAD) {
                this.travelDetails.product = product.COD_MODALIDAD;
            }
        });
    }
    //getting error or warning items
    getErrorItems(res, mcaTmpPptoMph, isIssuance) {
        this.withTechControl = false;
        const resErrorCode = res.obj["errorCode"];
        const resError = res.obj["error"];
        const isPostPolicy = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(resErrorCode);
        let items = isPostPolicy
            ? ["Error occured while posting policy. Please contact administration."]
            : ["Error code is " + resErrorCode + " but does not return any error message. Please contact administration."];
        if (!_utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(resError)) {
            const errArr = resError.split("~");
            if (errArr.length) {
                var arr = [];
                errArr.forEach((err) => {
                    if (!_utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isEmpty(err)) {
                        arr.push(err);
                    }
                });
                const resStatus = res.obj["status"];
                if (arr.length) {
                    if (!resStatus && isPostPolicy) {
                        //has error - can't proceed
                        items = ["Failed to generate quotation number due to following reason/s:"].concat(arr);
                    }
                    else {
                        this.withTechControl = true;
                        // has warning - can proceed
                        if (isIssuance) {
                            items = ["Quotation has technical control due to following reason/s:"].concat(arr);
                        }
                        else {
                            items = ("N" == mcaTmpPptoMph) ? ["Routed for approval due to following reason/s:"].concat(arr) : arr;
                        }
                    }
                }
            }
        }
        return items;
    }
    assembleData(mcaTmpPptoMph) {
        // S for generation and N for issue quotation
        this.travelDetails.mcaTmpPptoMph = mcaTmpPptoMph;
        // includes group policy to travel details DTO
        this.travelDetails.groupPolicy = this.groupPolicy;
        // includes policy holder to travel details DTO
        this.travelDetails.policyHolder = this.policyHolder;
        // includes travelers to travel details DTO
        var travelers = this.quoteForm.get('travelers').value;
        this.travelDetails.travelers = travelers.length ? travelers : [];
        // get product code
        this.getProductCode();
        // to trigger changes when regenerating quotation
        this.showPaymentBreakdown = false;
        this.showCoverage = false;
    }
    //generate and issue quote button
    issueQuote(mcaTmpPptoMph) {
        this.assembleData(mcaTmpPptoMph);
        this.tis.issueQuote(this.travelDetails).then(res => {
            if (res.status) {
                //clear affecting fields
                this.changedValues = [];
                const items = this.getErrorItems(res, mcaTmpPptoMph, false);
                const status = res.obj["status"];
                if (status) {
                    //duplicating car details for comparison
                    const deepClone = JSON.parse(JSON.stringify(this.travelDetails));
                    this.prevTravelDetails = deepClone;
                    this.editMode = false;
                    const errorCode = res.obj["errorCode"];
                    if (errorCode == "S") {
                        //if quotation has a warning
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showHTMLWarning(this.bms, items);
                    }
                    const policyNumber = res.obj["policyNumber"];
                    this.travelDetails.quotationNumber = policyNumber;
                    const breakdown = res.obj["breakdown"];
                    const receipt = res.obj["receipt"];
                    if ("S" == mcaTmpPptoMph) {
                        //for generation of quote
                        const message = "You have successfully generated a quotation - " + policyNumber;
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showInfo(this.bms, message);
                        const coverageList = res.obj["coverageList"];
                        this.populateCoverage(coverageList);
                        this.populatePaymentBreakdown(breakdown, receipt);
                        this.manageBtn(2);
                    }
                    else {
                        // for issuing the quote
                        this.openPaymentBreakdownModal(receipt, breakdown, false);
                        this.manageBtn(3);
                    }
                }
                else {
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showHTMLError(this.bms, items);
                }
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    //save policy button
    savePolicy() {
        this.assembleData("N");
        this.tis.savePolicy(this.travelDetails).then(res => {
            if (res.status) {
                //clear affecting fields
                this.changedValues = [];
                var items = this.getErrorItems(res, this.travelDetails.mcaTmpPptoMph, true);
                const status = res.obj["status"];
                if (status) {
                    //duplicating travel details for comparison
                    const deepClone = JSON.parse(JSON.stringify(this.travelDetails));
                    this.prevTravelDetails = deepClone;
                    this.editMode = false;
                    const errorCode = res.obj["errorCode"];
                    const policyNumber = res.obj["policyNumber"];
                    this.travelDetails.quotationNumber = policyNumber;
                    const message = "You have successfully generated a new quotation: " + policyNumber;
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showInfo(this.bms, message);
                    const breakdown = res.obj["breakdown"];
                    const receipt = res.obj["receipt"];
                    this.populatePaymentBreakdown(breakdown, receipt);
                    this.withTechControl = errorCode == 'S';
                    if (this.withTechControl) {
                        //if quotation has a warning
                        if (this.travelDetails.affecting) {
                            items = ["Updated quotation number is: " + policyNumber].concat(items);
                        }
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showHTMLWarning(this.bms, items);
                    }
                    else {
                        const message = "Policy saved successfully.";
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showInfo(this.bms, message);
                    }
                    this.editMode = false;
                    this.manageBtn(3);
                }
                else {
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showHTMLError(this.bms, items);
                }
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    //post policy button
    postPolicy() {
        this.assembleData("N");
        if (this.withTechControl) {
            this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showWarning(this.bms, "Quotation has technical control. Please request for approval first before posting the policy.");
        }
        else {
            this.tis.postPolicy(this.travelDetails).then(res => {
                if (res.status) {
                    //clear affecting fields
                    this.changedValues = [];
                    var items = this.getErrorItems(res, this.travelDetails.mcaTmpPptoMph, true);
                    const status = res.obj["status"];
                    const policyNumber = res.obj["policyNumber"];
                    if (status && !_utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].isUndefined(policyNumber)) {
                        this.editMode = false;
                        this.travelDetails.policyNumber = policyNumber;
                        const breakdown = res.obj["breakdown"];
                        const receipt = res.obj["receipt"];
                        this.populatePaymentBreakdown(breakdown, receipt);
                        this.openPaymentBreakdownModal(receipt, breakdown, true);
                        this.manageBtn(4);
                    }
                    else {
                        this.manageBtn(5);
                        this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showHTMLError(this.bms, items);
                    }
                }
                else {
                    this.manageBtn(5);
                    this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showError(this.bms, res.message);
                }
            });
        }
    }
};
QuotationTravelComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_9__["BsModalService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_11__["Router"] },
    { type: _services_lov_travel_service__WEBPACK_IMPORTED_MODULE_17__["TravelLOVServices"] },
    { type: src_app_services_travel_utility_service__WEBPACK_IMPORTED_MODULE_18__["TravelUtilityServices"] },
    { type: src_app_services_travel_issue_service__WEBPACK_IMPORTED_MODULE_19__["TravelIssueServices"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_12__["MatDialog"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_coverages_coverages_component__WEBPACK_IMPORTED_MODULE_15__["CoveragesComponent"])
], QuotationTravelComponent.prototype, "appCoverage", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('proceedModal')
], QuotationTravelComponent.prototype, "proceedModal", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('validationModal')
], QuotationTravelComponent.prototype, "validationModal", void 0);
QuotationTravelComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-quotation-travel',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./quotation-travel.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/quotation-travel/quotation-travel.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./quotation-travel.component.css */ "./src/app/components/quotation-travel/quotation-travel.component.css")).default]
    })
], QuotationTravelComponent);



/***/ }),

/***/ "./src/app/components/reload/reload.component.css":
/*!********************************************************!*\
  !*** ./src/app/components/reload/reload.component.css ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVsb2FkL3JlbG9hZC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/components/reload/reload.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/components/reload/reload.component.ts ***!
  \*******************************************************/
/*! exports provided: ReloadComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReloadComponent", function() { return ReloadComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");



let ReloadComponent = class ReloadComponent {
    constructor(router) {
        this.router = router;
    }
    ngOnInit() {
        //reloading page
        this.router.navigate(['/']);
    }
};
ReloadComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }
];
ReloadComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-reload',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./reload.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/reload/reload.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./reload.component.css */ "./src/app/components/reload/reload.component.css")).default]
    })
], ReloadComponent);



/***/ }),

/***/ "./src/app/components/request-create/request-create.component.css":
/*!************************************************************************!*\
  !*** ./src/app/components/request-create/request-create.component.css ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("textarea {\n    height: 208px;\n}\n\nngx-dropzone {\n    width: 100%;\n}\n\nngx-dropzone-preview {\n    width: 200px;\n    height: 100px;\n    padding: 10px;\n    margin: 10px;\n    border-radius: 10px;\n    overflow: hidden;\n    position: relative;\n    display: block;\n}\n\nngx-dropzone,\n.custom-dropzone {\n  margin: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXF1ZXN0LWNyZWF0ZS9yZXF1ZXN0LWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsYUFBYTtJQUNiLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixjQUFjO0FBQ2xCOztBQUVBOztFQUVFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVxdWVzdC1jcmVhdGUvcmVxdWVzdC1jcmVhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRleHRhcmVhIHtcbiAgICBoZWlnaHQ6IDIwOHB4O1xufVxuXG5uZ3gtZHJvcHpvbmUge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG5uZ3gtZHJvcHpvbmUtcHJldmlldyB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogMTAwcHg7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxubmd4LWRyb3B6b25lLFxuLmN1c3RvbS1kcm9wem9uZSB7XG4gIG1hcmdpbjogMjBweDtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/request-create/request-create.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/components/request-create/request-create.component.ts ***!
  \***********************************************************************/
/*! exports provided: RequestCreateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestCreateComponent", function() { return RequestCreateComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var src_app_objects_RequestDetails__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/objects/RequestDetails */ "./src/app/objects/RequestDetails.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var src_app_services_request_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/request.service */ "./src/app/services/request.service.ts");







let RequestCreateComponent = class RequestCreateComponent {
    constructor(fb, rs, bms) {
        this.fb = fb;
        this.rs = rs;
        this.bms = bms;
        this.requestDetails = new src_app_objects_RequestDetails__WEBPACK_IMPORTED_MODULE_4__["RequestDetails"]();
        this.showPolicyDetails = false;
        this.showDetails = false;
        this.showEndorsementRT = false;
        this.showRenewalRT = false;
        this.showUnderwritingRT = false;
        this.files = [];
        this.createForm();
        this.setValidations();
    }
    ngOnInit() { }
    onSelect(event) {
        const addedFiles = event.addedFiles;
        const hasFiles = event.addedFiles.length;
        if (hasFiles) {
            addedFiles.forEach(file => {
                if (file.size <= 9000000) {
                    this.files.push(file);
                }
                else {
                    const message = "Can not upload file " + file.name + ". Allowed file size is 9MB below only.";
                    this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.bms, message);
                }
            });
        }
    }
    onRemove(event) {
        console.log(event);
        this.files.splice(this.files.indexOf(event), 1);
    }
    createForm() {
        this.requestForm = this.fb.group({
            type: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            requestType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            issueType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            policyNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            reason: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            agentEmail: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email]],
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            type1: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            type2: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            branch: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            line: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            subline: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            typeOfPolicy: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            clientName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            clientGroup: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            copyNotify: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            comments: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
        });
    }
    // test(q: FormGroup) {
    //   let invalid = [];
    //   invalid = this.findInvalidControls(invalid, q);
    //   alert(invalid);
    // }
    // public findInvalidControls(invalid: any[], form: FormGroup) {
    //   const controls = form.controls;
    //   for (const name in controls) {
    //     if (controls[name].invalid) {
    //       invalid.push(name);
    //     }
    //     if (controls[name].pristine) {
    //       invalid.push(name);
    //     }
    //   }
    //   return invalid;
    // }
    setValidations() {
        this.requestForm.get('type').valueChanges.subscribe(type => {
            if (type !== undefined) {
                this.showPolicyDetails = type == 'P';
                this.showDetails = type !== 'P';
                this.showEndorsementRT = type == 'E';
                this.showRenewalRT = type == 'R';
                this.showUnderwritingRT = type == 'U';
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('type1'), this.showPolicyDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('type2'), this.showPolicyDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('branch'), this.showPolicyDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('line'), this.showPolicyDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('subline'), this.showPolicyDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('typeOfPolicy'), this.showPolicyDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('clientName'), this.showPolicyDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('clientGroup'), this.showPolicyDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('copyNotify'), this.showPolicyDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('comments'), this.showPolicyDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('requestType'), this.showDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('policyNumber'), this.showDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('reason'), this.showDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('agentEmail'), this.showDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('name'), this.showDetails ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].updateValidator(this.requestForm.get('issueType'), this.showUnderwritingRT ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : null);
                // set default request type and issue type
                if (type == 'E') { //endorsement
                    this.requestDetails.requestType = '1';
                }
                else if (type == 'R') { //renewal
                    this.requestDetails.requestType = '5';
                }
                else if (type == 'U') { //underwriting
                    this.requestDetails.requestType = 'S';
                    this.requestDetails.issueType = 'P';
                }
            }
        });
    }
    request(requestDetails) {
        if (requestDetails.type == 'P') { // policy request
            this.rs.policy(this.files, requestDetails).then((res) => {
                if (res.status) {
                    this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showInfo(this.bms, res.message);
                }
                else {
                    this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.bms, res.message);
                }
            });
        }
        else {
            this.rs.request(requestDetails, requestDetails.type).then((res) => {
                if (res.status) {
                    this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showInfo(this.bms, res.message);
                }
                else {
                    this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.bms, res.message);
                }
            });
        }
    }
};
RequestCreateComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: src_app_services_request_service__WEBPACK_IMPORTED_MODULE_6__["RequestService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_3__["BsModalService"] }
];
RequestCreateComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-request-create',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./request-create.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/request-create/request-create.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./request-create.component.css */ "./src/app/components/request-create/request-create.component.css")).default]
    })
], RequestCreateComponent);



/***/ }),

/***/ "./src/app/components/request-details-modal/request-details-modal.component.css":
/*!**************************************************************************************!*\
  !*** ./src/app/components/request-details-modal/request-details-modal.component.css ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".mat-dialog-title {\n  background: #3a3a3a;\n  color: #fff;\n  text-align: center;\n  padding: 10px 0;\n}\n\ntextarea {\n  height: 208px;\n}\n\ntable {\n  width: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXF1ZXN0LWRldGFpbHMtbW9kYWwvcmVxdWVzdC1kZXRhaWxzLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9yZXF1ZXN0LWRldGFpbHMtbW9kYWwvcmVxdWVzdC1kZXRhaWxzLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWRpYWxvZy10aXRsZSB7XG4gIGJhY2tncm91bmQ6ICMzYTNhM2E7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cblxudGV4dGFyZWEge1xuICBoZWlnaHQ6IDIwOHB4O1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/request-details-modal/request-details-modal.component.ts":
/*!*************************************************************************************!*\
  !*** ./src/app/components/request-details-modal/request-details-modal.component.ts ***!
  \*************************************************************************************/
/*! exports provided: RequestDetailsModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestDetailsModalComponent", function() { return RequestDetailsModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var src_app_objects_ReplyDetails__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/ReplyDetails */ "./src/app/objects/ReplyDetails.ts");
/* harmony import */ var src_app_objects_RequestDetails__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/objects/RequestDetails */ "./src/app/objects/RequestDetails.ts");
/* harmony import */ var src_app_objects_RequestDetailsList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/objects/RequestDetailsList */ "./src/app/objects/RequestDetailsList.ts");
/* harmony import */ var src_app_services_request_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/request.service */ "./src/app/services/request.service.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");










let RequestDetailsModalComponent = class RequestDetailsModalComponent {
    constructor(dialogRef, data, fb, bms, rs) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.fb = fb;
        this.bms = bms;
        this.rs = rs;
        this.displayedColumns = ['requestHandler', 'message', 'user', 'source', 'postDate'];
        this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatTableDataSource"]();
        this.requestDetailsList = new src_app_objects_RequestDetailsList__WEBPACK_IMPORTED_MODULE_7__["RequestDetailsList"]();
        this.requestDetails = new src_app_objects_RequestDetails__WEBPACK_IMPORTED_MODULE_6__["RequestDetails"]();
        this.replyDetails = new src_app_objects_ReplyDetails__WEBPACK_IMPORTED_MODULE_5__["ReplyDetails"]();
    }
    ngOnInit() {
        this.requestDetailsList = this.data;
        this.createForm();
        this.getList();
    }
    createForm() {
        this.requestForm = this.fb.group({
            requestId: [null],
            requestHandler: [null],
            requestType: [null],
            policyNumber: [null],
            status: [null],
            message: [null],
            replyMessage: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            agentEmail: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
        });
    }
    getList() {
        this.rs.getMessageList(this.requestDetailsList.requestId).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatTableDataSource"](data);
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    reply() {
        this.replyDetails.requestId = this.requestDetailsList.requestId;
        this.replyDetails.requestType = this.requestDetailsList.requestType;
        this.rs.reply(this.replyDetails).then((res) => {
            if (res.status) {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showInfo(this.bms, res.message);
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_9__["Utility"].showError(this.bms, res.message);
            }
            this.dialogRef.close();
        });
    }
    close() {
        this.dialogRef.close();
    }
};
RequestDetailsModalComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"],] }] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__["BsModalService"] },
    { type: src_app_services_request_service__WEBPACK_IMPORTED_MODULE_8__["RequestService"] }
];
RequestDetailsModalComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-request-details-modal',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./request-details-modal.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/request-details-modal/request-details-modal.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./request-details-modal.component.css */ "./src/app/components/request-details-modal/request-details-modal.component.css")).default]
    }),
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]))
], RequestDetailsModalComponent);



/***/ }),

/***/ "./src/app/components/request-list/request-list.component.css":
/*!********************************************************************!*\
  !*** ./src/app/components/request-list/request-list.component.css ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("table {\n  width: 100%;\n}\n\n.mat-row:hover{\n    background: azure;\n    cursor: pointer;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXF1ZXN0LWxpc3QvcmVxdWVzdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVxdWVzdC1saXN0L3JlcXVlc3QtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1yb3c6aG92ZXJ7XG4gICAgYmFja2dyb3VuZDogYXp1cmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/request-list/request-list.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/components/request-list/request-list.component.ts ***!
  \*******************************************************************/
/*! exports provided: RequestListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestListComponent", function() { return RequestListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/sort.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/paginator.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js");
/* harmony import */ var _request_details_modal_request_details_modal_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../request-details-modal/request-details-modal.component */ "./src/app/components/request-details-modal/request-details-modal.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var src_app_services_request_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/request.service */ "./src/app/services/request.service.ts");
/* harmony import */ var src_app_objects_PageFilter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/objects/PageFilter */ "./src/app/objects/PageFilter.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");












let RequestListComponent = class RequestListComponent {
    constructor(dialog, rs, bms, fb) {
        this.dialog = dialog;
        this.rs = rs;
        this.bms = bms;
        this.fb = fb;
        this.displayedColumns = ['requestType', 'requestId', 'policyNumber', 'status', 'requestHandler', 'user'];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.requestTypeItems = ["APPROVAL", "CANCELLATION", "RENEWAL", "GENERAL"];
        this.statusItems = ["COMPLETED", "STOPPED", "OPEN"];
        this.pageFilter = new src_app_objects_PageFilter__WEBPACK_IMPORTED_MODULE_8__["PageFilter"]();
        this.currentPage = 0;
        this.pageSize = 10;
        this.sortBy = 'requestType';
        this.sortOrder = 'asc';
        this.totalItem = 0;
        this.pageSizeOptions = [10, 20, 50, 100];
    }
    ngOnInit() {
        this.getList();
        this.createForm();
    }
    createForm() {
        this.filterForm = this.fb.group({
            requestType: [null],
            requestId: [null],
            policyNumber: [null],
            status: [null],
            requestHandler: [null],
            user: [null],
        });
    }
    setPageFilters() {
        this.pageFilter.currentPage = this.currentPage;
        this.pageFilter.pageSize = this.pageSize;
        this.pageFilter.sortBy = this.sortBy;
        this.pageFilter.sortOrder = this.sortOrder;
    }
    getList() {
        this.setPageFilters();
        this.rs.getList(this.pageFilter).then((res) => {
            if (res.status) {
                let data = [];
                data = res.obj['list'];
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.totalItem = res.obj['totalItem'];
            }
            else {
                this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_10__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    pageChange(e) {
        this.currentPage = e.pageIndex;
        this.pageSize = e.pageSize;
        this.getList();
    }
    sortChange(e) {
        this.currentPage = 0;
        if (e.direction != '') {
            this.sortBy = e.active;
            this.sortOrder = e.direction;
        }
        else {
            // sort to default
            this.sortBy = 'requestType';
            this.sortOrder = 'asc';
        }
        this.getList();
    }
    getDetails(row) {
        this.openDetailsModal(row);
    }
    openDetailsModal(details) {
        this.dialog.open(_request_details_modal_request_details_modal_component__WEBPACK_IMPORTED_MODULE_5__["RequestDetailsModalComponent"], {
            width: '1000px',
            data: details
        });
    }
    apply() {
        this.getList();
    }
    reset() {
        this.filterForm.get('requestType').setValue('');
        this.filterForm.get('requestId').setValue('');
        this.filterForm.get('policyNumber').setValue('');
        this.filterForm.get('status').setValue('');
        this.filterForm.get('requestHandler').setValue('');
        this.filterForm.get('user').setValue('');
        this.getList();
    }
};
RequestListComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"] },
    { type: src_app_services_request_service__WEBPACK_IMPORTED_MODULE_7__["RequestService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_9__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormBuilder"] }
];
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_2__["MatSort"], {
        static: true
    })
], RequestListComponent.prototype, "sort", void 0);
Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
        static: true
    })
], RequestListComponent.prototype, "paginator", void 0);
RequestListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-request-list',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./request-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/request-list/request-list.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./request-list.component.css */ "./src/app/components/request-list/request-list.component.css")).default]
    })
], RequestListComponent);



/***/ }),

/***/ "./src/app/components/sidenav/sidenav.component.css":
/*!**********************************************************!*\
  !*** ./src/app/components/sidenav/sidenav.component.css ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".sidebar-brand img {\n  max-width: 90%;\n  max-height: 55px;\n}\n\n#sticky #accordionSidebar {\n  height: 100vh !important;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -ms-overflow-style: none;\n  /* Internet Explorer 10+ */\n  scrollbar-width: none;\n  /* Firefox */\n}\n\n#sticky #accordionSidebar::-webkit-scrollbar {\n  display: none;\n  /* Safari and Chrome */\n}\n\n.navbar-nav {\n  height: 100vh !important;\n  overflow-y: scroll;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zaWRlbmF2L3NpZGVuYXYuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQix3QkFBd0I7RUFDeEIsMEJBQTBCO0VBQzFCLHFCQUFxQjtFQUNyQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0Usd0JBQXdCO0VBQ3hCLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lkZW5hdi9zaWRlbmF2LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZWJhci1icmFuZCBpbWcge1xuICBtYXgtd2lkdGg6IDkwJTtcbiAgbWF4LWhlaWdodDogNTVweDtcbn1cblxuI3N0aWNreSAjYWNjb3JkaW9uU2lkZWJhciB7XG4gIGhlaWdodDogMTAwdmggIWltcG9ydGFudDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcbiAgLyogSW50ZXJuZXQgRXhwbG9yZXIgMTArICovXG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTtcbiAgLyogRmlyZWZveCAqL1xufVxuXG4jc3RpY2t5ICNhY2NvcmRpb25TaWRlYmFyOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIC8qIFNhZmFyaSBhbmQgQ2hyb21lICovXG59XG5cbi5uYXZiYXItbmF2IHtcbiAgaGVpZ2h0OiAxMDB2aCAhaW1wb3J0YW50O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/sidenav/sidenav.component.ts":
/*!*********************************************************!*\
  !*** ./src/app/components/sidenav/sidenav.component.ts ***!
  \*********************************************************/
/*! exports provided: SidenavComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SidenavComponent", function() { return SidenavComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _utils_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/global */ "./src/app/utils/global.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");
/* harmony import */ var _constants_local_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../constants/local.storage */ "./src/app/constants/local.storage.ts");
/* harmony import */ var _services_authentication_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/authentication.service */ "./src/app/services/authentication.service.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");








let SidenavComponent = class SidenavComponent {
    constructor(authenticationService, router) {
        this.authenticationService = authenticationService;
        this.router = router;
        this.currentUser = this.authenticationService.currentUserValue;
        this.hasSelectedAgent = !src_app_utils_utility__WEBPACK_IMPORTED_MODULE_7__["Utility"].isUndefined(this.currentUser.selectedAgent);
        this.p = _constants_page__WEBPACK_IMPORTED_MODULE_4__["page"]; //constant pages
        this.menu = JSON.parse(localStorage.getItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_5__["MENU"]));
        this.logo = "mivo-logo/mivo-logo-light";
    }
    ngOnInit() {
        // this.logo = "partners/aap";
    }
    setPage(val) {
        _utils_global__WEBPACK_IMPORTED_MODULE_2__["Globals"].setPage(val);
    }
    setAppPage(val) {
        _utils_global__WEBPACK_IMPORTED_MODULE_2__["Globals"].setPage(val);
        _utils_global__WEBPACK_IMPORTED_MODULE_2__["Globals"].setLoadQuotation(false);
        this.router.navigate(['/reload']);
    }
    get page() {
        return _utils_global__WEBPACK_IMPORTED_MODULE_2__["Globals"].page;
    }
    get appType() {
        return _utils_global__WEBPACK_IMPORTED_MODULE_2__["Globals"].getAppType();
    }
};
SidenavComponent.ctorParameters = () => [
    { type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_6__["AuthenticationService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] }
];
SidenavComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-sidenav',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./sidenav.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/sidenav/sidenav.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./sidenav.component.css */ "./src/app/components/sidenav/sidenav.component.css")).default]
    })
], SidenavComponent);



/***/ }),

/***/ "./src/app/components/template/template.component.css":
/*!************************************************************!*\
  !*** ./src/app/components/template/template.component.css ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".fe-rate {\n    font-size: 20px;\n}\n\n.fas.fa-dollar-sign {\n    color: #4caf50;\n}\n\n.fas.fa-euro-sign {\n    color: #03a9f4;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZW1wbGF0ZS90ZW1wbGF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy90ZW1wbGF0ZS90ZW1wbGF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZlLXJhdGUge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmZhcy5mYS1kb2xsYXItc2lnbiB7XG4gICAgY29sb3I6ICM0Y2FmNTA7XG59XG5cbi5mYXMuZmEtZXVyby1zaWduIHtcbiAgICBjb2xvcjogIzAzYTlmNDtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/template/template.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/components/template/template.component.ts ***!
  \***********************************************************/
/*! exports provided: TemplateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplateComponent", function() { return TemplateComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _utils_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/global */ "./src/app/utils/global.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var src_app_services_payment_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/payment.service */ "./src/app/services/payment.service.ts");







let TemplateComponent = class TemplateComponent {
    constructor(route, paymentService) {
        this.route = route;
        this.paymentService = paymentService;
        this.p = _constants_page__WEBPACK_IMPORTED_MODULE_3__["page"]; //constant pages
        this.sideNavClass = "";
    }
    ngOnInit() {
        this.route.queryParams
            .subscribe(params => {
            if (params.invoiceNo) {
                this.processPayment(params);
            }
        });
        this.route.queryParams
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["filter"])(params => params.successPage))
            .subscribe(params => {
            if (params.successPage) {
                _utils_global__WEBPACK_IMPORTED_MODULE_2__["Globals"].setPage(this.p.ACC.OUT);
            }
        });
    }
    get page() {
        return _utils_global__WEBPACK_IMPORTED_MODULE_2__["Globals"].page;
    }
    processPayment(params) {
        this.paymentService.processPaymentViaGlobalPay(params).then(response => {
            console.log('response: ', response);
        });
    }
};
TemplateComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] },
    { type: src_app_services_payment_service__WEBPACK_IMPORTED_MODULE_6__["PaymentService"] }
];
TemplateComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-template',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./template.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/template/template.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./template.component.css */ "./src/app/components/template/template.component.css")).default]
    })
], TemplateComponent);



/***/ }),

/***/ "./src/app/components/terms-and-condition/terms-and-condition.component.css":
/*!**********************************************************************************!*\
  !*** ./src/app/components/terms-and-condition/terms-and-condition.component.css ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".container {\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  padding: 15px;\n\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  position: relative;\n  z-index: 1;\n}\n\n.container::before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.wrap {\n  max-width: 1200px;\n  height: 650px;\n  width: 100%;\n  border-radius: 5px;\n  overflow: hidden;\n  background: #fff;\n}\n\n.brand-logo {\n  cursor: pointer;\n}\n\n.brand-logo img {\n  width: 100%;\n  margin: 35px 0 0;\n  padding: 20px;\n}\n\n.col-lg-4.menu {\n  padding-left: 30px;\n  background: #2a2a2a;\n}\n\n.col-lg-8.details {\n  padding: 30px 40px 0 30px;\n  text-align: justify;\n}\n\nul.terms-menu {\n  display: block;\n  margin: 10px;\n  top: 90px;\n  position: relative;\n  list-style: none;\n  padding: 0;\n}\n\nul.terms-menu li {\n  padding: 10px 5px;\n  background-color: #5e5e5e;\n  border: 1px solid #525252;\n  margin: 20px 0;\n  text-align: center;\n  border-radius: 5px;\n  color: #fbfbfb;\n}\n\nul.terms-menu li:hover {\n  background-color: #e8e8e8;\n  border: 1px solid #2f2f2f;\n  color: #252525;\n  cursor: pointer;\n  font-weight: 700;\n}\n\n.scroll {\n  overflow: scroll;\n  height: 100%;\n}\n\n.scroll-wrapper {\n  height: 635px;\n}\n\n.top-20 {\n  padding-top: 20px;\n}\n\nh5 {\n  font-weight: bold;\n}\n\nh2 {\n  font-weight: bold;\n  text-align: center;\n  margin: 20px 0;\n}\n\n#jurisdiction {\n  padding-bottom: 600px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZXJtcy1hbmQtY29uZGl0aW9uL3Rlcm1zLWFuZC1jb25kaXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7RUFLakIsYUFBYTtFQUNiLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGFBQWE7O0VBRWIsNEJBQTRCO0VBQzVCLDJCQUEyQjtFQUMzQixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxXQUFXO0VBQ1gsWUFBWTtFQUNaLE1BQU07RUFDTixPQUFPO0FBQ1Q7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsYUFBYTtFQUNiLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsY0FBYztFQUNkLFlBQVk7RUFDWixTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIseUJBQXlCO0VBQ3pCLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2QsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Rlcm1zLWFuZC1jb25kaXRpb24vdGVybXMtYW5kLWNvbmRpdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiAxNXB4O1xuXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xufVxuXG4uY29udGFpbmVyOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAtMTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xufVxuXG4ud3JhcCB7XG4gIG1heC13aWR0aDogMTIwMHB4O1xuICBoZWlnaHQ6IDY1MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuXG4uYnJhbmQtbG9nbyB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmJyYW5kLWxvZ28gaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMzVweCAwIDA7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG5cbi5jb2wtbGctNC5tZW51IHtcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICBiYWNrZ3JvdW5kOiAjMmEyYTJhO1xufVxuXG4uY29sLWxnLTguZGV0YWlscyB7XG4gIHBhZGRpbmc6IDMwcHggNDBweCAwIDMwcHg7XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XG59XG5cbnVsLnRlcm1zLW1lbnUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAxMHB4O1xuICB0b3A6IDkwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxudWwudGVybXMtbWVudSBsaSB7XG4gIHBhZGRpbmc6IDEwcHggNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWU1ZTVlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjNTI1MjUyO1xuICBtYXJnaW46IDIwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGNvbG9yOiAjZmJmYmZiO1xufVxuXG51bC50ZXJtcy1tZW51IGxpOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U4ZThlODtcbiAgYm9yZGVyOiAxcHggc29saWQgIzJmMmYyZjtcbiAgY29sb3I6ICMyNTI1MjU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLnNjcm9sbCB7XG4gIG92ZXJmbG93OiBzY3JvbGw7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnNjcm9sbC13cmFwcGVyIHtcbiAgaGVpZ2h0OiA2MzVweDtcbn1cblxuLnRvcC0yMCB7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xufVxuXG5oNSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5oMiB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMjBweCAwO1xufVxuXG4janVyaXNkaWN0aW9uIHtcbiAgcGFkZGluZy1ib3R0b206IDYwMHB4O1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/terms-and-condition/terms-and-condition.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/components/terms-and-condition/terms-and-condition.component.ts ***!
  \*********************************************************************************/
/*! exports provided: TermsAndConditionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TermsAndConditionComponent", function() { return TermsAndConditionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");



let TermsAndConditionComponent = class TermsAndConditionComponent {
    constructor() { }
    ngOnInit() { }
    scrollTo(id) {
        src_app_utils_utility__WEBPACK_IMPORTED_MODULE_2__["Utility"].scroll(id);
    }
    redirect() {
        window.location.href = "/";
    }
};
TermsAndConditionComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-terms-and-condition',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./terms-and-condition.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/terms-and-condition/terms-and-condition.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./terms-and-condition.component.css */ "./src/app/components/terms-and-condition/terms-and-condition.component.css")).default]
    })
], TermsAndConditionComponent);



/***/ }),

/***/ "./src/app/components/view-details-modal/view-details-modal.component.css":
/*!********************************************************************************!*\
  !*** ./src/app/components/view-details-modal/view-details-modal.component.css ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".mat-dialog-title {\n  background: #3a3a3a;\n  color: #fff;\n  text-align: center;\n  padding: 10px 0;\n}\n\nhr {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  border: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\n\nh6 {\n  font-weight: bold;\n}\n\n.required-indicator {\n  color: red;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy92aWV3LWRldGFpbHMtbW9kYWwvdmlldy1kZXRhaWxzLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixTQUFTO0VBQ1Qsd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsVUFBVTtBQUNaIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy92aWV3LWRldGFpbHMtbW9kYWwvdmlldy1kZXRhaWxzLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWRpYWxvZy10aXRsZSB7XG4gIGJhY2tncm91bmQ6ICMzYTNhM2E7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cblxuaHIge1xuICBtYXJnaW4tdG9wOiAxcmVtO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7XG59XG5cbmg2IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5yZXF1aXJlZC1pbmRpY2F0b3Ige1xuICBjb2xvcjogcmVkO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/view-details-modal/view-details-modal.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/components/view-details-modal/view-details-modal.component.ts ***!
  \*******************************************************************************/
/*! exports provided: ViewDetailsModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewDetailsModalComponent", function() { return ViewDetailsModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/__ivy_ngcc__/esm2015/material.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var src_app_objects_ListAccountCommissionsPaid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/objects/ListAccountCommissionsPaid */ "./src/app/objects/ListAccountCommissionsPaid.ts");
/* harmony import */ var src_app_objects_ListAccountEstimatedCommissions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/objects/ListAccountEstimatedCommissions */ "./src/app/objects/ListAccountEstimatedCommissions.ts");
/* harmony import */ var src_app_objects_ListAccountOutstandingBills__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/objects/ListAccountOutstandingBills */ "./src/app/objects/ListAccountOutstandingBills.ts");
/* harmony import */ var src_app_objects_ListAccountPremiumCollection__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/objects/ListAccountPremiumCollection */ "./src/app/objects/ListAccountPremiumCollection.ts");
/* harmony import */ var src_app_objects_ListClaimDetails__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/objects/ListClaimDetails */ "./src/app/objects/ListClaimDetails.ts");
/* harmony import */ var src_app_objects_ListClientDetails__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/objects/ListClientDetails */ "./src/app/objects/ListClientDetails.ts");
/* harmony import */ var src_app_objects_ListPolicyActive__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/objects/ListPolicyActive */ "./src/app/objects/ListPolicyActive.ts");
/* harmony import */ var src_app_objects_ListPolicyCancelled__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/objects/ListPolicyCancelled */ "./src/app/objects/ListPolicyCancelled.ts");
/* harmony import */ var src_app_objects_ListPolicyExpiring__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/objects/ListPolicyExpiring */ "./src/app/objects/ListPolicyExpiring.ts");
/* harmony import */ var src_app_objects_ListPolicyNotRenewed__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/objects/ListPolicyNotRenewed */ "./src/app/objects/ListPolicyNotRenewed.ts");
/* harmony import */ var src_app_objects_ListPolicyProvisional__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/objects/ListPolicyProvisional */ "./src/app/objects/ListPolicyProvisional.ts");
/* harmony import */ var src_app_objects_ListPolicyRenewed__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/app/objects/ListPolicyRenewed */ "./src/app/objects/ListPolicyRenewed.ts");
/* harmony import */ var src_app_objects_ListQuotationActive__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/app/objects/ListQuotationActive */ "./src/app/objects/ListQuotationActive.ts");
/* harmony import */ var src_app_objects_ListQuotationProvisional__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/app/objects/ListQuotationProvisional */ "./src/app/objects/ListQuotationProvisional.ts");
/* harmony import */ var src_app_services_payment_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/app/services/payment.service */ "./src/app/services/payment.service.ts");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../constants/page */ "./src/app/constants/page.ts");
/* harmony import */ var _objects_UtilitiesQueryFilter__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../objects/UtilitiesQueryFilter */ "./src/app/objects/UtilitiesQueryFilter.ts");
/* harmony import */ var _services_utility_query_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../services/utility-query.service */ "./src/app/services/utility-query.service.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var _constants_local_storage__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../constants/local.storage */ "./src/app/constants/local.storage.ts");

























let ViewDetailsModalComponent = class ViewDetailsModalComponent {
    constructor(dialogRef, data, utilityQueryService, bms, formBuilder, paymentService) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.utilityQueryService = utilityQueryService;
        this.bms = bms;
        this.formBuilder = formBuilder;
        this.paymentService = paymentService;
        this.p = _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"];
        this.isProceedToPayment = false;
        this.paymentMethod = 'paynamics';
        this.listClientDetails = new src_app_objects_ListClientDetails__WEBPACK_IMPORTED_MODULE_10__["ListClientDetails"]();
        this.listPolicyActive = new src_app_objects_ListPolicyActive__WEBPACK_IMPORTED_MODULE_11__["ListPolicyActive"]();
        this.listPolicyCancelled = new src_app_objects_ListPolicyCancelled__WEBPACK_IMPORTED_MODULE_12__["ListPolicyCancelled"]();
        this.listPolicyRenewed = new src_app_objects_ListPolicyRenewed__WEBPACK_IMPORTED_MODULE_16__["ListPolicyRenewed"]();
        this.listPolicyNotRenewed = new src_app_objects_ListPolicyNotRenewed__WEBPACK_IMPORTED_MODULE_14__["ListPolicyNotRenewed"]();
        this.listPolicyExpiring = new src_app_objects_ListPolicyExpiring__WEBPACK_IMPORTED_MODULE_13__["ListPolicyExpiring"]();
        this.listPolicyProvisional = new src_app_objects_ListPolicyProvisional__WEBPACK_IMPORTED_MODULE_15__["ListPolicyProvisional"]();
        this.listQuotationActive = new src_app_objects_ListQuotationActive__WEBPACK_IMPORTED_MODULE_17__["ListQuotationActive"]();
        this.listQuotationProvisional = new src_app_objects_ListQuotationProvisional__WEBPACK_IMPORTED_MODULE_18__["ListQuotationProvisional"]();
        this.listClaimDetails = new src_app_objects_ListClaimDetails__WEBPACK_IMPORTED_MODULE_9__["ListClaimDetails"]();
        this.listAccountOutstandingBills = new src_app_objects_ListAccountOutstandingBills__WEBPACK_IMPORTED_MODULE_7__["ListAccountOutstandingBills"]();
        this.listAccountCommissionsPaid = new src_app_objects_ListAccountCommissionsPaid__WEBPACK_IMPORTED_MODULE_5__["ListAccountCommissionsPaid"]();
        this.listAccountEstimatedCommissions = new src_app_objects_ListAccountEstimatedCommissions__WEBPACK_IMPORTED_MODULE_6__["ListAccountEstimatedCommissions"]();
        this.listAccountPremiumCollection = new src_app_objects_ListAccountPremiumCollection__WEBPACK_IMPORTED_MODULE_8__["ListAccountPremiumCollection"]();
        this.filter = new _objects_UtilitiesQueryFilter__WEBPACK_IMPORTED_MODULE_21__["UtilitiesQueryFilter"]();
    }
    ngOnInit() {
        this.initPaymentForm();
        this.type = this.data.type;
        switch (this.type) {
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].CLI.CLI: {
                this.listClientDetails = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].CLI.ACT: {
                this.listPolicyActive = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].CLI.CAN: {
                this.listPolicyCancelled = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].CLI.REN: {
                this.listPolicyRenewed = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].CLI.NOT: {
                this.listPolicyNotRenewed = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].CLI.EXP: {
                this.listPolicyExpiring = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].CLI.PRO: {
                this.listPolicyProvisional = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].CLI.ACTQ: {
                this.listQuotationActive = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].CLI.PROQ: {
                this.listQuotationProvisional = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].CLI.CLA: {
                this.listClaimDetails = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].ACC.OUT: {
                this.listAccountOutstandingBills = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].ACC.COM: {
                this.listAccountCommissionsPaid = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].ACC.EST: {
                this.listAccountEstimatedCommissions = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].ACC.PRE: {
                this.listAccountPremiumCollection = this.data;
                break;
            }
            case _constants_page__WEBPACK_IMPORTED_MODULE_20__["page"].ACC.SUC: {
                this.title = 'Payment Transaction Result';
                break;
            }
            default: {
                // do nothing
            }
        }
    }
    initPaymentForm() {
        this.paymentForm = this.formBuilder.group({
            address1: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            address2: [''],
            city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            province: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            zip: [''],
            email: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            phone: [''],
            mobile: [''],
            paymentMethod: ['paynamics'],
        });
    }
    pay() {
        this.isProceedToPayment = true;
        this.title = 'Payment';
    }
    redirectToPayment(data) {
        if (this.paymentMethod === 'paynamics') {
            const splitName = data.policyHolder.split(',');
            const splitNameFirstMiddle = splitName[1].split(' ');
            const middleName = splitNameFirstMiddle.length > 1 ? splitNameFirstMiddle[splitNameFirstMiddle.length - 1] : '';
            const paymentRequest = {
                firstName: splitName[1].replace(middleName, ''),
                middleName,
                lastName: splitName[0],
                address1: this.paymentForm.value.address1,
                address2: this.paymentForm.value.address2,
                city: this.paymentForm.value.city,
                province: this.paymentForm.value.province,
                zip: this.paymentForm.value.zip,
                policyNumber: data.policyNumber,
                invoiceNumber: data.invoiceNumber,
                amount: Math.trunc(Number(data.amount)).toString() + '.00',
                email: this.paymentForm.value.email,
                phone: this.paymentForm.value.phone,
                mobile: this.paymentForm.value.mobile,
            };
            this.paymentService.getPaymentUrl(paymentRequest).then((response) => {
                var mapForm = document.createElement("form");
                mapForm.method = "POST"; // or "post" if appropriate
                mapForm.action = response.url;
                var mapInput = document.createElement("input");
                mapInput.type = "hidden";
                mapInput.name = "paymentRequest";
                mapInput.setAttribute("value", response.value);
                mapForm.appendChild(mapInput);
                document.body.appendChild(mapForm);
                mapForm.submit();
            });
        }
        else {
            this.paymentService.getPaymentUrlViaGlobalPay(data.invoiceNumber).then((response) => {
                window.location.href = response.url;
            });
        }
    }
    inquire() {
        const userName = JSON.parse(localStorage.getItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_24__["MIVO_LOGIN"])).username;
        if (userName != null) {
            this.filter.userName = userName;
            this.filter.param = this.type === 'client-active' ? this.data.policyNumber : this.data.claimNumber;
            this.filter.inquiryType = this.type === 'client-active' ? 'GETPOLICYDETAILS' : 'GETCLAIMDETAILS';
            this.filter.paramName = this.type === 'client-active' ? 'policyNo' : 'claimNo';
            this.utilityQueryService.getSearchResult(this.filter).then((res) => {
                if (res) {
                    const jsonData = JSON.parse(JSON.stringify(res));
                    window.open(jsonData.obj, '_blank');
                }
            });
        }
        else {
            this.modalRef = src_app_utils_utility__WEBPACK_IMPORTED_MODULE_23__["Utility"].showError(this.bms, 'No login credentials found!');
        }
    }
    close() {
        this.dialogRef.close();
    }
    changePaymentMethod(event) {
        if (this.paymentMethod === event.target.value) {
            return;
        }
        this.paymentMethod = event.target.value;
    }
};
ViewDetailsModalComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"],] }] },
    { type: _services_utility_query_service__WEBPACK_IMPORTED_MODULE_22__["UtilityQueryService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__["BsModalService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: src_app_services_payment_service__WEBPACK_IMPORTED_MODULE_19__["PaymentService"] }
];
ViewDetailsModalComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-view-details-modal',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./view-details-modal.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/view-details-modal/view-details-modal.component.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./view-details-modal.component.css */ "./src/app/components/view-details-modal/view-details-modal.component.css")).default]
    }),
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]))
], ViewDetailsModalComponent);



/***/ }),

/***/ "./src/app/constants/app.constant.ts":
/*!*******************************************!*\
  !*** ./src/app/constants/app.constant.ts ***!
  \*******************************************/
/*! exports provided: TOKEN_AUTH_USERNAME, TOKEN_AUTH_PASSWORD, TOKEN_NAME, AUTH_TOKEN, API_URL, VER */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TOKEN_AUTH_USERNAME", function() { return TOKEN_AUTH_USERNAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TOKEN_AUTH_PASSWORD", function() { return TOKEN_AUTH_PASSWORD; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TOKEN_NAME", function() { return TOKEN_NAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AUTH_TOKEN", function() { return AUTH_TOKEN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_URL", function() { return API_URL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VER", function() { return VER; });
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../environments/environment */ "./src/environments/environment.ts");

/*AUTH*/
// export const TOKEN_AUTH_USERNAME = 'jwtmivoclientid';
// export const TOKEN_AUTH_PASSWORD = 'jwtpa$$w0rd';
const TOKEN_AUTH_USERNAME = 'testjwtclientid';
const TOKEN_AUTH_PASSWORD = 'XY7kmzoNzl100';
const TOKEN_NAME = 'access_token';
//access authentication token
const AUTH_TOKEN = _environments_environment__WEBPACK_IMPORTED_MODULE_0__["environment"].apiUrl + 'oauth/token';
//access API URL
const API_URL = _environments_environment__WEBPACK_IMPORTED_MODULE_0__["environment"].apiUrl + 'api';
//deployment version
const VER = 'v1.20210303';


/***/ }),

/***/ "./src/app/constants/local.storage.ts":
/*!********************************************!*\
  !*** ./src/app/constants/local.storage.ts ***!
  \********************************************/
/*! exports provided: MIVO_LOGIN, MIVO_AUTH, CURRENT_USER, MENU, DASH_INFO */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MIVO_LOGIN", function() { return MIVO_LOGIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MIVO_AUTH", function() { return MIVO_AUTH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CURRENT_USER", function() { return CURRENT_USER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MENU", function() { return MENU; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DASH_INFO", function() { return DASH_INFO; });
const MIVO_LOGIN = "MIVO_login";
const MIVO_AUTH = "MIVO_auth";
const CURRENT_USER = 'MIVO_currentUser';
const MENU = 'MIVO_menu';
const DASH_INFO = 'MIVO_dashInfo';


/***/ }),

/***/ "./src/app/constants/page.ts":
/*!***********************************!*\
  !*** ./src/app/constants/page.ts ***!
  \***********************************/
/*! exports provided: page */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "page", function() { return page; });
const page = {
    DAS: {
        N: 'dashboard'
    },
    ACC: {
        N: 'account',
        OUT: 'account-outstanding-bills',
        COM: 'account-commissions-paid',
        EST: 'account-estimated-commissions',
        PRE: 'account-premium-collection',
        SUC: 'account-outstanding-bills-success',
    },
    CLI: {
        N: 'client',
        CLI: 'client-details',
        ACT: 'client-active',
        CAN: 'client-cancelled',
        REN: 'client-renewed',
        NOT: 'client-not-renewed',
        EXP: 'client-expiring',
        PRO: 'client-provisional',
        ACTQ: 'client-active-quotation',
        PROQ: 'client-provisional-quotation',
        CLA: 'client-claims',
    },
    QUI: {
        N: 'quick-quotation',
        CAR: 'quick-quotation-car',
        HOM: 'quick-quotation-home',
        TRA: 'quick-quotation-travel',
        ACC: 'quick-quotation-accident'
    },
    QUO: {
        N: 'quotation',
        CAR: 'quotation-car',
        HOM: 'quotation-home',
        TRA: 'quotation-travel',
        ACC: 'quotation-accident'
    },
    ISS: {
        N: 'issuance',
        CAR: 'issuance-car',
        HOM: 'issuance-home',
        TRA: 'issuance-travel',
        ACC: 'issuance-accident'
    },
    REQ: {
        N: 'requests',
        LIS: 'requestList',
        CRE: 'requestCreate',
    },
    UTI: {
        N: 'utilities',
        QUE: 'utilities-query',
        DOC: 'utilities-document-printing',
        CHA: 'utilities-change-password'
    },
    NEW: {
        N: 'news'
    },
    FAQ: {
        N: 'faq'
    }
};


/***/ }),

/***/ "./src/app/helpers/auth.guard.ts":
/*!***************************************!*\
  !*** ./src/app/helpers/auth.guard.ts ***!
  \***************************************/
/*! exports provided: AuthGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthGuard", function() { return AuthGuard; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var _services_authentication_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/authentication.service */ "./src/app/services/authentication.service.ts");





let AuthGuard = class AuthGuard {
    constructor(router, authenticationService) {
        this.router = router;
        this.authenticationService = authenticationService;
    }
    canActivate(route, state) {
        const isAgentPage = route.routeConfig.path == 'agent';
        const currentUser = this.authenticationService.currentUserValue;
        if (currentUser) {
            const noAgentCode = _utils_utility__WEBPACK_IMPORTED_MODULE_3__["Utility"].isUndefined(currentUser.agentCode);
            if (currentUser.role === 1 && isAgentPage) {
                // user cannot choose agent
                this.router.navigate(['']);
            }
            else if (currentUser.role === 2 && !isAgentPage && noAgentCode) {
                // user cannot navigate if no selected agent
                this.router.navigate(['/agent']);
            }
            // authorised so return true
            return true;
        }
        // not logged in so redirect to login page with the return url
        this.router.navigate(['/login'], {
            queryParams: {
                returnUrl: state.url
            }
        });
        return false;
    }
};
AuthGuard.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_4__["AuthenticationService"] }
];
AuthGuard = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], AuthGuard);



/***/ }),

/***/ "./src/app/helpers/error.interceptor.ts":
/*!**********************************************!*\
  !*** ./src/app/helpers/error.interceptor.ts ***!
  \**********************************************/
/*! exports provided: ErrorInterceptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorInterceptor", function() { return ErrorInterceptor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _services_authentication_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/authentication.service */ "./src/app/services/authentication.service.ts");





let ErrorInterceptor = class ErrorInterceptor {
    constructor(authenticationService) {
        this.authenticationService = authenticationService;
    }
    intercept(request, next) {
        return next.handle(request).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(err => {
            if (err.status === 401) {
                // auto logout if 401 response returned from api
                this.authenticationService.logout();
                location.reload(true);
            }
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["throwError"])(err);
        }));
    }
};
ErrorInterceptor.ctorParameters = () => [
    { type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_4__["AuthenticationService"] }
];
ErrorInterceptor = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], ErrorInterceptor);



/***/ }),

/***/ "./src/app/helpers/fake-backend.ts":
/*!*****************************************!*\
  !*** ./src/app/helpers/fake-backend.ts ***!
  \*****************************************/
/*! exports provided: FakeBackendInterceptor, fakeBackendProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FakeBackendInterceptor", function() { return FakeBackendInterceptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fakeBackendProvider", function() { return fakeBackendProvider; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _objects_User__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../objects/User */ "./src/app/objects/User.ts");






// array in local storage for registered users
// let users = JSON.parse(localStorage.getItem('users')) || [];
const users = [{
        userId: 1,
        role: 1,
        userName: 'np',
        password: 'np',
        firstName: 'Nathalie',
        lastName: 'Domingo',
        fullName: 'Nathalie Domingo',
        address: 'Sta. Rita, Olonggapo City, Zambales, Philippines',
        commStructure: 4001,
        expiryDay: 4,
        token: 'faketoken'
    }, {
        userId: 2,
        role: 2,
        userName: 'jb',
        password: 'jb',
        firstName: 'Jethru',
        lastName: 'Balarbar',
        fullName: 'Jethru Balarbar',
        address: 'Sagud Bahley, San Fabian, Pangasinan, Philippines',
        commStructure: 4001,
        expiryDay: 11,
        token: 'faketoken'
    }];
let FakeBackendInterceptor = class FakeBackendInterceptor {
    intercept(request, next) {
        const { url, method, headers, body } = request;
        // wrap in delayed observable to simulate server api call
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(null)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["mergeMap"])(handleRoute))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["materialize"])()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["delay"])(500))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["dematerialize"])());
        function handleRoute() {
            switch (true) {
                case url.endsWith('/users/authenticate') && method === 'POST':
                    return authenticate();
                case url.endsWith('/users/register') && method === 'POST':
                    return register();
                case url.endsWith('/users') && method === 'GET':
                    return getUsers();
                case url.match(/\/users\/\d+$/) && method === 'DELETE':
                    return deleteUser();
                default:
                    // pass through any requests not handled above
                    return next.handle(request);
            }
        }
        // route functions
        function authenticate() {
            const { username, password } = body;
            const user = users.find(x => x.userName === username && x.password === password);
            if (!user)
                return error('Username or password is incorrect');
            return ok(new _objects_User__WEBPACK_IMPORTED_MODULE_5__["User"](user));
        }
        function register() {
            const user = body;
            if (users.find(x => x.userName === user.username)) {
                return error('Username "' + user.username + '" is already taken');
            }
            user.id = users.length ? Math.max(...users.map(x => x.userId)) + 1 : 1;
            users.push(user);
            localStorage.setItem('users', JSON.stringify(users));
            return ok();
        }
        function getUsers() {
            if (!isLoggedIn())
                return unauthorized();
            return ok(users);
        }
        function deleteUser() {
            if (!isLoggedIn())
                return unauthorized();
            const userss = users.filter(x => x.userId !== idFromUrl());
            localStorage.setItem('users', JSON.stringify(userss));
            return ok();
        }
        // helper functions
        function ok(body) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpResponse"]({
                status: 200,
                body
            }));
        }
        function error(message) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])({
                error: {
                    message
                }
            });
        }
        function unauthorized() {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])({
                status: 401,
                error: {
                    message: 'Unauthorised'
                }
            });
        }
        function isLoggedIn() {
            return headers.get('Authorization') === 'Bearer fake-jwt-token';
        }
        function idFromUrl() {
            const urlParts = url.split('/');
            return parseInt(urlParts[urlParts.length - 1]);
        }
    }
};
FakeBackendInterceptor = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], FakeBackendInterceptor);

const fakeBackendProvider = {
    // use fake backend in place of Http service for backend-less development
    provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HTTP_INTERCEPTORS"],
    useClass: FakeBackendInterceptor,
    multi: true
};


/***/ }),

/***/ "./src/app/helpers/jwt.interceptor.ts":
/*!********************************************!*\
  !*** ./src/app/helpers/jwt.interceptor.ts ***!
  \********************************************/
/*! exports provided: JwtInterceptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JwtInterceptor", function() { return JwtInterceptor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _services_authentication_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/authentication.service */ "./src/app/services/authentication.service.ts");



let JwtInterceptor = class JwtInterceptor {
    constructor(authenticationService) {
        this.authenticationService = authenticationService;
    }
    intercept(request, next) {
        // add authorization header with jwt token if available
        let currentUser = this.authenticationService.currentUserValue;
        if (currentUser && currentUser.token) {
            request = request.clone({
                setHeaders: {
                    Authorization: `${currentUser.token}`
                }
            });
        }
        return next.handle(request);
    }
};
JwtInterceptor.ctorParameters = () => [
    { type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_2__["AuthenticationService"] }
];
JwtInterceptor = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], JwtInterceptor);



/***/ }),

/***/ "./src/app/objects/Accident.ts":
/*!*************************************!*\
  !*** ./src/app/objects/Accident.ts ***!
  \*************************************/
/*! exports provided: Accident */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Accident", function() { return Accident; });
// * - used in quick quotation
class Accident {
    constructor() { }
}


/***/ }),

/***/ "./src/app/objects/Car.ts":
/*!********************************!*\
  !*** ./src/app/objects/Car.ts ***!
  \********************************/
/*! exports provided: Car */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Car", function() { return Car; });
// * - used in quick quotation
class Car {
    constructor(init) {
        //accessories
        this.accessories = [];
        //sub agents
        this.subAgents = [];
        //subagent and policy holder
        this.beneficiaries = [];
        //coverages
        this.coverages = [];
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/CoverageVariableData.ts":
/*!*************************************************!*\
  !*** ./src/app/objects/CoverageVariableData.ts ***!
  \*************************************************/
/*! exports provided: CoverageVariableData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoverageVariableData", function() { return CoverageVariableData; });
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/utility */ "./src/app/utils/utility.ts");

class CoverageVariableData {
    constructor(init) {
        Object.assign(this, init);
    }
    //VAL_RA100_DISC
    getDefaultValues(arr, cvd) {
        const variableData = new CoverageVariableData();
        const hasCVD = !_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd);
        arr.forEach((a) => {
            const value = !_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(a.valCampo) ? parseFloat(a.valCampo) : null;
            switch (a.codCampo) {
                case "TIP_LOSS_DAMAGE": {
                    variableData.lossAndDamageType = value;
                    if (hasCVD) {
                        cvd.lossAndDamageType = value;
                    }
                    break;
                }
                case "PCT_FINAL_RATE": {
                    variableData.finalRate = value;
                    if (hasCVD) {
                        cvd.finalRate = value;
                    }
                    break;
                }
                case "PCT_ADJ_COMM_RATE": {
                    variableData.adjustedCommissionRate = value;
                    if (hasCVD) {
                        cvd.adjustedCommissionRate = value;
                    }
                    break;
                }
                case "PCT_LOSS_RATIO": {
                    variableData.lossRatioRate = value;
                    if (hasCVD) {
                        cvd.lossRatioRate = value;
                    }
                    break;
                }
                case "NUM_OD_TOWING_LIMIT": {
                    variableData.ownDamageTowingLimit = value;
                    if (hasCVD) {
                        cvd.ownDamageTowingLimit = value;
                    }
                    break;
                }
                case "NUM_OD_REPAIR_LIMIT": {
                    variableData.ownDamageRepairLimit = value;
                    if (hasCVD) {
                        cvd.ownDamageRepairLimit = value;
                    }
                    break;
                }
                case "VAL_OD_SPECIAL_DEDUCTIBLE": {
                    variableData.ownDamageSpecialDeductible = value;
                    if (hasCVD) {
                        cvd.ownDamageSpecialDeductible = value;
                    }
                    break;
                }
                case "NUM_TH_TOWING_LIMIT": {
                    variableData.theftTowingLimit = value;
                    if (hasCVD) {
                        cvd.theftTowingLimit = value;
                    }
                    break;
                }
                case "NUM_TH_REPAIR_LIMIT": {
                    variableData.theftRepairLimit = value;
                    if (hasCVD) {
                        cvd.theftRepairLimit = value;
                    }
                    break;
                }
                case "VAL_TH_SPECIAL_DEDUCTIBLE": {
                    variableData.theftSpecialDeductible = value;
                    if (hasCVD) {
                        cvd.theftSpecialDeductible = value;
                    }
                    break;
                }
                case "TIP_UPPA_DISCOUNT": {
                    variableData.uppaDiscountType = value;
                    if (hasCVD) {
                        cvd.uppaDiscountType = value;
                    }
                    break;
                }
                case "IMP_UPPA_DISCOUNT": {
                    variableData.uppaDiscountAmount = value;
                    if (hasCVD) {
                        cvd.uppaDiscountAmount = value;
                    }
                    break;
                }
                case "PCT_UPPA_COMMN_ADJ": {
                    variableData.uppaCommissionAdjustment = value;
                    if (hasCVD) {
                        cvd.uppaCommissionAdjustment = value;
                    }
                    break;
                }
                case "VAL_ASEG_POR_PASAJERO": {
                    variableData.sumInsuredPerPassenger = value;
                    if (hasCVD) {
                        cvd.sumInsuredPerPassenger = value;
                    }
                    break;
                }
                case "PCT_AON_FINAL_RATE": {
                    variableData.aonFinalRate = value;
                    if (hasCVD) {
                        cvd.aonFinalRate = value;
                    }
                    break;
                }
                case "NUM_AON_TOWING_LIMIT": {
                    variableData.aonTowingLimit = value;
                    if (hasCVD) {
                        cvd.aonTowingLimit = value;
                    }
                    break;
                }
                case "NUM_AON_REPAIR_LIMIT": {
                    variableData.aonRepairLimit = value;
                    if (hasCVD) {
                        cvd.aonRepairLimit = value;
                    }
                    break;
                }
                case "VAL_AON_SPECIAL_DEDUCTIBLE": {
                    variableData.aonSpecialDeductible = value;
                    if (hasCVD) {
                        cvd.aonSpecialDeductible = value;
                    }
                    break;
                }
                case "PCT_AON_COMMN_ADJ": {
                    variableData.aonCommissionAdjustment = value;
                    if (hasCVD) {
                        cvd.aonCommissionAdjustment = value;
                    }
                    break;
                }
                case "PCT_SRCC_FINAL_RATE": {
                    variableData.srccFinalRate = value;
                    if (hasCVD) {
                        cvd.srccFinalRate = value;
                    }
                    break;
                }
                case "NUM_SRCC_TOWING_LIMIT": {
                    variableData.srccTowingLimit = value;
                    if (hasCVD) {
                        cvd.srccTowingLimit = value;
                    }
                    break;
                }
                case "NUM_SRCC_REPAIR_LIMIT": {
                    variableData.srccRepairLimit = value;
                    if (hasCVD) {
                        cvd.srccRepairLimit = value;
                    }
                    break;
                }
                case "VAL_SRCC_SPECIAL_DEDUCTIBLE": {
                    variableData.srccSpecialDeductible = value;
                    if (hasCVD) {
                        cvd.srccSpecialDeductible = value;
                    }
                    break;
                }
                case "PCT_SRCC_COMMN_ADJ": {
                    variableData.srccCommissionAdjustment = value;
                    if (hasCVD) {
                        cvd.srccCommissionAdjustment = value;
                    }
                    break;
                }
                case "VAL_RA_DISC": {
                    variableData.roadAssistDiscount = value;
                    if (hasCVD) {
                        cvd.roadAssistDiscount = value;
                    }
                    break;
                }
                case "VAL_RA100_DISC": {
                    variableData.ra100Discount = value;
                    if (hasCVD) {
                        cvd.ra100Discount = value;
                    }
                    break;
                }
                default: {
                    //statements; 
                    break;
                }
            }
        });
        return variableData;
    }
    validateValues(cvddv, cvd) {
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.lossAndDamageType)) {
            cvd.lossAndDamageType = cvddv.lossAndDamageType;
        }
        if (cvd.finalRate > 100) {
            cvd.finalRate = 100;
        }
        else if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.finalRate)) {
            cvd.finalRate = cvddv.finalRate;
        }
        if (cvd.adjustedCommissionRate > 100) {
            cvd.adjustedCommissionRate = 100;
        }
        else if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.adjustedCommissionRate)) {
            cvd.adjustedCommissionRate = cvddv.adjustedCommissionRate;
        }
        if (cvd.lossRatioRate > 100) {
            cvd.lossRatioRate = 100;
        }
        else if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.lossRatioRate)) {
            cvd.lossRatioRate = cvddv.lossRatioRate;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.ownDamageTowingLimit)) {
            cvd.ownDamageTowingLimit = cvddv.ownDamageTowingLimit;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.ownDamageRepairLimit)) {
            cvd.ownDamageRepairLimit = cvddv.ownDamageRepairLimit;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.ownDamageSpecialDeductible)) {
            cvd.ownDamageSpecialDeductible = cvddv.ownDamageSpecialDeductible;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.theftTowingLimit)) {
            cvd.theftTowingLimit = cvddv.theftTowingLimit;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.theftRepairLimit)) {
            cvd.theftRepairLimit = cvddv.theftRepairLimit;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.theftSpecialDeductible)) {
            cvd.theftSpecialDeductible = cvddv.theftSpecialDeductible;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.uppaDiscountType)) {
            cvd.uppaDiscountType = cvddv.uppaDiscountType;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.uppaDiscountAmount)) {
            cvd.uppaDiscountAmount = cvddv.uppaDiscountAmount;
        }
        if (cvd.uppaCommissionAdjustment > 100) {
            cvd.uppaCommissionAdjustment = 100;
        }
        else if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.uppaCommissionAdjustment)) {
            cvd.uppaCommissionAdjustment = cvddv.uppaCommissionAdjustment;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.sumInsuredPerPassenger)) {
            cvd.sumInsuredPerPassenger = cvddv.sumInsuredPerPassenger;
        }
        if (cvd.aonFinalRate > 100) {
            cvd.aonFinalRate = 100;
        }
        else if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.aonFinalRate)) {
            cvd.aonFinalRate = cvddv.aonFinalRate;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.aonTowingLimit)) {
            cvd.aonTowingLimit = cvddv.aonTowingLimit;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.aonRepairLimit)) {
            cvd.aonRepairLimit = cvddv.aonRepairLimit;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.aonSpecialDeductible)) {
            cvd.aonSpecialDeductible = cvddv.aonSpecialDeductible;
        }
        if (cvd.aonCommissionAdjustment > 100) {
            cvd.aonCommissionAdjustment = 100;
        }
        else if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.aonCommissionAdjustment)) {
            cvd.aonCommissionAdjustment = cvddv.aonCommissionAdjustment;
        }
        if (cvd.srccFinalRate > 100) {
            cvd.srccFinalRate = 100;
        }
        else if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.srccFinalRate)) {
            cvd.srccFinalRate = cvddv.srccFinalRate;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.srccTowingLimit)) {
            cvd.srccTowingLimit = cvddv.srccTowingLimit;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.srccRepairLimit)) {
            cvd.srccRepairLimit = cvddv.srccRepairLimit;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.srccSpecialDeductible)) {
            cvd.srccSpecialDeductible = cvddv.srccSpecialDeductible;
        }
        if (cvd.srccCommissionAdjustment > 100) {
            cvd.srccCommissionAdjustment = 100;
        }
        else if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.srccCommissionAdjustment)) {
            cvd.srccCommissionAdjustment = cvddv.srccCommissionAdjustment;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.roadAssistDiscount)) {
            cvd.roadAssistDiscount = cvddv.roadAssistDiscount;
        }
        if (_utils_utility__WEBPACK_IMPORTED_MODULE_0__["Utility"].isUndefined(cvd.ra100Discount)) {
            cvd.ra100Discount = cvddv.ra100Discount;
        }
    }
}


/***/ }),

/***/ "./src/app/objects/DocumentPrinting.ts":
/*!*********************************************!*\
  !*** ./src/app/objects/DocumentPrinting.ts ***!
  \*********************************************/
/*! exports provided: DocumentPrinting */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentPrinting", function() { return DocumentPrinting; });
class DocumentPrinting {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/GroupPolicy.ts":
/*!****************************************!*\
  !*** ./src/app/objects/GroupPolicy.ts ***!
  \****************************************/
/*! exports provided: GroupPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupPolicy", function() { return GroupPolicy; });
class GroupPolicy {
    constructor() {
    }
}


/***/ }),

/***/ "./src/app/objects/Home.ts":
/*!*********************************!*\
  !*** ./src/app/objects/Home.ts ***!
  \*********************************/
/*! exports provided: Home */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Home", function() { return Home; });
// * - used in quick quotation
class Home {
    constructor() {
        this.building = 0; // *
        this.content = 0; // *
        this.improvements = 0; // *
        this.relatedBuild = 0; // *
        this.relatedContent = 0; // *
    }
}


/***/ }),

/***/ "./src/app/objects/InsuredDetails.ts":
/*!*******************************************!*\
  !*** ./src/app/objects/InsuredDetails.ts ***!
  \*******************************************/
/*! exports provided: InsuredDetails */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InsuredDetails", function() { return InsuredDetails; });
class InsuredDetails {
    constructor() { }
}


/***/ }),

/***/ "./src/app/objects/LOV.ts":
/*!********************************!*\
  !*** ./src/app/objects/LOV.ts ***!
  \********************************/
/*! exports provided: LOV */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOV", function() { return LOV; });
class LOV {
    constructor(tableName, version, params) {
        this.tableName = tableName;
        this.version = version;
        this.params = params;
    }
}


/***/ }),

/***/ "./src/app/objects/LOV/accidentList.ts":
/*!*********************************************!*\
  !*** ./src/app/objects/LOV/accidentList.ts ***!
  \*********************************************/
/*! exports provided: AccidentListObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccidentListObject", function() { return AccidentListObject; });
class AccidentListObject {
    constructor() {
    }
}


/***/ }),

/***/ "./src/app/objects/LOV/carList.ts":
/*!****************************************!*\
  !*** ./src/app/objects/LOV/carList.ts ***!
  \****************************************/
/*! exports provided: CarListObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CarListObject", function() { return CarListObject; });
class CarListObject {
    constructor() {
    }
}


/***/ }),

/***/ "./src/app/objects/LOV/groupPolicyList.ts":
/*!************************************************!*\
  !*** ./src/app/objects/LOV/groupPolicyList.ts ***!
  \************************************************/
/*! exports provided: GroupPolicyListObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupPolicyListObject", function() { return GroupPolicyListObject; });
class GroupPolicyListObject {
    constructor() {
    }
}


/***/ }),

/***/ "./src/app/objects/LOV/homeList.ts":
/*!*****************************************!*\
  !*** ./src/app/objects/LOV/homeList.ts ***!
  \*****************************************/
/*! exports provided: HomeListObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeListObject", function() { return HomeListObject; });
class HomeListObject {
    constructor() {
    }
}


/***/ }),

/***/ "./src/app/objects/LOV/thirdPartyList.ts":
/*!***********************************************!*\
  !*** ./src/app/objects/LOV/thirdPartyList.ts ***!
  \***********************************************/
/*! exports provided: ThirdPartyListObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThirdPartyListObject", function() { return ThirdPartyListObject; });
class ThirdPartyListObject {
    constructor() { }
}


/***/ }),

/***/ "./src/app/objects/LOV/travelList.ts":
/*!*******************************************!*\
  !*** ./src/app/objects/LOV/travelList.ts ***!
  \*******************************************/
/*! exports provided: TravelListObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TravelListObject", function() { return TravelListObject; });
class TravelListObject {
    constructor() { }
}


/***/ }),

/***/ "./src/app/objects/LTODetails.ts":
/*!***************************************!*\
  !*** ./src/app/objects/LTODetails.ts ***!
  \***************************************/
/*! exports provided: LTODetails */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LTODetails", function() { return LTODetails; });
class LTODetails {
    constructor() { }
}


/***/ }),

/***/ "./src/app/objects/ListAccountCommissionsPaid.ts":
/*!*******************************************************!*\
  !*** ./src/app/objects/ListAccountCommissionsPaid.ts ***!
  \*******************************************************/
/*! exports provided: ListAccountCommissionsPaid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListAccountCommissionsPaid", function() { return ListAccountCommissionsPaid; });
class ListAccountCommissionsPaid {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListAccountEstimatedCommissions.ts":
/*!************************************************************!*\
  !*** ./src/app/objects/ListAccountEstimatedCommissions.ts ***!
  \************************************************************/
/*! exports provided: ListAccountEstimatedCommissions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListAccountEstimatedCommissions", function() { return ListAccountEstimatedCommissions; });
class ListAccountEstimatedCommissions {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListAccountOutstandingBills.ts":
/*!********************************************************!*\
  !*** ./src/app/objects/ListAccountOutstandingBills.ts ***!
  \********************************************************/
/*! exports provided: ListAccountOutstandingBills */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListAccountOutstandingBills", function() { return ListAccountOutstandingBills; });
class ListAccountOutstandingBills {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListAccountPremiumCollection.ts":
/*!*********************************************************!*\
  !*** ./src/app/objects/ListAccountPremiumCollection.ts ***!
  \*********************************************************/
/*! exports provided: ListAccountPremiumCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListAccountPremiumCollection", function() { return ListAccountPremiumCollection; });
class ListAccountPremiumCollection {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListClaimDetails.ts":
/*!*********************************************!*\
  !*** ./src/app/objects/ListClaimDetails.ts ***!
  \*********************************************/
/*! exports provided: ListClaimDetails */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListClaimDetails", function() { return ListClaimDetails; });
class ListClaimDetails {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListClientDetails.ts":
/*!**********************************************!*\
  !*** ./src/app/objects/ListClientDetails.ts ***!
  \**********************************************/
/*! exports provided: ListClientDetails */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListClientDetails", function() { return ListClientDetails; });
class ListClientDetails {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListPolicyActive.ts":
/*!*********************************************!*\
  !*** ./src/app/objects/ListPolicyActive.ts ***!
  \*********************************************/
/*! exports provided: ListPolicyActive */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListPolicyActive", function() { return ListPolicyActive; });
class ListPolicyActive {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListPolicyCancelled.ts":
/*!************************************************!*\
  !*** ./src/app/objects/ListPolicyCancelled.ts ***!
  \************************************************/
/*! exports provided: ListPolicyCancelled */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListPolicyCancelled", function() { return ListPolicyCancelled; });
class ListPolicyCancelled {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListPolicyExpiring.ts":
/*!***********************************************!*\
  !*** ./src/app/objects/ListPolicyExpiring.ts ***!
  \***********************************************/
/*! exports provided: ListPolicyExpiring */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListPolicyExpiring", function() { return ListPolicyExpiring; });
class ListPolicyExpiring {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListPolicyNotRenewed.ts":
/*!*************************************************!*\
  !*** ./src/app/objects/ListPolicyNotRenewed.ts ***!
  \*************************************************/
/*! exports provided: ListPolicyNotRenewed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListPolicyNotRenewed", function() { return ListPolicyNotRenewed; });
class ListPolicyNotRenewed {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListPolicyProvisional.ts":
/*!**************************************************!*\
  !*** ./src/app/objects/ListPolicyProvisional.ts ***!
  \**************************************************/
/*! exports provided: ListPolicyProvisional */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListPolicyProvisional", function() { return ListPolicyProvisional; });
class ListPolicyProvisional {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListPolicyRenewed.ts":
/*!**********************************************!*\
  !*** ./src/app/objects/ListPolicyRenewed.ts ***!
  \**********************************************/
/*! exports provided: ListPolicyRenewed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListPolicyRenewed", function() { return ListPolicyRenewed; });
class ListPolicyRenewed {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListQuotationActive.ts":
/*!************************************************!*\
  !*** ./src/app/objects/ListQuotationActive.ts ***!
  \************************************************/
/*! exports provided: ListQuotationActive */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListQuotationActive", function() { return ListQuotationActive; });
class ListQuotationActive {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ListQuotationProvisional.ts":
/*!*****************************************************!*\
  !*** ./src/app/objects/ListQuotationProvisional.ts ***!
  \*****************************************************/
/*! exports provided: ListQuotationProvisional */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListQuotationProvisional", function() { return ListQuotationProvisional; });
class ListQuotationProvisional {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/OptionList.ts":
/*!***************************************!*\
  !*** ./src/app/objects/OptionList.ts ***!
  \***************************************/
/*! exports provided: OptionList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OptionList", function() { return OptionList; });
class OptionList {
    constructor(language, columnName, param) {
        this.language = language;
        this.columnName = columnName;
        this.param = param;
    }
}


/***/ }),

/***/ "./src/app/objects/Page.ts":
/*!*********************************!*\
  !*** ./src/app/objects/Page.ts ***!
  \*********************************/
/*! exports provided: Page */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Page", function() { return Page; });
class Page {
    constructor() {
        // dash: boolean= false;
        this.account = false;
        this.outstanding = false;
        this.commissionsPaid = false;
        this.estimatedCommissions = false;
        this.premiumCollection = false;
        this.client = false;
        this.clientDetails = false;
        this.active = false;
        this.cancelled = false;
        this.renewed = false;
        this.notRenewed = false;
        this.expiring = false;
        this.provisional = false;
        this.activeQuotation = false;
        this.provisionalQuotation = false;
        this.claims = false;
        this.quick = false;
        this.quickCar = false;
        this.quickHome = false;
        this.quickTravel = false;
        this.quickAccident = false;
        this.quotation = false;
        this.quotationCar = false;
        this.quotationHome = false;
        this.quotationTravel = false;
        this.quotationAccident = false;
        this.issuance = false;
        this.issuanceCar = false;
        this.issuanceHome = false;
        this.issuanceTravel = false;
        this.issuanceAccident = false;
        this.requests = false;
        this.requestList = false;
        this.requestCreate = false;
        this.utilities = false;
        this.query = false;
        this.documentPrinting = false;
        this.changePassword = false;
        this.news = false;
        this.faq = true;
    }
}
;


/***/ }),

/***/ "./src/app/objects/PageFilter.ts":
/*!***************************************!*\
  !*** ./src/app/objects/PageFilter.ts ***!
  \***************************************/
/*! exports provided: PageFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageFilter", function() { return PageFilter; });
class PageFilter {
    constructor(init) {
        // for request list
        this.requestType = "";
        this.requestId = "";
        this.policyNumber = "";
        this.status = "";
        this.requestHandler = "";
        this.user = "";
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/PageFilterAccount.ts":
/*!**********************************************!*\
  !*** ./src/app/objects/PageFilterAccount.ts ***!
  \**********************************************/
/*! exports provided: PageFilterAccount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageFilterAccount", function() { return PageFilterAccount; });
class PageFilterAccount {
    constructor(init) {
        // common
        this.policyNumber = "";
        this.policyHolder = "";
        this.currency = "";
        this.source = "";
        this.invoiceNumber = "";
        this.receiptAmount = "";
        this.effectivityDate = "";
        this.expiryDate = "";
        this.subline = "";
        // for outstanding bills list
        this.prn = "";
        this.paymentDateExpiry = "";
        this.amount = "";
        this.paymentStatus = "";
        // for commissions paid list
        this.commissionAmount = "";
        this.withholdingTaxAmount = "";
        // for estimated commissions list
        this.movementDate = "";
        this.estimatedCommission = "";
        // for premium collection list
        this.collectedDate = "";
        this.collectionType = "";
        this.netPremium = "";
        this.surcharge = "";
        this.tax = "";
        this.interest = "";
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/PageFilterClient.ts":
/*!*********************************************!*\
  !*** ./src/app/objects/PageFilterClient.ts ***!
  \*********************************************/
/*! exports provided: PageFilterClient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageFilterClient", function() { return PageFilterClient; });
class PageFilterClient {
    constructor(init) {
        // common
        this.policyNumber = "";
        this.quotationNumber = "";
        this.documentType = "";
        this.documentCode = "";
        this.effectivityDate = "";
        this.dueDate = "";
        this.email = "";
        this.line = "";
        this.policyHolder = "";
        this.source = "";
        // for client details list
        this.name = "";
        this.address = "";
        this.homeTelNumber = "";
        this.businessTelNumber = "";
        this.mobileNumber = "";
        // for policy active list
        // for policy cancelled list
        // for policy renewed list
        // for policy not renewed list
        // for policy expiring list
        this.expiryDate = "";
        this.telephoneNumber = "";
        // for policy provisional list
        // for quotation active list
        // for quotation provisional list
        // for claims list
        this.claimNumber = "";
        this.fileNumber = "";
        this.fileName = "";
        this.lossDate = "";
        this.notificationDate = "";
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/PolicyHolder.ts":
/*!*****************************************!*\
  !*** ./src/app/objects/PolicyHolder.ts ***!
  \*****************************************/
/*! exports provided: PolicyHolder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PolicyHolder", function() { return PolicyHolder; });
class PolicyHolder {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/ReplyDetails.ts":
/*!*****************************************!*\
  !*** ./src/app/objects/ReplyDetails.ts ***!
  \*****************************************/
/*! exports provided: ReplyDetails */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReplyDetails", function() { return ReplyDetails; });
class ReplyDetails {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/RequestDetails.ts":
/*!*******************************************!*\
  !*** ./src/app/objects/RequestDetails.ts ***!
  \*******************************************/
/*! exports provided: RequestDetails */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestDetails", function() { return RequestDetails; });
class RequestDetails {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/RequestDetailsList.ts":
/*!***********************************************!*\
  !*** ./src/app/objects/RequestDetailsList.ts ***!
  \***********************************************/
/*! exports provided: RequestDetailsList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestDetailsList", function() { return RequestDetailsList; });
class RequestDetailsList {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/SelectedAgent.ts":
/*!******************************************!*\
  !*** ./src/app/objects/SelectedAgent.ts ***!
  \******************************************/
/*! exports provided: SelectedAgent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectedAgent", function() { return SelectedAgent; });
class SelectedAgent {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/Travel.ts":
/*!***********************************!*\
  !*** ./src/app/objects/Travel.ts ***!
  \***********************************/
/*! exports provided: Travel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Travel", function() { return Travel; });
// * - used in quick quotation
class Travel {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/Traveler.ts":
/*!*************************************!*\
  !*** ./src/app/objects/Traveler.ts ***!
  \*************************************/
/*! exports provided: Traveler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Traveler", function() { return Traveler; });
class Traveler {
    constructor() {
    }
}


/***/ }),

/***/ "./src/app/objects/User.ts":
/*!*********************************!*\
  !*** ./src/app/objects/User.ts ***!
  \*********************************/
/*! exports provided: User */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "User", function() { return User; });
class User {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/objects/UtilitiesQueryFilter.ts":
/*!*************************************************!*\
  !*** ./src/app/objects/UtilitiesQueryFilter.ts ***!
  \*************************************************/
/*! exports provided: UtilitiesQueryFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UtilitiesQueryFilter", function() { return UtilitiesQueryFilter; });
class UtilitiesQueryFilter {
    constructor(init) {
        Object.assign(this, init);
    }
}


/***/ }),

/***/ "./src/app/services/accident-issue.service.ts":
/*!****************************************************!*\
  !*** ./src/app/services/accident-issue.service.ts ***!
  \****************************************************/
/*! exports provided: AccidentIssueServices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccidentIssueServices", function() { return AccidentIssueServices; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");
/* harmony import */ var _objects_DocumentPrinting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../objects/DocumentPrinting */ "./src/app/objects/DocumentPrinting.ts");
/* harmony import */ var _utility_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utility.service */ "./src/app/services/utility.service.ts");
/* harmony import */ var _utils_global__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/global */ "./src/app/utils/global.ts");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../constants/page */ "./src/app/constants/page.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");










let AccidentIssueServices = class AccidentIssueServices {
    constructor(app, us, bms, router) {
        this.app = app;
        this.us = us;
        this.bms = bms;
        this.router = router;
    }
    issueQuote(accidenDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(accidenDetails, '/accident/issue/issueQuote').then(ReturnDTO => ReturnDTO);
        });
    }
    savePolicy(accidenDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(accidenDetails, '/accident/issue/savePolicy').then(ReturnDTO => ReturnDTO);
        });
    }
    postPolicy(accidenDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(accidenDetails, '/accident/issue/postPolicy').then(ReturnDTO => ReturnDTO);
        });
    }
    loadQuotation(quotationNumber) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post({
                quotationNumber
            }, '/accident/issue/loadQuotation').then(ReturnDTO => ReturnDTO);
        });
    }
    printQuote(quotationNumber) {
        this.printDoc(quotationNumber, "Q");
    }
    printPolicy(policyNumber) {
        this.printDoc(policyNumber, "P");
    }
    printDoc(number, type) {
        const documentPrintingDetails = new _objects_DocumentPrinting__WEBPACK_IMPORTED_MODULE_3__["DocumentPrinting"]();
        if (type == "P") {
            documentPrintingDetails.policyNumber = number;
        }
        else {
            documentPrintingDetails.quotationNumber = number;
        }
        documentPrintingDetails.documentType = type;
        this.us.validatePrinting(documentPrintingDetails).then((res) => {
            if (res.status) {
                var ext = res.obj;
                this.us.printDocument(ext.toString()).subscribe(data => {
                    if (data != null) {
                        window.open(URL.createObjectURL(data));
                    }
                });
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    proceedToIssuance(quotationNumber) {
        _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].scroll('topDiv');
        setTimeout(() => {
            _utils_global__WEBPACK_IMPORTED_MODULE_5__["Globals"].setPage(_constants_page__WEBPACK_IMPORTED_MODULE_8__["page"].ISS.ACC);
            _utils_global__WEBPACK_IMPORTED_MODULE_5__["Globals"].setLoadNumber(quotationNumber);
            _utils_global__WEBPACK_IMPORTED_MODULE_5__["Globals"].setLoadQuotation(true);
            this.router.navigate(['/reload']);
        }, 500);
    }
};
AccidentIssueServices.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] },
    { type: _utility_service__WEBPACK_IMPORTED_MODULE_4__["UtilityService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_7__["BsModalService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"] }
];
AccidentIssueServices = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AccidentIssueServices);



/***/ }),

/***/ "./src/app/services/account.service.ts":
/*!*********************************************!*\
  !*** ./src/app/services/account.service.ts ***!
  \*********************************************/
/*! exports provided: AccountService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountService", function() { return AccountService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");



let AccountService = class AccountService {
    constructor(app) {
        this.app = app;
    }
    getOutstandingBillsList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/account/outstandingBills').then(ReturnDTO => ReturnDTO);
        });
    }
    getCommissionsPaidList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/account/commissionsPaid').then(ReturnDTO => ReturnDTO);
        });
    }
    getEstimatedCommissionsList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/account/estimatedCommissions').then(ReturnDTO => ReturnDTO);
        });
    }
    getPremiumCollectionList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/account/premiumCollection').then(ReturnDTO => ReturnDTO);
        });
    }
};
AccountService.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] }
];
AccountService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AccountService);



/***/ }),

/***/ "./src/app/services/agent.service.ts":
/*!*******************************************!*\
  !*** ./src/app/services/agent.service.ts ***!
  \*******************************************/
/*! exports provided: AgentService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgentService", function() { return AgentService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/utility */ "./src/app/utils/utility.ts");




let AgentService = class AgentService {
    constructor(app) {
        this.app = app;
    }
    getCommercialStructure() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return _utils_utility__WEBPACK_IMPORTED_MODULE_3__["Utility"].parseIntArray(yield this.app.get('/agent/getCommercialStructure').then(objArr => objArr), 'codNivel3');
        });
    }
    getAgentList(commercialStructure) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return _utils_utility__WEBPACK_IMPORTED_MODULE_3__["Utility"].parseIntArray(yield this.app.post(commercialStructure, '/agent/getAgentList').then(objArr => objArr), 'codAgt');
        });
    }
    getEAAgentList(agentCode) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(agentCode, '/agent/getEAAgentList').then(objArr => objArr);
        });
    }
    getProductionAgentProfile(param) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(param, '/agent/getProductionAgentProfile').then(ReturnDTO => ReturnDTO);
        });
    }
};
AgentService.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] }
];
AgentService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AgentService);



/***/ }),

/***/ "./src/app/services/app.service.ts":
/*!*****************************************!*\
  !*** ./src/app/services/app.service.ts ***!
  \*****************************************/
/*! exports provided: InterceptorSkipHeader, AppService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InterceptorSkipHeader", function() { return InterceptorSkipHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppService", function() { return AppService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var _constants_app_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants/app.constant */ "./src/app/constants/app.constant.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/utility */ "./src/app/utils/utility.ts");




const InterceptorSkipHeader = 'X-Skip-Interceptor';


let AppService = class AppService {
    constructor(http, modalService) {
        this.http = http;
        this.modalService = modalService;
    }
    // httpOptions = {
    //   headers: new HttpHeaders({ 
    //     'Access-Control-Allow-Origin':'*',
    //     'Access-Control-Allow-Method':'*',
    //     'Access-Control-Allow-Headers' : "Access-Control-Allow-Headers', 'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers,X-Access-Token,XKey,Authorization",
    //     'Accept': '*/*',
    //     'Content-Type' : 'application/json'
    //   })
    // };
    post(param, endpoint) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.http.post(_constants_app_constant__WEBPACK_IMPORTED_MODULE_3__["API_URL"] + endpoint, param)
                .toPromise()
                .then(response => response)
                // .catch(err => console.log(err));
                .catch(err => this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.modalService, err.message));
        });
    }
    get(endpoint) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.http.get(_constants_app_constant__WEBPACK_IMPORTED_MODULE_3__["API_URL"] + endpoint)
                .toPromise()
                .then(response => response)
                // .catch(err => console.log(err));
                .catch(err => this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.modalService, err.message));
        });
    }
};
AppService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__["BsModalService"] }
];
AppService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AppService);



/***/ }),

/***/ "./src/app/services/authentication.service.ts":
/*!****************************************************!*\
  !*** ./src/app/services/authentication.service.ts ***!
  \****************************************************/
/*! exports provided: AuthenticationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthenticationService", function() { return AuthenticationService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _objects_User__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../objects/User */ "./src/app/objects/User.ts");
/* harmony import */ var _constants_local_storage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../constants/local.storage */ "./src/app/constants/local.storage.ts");
/* harmony import */ var _objects_Page__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../objects/Page */ "./src/app/objects/Page.ts");
/* harmony import */ var _constants_app_constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../constants/app.constant */ "./src/app/constants/app.constant.ts");









let AuthenticationService = class AuthenticationService {
    constructor(http) {
        this.http = http;
        this.currentUserSubject = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](JSON.parse(localStorage.getItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_6__["CURRENT_USER"])));
        this.currentUser = this.currentUserSubject.asObservable();
    }
    get currentUserValue() {
        return this.currentUserSubject.value;
    }
    // login(username: String, password: String) {
    //   return this.http
    //     .post < any > (`${API_URL}/users/authenticate`, {
    //       username,
    //       password,
    //     })
    //     .pipe(
    //       map((user) => {
    //         // store user details and jwt token in local storage to keep user logged in between page refreshes
    //         delete user.password;
    //         localStorage.setItem(CURRENT_USER, JSON.stringify(user));
    //         this.currentUserSubject.next(user);
    //         this.getPages(['account', 'outstanding']);
    //         return user;
    //       })
    //     );
    // }
    login(username, password) {
        return this.http.post(_constants_app_constant__WEBPACK_IMPORTED_MODULE_8__["API_URL"] + '/auth/login', { username, password }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])((res) => {
            if (res["status"]) {
                // store user details and jwt token in local storage to keep user logged in between page refreshes
                const user = new _objects_User__WEBPACK_IMPORTED_MODULE_5__["User"](res["user"]);
                const pages = res["pages"];
                const token = res["token"];
                user.token = 'Bearer ' + token;
                localStorage.setItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_6__["CURRENT_USER"], JSON.stringify(user));
                this.currentUserSubject.next(user);
                this.getPages(pages);
                return user;
            }
            else {
                return null;
            }
        }));
    }
    getPages(pages) {
        const page = new _objects_Page__WEBPACK_IMPORTED_MODULE_7__["Page"]();
        for (let p in page) {
            //includes all available pages for user
            if (pages.includes(p)) {
                page[p] = true;
            }
        }
        localStorage.setItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_6__["MENU"], JSON.stringify(page));
    }
    logout() {
        // remove user from local storage and set current user to null
        localStorage.removeItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_6__["CURRENT_USER"]);
        localStorage.removeItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_6__["MENU"]);
        localStorage.removeItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_6__["MIVO_AUTH"]);
        localStorage.removeItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_6__["DASH_INFO"]);
        this.currentUserSubject.next(null);
    }
};
AuthenticationService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }
];
AuthenticationService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: "root",
    })
], AuthenticationService);



/***/ }),

/***/ "./src/app/services/car-quote.service.ts":
/*!***********************************************!*\
  !*** ./src/app/services/car-quote.service.ts ***!
  \***********************************************/
/*! exports provided: CarQuoteServices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CarQuoteServices", function() { return CarQuoteServices; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");
/* harmony import */ var _objects_DocumentPrinting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../objects/DocumentPrinting */ "./src/app/objects/DocumentPrinting.ts");
/* harmony import */ var _utility_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utility.service */ "./src/app/services/utility.service.ts");
/* harmony import */ var _utils_global__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/global */ "./src/app/utils/global.ts");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../constants/page */ "./src/app/constants/page.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");











let CarQuoteServices = class CarQuoteServices {
    constructor(app, us, bms, router) {
        this.app = app;
        this.us = us;
        this.bms = bms;
        this.router = router;
    }
    checkRoadAssist(subline, vehicelType, modelYear, productList, coverageCode) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post({ subline, vehicelType, modelYear, productList, coverageCode }, '/quote/checkRoadAssist').then(ReturnDTO => ReturnDTO);
        });
    }
    getCoverageByProduct(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(carDetails, '/quote/getCoverageByProduct').then(ReturnDTO => ReturnDTO);
        });
    }
    issueQuote(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(carDetails, '/quote/issueQuote').then(ReturnDTO => ReturnDTO);
        });
    }
    savePolicy(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(carDetails, '/quote/savePolicy').then(ReturnDTO => ReturnDTO);
        });
    }
    postPolicy(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(carDetails, '/quote/postPolicy').then(ReturnDTO => ReturnDTO);
        });
    }
    loadQuotation(quotationNumber) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post({ quotationNumber }, '/quote/loadQuotation').then(ReturnDTO => ReturnDTO);
        });
    }
    printQuote(quotationNumber) {
        const documentPrintingDetails = new _objects_DocumentPrinting__WEBPACK_IMPORTED_MODULE_3__["DocumentPrinting"]();
        documentPrintingDetails.quotationNumber = quotationNumber;
        documentPrintingDetails.documentType = "Q";
        this.us.validatePrinting(documentPrintingDetails).then((res) => {
            if (res.status) {
                var ext = res.obj;
                this.us.printDocument(ext.toString()).subscribe(data => {
                    if (data != null) {
                        window.open(URL.createObjectURL(data));
                    }
                });
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    printPolicy(policyNumber) {
        const documentPrintingDetails = new _objects_DocumentPrinting__WEBPACK_IMPORTED_MODULE_3__["DocumentPrinting"]();
        documentPrintingDetails.policyNumber = policyNumber;
        documentPrintingDetails.documentType = "P";
        this.us.validatePrinting(documentPrintingDetails).then((res) => {
            if (res.status) {
                var ext = res.obj;
                this.us.printDocument(ext.toString()).subscribe(data => {
                    if (data != null) {
                        window.open(URL.createObjectURL(data));
                    }
                });
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    // printQuote(quotationNumber: string) {
    //   this.printDoc(quotationNumber, "Q");
    // }
    // printPolicy(policyNumber: string) {
    //   this.printDoc(policyNumber, "P");
    // }
    // printDoc(number: string, type: string) {
    //   const documentPrintingDetails = new DocumentPrinting();
    //   if (type == "P") {
    //     documentPrintingDetails.policyNumber = number;
    //   } else {
    //     documentPrintingDetails.quotationNumber = number;
    //   }
    //   documentPrintingDetails.documentType = type;
    //   this.us.validatePrinting(documentPrintingDetails).then((res) => {
    //     if (res.status) {
    //       var ext = res.obj;
    //       this.us.printDocument(ext.toString()).subscribe(data => {
    //         if (data != null) {
    //           window.open(URL.createObjectURL(data));
    //         }
    //       });
    //     } else {
    //       this.modalRef = Utility.showError(this.bms, res.message);
    //     }
    //   });
    // }
    proceedToIssuance(quotationNumber) {
        _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].scroll('topDiv');
        setTimeout(() => {
            _utils_global__WEBPACK_IMPORTED_MODULE_5__["Globals"].setPage(_constants_page__WEBPACK_IMPORTED_MODULE_8__["page"].ISS.CAR);
            _utils_global__WEBPACK_IMPORTED_MODULE_5__["Globals"].setLoadNumber(quotationNumber);
            _utils_global__WEBPACK_IMPORTED_MODULE_5__["Globals"].setLoadQuotation(true);
            this.router.navigate(['/reload']);
        }, 500);
    }
    activateCTPL(form, carDetails, selectedCoverage) {
        //if selected product is CTPL
        const isCTPL = carDetails.productList == 10002 || selectedCoverage;
        var registrationType = form.get('registrationType');
        var cocNumber = form.get('cocNumber');
        var authNumber = form.get('authNumber');
        var isNotRequired = form.get('cbIsNotRequiredAuthNumber').value;
        const inr = isNotRequired != null ? isNotRequired : false;
        _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].updateValidator(registrationType, isCTPL ? _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required : null);
        _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].updateValidator(cocNumber, isCTPL ? _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required : null);
        _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].updateValidator(authNumber, isCTPL && !inr ? _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required : null);
    }
};
CarQuoteServices.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] },
    { type: _utility_service__WEBPACK_IMPORTED_MODULE_4__["UtilityService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_7__["BsModalService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"] }
];
CarQuoteServices = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], CarQuoteServices);



/***/ }),

/***/ "./src/app/services/car-utility.service.ts":
/*!*************************************************!*\
  !*** ./src/app/services/car-utility.service.ts ***!
  \*************************************************/
/*! exports provided: CarUtilityServices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CarUtilityServices", function() { return CarUtilityServices; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _services_app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/app.service */ "./src/app/services/app.service.ts");



let CarUtilityServices = class CarUtilityServices {
    constructor(app) {
        this.app = app;
    }
    getFMV(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(carDetails, '/car/getFMV').then(ReturnDTO => ReturnDTO);
        });
    }
    getSubline(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(carDetails, '/car/getSubline').then(ReturnDTO => ReturnDTO);
        });
    }
    validatePlateNumberFormat(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(carDetails, '/car/validatePlateNumberFormat').then(ReturnDTO => ReturnDTO);
        });
    }
    validateConductionNumberFormat(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(carDetails, '/car/validateConductionNumberFormat').then(ReturnDTO => ReturnDTO);
        });
    }
    getSubagents() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.get('/car/getSubagents').then(ReturnDTO => ReturnDTO);
        });
    }
    getPreAdditionalInfo(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(carDetails, '/car/getPreAdditionalInfo').then(ReturnDTO => ReturnDTO);
        });
    }
};
CarUtilityServices.ctorParameters = () => [
    { type: _services_app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] }
];
CarUtilityServices = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], CarUtilityServices);



/***/ }),

/***/ "./src/app/services/client.service.ts":
/*!********************************************!*\
  !*** ./src/app/services/client.service.ts ***!
  \********************************************/
/*! exports provided: ClientService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientService", function() { return ClientService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");



let ClientService = class ClientService {
    constructor(app) {
        this.app = app;
    }
    getClientDetailsList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/client/clientDetails').then(ReturnDTO => ReturnDTO);
        });
    }
    getPolicyActiveList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/client/policy/active').then(ReturnDTO => ReturnDTO);
        });
    }
    getPolicyCancelledList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/client/policy/cancelled').then(ReturnDTO => ReturnDTO);
        });
    }
    getPolicyRenewedList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/client/policy/renewed').then(ReturnDTO => ReturnDTO);
        });
    }
    getPolicyNotRenewedList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/client/policy/notRenewed').then(ReturnDTO => ReturnDTO);
        });
    }
    getPolicyExpiringList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/client/policy/expiring').then(ReturnDTO => ReturnDTO);
        });
    }
    getPolicyProvisionalList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/client/policy/provisional').then(ReturnDTO => ReturnDTO);
        });
    }
    getQuotationActiveList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/client/quotation/active').then(ReturnDTO => ReturnDTO);
        });
    }
    getQuotationProvisionalList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/client/quotation/provisional').then(ReturnDTO => ReturnDTO);
        });
    }
    getClaimsList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/client/claims').then(ReturnDTO => ReturnDTO);
        });
    }
};
ClientService.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] }
];
ClientService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], ClientService);



/***/ }),

/***/ "./src/app/services/dashboard.service.ts":
/*!***********************************************!*\
  !*** ./src/app/services/dashboard.service.ts ***!
  \***********************************************/
/*! exports provided: DashboardService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardService", function() { return DashboardService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");



let DashboardService = class DashboardService {
    constructor(app) {
        this.app = app;
    }
    getForeignExchange() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.get('/dashboard/getForeignExchange').then(ReturnDTO => ReturnDTO);
        });
    }
    getDashboardInfo() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.get('/dashboard/getDashboardInfo').then(ReturnDTO => ReturnDTO);
        });
    }
};
DashboardService.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] }
];
DashboardService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], DashboardService);



/***/ }),

/***/ "./src/app/services/home-issue.service.ts":
/*!************************************************!*\
  !*** ./src/app/services/home-issue.service.ts ***!
  \************************************************/
/*! exports provided: HomeIssueServices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeIssueServices", function() { return HomeIssueServices; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");



let HomeIssueServices = class HomeIssueServices {
    constructor(app) {
        this.app = app;
        this.url = "/home/issue/";
    }
    issueQuote(homeDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(homeDetails, this.url + 'issueQuote').then(ReturnDTO => ReturnDTO);
        });
    }
    savePolicy(homeDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(homeDetails, this.url + 'savePolicy').then(ReturnDTO => ReturnDTO);
        });
    }
    postPolicy(homeDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(homeDetails, this.url + 'postPolicy').then(ReturnDTO => ReturnDTO);
        });
    }
    loadQuotation(quotationNumber) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post({
                quotationNumber
            }, this.url + 'loadQuotation').then(ReturnDTO => ReturnDTO);
        });
    }
};
HomeIssueServices.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] }
];
HomeIssueServices = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], HomeIssueServices);



/***/ }),

/***/ "./src/app/services/lov.service.ts":
/*!*****************************************!*\
  !*** ./src/app/services/lov.service.ts ***!
  \*****************************************/
/*! exports provided: LovService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LovService", function() { return LovService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _services_app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/app.service */ "./src/app/services/app.service.ts");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/utility */ "./src/app/utils/utility.ts");




let LovService = class LovService {
    constructor(app) {
        this.app = app;
    }
    getLOV(dto) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(dto, '/getLOV').then(objArr => objArr);
        });
    }
    getIntLOV(dto, param) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return _utils_utility__WEBPACK_IMPORTED_MODULE_3__["Utility"].parseIntArray(yield this.app.post(dto, '/getLOV').then(objArr => objArr), param);
        });
    }
    getOptionList(dto) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(dto, '/getOptionList').then(objArr => objArr);
        });
    }
    getIntOptionList(dto, param) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return _utils_utility__WEBPACK_IMPORTED_MODULE_3__["Utility"].parseIntArray(yield this.app.post(dto, '/getOptionList').then(objArr => objArr), param);
        });
    }
    getConfigList() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.get('/getConfigList').then(objArr => objArr);
        });
    }
};
LovService.ctorParameters = () => [
    { type: _services_app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] }
];
LovService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], LovService);



/***/ }),

/***/ "./src/app/services/lov/accident.service.ts":
/*!**************************************************!*\
  !*** ./src/app/services/lov/accident.service.ts ***!
  \**************************************************/
/*! exports provided: AccidentLOVServices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccidentLOVServices", function() { return AccidentLOVServices; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _lov_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! .././lov.service */ "./src/app/services/lov.service.ts");
/* harmony import */ var _objects_LOV__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../objects/LOV */ "./src/app/objects/LOV.ts");




let AccidentLOVServices = class AccidentLOVServices {
    constructor(lov) {
        this.lov = lov;
    }
    getSubline() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1001800', '93', '');
            return this.lov.getIntLOV(dto, 'COD_RAMO').then(lovs => lovs);
        });
    }
    getOccupationalClass(accidentDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990006', '1', '|cod_ramo~' + accidentDetails.subline +
                '|cod_modalidad~99999' +
                '|cod_campo~COD_OCCUPATIONAL_CLASS' +
                '|fec_validez~01012016');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getOccupation(accidentDetails, occupationalClass) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990006', '13', '|cod_ramo~' + accidentDetails.subline +
                '|cod_campo~TXT_OCCUPATION' +
                '|fec_validez~01012016' +
                '|DVCOD_OCCUPATIONAL_CLASS~' + occupationalClass +
                '|cod_idioma~EN');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getPaymentPlan(accidentDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1001402', '6', '|COD_CIA~1' +
                '|cod_ramo~' + accidentDetails.subline +
                '|cod_mon~1' +
                '|fec_validez~' + accidentDetails.sublineEffectivityDate +
                '|cod_nivel1~|cod_nivel2~|cod_nivel3~|tip_docum~|cod_docum~');
            return this.lov.getIntLOV(dto, 'COD_FRACC_PAGO').then(lovs => lovs);
        });
    }
    getProduct(accidentDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990004', '16', '|cod_cia~1' +
                '|cod_ramo~' + accidentDetails.subline);
            return this.lov.getIntLOV(dto, 'COD_MODALIDAD').then(lovs => lovs);
        });
    }
};
AccidentLOVServices.ctorParameters = () => [
    { type: _lov_service__WEBPACK_IMPORTED_MODULE_2__["LovService"] }
];
AccidentLOVServices = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AccidentLOVServices);



/***/ }),

/***/ "./src/app/services/lov/car.service.ts":
/*!*********************************************!*\
  !*** ./src/app/services/lov/car.service.ts ***!
  \*********************************************/
/*! exports provided: CarLOVServices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CarLOVServices", function() { return CarLOVServices; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _lov_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! .././lov.service */ "./src/app/services/lov.service.ts");
/* harmony import */ var _objects_LOV__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../objects/LOV */ "./src/app/objects/LOV.ts");
/* harmony import */ var _objects_OptionList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../objects/OptionList */ "./src/app/objects/OptionList.ts");





let CarLOVServices = class CarLOVServices {
    constructor(lov) {
        this.lov = lov;
    }
    getMakeList() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A2100400', '3', 'COD_CIA~1');
            return this.lov.getIntLOV(dto, 'COD_MARCA').then(lovs => lovs);
        });
    }
    getModelList(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A2100410', '4', '|COD_MARCA~' + carDetails.make +
                '|NUM_COTIZACION~1|COD_CIA~1');
            return this.lov.getIntLOV(dto, 'COD_MODELO').then(lovs => lovs);
        });
    }
    getVehicleTypeList(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A2100100', '2', '|COD_MARCA~' + carDetails.make +
                '|COD_MODELO~' + carDetails.model +
                '|NUM_COTIZACION~1|COD_CIA~1');
            return this.lov.getIntLOV(dto, 'COD_TIP_VEHI').then(lovs => lovs);
        });
    }
    getModelYearList(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A2100430', '4', '|COD_MARCA~' + carDetails.make +
                '|COD_MODELO~' + carDetails.model +
                '|COD_TIP_VEHI~' + carDetails.vehicleType +
                '|NUM_COTIZACION~1|COD_CIA~1');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getSubModelList(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A2100420', '4', '|COD_MARCA~' + carDetails.make +
                '|COD_MODELO~' + carDetails.model +
                '|COD_TIP_VEHI~' + carDetails.vehicleType +
                '|ANIO_SUB_MODELO~' + carDetails.modelYear +
                '|NUM_COTIZACION~1|COD_CIA~1');
            return this.lov.getIntLOV(dto, 'COD_SUB_MODELO').then(lovs => lovs);
        });
    }
    getTypeOfUseList(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A2100200', '4', '|COD_MARCA~' + carDetails.make +
                '|COD_MODELO~' + carDetails.model +
                '|COD_TIP_VEHI~' + carDetails.vehicleType +
                '|ANIO_SUB_MODELO~' + carDetails.modelYear +
                '|NUM_COTIZACION~1|COD_CIA~1');
            return this.lov.getIntLOV(dto, 'COD_USO_VEHI').then(lovs => lovs);
        });
    }
    getColor() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A2100800', '1', '');
            return this.lov.getIntLOV(dto, 'COD_COLOR').then(lovs => lovs);
        });
    }
    getAreaOfUsage(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990006', '4', 'COD_RAMO~' + carDetails.subline);
            return this.lov.getIntLOV(dto, 'COD_VALOR').then(lovs => lovs);
        });
    }
    getAccessoryList(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A2100601', '2', '|COD_CIA~1' +
                '|cod_tip_vehi~' + carDetails.vehicleType +
                '|fec_validez~' + carDetails.sublineEffectivityDate);
            return this.lov.getIntLOV(dto, 'COD_ACCESORIO').then(lovs => lovs);
        });
    }
    getClassification() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'TIP_VEHI_PESO', '999');
            return this.lov.getIntOptionList(dto, 'TIP_VEHI_PESO').then(lovs => lovs);
        });
    }
    getCoverageArea() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'COD_AREA_COVER', '999');
            return this.lov.getIntOptionList(dto, 'COD_AREA_COVER').then(lovs => lovs);
        });
    }
    getMortgageClause() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'TIP_MORT_CLAUSE', '999');
            return this.lov.getIntOptionList(dto, 'TIP_MORT_CLAUSE').then(lovs => lovs);
        });
    }
    getInspectionAssessment() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G1010031', '46', '|cod_idioma~EN');
            return this.lov.getIntLOV(dto, 'COD_VALOR').then(lovs => lovs);
        });
    }
    getPaymentPlan(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1001402', '6', '|COD_CIA~1' +
                '|cod_ramo~' + carDetails.subline +
                '|cod_mon~1' +
                '|fec_validez~' + carDetails.sublineEffectivityDate +
                '|cod_nivel1~|cod_nivel2~|cod_nivel3~|tip_docum~|cod_docum~');
            return this.lov.getIntLOV(dto, 'COD_FRACC_PAGO').then(lovs => lovs);
        });
    }
    getProduct(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990004', '12', // 18 if client 12 if not
            '|COD_CIA~1' +
                '|COD_RAMO~' + carDetails.subline);
            return this.lov.getIntLOV(dto, 'COD_MODALIDAD').then(lovs => lovs);
        });
    }
    getSumInsuredPerPassenger(subline) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990006', '3', '|COD_RAMO~' + subline);
            return this.lov.getIntLOV(dto, 'COD_VALOR').then(lovs => lovs);
        });
    }
    getRegistrationType() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G1010031', '58', '');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getMVType() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G1010031', '59', '');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    //get policy holder prefix
    getPHPrefix() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'TIP_ASEG_PREF', '999');
            return this.lov.getIntOptionList(dto, 'TIP_ASEG_PREF').then(lovs => lovs);
        });
    }
    //get policy holder separator
    getPHSeparator() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'TIP_ASEG_SEP_LOV', '999');
            return this.lov.getIntOptionList(dto, 'TIP_ASEG_SEP_LOV').then(lovs => lovs);
        });
    }
};
CarLOVServices.ctorParameters = () => [
    { type: _lov_service__WEBPACK_IMPORTED_MODULE_2__["LovService"] }
];
CarLOVServices = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], CarLOVServices);



/***/ }),

/***/ "./src/app/services/lov/group-policy.service.ts":
/*!******************************************************!*\
  !*** ./src/app/services/lov/group-policy.service.ts ***!
  \******************************************************/
/*! exports provided: GroupPolicyLOVServices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupPolicyLOVServices", function() { return GroupPolicyLOVServices; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _lov_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! .././lov.service */ "./src/app/services/lov.service.ts");
/* harmony import */ var _objects_LOV__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../objects/LOV */ "./src/app/objects/LOV.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");





let GroupPolicyLOVServices = class GroupPolicyLOVServices {
    constructor(lov) {
        this.lov = lov;
    }
    getCommercialStructure() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1000710', '2', 'COD_CIA~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].getStoredDetails().companyCode +
                '|COD_AGT~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].getStoredDetails().agentCode);
            return this.lov.getIntLOV(dto, 'COD_NIVEL3').then(lovs => lovs);
        });
    }
    getGroupPolicy(subline) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A2000010', '4', 'COD_CIA~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].getStoredDetails().companyCode +
                '|COD_AGT~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].getStoredDetails().agentCode +
                '|COD_RAMO~' + subline);
            return this.lov.getIntLOV(dto, 'NUM_POLIZA').then(lovs => lovs);
        });
    }
    getContract(subline, groupPolicy) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990001', '7', 'COD_CIA~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].getStoredDetails().companyCode +
                '|COD_AGT~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].getStoredDetails().agentCode +
                '|COD_RAMO~' + subline +
                '|NUM_POLIZA_GRUPO~' + groupPolicy.groupPolicy);
            return this.lov.getIntLOV(dto, 'NUM_CONTRATO').then(lovs => lovs);
        });
    }
    getSubContract(subline, groupPolicy) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990022', '2', 'COD_CIA~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].getStoredDetails().companyCode +
                '|COD_AGT~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_4__["Utility"].getStoredDetails().agentCode +
                '|COD_RAMO~' + subline +
                '|NUM_CONTRATO~' + groupPolicy.contract);
            return this.lov.getIntLOV(dto, 'NUM_SUBCONTRATO').then(lovs => lovs);
        });
    }
};
GroupPolicyLOVServices.ctorParameters = () => [
    { type: _lov_service__WEBPACK_IMPORTED_MODULE_2__["LovService"] }
];
GroupPolicyLOVServices = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], GroupPolicyLOVServices);



/***/ }),

/***/ "./src/app/services/lov/home.service.ts":
/*!**********************************************!*\
  !*** ./src/app/services/lov/home.service.ts ***!
  \**********************************************/
/*! exports provided: HomeLOVServices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeLOVServices", function() { return HomeLOVServices; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _lov_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! .././lov.service */ "./src/app/services/lov.service.ts");
/* harmony import */ var _objects_LOV__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../objects/LOV */ "./src/app/objects/LOV.ts");




let HomeLOVServices = class HomeLOVServices {
    constructor(lov) {
        this.lov = lov;
    }
    getHomeBusinessLine() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1001800', '92', 'cod_cia~1|cod_sector~2');
            return this.lov.getIntLOV(dto, "COD_RAMO").then(lovs => lovs);
        });
    }
    getPaymentPlan(home) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1001402', '6', '|cod_ramo~' + home.subline +
                '|cod_mon~' + home.currency +
                '|fec_validez~' + home.sublineEffectivityDate +
                '|cod_nivel1~|cod_nivel2~|cod_nivel3~|tip_docum~|cod_docum~|COD_CIA~1');
            return this.lov.getIntLOV(dto, "COD_FRACC_PAGO").then(lovs => lovs);
        });
    }
    getDistrict() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A2009101_MPH', '1', '');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getBlockNumber(district) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A2009101_MPH', '3', 'COD_CIA~1|DVCOD_DISTRICT~' + district);
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getCurrency(home) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990005', '1', 'cod_cia~1|cod_ramo~' + home.subline +
                '|fec_validez~' + home.sublineEffectivityDate);
            return this.lov.getIntLOV(dto, "COD_MON").then(lovs => lovs);
        });
    }
    getRelatedStructureProperty(home) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990006', '5', 'cod_campo~TXT_DESCRIPTION_PROPERTY_2156' +
                '|cod_cia~1|cod_ramo~' + home.subline +
                '|fec_validez~' + home.sublineEffectivityDate +
                '|DVCOD_MODALIDAD~20001');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getRelatedContentProperty(home) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990006', '5', 'cod_campo~TXT_DESCRIPTION_PROPERTY_2356' +
                '|cod_cia~1|cod_ramo~' + home.subline +
                '|fec_validez~' + home.sublineEffectivityDate +
                '|DVCOD_MODALIDAD~20001');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getProduct(home) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990004', '10', 'cod_cia~1|cod_ramo~' + home.subline);
            return this.lov.getIntLOV(dto, "COD_MODALIDAD").then(lovs => lovs);
        });
    }
};
HomeLOVServices.ctorParameters = () => [
    { type: _lov_service__WEBPACK_IMPORTED_MODULE_2__["LovService"] }
];
HomeLOVServices = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], HomeLOVServices);



/***/ }),

/***/ "./src/app/services/lov/third-party-lov-service.ts":
/*!*********************************************************!*\
  !*** ./src/app/services/lov/third-party-lov-service.ts ***!
  \*********************************************************/
/*! exports provided: ThirdPartyLOVServices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThirdPartyLOVServices", function() { return ThirdPartyLOVServices; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _lov_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lov.service */ "./src/app/services/lov.service.ts");
/* harmony import */ var _objects_LOV__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../objects/LOV */ "./src/app/objects/LOV.ts");
/* harmony import */ var src_app_objects_OptionList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/objects/OptionList */ "./src/app/objects/OptionList.ts");
/* harmony import */ var src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/utils/utility */ "./src/app/utils/utility.ts");






let ThirdPartyLOVServices = class ThirdPartyLOVServices {
    constructor(lov) {
        this.lov = lov;
    }
    getDocumentType() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1002300', '3', '|COD_CIA~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].getStoredDetails().companyCode);
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getPrefix() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new src_app_objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'TIP_PREFIJO_NOMBRE', '999');
            return this.lov.getIntOptionList(dto, 'TIP_PREFIJO_NOMBRE').then(lovs => lovs);
        });
    }
    getSuffix() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new src_app_objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'TIPO_SUFIJO_NOMBRE', '999');
            return this.lov.getIntOptionList(dto, 'TIPO_SUFIJO_NOMBRE').then(lovs => lovs);
        });
    }
    getCorrespondenceType() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new src_app_objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'TIP_ETIQUETA', '999');
            return this.lov.getIntOptionList(dto, 'TIP_ETIQUETA').then(lovs => lovs);
        });
    }
    getCountry() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1000101', '1', '');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getState(thirdParty) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1000104', '5', 'COD_PAIS~' + thirdParty.country);
            return this.lov.getIntLOV(dto, 'COD_ESTADO').then(lovs => lovs);
        });
    }
    getProvince(thirdParty) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1000100', '6', 'COD_PAIS~' + thirdParty.country +
                '|COD_ESTADO~' + thirdParty.state);
            return this.lov.getIntLOV(dto, 'COD_PROV').then(lovs => lovs);
        });
    }
    getCity(thirdParty) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1000102', '3', 'COD_PAIS~' + thirdParty.country +
                '|COD_PROV~' + thirdParty.province);
            return this.lov.getIntLOV(dto, 'COD_LOCALIDAD').then(lovs => lovs);
        });
    }
    getZipCode(thirdParty) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1000103', '3', 'COD_PAIS~' + thirdParty.country +
                '|COD_ESTADO~' + thirdParty.state +
                '|COD_PROV~' + thirdParty.province +
                '|COD_LOCALIDAD~' + thirdParty.city);
            return this.lov.getIntLOV(dto, 'COD_POSTAL').then(lovs => lovs);
        });
    }
    getNationality() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1000101', '1', '');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getPost() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990022', '2', 'COD_CIA~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].getStoredDetails().companyCode +
                '|COD_AGT~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].getStoredDetails().agentCode);
            return this.lov.getIntLOV(dto, 'NUM_SUBCONTRATO').then(lovs => lovs);
        });
    }
    getTypeOfBusiness() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990022', '2', 'COD_CIA~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].getStoredDetails().companyCode +
                '|COD_AGT~' + src_app_utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].getStoredDetails().agentCode);
            return this.lov.getIntLOV(dto, 'NUM_SUBCONTRATO').then(lovs => lovs);
        });
    }
    getMaritalStatus() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new src_app_objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'COD_EST_CIVIL', '999');
            return this.lov.getOptionList(dto).then(lovs => lovs);
        });
    }
    //same with occupation
    getProfession() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G1000100', '2', '');
            return this.lov.getIntLOV(dto, 'COD_PROFESION').then(lovs => lovs);
        });
    }
    getType() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new src_app_objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'TIP_NACIONALIDAD', '999');
            return this.lov.getIntOptionList(dto, 'COD_PAIS').then(lovs => lovs);
        });
    }
    getLanguage() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G1010010', '1', '');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
};
ThirdPartyLOVServices.ctorParameters = () => [
    { type: _lov_service__WEBPACK_IMPORTED_MODULE_2__["LovService"] }
];
ThirdPartyLOVServices = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], ThirdPartyLOVServices);



/***/ }),

/***/ "./src/app/services/lov/travel.service.ts":
/*!************************************************!*\
  !*** ./src/app/services/lov/travel.service.ts ***!
  \************************************************/
/*! exports provided: TravelLOVServices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TravelLOVServices", function() { return TravelLOVServices; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _lov_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! .././lov.service */ "./src/app/services/lov.service.ts");
/* harmony import */ var _objects_LOV__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../objects/LOV */ "./src/app/objects/LOV.ts");
/* harmony import */ var _objects_OptionList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../objects/OptionList */ "./src/app/objects/OptionList.ts");





let TravelLOVServices = class TravelLOVServices {
    constructor(lov) {
        this.lov = lov;
    }
    getCurrencyList() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990005', '1', 'cod_cia~1|cod_ramo~380|fec_validez~01012020');
            return this.lov.getIntLOV(dto, 'COD_MON').then(lovs => lovs);
        });
    }
    getCountryList(travelDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('A1000101', '3', '|cod_mon~' + travelDetails.currency +
                '|cod_idioma~EN|COD_CIA~1');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getTravelPackage() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'TRAVEL_PACK', '999');
            return this.lov.getOptionList(dto).then(lovs => lovs);
        });
    }
    getTypeOfCoverage() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'INSURANCE_COVERAGE', '999');
            return this.lov.getOptionList(dto).then(lovs => lovs);
        });
    }
    getPurposeOfTrip() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('TAVIA001', '1', '|cod_cia~1' +
                '|cod_mon~1' +
                '|cod_ramo~380' +
                '|cod_campo~PURPOSE_TRIP');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getAgeRange() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'AGE_RANGE', '999');
            return this.lov.getOptionList(dto).then(lovs => lovs);
        });
    }
    getRelationship() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G1010031', '82', '|cod_campo~RELATIONSHIP' +
                '|cod_idioma~EN' +
                '|cod_ramo~380');
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getCoverageOption() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'COVERAGE_OPTIONS', '999');
            return this.lov.getOptionList(dto).then(lovs => lovs);
        });
    }
    getInsuranceCoverage() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_OptionList__WEBPACK_IMPORTED_MODULE_4__["OptionList"]('EN', 'INSURANCE_COVERAGE', '999');
            return this.lov.getOptionList(dto).then(lovs => lovs);
        });
    }
    getExpensesCoverage(travelDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('TAGEN001', '2', '|cod_cia~1' +
                '|cod_mon~' + travelDetails.currency +
                '|cod_ramo~380' +
                '|DVTRAVEL_PACK~' + travelDetails.travelPackage);
            return this.lov.getLOV(dto).then(lovs => lovs);
        });
    }
    getProduct(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const dto = new _objects_LOV__WEBPACK_IMPORTED_MODULE_3__["LOV"]('G2990004', '16', '|COD_CIA~1' +
                '|COD_RAMO~' + carDetails.subline);
            return this.lov.getIntLOV(dto, 'COD_MODALIDAD').then(lovs => lovs);
        });
    }
};
TravelLOVServices.ctorParameters = () => [
    { type: _lov_service__WEBPACK_IMPORTED_MODULE_2__["LovService"] }
];
TravelLOVServices = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], TravelLOVServices);



/***/ }),

/***/ "./src/app/services/lto.service.ts":
/*!*****************************************!*\
  !*** ./src/app/services/lto.service.ts ***!
  \*****************************************/
/*! exports provided: LTOService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LTOService", function() { return LTOService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var rxjs_add_operator_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/add/operator/map */ "./node_modules/rxjs-compat/_esm2015/add/operator/map.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");




let LTOService = class LTOService {
    constructor(app) {
        this.app = app;
    }
    authenticateCOCRegistration(ltoDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(ltoDetails, '/lto/authenticateCOCRegistration').then(ReturnDTO => ReturnDTO);
        });
    }
};
LTOService.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_3__["AppService"] }
];
LTOService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], LTOService);



/***/ }),

/***/ "./src/app/services/payment.service.ts":
/*!*********************************************!*\
  !*** ./src/app/services/payment.service.ts ***!
  \*********************************************/
/*! exports provided: PaymentService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaymentService", function() { return PaymentService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var rxjs_add_operator_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/add/operator/map */ "./node_modules/rxjs-compat/_esm2015/add/operator/map.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");




let PaymentService = class PaymentService {
    constructor(app) {
        this.app = app;
    }
    getPaymentUrl(paymentRequest) {
        return this.app.post(Object.assign(Object.assign({}, paymentRequest), { responseUrl: 'http://localhost:4200?successPage=true' }), '/payment/getPaymentRequest').then(response => response);
    }
    getPaymentUrlViaGlobalPay(invoiceNo) {
        return this.app.post({
            invoiceNo,
            responseUrl: 'https://localhost:4200?successPage=true',
            againUrl: 'https://localhost:4200?successPage=true',
        }, '/payment/getPaymentRequest/globalpay').then(response => response);
    }
    processPaymentViaGlobalPay(params) {
        return this.app.post(params, '/payment/paymentNotification/globalpay').then(response => response);
    }
};
PaymentService.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_3__["AppService"] }
];
PaymentService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], PaymentService);



/***/ }),

/***/ "./src/app/services/printing.service.ts":
/*!**********************************************!*\
  !*** ./src/app/services/printing.service.ts ***!
  \**********************************************/
/*! exports provided: PrintingService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrintingService", function() { return PrintingService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _objects_DocumentPrinting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../objects/DocumentPrinting */ "./src/app/objects/DocumentPrinting.ts");
/* harmony import */ var _utility_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utility.service */ "./src/app/services/utility.service.ts");
/* harmony import */ var _utils_global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/global */ "./src/app/utils/global.ts");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");








let PrintingService = class PrintingService {
    constructor(us, bms, router) {
        this.us = us;
        this.bms = bms;
        this.router = router;
    }
    printQuote(quotationNumber) {
        this.printDoc(quotationNumber, "Q");
    }
    printPolicy(policyNumber) {
        this.printDoc(policyNumber, "P");
    }
    printDoc(number, type) {
        const documentPrintingDetails = new _objects_DocumentPrinting__WEBPACK_IMPORTED_MODULE_2__["DocumentPrinting"]();
        if (type == "P") {
            documentPrintingDetails.policyNumber = number;
        }
        else {
            documentPrintingDetails.quotationNumber = number;
        }
        documentPrintingDetails.documentType = type;
        this.us.validatePrinting(documentPrintingDetails).then((res) => {
            if (res.status) {
                var ext = res.obj;
                this.us.printDocument(ext.toString()).subscribe(data => {
                    if (data != null) {
                        window.open(URL.createObjectURL(data));
                    }
                });
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    proceedToIssuance(quotationNumber, page) {
        _utils_utility__WEBPACK_IMPORTED_MODULE_5__["Utility"].scroll('topDiv');
        setTimeout(() => {
            // Globals.setPage(page.ISS.ACC);
            _utils_global__WEBPACK_IMPORTED_MODULE_4__["Globals"].setPage(page);
            _utils_global__WEBPACK_IMPORTED_MODULE_4__["Globals"].setLoadNumber(quotationNumber);
            _utils_global__WEBPACK_IMPORTED_MODULE_4__["Globals"].setLoadQuotation(true);
            this.router.navigate(['/reload']);
        }, 500);
    }
};
PrintingService.ctorParameters = () => [
    { type: _utility_service__WEBPACK_IMPORTED_MODULE_3__["UtilityService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__["BsModalService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"] }
];
PrintingService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], PrintingService);



/***/ }),

/***/ "./src/app/services/quickquote.service.ts":
/*!************************************************!*\
  !*** ./src/app/services/quickquote.service.ts ***!
  \************************************************/
/*! exports provided: QuickQuoteService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuickQuoteService", function() { return QuickQuoteService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");



let QuickQuoteService = class QuickQuoteService {
    constructor(app) {
        this.app = app;
    }
    checkRoadAssist(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(carDetails, '/quickquote/checkRoadAssist').then(ReturnDTO => ReturnDTO);
        });
    }
    quickQuoteCar(carDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(carDetails, '/quickquote/car').then(ReturnDTO => ReturnDTO);
        });
    }
    quickQuoteHome(homeDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(homeDetails, '/quickquote/home').then(ReturnDTO => ReturnDTO);
        });
    }
    quickQuoteTravel(travelDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(travelDetails, '/quickquote/travel').then(ReturnDTO => ReturnDTO);
        });
    }
    quickQuoteAccident(accidentDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(accidentDetails, '/quickquote/accident').then(ReturnDTO => ReturnDTO);
        });
    }
};
QuickQuoteService.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] }
];
QuickQuoteService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], QuickQuoteService);



/***/ }),

/***/ "./src/app/services/request.service.ts":
/*!*********************************************!*\
  !*** ./src/app/services/request.service.ts ***!
  \*********************************************/
/*! exports provided: RequestService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestService", function() { return RequestService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");



let RequestService = class RequestService {
    constructor(app) {
        this.app = app;
    }
    request(requestDetails, type) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            let url = '/request/endorsement';
            if (type == 'R') {
                url = '/request/renewal';
            }
            else if (type == 'U') {
                url = '/request/underwriting';
            }
            return this.app.post(requestDetails, url).then(ReturnDTO => ReturnDTO);
        });
    }
    policy(files, requestDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const formData = new FormData();
            files.forEach(file => {
                formData.append("files", file);
            });
            formData.append("request", requestDetails.toString());
            for (let entry in requestDetails) {
                if (requestDetails[entry] != undefined) {
                    formData.append(entry, requestDetails[entry]);
                }
            }
            return this.app.post(formData, '/request/policy').then(ReturnDTO => ReturnDTO);
        });
    }
    getList(pageFilter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(pageFilter, '/request/list').then(ReturnDTO => ReturnDTO);
        });
    }
    getMessageList(requestId) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post({
                requestId
            }, '/request/messageList').then(ReturnDTO => ReturnDTO);
        });
    }
    reply(replyDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(replyDetails, '/request/reply').then(ReturnDTO => ReturnDTO);
        });
    }
};
RequestService.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] }
];
RequestService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], RequestService);



/***/ }),

/***/ "./src/app/services/service.module.ts":
/*!********************************************!*\
  !*** ./src/app/services/service.module.ts ***!
  \********************************************/
/*! exports provided: ServiceModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServiceModule", function() { return ServiceModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");
/* harmony import */ var _authentication_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./authentication.service */ "./src/app/services/authentication.service.ts");
/* harmony import */ var _quickquote_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./quickquote.service */ "./src/app/services/quickquote.service.ts");
/* harmony import */ var _car_utility_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./car-utility.service */ "./src/app/services/car-utility.service.ts");
/* harmony import */ var _car_quote_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./car-quote.service */ "./src/app/services/car-quote.service.ts");
/* harmony import */ var _travel_utility_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./travel-utility.service */ "./src/app/services/travel-utility.service.ts");
/* harmony import */ var _travel_issue_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./travel-issue.service */ "./src/app/services/travel-issue.service.ts");
/* harmony import */ var _accident_issue_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./accident-issue.service */ "./src/app/services/accident-issue.service.ts");
/* harmony import */ var _home_issue_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./home-issue.service */ "./src/app/services/home-issue.service.ts");
/* harmony import */ var _agent_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./agent.service */ "./src/app/services/agent.service.ts");
/* harmony import */ var _dashboard_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dashboard.service */ "./src/app/services/dashboard.service.ts");
/* harmony import */ var _utility_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utility.service */ "./src/app/services/utility.service.ts");
/* harmony import */ var _printing_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./printing.service */ "./src/app/services/printing.service.ts");
/* harmony import */ var _third_party_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./third-party.service */ "./src/app/services/third-party.service.ts");
/* harmony import */ var _lto_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./lto.service */ "./src/app/services/lto.service.ts");
/* harmony import */ var _request_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./request.service */ "./src/app/services/request.service.ts");
/* harmony import */ var _client_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./client.service */ "./src/app/services/client.service.ts");
/* harmony import */ var _account_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _lov_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./lov.service */ "./src/app/services/lov.service.ts");
/* harmony import */ var _lov_group_policy_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./lov/group-policy.service */ "./src/app/services/lov/group-policy.service.ts");
/* harmony import */ var _lov_car_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./lov/car.service */ "./src/app/services/lov/car.service.ts");
/* harmony import */ var _lov_home_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./lov/home.service */ "./src/app/services/lov/home.service.ts");
/* harmony import */ var _lov_travel_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./lov/travel.service */ "./src/app/services/lov/travel.service.ts");
/* harmony import */ var _lov_accident_service__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./lov/accident.service */ "./src/app/services/lov/accident.service.ts");
/* harmony import */ var _lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./lov/third-party-lov-service */ "./src/app/services/lov/third-party-lov-service.ts");
/* harmony import */ var _payment_service__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./payment.service */ "./src/app/services/payment.service.ts");





/* Services */


















/* LOV Services */








let ServiceModule = class ServiceModule {
};
ServiceModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"]
        ],
        declarations: [],
        exports: [],
        providers: [
            ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_3__["BsModalRef"],
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"],
            _app_service__WEBPACK_IMPORTED_MODULE_5__["AppService"],
            _authentication_service__WEBPACK_IMPORTED_MODULE_6__["AuthenticationService"],
            _quickquote_service__WEBPACK_IMPORTED_MODULE_7__["QuickQuoteService"],
            _car_utility_service__WEBPACK_IMPORTED_MODULE_8__["CarUtilityServices"],
            _car_quote_service__WEBPACK_IMPORTED_MODULE_9__["CarQuoteServices"],
            _travel_utility_service__WEBPACK_IMPORTED_MODULE_10__["TravelUtilityServices"],
            _travel_issue_service__WEBPACK_IMPORTED_MODULE_11__["TravelIssueServices"],
            _accident_issue_service__WEBPACK_IMPORTED_MODULE_12__["AccidentIssueServices"],
            _home_issue_service__WEBPACK_IMPORTED_MODULE_13__["HomeIssueServices"],
            _agent_service__WEBPACK_IMPORTED_MODULE_14__["AgentService"],
            _dashboard_service__WEBPACK_IMPORTED_MODULE_15__["DashboardService"],
            _utility_service__WEBPACK_IMPORTED_MODULE_16__["UtilityService"],
            _printing_service__WEBPACK_IMPORTED_MODULE_17__["PrintingService"],
            _third_party_service__WEBPACK_IMPORTED_MODULE_18__["ThirdPartyService"],
            _lto_service__WEBPACK_IMPORTED_MODULE_19__["LTOService"],
            _request_service__WEBPACK_IMPORTED_MODULE_20__["RequestService"],
            _client_service__WEBPACK_IMPORTED_MODULE_21__["ClientService"],
            _account_service__WEBPACK_IMPORTED_MODULE_22__["AccountService"],
            _lov_service__WEBPACK_IMPORTED_MODULE_23__["LovService"],
            _lov_group_policy_service__WEBPACK_IMPORTED_MODULE_24__["GroupPolicyLOVServices"],
            _lov_car_service__WEBPACK_IMPORTED_MODULE_25__["CarLOVServices"],
            _lov_home_service__WEBPACK_IMPORTED_MODULE_26__["HomeLOVServices"],
            _lov_travel_service__WEBPACK_IMPORTED_MODULE_27__["TravelLOVServices"],
            _lov_accident_service__WEBPACK_IMPORTED_MODULE_28__["AccidentLOVServices"],
            _lov_third_party_lov_service__WEBPACK_IMPORTED_MODULE_29__["ThirdPartyLOVServices"],
            _payment_service__WEBPACK_IMPORTED_MODULE_30__["PaymentService"],
        ]
    })
], ServiceModule);



/***/ }),

/***/ "./src/app/services/third-party.service.ts":
/*!*************************************************!*\
  !*** ./src/app/services/third-party.service.ts ***!
  \*************************************************/
/*! exports provided: ThirdPartyService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThirdPartyService", function() { return ThirdPartyService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");



let ThirdPartyService = class ThirdPartyService {
    constructor(app) {
        this.app = app;
    }
    getThirdPartyList(activity, firstName, lastName) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post({
                activity,
                firstName,
                lastName
            }, '/thirdParty/getThirdPartyList').then(ReturnDTO => ReturnDTO);
        });
    }
    getThirdPartyDetails(documentType, documentCode) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post({
                documentType,
                documentCode
            }, '/thirdParty/getThirdPartyDetails').then(ReturnDTO => ReturnDTO);
        });
    }
};
ThirdPartyService.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] }
];
ThirdPartyService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], ThirdPartyService);



/***/ }),

/***/ "./src/app/services/travel-issue.service.ts":
/*!**************************************************!*\
  !*** ./src/app/services/travel-issue.service.ts ***!
  \**************************************************/
/*! exports provided: TravelIssueServices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TravelIssueServices", function() { return TravelIssueServices; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");
/* harmony import */ var _objects_DocumentPrinting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../objects/DocumentPrinting */ "./src/app/objects/DocumentPrinting.ts");
/* harmony import */ var _utility_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utility.service */ "./src/app/services/utility.service.ts");
/* harmony import */ var _utils_global__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/global */ "./src/app/utils/global.ts");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/utility */ "./src/app/utils/utility.ts");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../constants/page */ "./src/app/constants/page.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");










let TravelIssueServices = class TravelIssueServices {
    constructor(app, us, bms, router) {
        this.app = app;
        this.us = us;
        this.bms = bms;
        this.router = router;
    }
    issueQuote(travelDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(travelDetails, '/travel/issue/issueQuote').then(ReturnDTO => ReturnDTO);
        });
    }
    savePolicy(travelDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(travelDetails, '/travel/issue/savePolicy').then(ReturnDTO => ReturnDTO);
        });
    }
    postPolicy(travelDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(travelDetails, '/travel/issue/postPolicy').then(ReturnDTO => ReturnDTO);
        });
    }
    loadQuotation(quotationNumber) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post({ quotationNumber }, '/travel/issue/loadQuotation').then(ReturnDTO => ReturnDTO);
        });
    }
    printQuote(quotationNumber) {
        this.printDoc(quotationNumber, "Q");
    }
    printPolicy(policyNumber) {
        this.printDoc(policyNumber, "P");
    }
    printDoc(number, type) {
        const documentPrintingDetails = new _objects_DocumentPrinting__WEBPACK_IMPORTED_MODULE_3__["DocumentPrinting"]();
        if (type == "P") {
            documentPrintingDetails.policyNumber = number;
        }
        else {
            documentPrintingDetails.quotationNumber = number;
        }
        documentPrintingDetails.documentType = type;
        this.us.validatePrinting(documentPrintingDetails).then((res) => {
            if (res.status) {
                var ext = res.obj;
                this.us.printDocument(ext.toString()).subscribe(data => {
                    if (data != null) {
                        window.open(URL.createObjectURL(data));
                    }
                });
            }
            else {
                this.modalRef = _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].showError(this.bms, res.message);
            }
        });
    }
    proceedToIssuance(quotationNumber) {
        _utils_utility__WEBPACK_IMPORTED_MODULE_6__["Utility"].scroll('topDiv');
        setTimeout(() => {
            _utils_global__WEBPACK_IMPORTED_MODULE_5__["Globals"].setPage(_constants_page__WEBPACK_IMPORTED_MODULE_8__["page"].ISS.TRA);
            _utils_global__WEBPACK_IMPORTED_MODULE_5__["Globals"].setLoadNumber(quotationNumber);
            _utils_global__WEBPACK_IMPORTED_MODULE_5__["Globals"].setLoadQuotation(true);
            this.router.navigate(['/reload']);
        }, 500);
    }
};
TravelIssueServices.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] },
    { type: _utility_service__WEBPACK_IMPORTED_MODULE_4__["UtilityService"] },
    { type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_7__["BsModalService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"] }
];
TravelIssueServices = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], TravelIssueServices);



/***/ }),

/***/ "./src/app/services/travel-utility.service.ts":
/*!****************************************************!*\
  !*** ./src/app/services/travel-utility.service.ts ***!
  \****************************************************/
/*! exports provided: TravelUtilityServices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TravelUtilityServices", function() { return TravelUtilityServices; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");



let TravelUtilityServices = class TravelUtilityServices {
    constructor(app) {
        this.app = app;
    }
    getOneTrip(travelDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(travelDetails, '/travel/getOneTrip').then(ReturnDTO => ReturnDTO);
        });
    }
};
TravelUtilityServices.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] }
];
TravelUtilityServices = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], TravelUtilityServices);



/***/ }),

/***/ "./src/app/services/utility-query.service.ts":
/*!***************************************************!*\
  !*** ./src/app/services/utility-query.service.ts ***!
  \***************************************************/
/*! exports provided: UtilityQueryService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UtilityQueryService", function() { return UtilityQueryService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ "./src/app/services/app.service.ts");



let UtilityQueryService = class UtilityQueryService {
    constructor(app) {
        this.app = app;
    }
    getSearchResult(filter) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(filter, '/InquiryController/EncryptParam').then(data => data);
        });
    }
};
UtilityQueryService.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_2__["AppService"] }
];
UtilityQueryService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], UtilityQueryService);



/***/ }),

/***/ "./src/app/services/utility.service.ts":
/*!*********************************************!*\
  !*** ./src/app/services/utility.service.ts ***!
  \*********************************************/
/*! exports provided: UtilityService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UtilityService", function() { return UtilityService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var rxjs_add_operator_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/add/operator/map */ "./node_modules/rxjs-compat/_esm2015/add/operator/map.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var _constants_app_constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants/app.constant */ "./src/app/constants/app.constant.ts");
/* harmony import */ var _services_app_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/app.service */ "./src/app/services/app.service.ts");






let UtilityService = class UtilityService {
    constructor(app, http) {
        this.app = app;
        this.http = http;
    }
    printDocument(extension) {
        return this.http.post(_constants_app_constant__WEBPACK_IMPORTED_MODULE_4__["API_URL"] + '/utility/downloadFile', extension, {
            responseType: 'blob'
        }).map((res) => {
            return new Blob([res], {
                type: 'application/pdf'
            });
        });
    }
    validatePrinting(documentPritingDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(documentPritingDetails, '/utility/validatePrinting').then(ReturnDTO => ReturnDTO);
        });
    }
    getDateRecord() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.get('/utility/getDateRecord').then(ReturnDTO => ReturnDTO);
        });
    }
    getEndorsementNumber(documentPritingDetails) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            return this.app.post(documentPritingDetails, '/utility/getEndorsementNumber').then(ReturnDTO => ReturnDTO);
        });
    }
};
UtilityService.ctorParameters = () => [
    { type: _services_app_service__WEBPACK_IMPORTED_MODULE_5__["AppService"] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"] }
];
UtilityService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], UtilityService);



/***/ }),

/***/ "./src/app/utils/animation.ts":
/*!************************************!*\
  !*** ./src/app/utils/animation.ts ***!
  \************************************/
/*! exports provided: SlideInOutAnimation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SlideInOutAnimation", function() { return SlideInOutAnimation; });
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/animations */ "./node_modules/@angular/animations/__ivy_ngcc__/fesm2015/animations.js");

const SlideInOutAnimation = [
    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["trigger"])('slideInOut', [
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('in', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
            'max-height': '500px',
            'opacity': '1',
            'visibility': 'visible'
        })),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
            'max-height': '0px',
            'opacity': '0',
            'visibility': 'hidden'
        })),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])('in => out', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["group"])([
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('400ms ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
                    'opacity': '0'
                })),
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('600ms ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
                    'max-height': '0px'
                })),
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('700ms ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
                    'visibility': 'hidden'
                }))
            ])]),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])('out => in', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["group"])([
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('1ms ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
                    'visibility': 'visible'
                })),
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('600ms ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
                    'max-height': '500px'
                })),
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('800ms ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
                    'opacity': '1'
                }))
            ])])
    ]),
];


/***/ }),

/***/ "./src/app/utils/global.ts":
/*!*********************************!*\
  !*** ./src/app/utils/global.ts ***!
  \*********************************/
/*! exports provided: Globals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Globals", function() { return Globals; });
/* harmony import */ var _constants_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/page */ "./src/app/constants/page.ts");

class Globals {
    static setPage(val) {
        this.page = val;
    }
    static setLoadNumber(val) {
        this.loadNumber = val;
    }
    static setLoadQuotation(val) {
        this.isLoadQuotation = val;
    }
    static getAppType() {
        if (Globals.page == _constants_page__WEBPACK_IMPORTED_MODULE_0__["page"].QUO.CAR || Globals.page == _constants_page__WEBPACK_IMPORTED_MODULE_0__["page"].QUO.ACC || Globals.page == _constants_page__WEBPACK_IMPORTED_MODULE_0__["page"].QUO.TRA || Globals.page == _constants_page__WEBPACK_IMPORTED_MODULE_0__["page"].QUO.HOM) {
            return "Q";
        }
        else if (Globals.page == _constants_page__WEBPACK_IMPORTED_MODULE_0__["page"].ISS.CAR || Globals.page == _constants_page__WEBPACK_IMPORTED_MODULE_0__["page"].ISS.ACC || Globals.page == _constants_page__WEBPACK_IMPORTED_MODULE_0__["page"].ISS.TRA || Globals.page == _constants_page__WEBPACK_IMPORTED_MODULE_0__["page"].ISS.HOM) {
            return "I";
        }
        return "";
    }
}
Globals.page = 'dashboard';
Globals.loadNumber = '';
Globals.isLoadQuotation = false;


/***/ }),

/***/ "./src/app/utils/utility.ts":
/*!**********************************!*\
  !*** ./src/app/utils/utility.ts ***!
  \**********************************/
/*! exports provided: Utility */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Utility", function() { return Utility; });
/* harmony import */ var _components_modal_modal_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/modal/modal.component */ "./src/app/components/modal/modal.component.ts");
/* harmony import */ var _constants_local_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/local.storage */ "./src/app/constants/local.storage.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _objects_User__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../objects/User */ "./src/app/objects/User.ts");




class Utility {
    static updateValidator(input, validator) {
        input.setValidators(validator);
        input.updateValueAndValidity();
    }
    static setNull(checked, value) {
        return !checked ? null : value;
    }
    static isEmpty(value) {
        return value === null || value === '';
    }
    static isUndefined(value) {
        return value === undefined || value === null || value === '';
    }
    static showError(modalService, message) {
        return this.modal(modalService, message, "Error");
    }
    static showWarning(modalService, message) {
        return this.modal(modalService, message, "Warning");
    }
    static showInfo(modalService, message) {
        return this.modal(modalService, message, "Info");
    }
    static modal(modalService, message, title) {
        const initialState = {
            message: message,
            className: "modal-" + title.toLowerCase(),
            title: title,
            isClose: true,
            isHtml: false
        };
        return modalService.show(_components_modal_modal_component__WEBPACK_IMPORTED_MODULE_0__["ModalComponent"], {
            initialState
        });
    }
    static showHTMLError(modalService, items) {
        return this.modalHTML(modalService, items, "Error");
    }
    static showHTMLWarning(modalService, items) {
        return this.modalHTML(modalService, items, "Warning");
    }
    static showHTMLInfo(modalService, items) {
        return this.modalHTML(modalService, items, "Info");
    }
    static modalHTML(modalService, items, title) {
        const initialState = {
            items: items,
            className: "modal-" + title.toLowerCase(),
            title: title,
            isClose: true,
            isHtml: true
        };
        return modalService.show(_components_modal_modal_component__WEBPACK_IMPORTED_MODULE_0__["ModalComponent"], {
            initialState
        });
    }
    copyToClipboard(item) {
        document.addEventListener('copy', (e) => {
            e.clipboardData.setData('text/plain', (item));
            e.preventDefault();
            document.removeEventListener('copy', null);
        });
        document.execCommand('copy');
    }
    //smooth scroll to preferred html element
    static scroll(id) {
        //buffer if id is hidden
        setTimeout(() => {
            var el = document.getElementById(id);
            if (!this.isUndefined(el)) {
                el.scrollIntoView({
                    behavior: 'smooth'
                });
            }
        }, 500);
    }
    //converts string value to integer
    static parseIntArray(arr, param) {
        arr.forEach(a => {
            a[param] = parseInt(a[param]);
        });
        return arr;
    }
    //format date string
    static formatDate(d, f) {
        const format = !this.isUndefined(f) ? f : "MM/DD/YYYY";
        return moment__WEBPACK_IMPORTED_MODULE_2__(d).format(format);
    }
    static convertStringDate(d, f) {
        const format = !this.isUndefined(f) ? f : "DDMMYYYY";
        return moment__WEBPACK_IMPORTED_MODULE_2__(d, format).toDate();
    }
    //find all invalid control to given FormGroup
    static findInvalidControls(f) {
        const invalid = [];
        const controls = f.controls;
        for (const name in controls) {
            if (controls[name].invalid) {
                invalid.push(name);
            }
        }
        return invalid;
    }
    static convertDatePickerDate(val) {
        if (val != null && val != undefined && val !== '') {
            const date = val.toString();
            var d = new Date(date);
            return moment__WEBPACK_IMPORTED_MODULE_2__(d).format("MM/DD/YYYY");
        }
        return "";
    }
    static getStoredDetails() {
        const storedDetails = localStorage.getItem(_constants_local_storage__WEBPACK_IMPORTED_MODULE_1__["CURRENT_USER"]);
        let u = new _objects_User__WEBPACK_IMPORTED_MODULE_3__["User"]();
        if (storedDetails != null) {
            const user = JSON.parse(storedDetails);
            u = new _objects_User__WEBPACK_IMPORTED_MODULE_3__["User"](user);
        }
        return u;
    }
}


/***/ }),

/***/ "./src/app/validators/validate.ts":
/*!****************************************!*\
  !*** ./src/app/validators/validate.ts ***!
  \****************************************/
/*! exports provided: validateUrl, validateItinerary, Validate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateUrl", function() { return validateUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateItinerary", function() { return validateItinerary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Validate", function() { return Validate; });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _utils_utility__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utility */ "./src/app/utils/utility.ts");


function validateUrl(control) {
    if (!control.value.startsWith('https') || !control.value.includes('.io')) {
        return {
            validUrl: true
        };
    }
    return null;
}
function validateItinerary(control) {
    if (!_utils_utility__WEBPACK_IMPORTED_MODULE_1__["Utility"].isUndefined(control.value)) {
        const smallcaps = control.value.toLowerCase();
        var arr = smallcaps.split('-');
        var firstItinerary = arr[0].trim();
        var lastItinarary = arr[arr.length - 1].trim();
        var hasEmptyItem = false;
        arr.forEach(a => {
            if (a.trim() == '') {
                hasEmptyItem = true;
            }
        });
        //invalid if first and last itinerary is not the same, has empty item and itinerary is only 1
        if (firstItinerary != lastItinarary || hasEmptyItem || arr.length < 3) {
            return {
                invalidItinerary: true
            };
        }
    }
    return null;
}
class Validate {
    static setGroupPolicyValidations(form, gp) {
        var groupPolicy = form.get('groupPolicy');
        var contract = form.get('contract');
        var subContract = form.get('subContract');
        var cbIsRenewal = form.get('cbIsRenewal');
        var expiringPolicyNumber = form.get('expiringPolicyNumber');
        groupPolicy.valueChanges.subscribe(policy => {
            _utils_utility__WEBPACK_IMPORTED_MODULE_1__["Utility"].updateValidator(contract, _utils_utility__WEBPACK_IMPORTED_MODULE_1__["Utility"].isUndefined(policy) ? null : _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required);
            _utils_utility__WEBPACK_IMPORTED_MODULE_1__["Utility"].updateValidator(subContract, _utils_utility__WEBPACK_IMPORTED_MODULE_1__["Utility"].isUndefined(policy) ? null : _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required);
            gp.contract = _utils_utility__WEBPACK_IMPORTED_MODULE_1__["Utility"].setNull(!_utils_utility__WEBPACK_IMPORTED_MODULE_1__["Utility"].isUndefined(policy), gp.contract);
            gp.subContract = _utils_utility__WEBPACK_IMPORTED_MODULE_1__["Utility"].setNull(!_utils_utility__WEBPACK_IMPORTED_MODULE_1__["Utility"].isUndefined(policy), gp.subContract);
        });
        cbIsRenewal.valueChanges.subscribe(isRenewal => {
            if (!_utils_utility__WEBPACK_IMPORTED_MODULE_1__["Utility"].isUndefined(isRenewal)) {
                gp.expiringPolicyNumber = _utils_utility__WEBPACK_IMPORTED_MODULE_1__["Utility"].setNull(isRenewal, gp.expiringPolicyNumber);
                _utils_utility__WEBPACK_IMPORTED_MODULE_1__["Utility"].updateValidator(expiringPolicyNumber, isRenewal ? _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required : null);
            }
        });
    }
}


/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
const environment = {
    production: false,
    imgUrl: '/mivo2',
    apiUrl: 'https://prd2.mapfreinsurance.com.ph/tronws/',
};


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hammerjs */ "./node_modules/hammerjs/hammer.js");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(hammerjs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/__ivy_ngcc__/fesm2015/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");





if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_3__["AppModule"])
    .catch(err => console.error(err));


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/King/Documents/GitHub/mivo2/src/main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main-es2015.js.map