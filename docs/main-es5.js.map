{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app.component.html","webpack:///src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.html","webpack:///src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.html","webpack:///src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.html","webpack:///src/app/components/account-premium-collection-list/account-premium-collection-list.component.html","webpack:///src/app/components/choose-agent/choose-agent.component.html","webpack:///src/app/components/client-claims-list/client-claims-list.component.html","webpack:///src/app/components/client-details-list/client-details-list.component.html","webpack:///src/app/components/client-policy-active-list/client-policy-active-list.component.html","webpack:///src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.html","webpack:///src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.html","webpack:///src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.html","webpack:///src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.html","webpack:///src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.html","webpack:///src/app/components/client-quotation-active-list/client-quotation-active-list.component.html","webpack:///src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.html","webpack:///src/app/components/coverage-variable-data/coverage-variable-data.component.html","webpack:///src/app/components/coverages/coverages.component.html","webpack:///src/app/components/create-third-party/create-third-party.component.html","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/document-printing/document-printing.component.html","webpack:///src/app/components/faq/faq.component.html","webpack:///src/app/components/fixed-coverages/fixed-coverages.component.html","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/group-policy/group-policy.component.html","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/health-check/health-check.component.html","webpack:///src/app/components/individual-policy/individual-policy.component.html","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/missing-page/missing-page.component.html","webpack:///src/app/components/modal/modal.component.html","webpack:///src/app/components/outstanding-bills/outstanding-bills.component.html","webpack:///src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.html","webpack:///src/app/components/payment-breakdown/payment-breakdown.component.html","webpack:///src/app/components/policy-holder/policy-holder.component.html","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/query/query.component.html","webpack:///src/app/components/quick-quotation-accident/quick-quotation-accident.component.html","webpack:///src/app/components/quick-quotation-car/quick-quotation-car.component.html","webpack:///src/app/components/quick-quotation-home/quick-quotation-home.component.html","webpack:///src/app/components/quick-quotation-travel/quick-quotation-travel.component.html","webpack:///src/app/components/quotation-accident/quotation-accident.component.html","webpack:///src/app/components/quotation-car/quotation-car.component.html","webpack:///src/app/components/quotation-home/quotation-home.component.html","webpack:///src/app/components/quotation-travel/quotation-travel.component.html","webpack:///src/app/components/reload/reload.component.html","webpack:///src/app/components/request-create/request-create.component.html","webpack:///src/app/components/request-details-modal/request-details-modal.component.html","webpack:///src/app/components/request-list/request-list.component.html","webpack:///src/app/components/sidenav/sidenav.component.html","webpack:///src/app/components/template/template.component.html","webpack:///src/app/components/terms-and-condition/terms-and-condition.component.html","webpack:///src/app/components/view-details-modal/view-details-modal.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.css","webpack:///src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.ts","webpack:///src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.css","webpack:///src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.ts","webpack:///src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.css","webpack:///src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.ts","webpack:///src/app/components/account-premium-collection-list/account-premium-collection-list.component.css","webpack:///src/app/components/account-premium-collection-list/account-premium-collection-list.component.ts","webpack:///src/app/components/choose-agent/choose-agent.component.css","webpack:///src/app/components/choose-agent/choose-agent.component.ts","webpack:///src/app/components/client-claims-list/client-claims-list.component.css","webpack:///src/app/components/client-claims-list/client-claims-list.component.ts","webpack:///src/app/components/client-details-list/client-details-list.component.css","webpack:///src/app/components/client-details-list/client-details-list.component.ts","webpack:///src/app/components/client-policy-active-list/client-policy-active-list.component.css","webpack:///src/app/components/client-policy-active-list/client-policy-active-list.component.ts","webpack:///src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.css","webpack:///src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.ts","webpack:///src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.css","webpack:///src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.ts","webpack:///src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.css","webpack:///src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.ts","webpack:///src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.css","webpack:///src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.ts","webpack:///src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.css","webpack:///src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.ts","webpack:///src/app/components/client-quotation-active-list/client-quotation-active-list.component.css","webpack:///src/app/components/client-quotation-active-list/client-quotation-active-list.component.ts","webpack:///src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.css","webpack:///src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.ts","webpack:///src/app/components/coverage-variable-data/coverage-variable-data.component.css","webpack:///src/app/components/coverage-variable-data/coverage-variable-data.component.ts","webpack:///src/app/components/coverages/coverages.component.css","webpack:///src/app/components/coverages/coverages.component.ts","webpack:///src/app/components/create-third-party/create-third-party.component.css","webpack:///src/app/components/create-third-party/create-third-party.component.ts","webpack:///src/app/components/dashboard/dashboard.component.css","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/document-printing/document-printing.component.css","webpack:///src/app/components/document-printing/document-printing.component.ts","webpack:///src/app/components/faq/faq.component.css","webpack:///src/app/components/faq/faq.component.ts","webpack:///src/app/components/fixed-coverages/fixed-coverages.component.css","webpack:///src/app/components/fixed-coverages/fixed-coverages.component.ts","webpack:///src/app/components/footer/footer.component.css","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/group-policy/group-policy.component.css","webpack:///src/app/components/group-policy/group-policy.component.ts","webpack:///src/app/components/header/header.component.css","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/health-check/health-check.component.css","webpack:///src/app/components/health-check/health-check.component.ts","webpack:///src/app/components/individual-policy/individual-policy.component.css","webpack:///src/app/components/individual-policy/individual-policy.component.ts","webpack:///src/app/components/login/login.component.css","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/missing-page/missing-page.component.css","webpack:///src/app/components/missing-page/missing-page.component.ts","webpack:///src/app/components/modal/modal.component.css","webpack:///src/app/components/modal/modal.component.ts","webpack:///src/app/components/outstanding-bills/outstanding-bills.component.css","webpack:///src/app/components/outstanding-bills/outstanding-bills.component.ts","webpack:///src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.css","webpack:///src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.ts","webpack:///src/app/components/payment-breakdown/payment-breakdown.component.css","webpack:///src/app/components/payment-breakdown/payment-breakdown.component.ts","webpack:///src/app/components/policy-holder/policy-holder.component.css","webpack:///src/app/components/policy-holder/policy-holder.component.ts","webpack:///src/app/components/profile/profile.component.css","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/query/query.component.css","webpack:///src/app/components/query/query.component.ts","webpack:///src/app/components/quick-quotation-accident/quick-quotation-accident.component.css","webpack:///src/app/components/quick-quotation-accident/quick-quotation-accident.component.ts","webpack:///src/app/components/quick-quotation-car/quick-quotation-car.component.css","webpack:///src/app/components/quick-quotation-car/quick-quotation-car.component.ts","webpack:///src/app/components/quick-quotation-home/quick-quotation-home.component.css","webpack:///src/app/components/quick-quotation-home/quick-quotation-home.component.ts","webpack:///src/app/components/quick-quotation-travel/quick-quotation-travel.component.css","webpack:///src/app/components/quick-quotation-travel/quick-quotation-travel.component.ts","webpack:///src/app/components/quotation-accident/quotation-accident.component.css","webpack:///src/app/components/quotation-accident/quotation-accident.component.ts","webpack:///src/app/components/quotation-car/quotation-car.component.css","webpack:///src/app/components/quotation-car/quotation-car.component.ts","webpack:///src/app/components/quotation-home/quotation-home.component.css","webpack:///src/app/components/quotation-home/quotation-home.component.ts","webpack:///src/app/components/quotation-travel/quotation-travel.component.css","webpack:///src/app/components/quotation-travel/quotation-travel.component.ts","webpack:///src/app/components/reload/reload.component.css","webpack:///src/app/components/reload/reload.component.ts","webpack:///src/app/components/request-create/request-create.component.css","webpack:///src/app/components/request-create/request-create.component.ts","webpack:///src/app/components/request-details-modal/request-details-modal.component.css","webpack:///src/app/components/request-details-modal/request-details-modal.component.ts","webpack:///src/app/components/request-list/request-list.component.css","webpack:///src/app/components/request-list/request-list.component.ts","webpack:///src/app/components/sidenav/sidenav.component.css","webpack:///src/app/components/sidenav/sidenav.component.ts","webpack:///src/app/components/template/template.component.css","webpack:///src/app/components/template/template.component.ts","webpack:///src/app/components/terms-and-condition/terms-and-condition.component.css","webpack:///src/app/components/terms-and-condition/terms-and-condition.component.ts","webpack:///src/app/components/view-details-modal/view-details-modal.component.css","webpack:///src/app/components/view-details-modal/view-details-modal.component.ts","webpack:///src/app/constants/app.constant.ts","webpack:///src/app/constants/local.storage.ts","webpack:///src/app/constants/page.ts","webpack:///src/app/helpers/auth.guard.ts","webpack:///src/app/helpers/error.interceptor.ts","webpack:///src/app/helpers/fake-backend.ts","webpack:///src/app/helpers/jwt.interceptor.ts","webpack:///src/app/objects/Accident.ts","webpack:///src/app/objects/Car.ts","webpack:///src/app/objects/CoverageVariableData.ts","webpack:///src/app/objects/DocumentPrinting.ts","webpack:///src/app/objects/GroupPolicy.ts","webpack:///src/app/objects/Home.ts","webpack:///src/app/objects/InsuredDetails.ts","webpack:///src/app/objects/LOV.ts","webpack:///src/app/objects/LOV/accidentList.ts","webpack:///src/app/objects/LOV/carList.ts","webpack:///src/app/objects/LOV/groupPolicyList.ts","webpack:///src/app/objects/LOV/homeList.ts","webpack:///src/app/objects/LOV/thirdPartyList.ts","webpack:///src/app/objects/LOV/travelList.ts","webpack:///src/app/objects/LTODetails.ts","webpack:///src/app/objects/ListAccountCommissionsPaid.ts","webpack:///src/app/objects/ListAccountEstimatedCommissions.ts","webpack:///src/app/objects/ListAccountOutstandingBills.ts","webpack:///src/app/objects/ListAccountPremiumCollection.ts","webpack:///src/app/objects/ListClaimDetails.ts","webpack:///src/app/objects/ListClientDetails.ts","webpack:///src/app/objects/ListPolicyActive.ts","webpack:///src/app/objects/ListPolicyCancelled.ts","webpack:///src/app/objects/ListPolicyExpiring.ts","webpack:///src/app/objects/ListPolicyNotRenewed.ts","webpack:///src/app/objects/ListPolicyProvisional.ts","webpack:///src/app/objects/ListPolicyRenewed.ts","webpack:///src/app/objects/ListQuotationActive.ts","webpack:///src/app/objects/ListQuotationProvisional.ts","webpack:///src/app/objects/OptionList.ts","webpack:///src/app/objects/Page.ts","webpack:///src/app/objects/PageFilter.ts","webpack:///src/app/objects/PageFilterAccount.ts","webpack:///src/app/objects/PageFilterClient.ts","webpack:///src/app/objects/PolicyHolder.ts","webpack:///src/app/objects/ReplyDetails.ts","webpack:///src/app/objects/RequestDetails.ts","webpack:///src/app/objects/RequestDetailsList.ts","webpack:///src/app/objects/SelectedAgent.ts","webpack:///src/app/objects/Travel.ts","webpack:///src/app/objects/Traveler.ts","webpack:///src/app/objects/User.ts","webpack:///src/app/objects/UtilitiesQueryFilter.ts","webpack:///src/app/services/accident-issue.service.ts","webpack:///src/app/services/account.service.ts","webpack:///src/app/services/agent.service.ts","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/car-quote.service.ts","webpack:///src/app/services/car-utility.service.ts","webpack:///src/app/services/client.service.ts","webpack:///src/app/services/dashboard.service.ts","webpack:///src/app/services/home-issue.service.ts","webpack:///src/app/services/lov.service.ts","webpack:///src/app/services/lov/accident.service.ts","webpack:///src/app/services/lov/car.service.ts","webpack:///src/app/services/lov/group-policy.service.ts","webpack:///src/app/services/lov/home.service.ts","webpack:///src/app/services/lov/third-party-lov-service.ts","webpack:///src/app/services/lov/travel.service.ts","webpack:///src/app/services/lto.service.ts","webpack:///src/app/services/payment.service.ts","webpack:///src/app/services/printing.service.ts","webpack:///src/app/services/quickquote.service.ts","webpack:///src/app/services/request.service.ts","webpack:///src/app/services/service.module.ts","webpack:///src/app/services/third-party.service.ts","webpack:///src/app/services/travel-issue.service.ts","webpack:///src/app/services/travel-utility.service.ts","webpack:///src/app/services/utility-query.service.ts","webpack:///src/app/services/utility.service.ts","webpack:///src/app/utils/animation.ts","webpack:///src/app/utils/global.ts","webpack:///src/app/utils/utility.ts","webpack:///src/app/validators/validate.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","AppRoutingModule","imports","forRoot","AppComponent","title","spinnerStyle","selector","template","path","component","canActivate","redirectTo","AppModule","declarations","entryComponents","providers","provide","useClass","multi","bootstrap","AccountCommissionsPaidListComponent","dialog","as","bms","fb","displayedColumns","dataSource","currencyItems","sourceItems","pageFilter","currentPage","pageSize","sortBy","sortOrder","totalItem","pageSizeOptions","getList","createForm","filterForm","group","policyNumber","policyHolder","currency","invoiceNumber","receiptAmount","commissionAmount","withholdingTaxAmount","source","setPageFilters","getCommissionsPaidList","res","status","data","obj","modalRef","showError","message","pageIndex","direction","active","row","type","ACC","COM","openDetailsModal","details","open","width","get","setValue","AccountEstimatedCommissionsListComponent","movementDate","estimatedCommission","convertDatePickerDate","getEstimatedCommissionsList","EST","AccountOutstandingBillsListComponent","route","paymentStatusItems","_this","queryParams","pipe","params","successPage","subscribe","setTimeout","openPaymentResultModal","prn","effectivityDate","expiryDate","paymentDateExpiry","amount","paymentStatus","subline","getOutstandingBillsList","OUT","error","dialogConfig","restoreFocus","autoFocus","role","errorMessage","dialogRef","paymentResultModal","AccountPremiumCollectionListComponent","collectedDate","collectionType","netPremium","surcharge","tax","interest","getPremiumCollectionList","PRE","ChooseAgentComponent","router","auths","currentUser","currentUserValue","hasSelectedAgent","isUndefined","selectedAgent","showCancelBtn","getAgentList","commStructure","agentLOV","chooseAgentForm","markAsDirty","getCommercialStructure","commercialStructureLOV","comval","agentval","agentCode","commercialStructure","required","agent","parseInt","value","navigate","localStorage","setItem","JSON","stringify","param","getProductionAgentProfile","sa","agentInfo","agentName","documentCode","documentType","documentName","agentType","agentTypeName","agentAddress","token","removeItem","ClientClaimsListComponent","cs","today","Date","claimNumber","fileNumber","fileName","lossDate","notificationDate","getClaimsList","CLI","CLA","ClientDetailsListComponent","tpls","documentTypeItems","getDocumentType","types","forEach","r","TIP_DOCUM","push","name","address","homeTelNumber","businessTelNumber","mobileNumber","email","getClientDetailsList","ClientPolicyActiveListComponent","dueDate","line","getPolicyActiveList","ACT","ClientPolicyCancelledListComponent","getPolicyCancelledList","CAN","ClientPolicyExpiringListComponent","telephoneNumber","getPolicyExpiringList","EXP","ClientPolicyNotRenewedListComponent","getPolicyNotRenewedList","NOT","ClientPolicyProvisionalListComponent","getPolicyProvisionalList","PRO","ClientPolicyRenewedListComponent","getPolicyRenewedList","REN","ClientQuotationActiveListComponent","quotationNumber","getQuotationActiveList","ACTQ","ClientQuotationProvisionalListComponent","getQuotationProvisionalList","PROQ","CoverageVariableDataComponent","cls","coverage","c","createVariableForm","variableForm","lossAndDamageType","disabled","finalRate","nullValidator","adjustedCommissionRate","lossRatioRate","ownDamageTowingLimit","ownDamageRepairLimit","ownDamageSpecialDeductible","theftTowingLimit","theftRepairLimit","theftSpecialDeductible","uppaDiscountType","uppaDiscountAmount","uppaCommissionAdjustment","sumInsuredPerPassenger","aonFinalRate","aonTowingLimit","aonRepairLimit","aonSpecialDeductible","aonCommissionAdjustment","srccFinalRate","srccTowingLimit","srccRepairLimit","srccSpecialDeductible","srccCommissionAdjustment","roadAssistDiscount","ra100Discount","updateOn","getSumInsuredPerPassenger","sumInsuredPerPassengerLOV","close","CoveragesComponent","cqs","showCTPLChange","generateCoverage","cvd","cvddv","getDefaultValues","coverageVariable","coverageVariableData","getCoverageData","length","setForm","filteredData","modalData","carDetails","afterClosed","result","validateValues","d","cForm","coverages","array","control","setCoverageFormArray","included","updateItem","find","findIndexToUpdate","index","indexOf","sumInsured","vehicleValue","isRoadAssist","unselectRAOptions","_updateChangeSubscription","_renderChangesSubscription","s","isMandatory","options","hasVariableData","isSelect","returnData","coverageList","cov","COD_COB","product","productList","NOM_COB","MCA_TIP_CAPITAL","MCA_OBLIGATORIO","premiumAmount","prem","codCob","impSpto","coverageAmount","covAmount","sumaAseg","hasRoadAssist","isIssuance","showCTPL","emit","activateCTPL","quoteForm","amountList","impLimite","hasCounterpart","returnObj","triggerCounter","CreateThirdPartyComponent","tps","thirdParty","TPLOV","firstNameLabel","firstNameError","showPersonDetails","showOrgDetails","getLOVs","setData","setValidations","tpForm","policyHolderType","prefix","suffix","firstName","middleName","lastName","gender","birthDate","correspondenceType","country","state","province","city","zipcode","orgDocumentType","orgDocumentCode","orgNationality","orgFirstName","orgLastName","orgPost","orgTypeOfBusiness","personMaritalStatus","personProfession","personOccupation","personNationality","personType","personLanguage","isExisting","getState","getProvince","getCity","getZipCode","valueChanges","toLocaleLowerCase","updateValidator","documentTypeLOV","getPrefix","prefixLOV","getSuffix","suffixLOV","getCorrespondenceType","correspondenceTypeLOV","getCountry","countryLOV","getNationality","nationalityLOV","getPost","orgPostLOV","getTypeOfBusiness","orgTypeOfBusinessLOV","getMaritalStatus","personMaritalStatusLOV","getProfession","personProfessionLOV","personOccupationLOV","getType","personTypeLOV","getLanguage","personLanguageLOV","stateLOV","provinceLOV","cityLOV","zipcodeLOV","getThirdPartyDetails","showWarning","isPerson","DashboardComponent","ds","forex","dollar","euro","dashboardInfo","showData","chartOptions","responsive","scales","yAxes","ticks","beginAtZero","callback","toLocaleString","style","xAxes","tooltips","mode","callbacks","label","tooltipItem","Number","datasets","toFixed","toString","replace","chartLegend","barChartLabels","barChartType","barChartPlugins","barChartColors","backgroundColor","barChartData","getForeignExchange","dashInfo","getItem","parse","getDashboardInfo","DocumentPrintingComponent","us","documentPrintingDetails","showPolicyDetails","showQuotationDetails","showCommissionStatementDetails","showCsDate","showSOADetails","dateNameFormat","dateValueFormat","getSOADates","getDateRecord","csProcessDateLOV","formatDate","lov","el","date","fec_PROCESO","format","number","arr","i","subtract","endOf","soaProcessDateLOV","documentPrintingForm","endorsementNumber","policyPPRF","policyPAC","policyPV","csProcessDate","csPass","soaProcessDate","soaPass","getEndorsementNumber","validatePrinting","ext","printDocument","window","URL","createObjectURL","FaqComponent","FixedCoveragesComponent","coverageData","headers","isHeader","nomCob","showDetails","codMon","obj1","obj2","obj3","FooterComponent","version","GroupPolicyComponent","gpls","user","changedValues","changedValuesChange","GPLOV","expiryDateMinDate","add","toDate","groupPolicy","gpForm","setGroupPolicyValidations","getGroupPolicy","_subline","groupPolicyLOV","contract","subContract","cbIsRenewal","expiringPolicyNumber","contractLOV","getContract","undefined","filter","v","subContractLOV","getSubContract","key","prevDetails","prev","curr","includes","getGroupPolicyLOV","HeaderComponent","authenticationService","p","canChooseAgent","val","setPage","logout","HealthCheckComponent","ls","apiUrl","imgUrl","production","backendConfigList","getConfigList","IndividualPolicyComponent","disableLoadBtn","loadForm","LoginComponent","modalService","loading","modal","mivoLogin","login","loginForm","username","password","rememberMe","returnUrl","snapshot","DAS","N","alert","err","MissingPageComponent","ModalComponent","bsModalRef","icon","btnClass","hide","ELEMENT_DATA","withholdingTax","OutstandingBillsComponent","sort","paginator","PaymentBreakdownModalComponent","ps","payments","payment","isPostPolicy","receipt","exchangeRate","paymentNumber","paymentBreakdown","breakdown","breakdownNumber","currencyCode","efectivityDate","substr","premium","commission","animationState","showExchangeRate","toggleLabel","b","printPolicy","printQuote","proceedToIssuance","ISS","CAR","TRA","HOM","animations","PaymentBreakdownComponent","generateBreakdown","paymentReceipt","PolicyHolderComponent","showPrefix","policyHolderChange","showSearch","showSearchResult","showLastName","showContent","optional","getPHPrefix","getPHSeparator","separatorLOV","phForm","secondaryPolicyHolderPrefix","secondaryPolicyHolderSeparator","searchForm","toLowerCase","setPolicyHolder","update","scroll","getThirdPartyList","completeName","showInfo","event","input","target","isEmpty","codDocum","compareTo","tipDocum","thirdPartyList","ProfileComponent","createChangePasswordForm","changePasswordForm","oldPassword","newPassword","confirmPassword","QueryComponent","utilityQueryService","selectedOption","optPlaceholder","inputVal","nativeElement","userName","inquiryType","paramName","getSearchResult","jsonData","opt","QuickQuotationAccidentComponent","qqs","als","changeDetector","accidentDetails","LOV","showSPADetails","showHCBIDetails","accidentData","showProductComparison","showProductCoverage","createQuickQuoteForm","detectChanges","getSubline","sublineLOV","getAge","getChildNumber","quickQuoteForm","occupationalClass","disablementValue","max","min","primaryInsuredAge","cbSpouseAge","spouseAge","cbChildNumber","childNumber","getOccupationalClass","occupationalClassLOV","checked","setNull","quickQuoteDetails","a","numSimulacion","nomSimulacion","impRecibo","ageLOV","childNumberLOV","exclude","quickQuoteAccident","createQuickQuoteData","QuickQuotationCarComponent","cus","showAutoSelect","annualData","plan30Data","plan60Data","plan90Data","coveragelist","getMakeList","makeLOV","make","model","vehicleType","modelYear","subModel","typeOfUse","currentYear","getFullYear","installment","diff","getDiff","products","annual","plan30","plan60","plan90","COD_FRACC_PAGO","codFraccPago","createObj","numCuota","createQQResultDTO","getInstallmentTotal","coverageName","coverageCode","isIncluded","mcaOligatorio","compre","ctpl","autoCompre","autoComprePlus","autoLiabilityRegular","autoLiabilitySelect","autoSelect","x","parseFloat","y","setTotalValue","isAnnual","price","level","modelLOV","reset","vehicleTypeLOV","modelYearLOV","subModelLOV","typeOfUseLOV","clearRiskDetails","getModelList","_carDetails","getVehicleTypeList","getModelYearList","getSubModelList","getTypeOfUseList","getVehicleValue","getFMV","selectedIndex","dataset","sublinedate","sublineEffectivityDate","quickQuoteCar","createQuickQuoteCoverage","QuickQuotationHomeComponent","hls","homeDetails","getHomeBusinessLine","businessLine","COD_RAMO","NOM_RAMO","cbBuilding","building","cbContent","content","cbImprovements","improvements","cbRelatedBuild","relatedBuild","cbRelatedContent","relatedContent","fire","earth","water","quickQuoteHome","QuickQuotationTravelComponent","tls","travelDetails","travelData","mindate","endDateMinDate","enableEndDate","getCurrencyList","currencyLOV","getTravelPackage","packageLOV","getTypeOfCoverage","coverageLOV","getAgeRange","ageList","age","AGE_RANGE","ageRangeLOV","travelPackage","typeOfCoverage","startDate","endDate","noOfDays","ageRange","item","console","log","items","countries","NOM_PAIS","COD_PAIS","NOM_VERNACULO","getCountryList","NaN","packageList","complete","personalAssistance","assist","assistOnly","quickQuoteTravel","QuotationAccidentComponent","ais","getAppType","isLoadQuotation","pageLabel","triggerCoverage","triggerBreakdown","insuredHeadCount","prevAccidentDetails","invalidForms","withTechControl","minDate","maxDate","showOtherOccupation","showCoverage","showPaymentBreakdown","editMode","showGenerateBtn","showIssueQuoteBtn","showProceedToIssuanceBtn","showIssuanceGenerateBtn","showSaveBtn","showPostBtn","showPrintBtn","showNewPolicyBtn","createQuoteForm","loadInit","loadNumber","loadQuotation","setLoadNumber","setLoadQuotation","insured","newInsured","manageBtn","variableData","codCampo","valCampo","valueInt","generalInfo","codRamo","fecEfecPoliza","emitEvent","fecVctoPoliza","codAgt","numPolizaGrupo","numContrato","numSubcontrato","codNivel3","docType","docCode","startsWith","tempInsured","insuredDetails","occurence","numOcurrencia","insureds","t","iObj","text","txtCampo","suffixLabel","relationship","relationshipLabel","convertStringDate","cbWithHealthDeclaration","preExistingIllness","occupationalClassLabel","occupation","occupationLabel","otherOccupation","occupationLists","removeAllInsured","temp","ins","loadInsured","insuredForm","loadLOVs","populateCoverage","populatePaymentBreakdown","deepClone","technicalControl","mcaProvisional","getProduct","productListLOV","getRelationship","relationshipLOV","COD_VALOR","setDefaultValue","onLoad","occupationList","bdaymindate","bdaymaxdate","isSPA","minAgeLimit","maxAgeLimit","removeAt","controls","addInsured","TIPO_SUFIJO_NOMBRE","NOM_VALOR","maxAge","minAge","withHD","oc","getOccupation","selectedOC","hasChanges","hasQuotationNumber","isTemporaryQuotation","affecting","openProceedModal","issueQuote","savePolicy","postPolicy","generateBtn","saveBtn","proceedModal","q","g","invalid","formLabels","cbOneTripOnly","quoteArr","findInvalidControls","groupPolicyArr","policyHolderArr","f","correctLabel","trim","validationModal","codeName","newPage","QUO","page","getMonth","getDate","prevDate","COD_MODALIDAD","NOM_MODALIDAD","mcaTmpPptoMph","resErrorCode","resError","errArr","split","resStatus","concat","assembleData","getErrorItems","errorCode","showHTMLWarning","openPaymentBreakdownModal","showHTMLError","getProductCode","QuotationCarComponent","ltos","prevCarDetails","changedAccessoryValues","secondaryPolicyHolder","assigneePolicyHolder","mortgageePolicyHolder","showAccessories","showAdditionalInformation","showSubAgent","showAssignee","showMortgagee","isModifiedCoverage","includeCoverage","showGenerateBtnGrp","showIssueQuoteBtnGrp","showProceedToIssuanceBtnGrp","getColor","colorLOV","getClassification","classificationLOV","getCoverageArea","coverageAreaLOV","getInspectionAssessment","inspectionAssessmentLOV","list","getSubagents","subAgents","subAgent","nomCompleto","beneficiaryType","subagentLOV","getMortgageClause","mortgageClauseLOV","color","receivedBy","receivedDate","automaticAuth","cbPolicyOnlyDriver","cbPolicyOwner","areaOfUsage","conductionNumber","validateConductionNumber","bind","plateNumber","validatePlateNumber","serialNumber","engineNumber","mvFileNumber","purchaseDate","registrationType","mvType","cocNumber","cbIsNotRequiredAuthNumber","authNumber","accessories","customRiskName","seatingCapacity","weight","displacement","classification","coverageArea","assuredsCoinsuranceShare","cbWaivedMinPremium","cbPrepaidPremium","cbGlassEtchingEntitled","glassEtchingAvailmentDate","existingDamages","inspectionAssessment","cbHasAssignee","cbVehicleMortgaged","mortgageClause","paymentMethod","validateConductionNumberFormat","invalidConductionNumber","validatePlateNumberFormat","invalidPlateNumber","alternative","beneficiary","subAgentList","ben","tipBenef","removeAccessories","acc","accessory","codAccesorio","loadAccessory","nomAgrupAccesorio","impAccesorio","txtAccesorio","getAccessoryList","accessoryListLOV","disableAccessory","accessoriesForm","getCoverageByProduct","res1","getAreaOfUsage","areaOfUsageLOV","getRegistrationType","registrationTypeLOV","getMVType","mvTypeLOV","getPaymentPlan","paymentMethodLOV","avalidableProducts","mortgaged","accessoryType","description","newAccessory","COD_ACCESORIO","getPreAdditionalInfo","at","lto","clientName","tinNumber","assuredName","assuredTin","chassisNumber","inceptionDate","regType","authenticateCOCRegistration","registrationMsg","verificationMsg","authNo","registrationErrorMsg","verificationErrorMsg","form","pristine","hasAffectingAccessories","checkAffectingAccessories","hasAccessoryChanges","prevlength","prevAccessories","matched","acc1","NOM_FRACC_PAGO","isModified","modified","appCoverage","populateAdditionalInfo","resCoverageAmount","coverageAmountIsUndefined","assembleIssuePolicyData","QuotationHomeComponent","his","prevHomeDetails","hasRSChanges","hasRCChanges","homeAddress","showImprovement","showRelatedStructure","showRelatedContent","showRatePercentage","district","blockNumber","buildingNumber","subdivision","buildingName","streetName","barangay","region","buildingCapital","contentValue","buildingContent","constructionOfBuilding","occupancyOfBuilding","front","right","left","rear","improvement","relatedStructure","crestaZone","zipCode","cbMortgagee","warrantedNoLoss","ratePercentage","valueFloat","relatedDetails","occ","element","rs","stringValue","num","_code","relatedStructureDetails","rc","relatedContentDetails","zipCodeLOV","getBlockNumber","getCurrency","getRelatedStructureProperty","newRelatedDetails","getRelatedContentProperty","regionLOV","getDistrict","districtLOV","_value","_name","removeRelatedStructure","removeRelatedContent","blockNumberLOV","hasAffectingRelatedDetails","currentRSTotalAmount","currentRCTotalAmount","prevRSTotalAmount","prevRCTotalAmount","relatedStructureArray","getTotal","relatedContentArray","total","getRatePercentage","sep","secondaryPolicyHolderSeparatorCode","TIP_ASEG_SEP_LOV","QuotationTravelComponent","tus","tis","travelerHeadCount","prevTravelDetails","changedTravelerValues","showOthersDescription","getPurposeOfTrip","purposeOfTripLOV","businessLabel","NOM_BUSINESS","COD_BUSINESS","toUpperCase","getInsuranceCoverage","insuranceCoverageLOV","getCoverageOption","coverageOptionLOV","insuranceCoverage","travelType","completeItinerary","purposeOfTrip","cbWithCruise","othersDescription","travelers","newTraveler","cbSportsEquipment","sportsEquipment","cbHazardousSports","hazardousSports","coverageOption","medicalExpenses","traveler","getOneTrip","tempTravaler","travelerDetails","tObj","td","passportNumber","physicianName","removeTravelers","tra","loadTraveler","travelersForm","getExpensesCoverage","medicalExpensesLOV","countryList","trip","ageLimit","hasAffectingTraveler","checkAffectingTravelers","hasTravelerChanges","prevTravelers","tra1","prevBdate","currDate","currBdate","travelPack","tp","TRAVEL_PACK","co","COVERAGE_OPTIONS","me","VAL_CAMPO1","VAL_CAMPO2","ReloadComponent","RequestCreateComponent","requestDetails","showEndorsementRT","showRenewalRT","showUnderwritingRT","files","addedFiles","hasFiles","file","size","splice","requestForm","requestType","issueType","reason","agentEmail","type1","type2","branch","typeOfPolicy","clientGroup","copyNotify","comments","policy","request","RequestDetailsModalComponent","requestDetailsList","replyDetails","requestId","requestHandler","replyMessage","getMessageList","reply","RequestListComponent","requestTypeItems","statusItems","SidenavComponent","menu","logo","TemplateComponent","paymentService","sideNavClass","invoiceNo","processPayment","processPaymentViaGlobalPay","response","TermsAndConditionComponent","location","href","ViewDetailsModalComponent","formBuilder","isProceedToPayment","listClientDetails","listPolicyActive","listPolicyCancelled","listPolicyRenewed","listPolicyNotRenewed","listPolicyExpiring","listPolicyProvisional","listQuotationActive","listQuotationProvisional","listClaimDetails","listAccountOutstandingBills","listAccountCommissionsPaid","listAccountEstimatedCommissions","listAccountPremiumCollection","initPaymentForm","SUC","paymentForm","address1","address2","zip","phone","mobile","splitName","splitNameFirstMiddle","paymentRequest","Math","trunc","getPaymentUrl","mapForm","document","createElement","method","action","url","mapInput","setAttribute","appendChild","body","submit","getPaymentUrlViaGlobalPay","TOKEN_AUTH_USERNAME","TOKEN_AUTH_PASSWORD","TOKEN_NAME","AUTH_TOKEN","API_URL","VER","MIVO_LOGIN","MIVO_AUTH","CURRENT_USER","MENU","DASH_INFO","QUI","REQ","LIS","CRE","UTI","QUE","DOC","CHA","NEW","FAQ","AuthGuard","isAgentPage","routeConfig","noAgentCode","providedIn","ErrorInterceptor","next","handle","reload","users","userId","fullName","expiryDay","FakeBackendInterceptor","handleRoute","endsWith","authenticate","register","getUsers","match","deleteUser","ok","isLoggedIn","unauthorized","userss","idFromUrl","urlParts","fakeBackendProvider","JwtInterceptor","clone","setHeaders","Authorization","Accident","Car","init","beneficiaries","assign","CoverageVariableData","hasCVD","DocumentPrinting","GroupPolicy","Home","InsuredDetails","tableName","AccidentListObject","CarListObject","GroupPolicyListObject","HomeListObject","ThirdPartyListObject","TravelListObject","LTODetails","ListAccountCommissionsPaid","ListAccountEstimatedCommissions","ListAccountOutstandingBills","ListAccountPremiumCollection","ListClaimDetails","ListClientDetails","ListPolicyActive","ListPolicyCancelled","ListPolicyExpiring","ListPolicyNotRenewed","ListPolicyProvisional","ListPolicyRenewed","ListQuotationActive","ListQuotationProvisional","OptionList","language","columnName","Page","account","outstanding","commissionsPaid","estimatedCommissions","premiumCollection","client","clientDetails","cancelled","renewed","notRenewed","expiring","provisional","activeQuotation","provisionalQuotation","claims","quick","quickCar","quickHome","quickTravel","quickAccident","quotation","quotationCar","quotationHome","quotationTravel","quotationAccident","issuance","issuanceCar","issuanceHome","issuanceTravel","issuanceAccident","requests","requestList","requestCreate","utilities","query","documentPrinting","changePassword","news","faq","PageFilter","PageFilterAccount","PageFilterClient","PolicyHolder","ReplyDetails","RequestDetails","RequestDetailsList","SelectedAgent","Travel","Traveler","User","UtilitiesQueryFilter","AccidentIssueServices","app","accidenDetails","post","ReturnDTO","printDoc","AccountService","AgentService","objArr","parseIntArray","InterceptorSkipHeader","AppService","http","endpoint","toPromise","AuthenticationService","currentUserSubject","asObservable","pages","getPages","CarQuoteServices","vehicelType","selectedCoverage","isCTPL","isNotRequired","inr","CarUtilityServices","ClientService","DashboardService","HomeIssueServices","LovService","dto","AccidentLOVServices","getIntLOV","lovs","getLOV","CarLOVServices","getIntOptionList","GroupPolicyLOVServices","getStoredDetails","companyCode","HomeLOVServices","home","ThirdPartyLOVServices","getOptionList","TravelLOVServices","LTOService","ltoDetails","PaymentService","responseUrl","againUrl","PrintingService","QuickQuoteService","RequestService","formData","FormData","append","entry","ServiceModule","ThirdPartyService","activity","TravelIssueServices","TravelUtilityServices","UtilityQueryService","UtilityService","extension","responseType","Blob","documentPritingDetails","SlideInOutAnimation","Globals","Utility","addEventListener","clipboardData","preventDefault","removeEventListener","execCommand","validator","setValidators","updateValueAndValidity","initialState","className","isClose","isHtml","show","modalHTML","getElementById","scrollIntoView","behavior","storedDetails","u","validateUrl","validUrl","validateItinerary","smallcaps","firstItinerary","lastItinarary","hasEmptyItem","invalidItinerary","Validate","gp","isRenewal","environment","bootstrapModule"],"mappings":"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;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;A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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<ng-http-loader\\n    [debounceDelay]=\\\"1000\\\"\\n    [minDuration]=\\\"1000\\\"\\n    [opacity]=\\\".6\\\"\\n    [spinner]=\\\"spinnerStyle.skThreeBounce\\\"\\n    [filteredUrlPatterns]=\\\"['getDashboardInfo']\\\"\\n    ></ng-http-loader>\\n<router-outlet></router-outlet>\\n\";","export default \"<div class=\\\"row\\\" id=\\\"commissionsPaidList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Commissions Paid List</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"currency\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Currency</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"currency\\\" id=\\\"currency\\\"\\n                        [(ngModel)]=\\\"pageFilter.currency\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of currencyItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"invoiceNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Invoice Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"invoiceNumber\\\" id=\\\"invoiceNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.invoiceNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"receiptAmount\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Receipt Amount</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"receiptAmount\\\" id=\\\"receiptAmount\\\"\\n                        [(ngModel)]=\\\"pageFilter.receiptAmount\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"commissionAmount\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Commission Amount</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"commissionAmount\\\" id=\\\"commissionAmount\\\"\\n                        [(ngModel)]=\\\"pageFilter.commissionAmount\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"withholdingTaxAmount\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Withholding Tax\\n                      Amount</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"withholdingTaxAmount\\\"\\n                        id=\\\"withholdingTaxAmount\\\" [(ngModel)]=\\\"pageFilter.withholdingTaxAmount\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <!-- .card-body -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"currency\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.currency}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"invoiceNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Invoice Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"receiptAmount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Receipt Amount </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.receiptAmount | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"commissionAmount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Commission Amount </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.commissionAmount | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"withholdingTaxAmount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Withholding Tax Amount </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.withholdingTaxAmount | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #commissionsPaidList -->\";","export default \"<div class=\\\"row\\\" id=\\\"estimatedCommissionsList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Estimated Commissions List</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"currency\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Currency</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"currency\\\" id=\\\"currency\\\"\\n                        [(ngModel)]=\\\"pageFilter.currency\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of currencyItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"invoiceNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Invoice Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"invoiceNumber\\\" id=\\\"invoiceNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.invoiceNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"movementDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Movement Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"movementDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.movementDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"receiptAmount\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Receipt Amount</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"receiptAmount\\\" id=\\\"receiptAmount\\\"\\n                        [(ngModel)]=\\\"pageFilter.receiptAmount\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"estimatedCommission\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Estimated\\n                      Commission</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"estimatedCommission\\\"\\n                        id=\\\"estimatedCommission\\\" [(ngModel)]=\\\"pageFilter.estimatedCommission\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <!-- .card-body -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"currency\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.currency}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"invoiceNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Invoice Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"movementDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Movement Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.movementDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"receiptAmount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Receipt Amount </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.receiptAmount | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"estimatedCommission\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Estimated/Remaining Commission </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.estimatedCommission | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #estimatedCommissionsList -->\";","export default \"<div class=\\\"row\\\" id=\\\"outstandingBillsList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Outstanding Bills List</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"prn\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">PRN</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"prn\\\" id=\\\"prn\\\"\\n                        [(ngModel)]=\\\"pageFilter.prn\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"invoiceNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Invoice Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"invoiceNumber\\\" id=\\\"invoiceNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.invoiceNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"currency\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Currency</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"currency\\\" id=\\\"currency\\\"\\n                        [(ngModel)]=\\\"pageFilter.currency\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of currencyItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"effectivityDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"expiryDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Expiry Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"expiryDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.expiryDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"paymentDateExpiry\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Payment Date Expiry</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\"\\n                        formControlName=\\\"paymentDateExpiry\\\" [(ngModel)]=\\\"pageFilter.paymentDateExpiry\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"amount\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Amount</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"amount\\\" id=\\\"amount\\\"\\n                        [(ngModel)]=\\\"pageFilter.amount\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"paymentStatus\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Payment Status</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"paymentStatus\\\"\\n                        [(ngModel)]=\\\"pageFilter.paymentStatus\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of paymentStatusItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"subline\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Subline</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"subline\\\" id=\\\"subline\\\"\\n                        [(ngModel)]=\\\"pageFilter.subline\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <!-- .card-body -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"prn\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> PRN </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.prn}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"invoiceNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Invoice Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"currency\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.currency}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"effectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.effectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"expiryDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Expiry Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.expiryDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"paymentDateExpiry\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Payment Date Expiry </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.paymentDateExpiry}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"age\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Age </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.age}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"amount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Amount (PHP) </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.amount | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"paymentStatus\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Payment Status </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.paymentStatus}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"subline\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Subline </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.subline}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #outstandingBillsList -->\\n<ng-template #paymentResult let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-lg-6\\\">\\n        <img src=\\\"./assets/images/mivo-logo/mi_logo.png\\\" alt=\\\"brand-logo\\\" />\\n      </div>\\n      <div class=\\\"col-lg-6\\\">\\n        <img src=\\\"./assets/images/payment/paynamics-logo.png\\\" alt=\\\"brand-logo\\\" class=\\\"paynamics-logo\\\" />\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content class=\\\"payment-result-content\\\">\\n    <br>\\n\\n    <div *ngIf=\\\"data.status\\\">\\n      <span class=\\\"fa-stack fa-md payment-icon success\\\">\\n        <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n        <i class=\\\"fa fa-check fa-stack-1x fa-inverse\\\"></i>\\n      </span>\\n      <br>\\n      <br>\\n      <h3>Successful Payment</h3>\\n      <h6>Your payment has been completed succefully.</h6>\\n    </div>\\n\\n    <div *ngIf=\\\"!data.status\\\">\\n      <span class=\\\"fa-stack fa-md payment-icon failed\\\">\\n        <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n        <i class=\\\"fa fa-times fa-stack-1x fa-inverse\\\"></i>\\n      </span>\\n      <br>\\n      <br>\\n      <h3>Unsuccessful Payment</h3>\\n      <h6>{{data.errorMessage}}</h6>\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n      Okay\\n    </button>\\n\\n  </mat-dialog-content>\\n  <div mat-dialog-actions class=\\\"footer\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <p> <i class=\\\"fa fa-lock\\\"></i> Payment transaction secured by <strong>Paynamics</strong></p>\\n    </div>\\n  </div>\\n</ng-template>\";","export default \"<div class=\\\"row\\\" id=\\\"premiumCollectionList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Premium Collection List</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"currency\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Currency</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"currency\\\" id=\\\"currency\\\"\\n                        [(ngModel)]=\\\"pageFilter.currency\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of currencyItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"subline\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Subline</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"subline\\\" id=\\\"subline\\\"\\n                        [(ngModel)]=\\\"pageFilter.subline\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"invoiceNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Invoice Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"invoiceNumber\\\" id=\\\"invoiceNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.invoiceNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"effectivityDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"expiryDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Expiry Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"expiryDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.expiryDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"collectedDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Collected Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"collectedDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.collectedDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"collectionType\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Collection Type</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"collectionType\\\" id=\\\"collectionType\\\"\\n                        [(ngModel)]=\\\"pageFilter.collectionType\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"receiptAmount\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Receipt Amount</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"receiptAmount\\\" id=\\\"receiptAmount\\\"\\n                        [(ngModel)]=\\\"pageFilter.receiptAmount\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"netPremium\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Net Premium</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"netPremium\\\" id=\\\"netPremium\\\"\\n                        [(ngModel)]=\\\"pageFilter.netPremium\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"surcharge\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Surcharge</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"surcharge\\\" id=\\\"surcharge\\\"\\n                        [(ngModel)]=\\\"pageFilter.surcharge\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"tax\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Tax</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"tax\\\" id=\\\"tax\\\"\\n                        [(ngModel)]=\\\"pageFilter.tax\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"interest\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Interest</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"interest\\\" id=\\\"interest\\\"\\n                        [(ngModel)]=\\\"pageFilter.interest\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <!-- .card-body -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"currency\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.currency}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"subline\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Subline </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.subline}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"invoiceNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Invoice Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"effectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.effectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"expiryDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Expiry Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.expiryDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"collectedDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Collected Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.collectedDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"collectionType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Collection Type </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.collectionType}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"receiptAmount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Receipt Amount </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.receiptAmount | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"netPremium\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Net Premium </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.netPremium | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"surcharge\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Surcharge </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.surcharge | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"tax\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Tax </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.tax | currency:'PHP': 'symbol-narrow'}}\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"interest\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Interest </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.interest | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #premiumCollectionList -->\";","export default \"<div id=\\\"chooseAgent\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"form-panel\\\">\\n\\n          <div class=\\\"container\\\">\\n            <div class=\\\"wrap\\\">\\n              <h2>\\n                Choose Agent\\n              </h2>\\n              <form class=\\\"choose-agent-form\\\" [formGroup]=\\\"chooseAgentForm\\\">\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': chooseAgentForm.controls['commercialStructure'].invalid \\n                && (chooseAgentForm.controls['commercialStructure'].dirty \\n                || chooseAgentForm.controls['commercialStructure'].touched)}\\\">\\n                  <label for=\\\"commercialStructure\\\">Commercial Structure</label>\\n                  <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"commercialStructure\\\"\\n                    (change)=\\\"comStructureChange()\\\">\\n                    <option selected></option>\\n                    <option *ngFor=\\\"let commerialStructure of commercialStructureLOV\\\"\\n                      [ngValue]=\\\"commerialStructure.codNivel3\\\">{{ commerialStructure.nomNivel3 }}</option>\\n                  </select>\\n                  <p class=\\\"form-error\\\" *ngIf=\\\"chooseAgentForm.controls['commercialStructure'].errors?.required\\\">\\n                    * commercial structure is required\\n                  </p>\\n                </div>\\n\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': chooseAgentForm.controls['agent'].invalid \\n                && (chooseAgentForm.controls['agent'].dirty \\n                || chooseAgentForm.controls['agent'].touched)}\\\">\\n                  <label for=\\\"agent\\\">Agent</label>\\n                  <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"agent\\\">\\n                    <option selected></option>\\n                    <option *ngFor=\\\"let agentDetail of agentLOV\\\" [ngValue]=\\\"agentDetail.codAgt\\\">\\n                      {{ agentDetail.nomCompleto }}</option>\\n                  </select>\\n                  <p class=\\\"form-error\\\" *ngIf=\\\"chooseAgentForm.controls['agent'].errors?.required\\\">\\n                    * agent is required\\n                  </p>\\n                </div>\\n\\n                <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                  <button *ngIf=\\\"showCancelBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"next()\\\">Cancel</button>\\n                  <button [disabled]=\\\"(chooseAgentForm.pristine || chooseAgentForm.invalid)\\\" type=\\\"button\\\"\\n                    class=\\\"btn btn-primary\\\" (click)=\\\"next()\\\">Next</button>\\n                </div>\\n                <!-- .btn-group -->\\n              </form>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n  </div>\\n</div>\";","export default \"<div class=\\\"row\\\" id=\\\"claimsList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Claims</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"claimNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Claim Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"claimNumber\\\" id=\\\"claimNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.claimNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"fileNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">File Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"fileNumber\\\" id=\\\"fileNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.fileNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"fileName\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">File Name</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"fileName\\\" id=\\\"fileName\\\"\\n                        [(ngModel)]=\\\"pageFilter.fileName\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"lossDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Loss Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"lossDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.lossDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"notificationDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Notification Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\"\\n                        formControlName=\\\"notificationDate\\\" [(ngModel)]=\\\"pageFilter.notificationDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"claimNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Claim Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.claimNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"fileNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> File Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fileNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"fileName\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> File Name </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fileName}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"lossDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Loss Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lossDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"notificationDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Notification Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.notificationDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"reserveAmount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Reserve Amount </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.reserveAmount | currency:'PHP': 'symbol-narrow'}}\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #claimsList -->\";","export default \"<div class=\\\"row\\\" id=\\\"clientDetailsList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Client List</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"name\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Name</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\"\\n                        [(ngModel)]=\\\"pageFilter.name\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"documentType\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Document Type</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"documentType\\\" id=\\\"documentType\\\"\\n                        [(ngModel)]=\\\"pageFilter.documentType\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of documentTypeItems\\\" [ngValue]=\\\"item.TIP_DOCUM\\\">{{ item.NOM_DOCUM }}\\n                        </option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"documentCode\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Document Code</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"documentCode\\\" id=\\\"documentCode\\\"\\n                        [(ngModel)]=\\\"pageFilter.documentCode\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"address\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Address</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" id=\\\"address\\\"\\n                        [(ngModel)]=\\\"pageFilter.address\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"homeTelNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Home Tel. No.</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"homeTelNumber\\\" id=\\\"homeTelNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.homeTelNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"businessTelNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Business Tel. No.</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"businessTelNumber\\\" id=\\\"businessTelNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.businessTelNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"mobileNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Mobile No.</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNumber\\\" id=\\\"mobileNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.mobileNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"email\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Email</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" id=\\\"email\\\"\\n                        [(ngModel)]=\\\"pageFilter.email\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"name\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Name </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"documentType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Document Type </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.documentType}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"documentCode\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-150\\\"> Document Code </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.documentCode}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"address\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-250\\\"> Address </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.address}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"homeTelNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Home Tel. No. </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.homeTelNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"businessTelNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Business Tel. No. </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.businessTelNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"mobileNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Mobile No. </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.mobileNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"email\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #clientDetailsList -->\";","export default \"<div class=\\\"row\\\" id=\\\"policyActiveList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Active Policies</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"dueDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Due Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"dueDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.dueDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"line\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Line</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"line\\\" id=\\\"line\\\"\\n                        [(ngModel)]=\\\"pageFilter.line\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"documentType\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Document Type</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"documentType\\\" id=\\\"documentType\\\"\\n                        [(ngModel)]=\\\"pageFilter.documentType\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of documentTypeItems\\\" [ngValue]=\\\"item.TIP_DOCUM\\\">{{ item.NOM_DOCUM }}\\n                        </option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"documentCode\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Document Code</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"documentCode\\\" id=\\\"documentCode\\\"\\n                        [(ngModel)]=\\\"pageFilter.documentCode\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyDueDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Due Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyDueDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"line\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.line}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"documentType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Document Type </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.documentType}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"documentCode\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-150\\\"> Document Code </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.documentCode}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #policyActiveList -->\";","export default \"<div class=\\\"row\\\" id=\\\"policyCancelledList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Cancelled Policies</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"line\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Line</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"line\\\" id=\\\"line\\\"\\n                        [(ngModel)]=\\\"pageFilter.line\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"line\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.line}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #policyCancelledList -->\";","export default \"<div class=\\\"row\\\" id=\\\"policyExpiring\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Expiring Policies</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"expiryDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Expiry Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"expiryDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.expiryDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"email\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Email</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" id=\\\"email\\\"\\n                        [(ngModel)]=\\\"pageFilter.email\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"telephoneNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Telephone Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"telephoneNumber\\\" id=\\\"telephoneNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.telephoneNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyExpiryDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Expiry Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyExpiryDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"email\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"telephoneNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Telehone Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.telephoneNumber}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #policyExpiring -->\";","export default \"<div class=\\\"row\\\" id=\\\"policyNotRenewed\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Not Renewed Policies</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"dueDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Due Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"dueDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.dueDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"line\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Line</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"line\\\" id=\\\"line\\\"\\n                        [(ngModel)]=\\\"pageFilter.line\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyDueDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Due Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyDueDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"line\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.line}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #policyNotRenewed -->\";","export default \"<div class=\\\"row\\\" id=\\\"policyProvisional\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Provisional Policies</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"dueDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Due Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"dueDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.dueDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"line\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Line</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"line\\\" id=\\\"line\\\"\\n                        [(ngModel)]=\\\"pageFilter.line\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyDueDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Due Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyDueDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"line\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.line}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #policyProvisional -->\";","export default \"<div class=\\\"row\\\" id=\\\"policyRenewed\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Renewed Policies</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"dueDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Due Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"dueDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.dueDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"documentType\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Document Type</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"documentType\\\" id=\\\"documentType\\\"\\n                        [(ngModel)]=\\\"pageFilter.documentType\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of documentTypeItems\\\" [ngValue]=\\\"item.TIP_DOCUM\\\">{{ item.NOM_DOCUM }}\\n                        </option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"documentCode\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Document Code</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"documentCode\\\" id=\\\"documentCode\\\"\\n                        [(ngModel)]=\\\"pageFilter.documentCode\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-heade class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyDueDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Due Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyDueDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"documentType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Document Type </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.documentType}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"documentCode\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-150\\\"> Document Code </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.documentCode}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #policyRenewed -->\";","export default \"<div class=\\\"row\\\" id=\\\"quotationActive\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Active Quotations</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"quotationNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Quotation Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"quotationNumber\\\" id=\\\"quotationNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.quotationNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"dueDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Due Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"dueDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.dueDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"line\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Line</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"line\\\" id=\\\"line\\\"\\n                        [(ngModel)]=\\\"pageFilter.line\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"quotationNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Quotation Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.quotationNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyDueDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Due Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyDueDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"line\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.line}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #quotationActive -->\";","export default \"<div class=\\\"row\\\" id=\\\"quotationProvisional\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Provisional Quotations</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"quotationNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Quotation Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"quotationNumber\\\" id=\\\"quotationNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.quotationNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"dueDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Due Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"dueDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.dueDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"line\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Line</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"line\\\" id=\\\"line\\\"\\n                        [(ngModel)]=\\\"pageFilter.line\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"quotationNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Quotation Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.quotationNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyDueDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Due Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyDueDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"line\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.line}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #quotationProvisional -->\";","export default \"<form [formGroup]=\\\"variableForm\\\">\\n  <div mat-dialog-content>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"header row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <h4>{{coverage}}</h4>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div *ngIf=\\\"code == '1100'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"lossAndDamageType\\\">Loss and Damage Type</label>\\n              <input type=\\\"number\\\" formControlName=\\\"lossAndDamageType\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.lossAndDamageType\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"finalRate\\\">Final Rate (%)</label>\\n              <input type=\\\"number\\\" formControlName=\\\"finalRate\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"data.cvd.finalRate\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"adjustedCommissionRate\\\">Adjusted Commission Rate (%)</label>\\n              <input type=\\\"number\\\" formControlName=\\\"adjustedCommissionRate\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.adjustedCommissionRate\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"lossRatioRate\\\">Loss Ratio Rate (%)</label>\\n              <input type=\\\"number\\\" formControlName=\\\"lossRatioRate\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.lossRatioRate\\\">\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1002'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"ownDamageTowingLimit\\\">Own Damage Towing Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"ownDamageTowingLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.ownDamageTowingLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"ownDamageRepairLimit\\\">Own Damage Repair Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"ownDamageRepairLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.ownDamageRepairLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"ownDamageSpecialDeductible\\\">Own Damage Special Deductible</label>\\n              <input type=\\\"number\\\" formControlName=\\\"ownDamageSpecialDeductible\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.ownDamageSpecialDeductible\\\">\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1003'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"theftTowingLimit\\\">Theft Towing Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"theftTowingLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.theftTowingLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"theftRepairLimit\\\">Theft Repair Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"theftRepairLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.theftRepairLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"theftSpecialDeductible\\\">Theft Special Deductible</label>\\n              <input type=\\\"number\\\" formControlName=\\\"theftSpecialDeductible\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.theftSpecialDeductible\\\">\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1007'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"uppaDiscountType\\\">UPPA Discount Type</label>\\n              <input type=\\\"number\\\" formControlName=\\\"uppaDiscountType\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.uppaDiscountType\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"uppaDiscountAmount\\\">UPPA Discount Amount</label>\\n              <input type=\\\"number\\\" formControlName=\\\"uppaDiscountAmount\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.uppaDiscountAmount\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"uppaCommissionAdjustment\\\">UPPA Commission Adjustment (%)</label>\\n              <input type=\\\"number\\\" formControlName=\\\"uppaCommissionAdjustment\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.uppaCommissionAdjustment\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"sumInsuredPerPassenger\\\">Sum Insured per Passenger</label>\\n              <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"sumInsuredPerPassenger\\\"\\n                [(ngModel)]=\\\"data.cvd.sumInsuredPerPassenger\\\">\\n                <option></option>\\n                <option *ngFor=\\\"let sumInsured of sumInsuredPerPassengerLOV\\\" [ngValue]=\\\"sumInsured.COD_VALOR\\\">\\n                  {{ sumInsured.COD_VALOR }}</option>\\n              </select>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1008'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"aonFinalRate\\\">AON Final Rate</label>\\n              <input type=\\\"number\\\" formControlName=\\\"aonFinalRate\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.aonFinalRate\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"aonTowingLimit\\\">AON Towing Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"aonTowingLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.aonTowingLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"aonRepairLimit\\\">AON Repair Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"aonRepairLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.aonRepairLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"aonSpecialDeductible\\\">AON Special Deductible</label>\\n              <input type=\\\"number\\\" formControlName=\\\"aonSpecialDeductible\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.aonSpecialDeductible\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"aonCommissionAdjustment\\\">AON Commission Adjustment (%)</label>\\n              <input type=\\\"number\\\" formControlName=\\\"aonCommissionAdjustment\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.aonCommissionAdjustment\\\">\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1020'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"srccFinalRate\\\">SRCC Final Rate</label>\\n              <input type=\\\"number\\\" formControlName=\\\"srccFinalRate\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.srccFinalRate\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"srccTowingLimit\\\">SRCC Towing Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"srccTowingLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.srccTowingLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"srccRepairLimit\\\">SRCC Repair Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"srccRepairLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.srccRepairLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"srccSpecialDeductible\\\">SRCC Special Deductible</label>\\n              <input type=\\\"number\\\" formControlName=\\\"srccSpecialDeductible\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.srccSpecialDeductible\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"srccCommissionAdjustment\\\">SRCC Commission Adjustment (%)</label>\\n              <input type=\\\"number\\\" formControlName=\\\"srccCommissionAdjustment\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.srccCommissionAdjustment\\\">\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1040'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"roadAssistDiscount\\\">Road Assist Discount</label>\\n              <input type=\\\"number\\\" formControlName=\\\"roadAssistDiscount\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.roadAssistDiscount\\\">\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1029'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"ra100Discount\\\">RA 100 Discount</label>\\n              <input type=\\\"number\\\" formControlName=\\\"ra100Discount\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.ra100Discount\\\">\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\">\\n        Cancel\\n      </button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"update()\\\">\\n        Update\\n      </button>\\n    </div>\\n  </div>\\n</form>\\n\";","export default \"<div id=\\\"coverages\\\" class=\\\"card shadow mb-3\\\">\\n  <div class=\\\"card-header\\\">\\n    <strong>Coverages</strong>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n\\n    <div class=\\\"flexitable\\\">\\n\\n      <form [formGroup]=\\\"cForm\\\">\\n        <mat-table formArrayName=\\\"coverages\\\" [dataSource]=\\\"dataSource\\\">\\n          <ng-container matColumnDef=\\\"included\\\">\\n            <mat-header-cell *matHeaderCellDef> Included </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row let rowIndex = index\\\" [formGroupName]=\\\"rowIndex\\\">\\n              <div class=\\\"form-check\\\">\\n                <input (change)=\\\"updateRow(row)\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.disabled]=\\\"!isModifiedCoverage || row.isMandatory ? '' : null\\\"\\n                  formControlName=\\\"included\\\" id=\\\"chk{{rowIndex}}\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"chk{{rowIndex}}\\\">\\n                  {{row.isMandatory ? 'Included' : 'Optional'}}\\n                </label>\\n              </div>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"coverage\\\">\\n            <mat-header-cell *matHeaderCellDef> Coverage </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row let rowIndex = index\\\" [formGroupName]=\\\"rowIndex\\\">\\n              {{row.coverage}}\\n            </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"sumInsured\\\">\\n            <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'amount-header'\\\"> Sum Insured </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row let rowIndex = index\\\" [formGroupName]=\\\"rowIndex\\\" [ngClass]=\\\"'amount'\\\">\\n              <span *ngIf=\\\"!row.isSelect\\\">{{row.sumInsured | currency: 'PHP' : 'symbol-narrow'}}</span>\\n              <select *ngIf=\\\"row.isSelect\\\" class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"sumInsured\\\"\\n                [(ngModel)]=\\\"row.sumInsured\\\"\\n                [attr.disabled]=\\\"isModifiedCoverage && row.included ? null : ''\\\" >\\n                <option *ngFor=\\\"let opt of row.options\\\" [ngValue]=\\\"opt.value\\\">{{ opt.value }}</option>\\n              </select>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"netPremium\\\">\\n            <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'amount-header'\\\"> Net Premium </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row let rowIndex = index\\\" [formGroupName]=\\\"rowIndex\\\" [ngClass]=\\\"'amount'\\\">\\n              <span>{{row.netPremium | currency: 'PHP' : 'symbol-narrow'}}</span>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"action\\\">\\n            <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\" [ngClass]=\\\"'amount'\\\">\\n              <i *ngIf=\\\"isModifiedCoverage && row.included && row.hasVariableData\\\" class=\\\"fa fa-edit\\\" (click)=\\\"editCoverage(row)\\\"></i>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [ngClass]=\\\"row.included ? 'included' : ''\\\"></mat-row>\\n\\n        </mat-table>\\n      </form>\\n    </div>\\n\\n  </div>\\n</div>\";","export default \"<form [formGroup]=\\\"tpForm\\\">\\n  <h2 mat-dialog-title>{{title}}</h2>\\n  <div mat-dialog-content>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <h5>Main Details</h5>\\n        </div>\\n\\n        <div class=\\\"col-md-4 col-sm-12\\\">\\n          <div class=\\\"form-group input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Create a</label>\\n            </div>\\n\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"policyHolderType\\\"\\n              [(ngModel)]=\\\"thirdParty.policyHolderType\\\">\\n              <option value=\\\"P\\\" selected>Person</option>\\n              <option value=\\\"C\\\">Company/Organization</option>\\n            </select>\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['documentType'].invalid \\n            && (tpForm.controls['documentType'].dirty \\n            || tpForm.controls['documentType'].touched)}\\\">\\n            <label for=\\\"documentType\\\">Document Type</label>\\n            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"documentType\\\"\\n              [(ngModel)]=\\\"thirdParty.documentType\\\">\\n              <option *ngFor=\\\"let type of TPLOV.documentTypeLOV\\\" [ngValue]=\\\"type.TIP_DOCUM\\\">{{ type.NOM_DOCUM }}\\n              </option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['documentType'].errors?.required\\\">\\n              * document type is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['documentCode'].invalid \\n            && (tpForm.controls['documentCode'].dirty \\n            || tpForm.controls['documentCode'].touched)}\\\">\\n            <label for=\\\"documentCode\\\">Document Code</label>\\n            <input type=\\\"text\\\" formControlName=\\\"documentCode\\\" class=\\\"form-control required\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n              [(ngModel)]=\\\"thirdParty.documentCode\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['documentCode'].errors?.required\\\">\\n              * document code is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"prefix\\\">Prefix</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"prefix\\\" [(ngModel)]=\\\"thirdParty.prefix\\\">\\n              <option *ngFor=\\\"let pre of TPLOV.prefixLOV\\\" [ngValue]=\\\"pre.TIP_PREFIJO_NOMBRE\\\">{{ pre.NOM_VALOR }}</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"suffix\\\">Suffix</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"suffix\\\" [(ngModel)]=\\\"thirdParty.suffix\\\">\\n              <option *ngFor=\\\"let suff of TPLOV.suffixLOV\\\" [ngValue]=\\\"suff.TIPO_SUFIJO_NOMBRE\\\">{{ suff.NOM_VALOR }}</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['firstName'].invalid \\n                && (tpForm.controls['firstName'].dirty \\n                || tpForm.controls['firstName'].touched)}\\\">\\n            <label for=\\\"suffix\\\">{{firstNameLabel}}</label>\\n            <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control required\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"thirdParty.firstName\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['firstName'].errors?.required\\\">\\n              * {{firstNameError}} is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"suffix\\\">Middle Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"middleName\\\" class=\\\"form-control\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"thirdParty.middleName\\\">\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['lastName'].invalid \\n                && (tpForm.controls['lastName'].dirty \\n                || tpForm.controls['lastName'].touched)}\\\">\\n            <label for=\\\"suffix\\\">Last Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control required\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"thirdParty.lastName\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['lastName'].errors?.required\\\">\\n              * last name is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['gender'].invalid \\n              && (tpForm.controls['gender'].dirty \\n              || tpForm.controls['gender'].touched)}\\\">\\n            <label for=\\\"gender\\\">Gender</label>\\n            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"gender\\\" [(ngModel)]=\\\"thirdParty.gender\\\" convert-to-number> \\n              <option></option>\\n              <option [ngValue]=\\\"1\\\">MALE</option>\\n              <option [ngValue]=\\\"0\\\">FEMALE</option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['gender'].errors?.required\\\">\\n              * gender is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"purchaseDate\\\">Birth Date</label>\\n            <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n              formControlName=\\\"birthDate\\\" [(ngModel)]=\\\"thirdParty.birthDate\\\" bsDatepicker>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['mobileNumber'].invalid \\n            && (tpForm.controls['mobileNumber'].dirty \\n            || tpForm.controls['mobileNumber'].touched)}\\\">\\n            <label for=\\\"suffix\\\">Mobile Number</label>\\n            <input type=\\\"text\\\" formControlName=\\\"mobileNumber\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"thirdParty.mobileNumber\\\"\\n              maxlength=\\\"12\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['mobileNumber'].errors?.required\\\">\\n              * mobile number is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-12\\\">\\n          <h5>Address</h5>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['correspondenceType'].invalid \\n                && (tpForm.controls['correspondenceType'].dirty \\n                || tpForm.controls['correspondenceType'].touched)}\\\">\\n            <label for=\\\"correspondenceType\\\">Correspondence Type</label>\\n            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"correspondenceType\\\"\\n              [(ngModel)]=\\\"thirdParty.correspondenceType\\\">\\n              <option *ngFor=\\\"let correspondenceType of TPLOV.correspondenceTypeLOV\\\"\\n                [ngValue]=\\\"correspondenceType.TIP_ETIQUETA\\\">{{ correspondenceType.NOM_VALOR }}</option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['correspondenceType'].errors?.required\\\">\\n              * correspondence type is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"gender\\\">Country</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"country\\\" [(ngModel)]=\\\"thirdParty.country\\\"\\n                (change)=\\\"getState()\\\">\\n              <option selected></option>\\n              <option *ngFor=\\\"let country of TPLOV.countryLOV\\\" [ngValue]=\\\"country.COD_PAIS\\\">{{ country.NOM_PAIS }}\\n              </option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"gender\\\">State</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"state\\\" [(ngModel)]=\\\"thirdParty.state\\\"\\n                (change)=\\\"getProvince()\\\">\\n              <option selected></option>\\n              <option *ngFor=\\\"let state of TPLOV.stateLOV\\\" [ngValue]=\\\"state.COD_ESTADO\\\">{{ state.NOM_ESTADO }}\\n              </option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"province\\\">Province</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"province\\\" [(ngModel)]=\\\"thirdParty.province\\\"\\n                (change)=\\\"getCity()\\\">\\n              <option selected></option>\\n              <option *ngFor=\\\"let province of TPLOV.provinceLOV\\\" [ngValue]=\\\"province.COD_PROV\\\">\\n                {{ province.NOM_PROV }}\\n              </option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"gender\\\">Town/City</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"city\\\" [(ngModel)]=\\\"thirdParty.city\\\"\\n                (change)=\\\"getZipCode()\\\">\\n              <option selected></option>\\n              <option *ngFor=\\\"let city of TPLOV.cityLOV\\\" [ngValue]=\\\"city.COD_LOCALIDAD\\\">\\n                {{ city.NOM_LOCALIDAD }}\\n              </option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['address'].invalid \\n            && (tpForm.controls['address'].dirty \\n            || tpForm.controls['address'].touched)}\\\">\\n            <label for=\\\"address\\\">Address</label>\\n            <textarea type=\\\"text\\\" formControlName=\\\"address\\\" class=\\\"form-control required\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" \\n              [(ngModel)]=\\\"thirdParty.address\\\"></textarea>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['address'].errors?.required\\\">\\n              * address required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"gender\\\">Zipcode</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"zipcode\\\" [(ngModel)]=\\\"thirdParty.zipcode\\\">\\n              <option *ngFor=\\\"let zipcode of TPLOV.zipcodeLOV\\\" [ngValue]=\\\"zipcode.COD_POSTAL\\\">\\n                {{ zipcode.COD_POSTAL }}\\n              </option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-8\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['email'].invalid \\n              && (tpForm.controls['email'].dirty \\n              || tpForm.controls['email'].touched)}\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control required\\\" [(ngModel)]=\\\"thirdParty.email\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['email'].errors?.required\\\">\\n              * email is required\\n            </p>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['email'].errors?.email\\\">\\n              * invalid email format\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showOrgDetails\\\" class=\\\"col-xl-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <h5>Company/Organization Data <small>(Optional)</small></h5>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgDocumentType\\\">Contact Document Type</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"orgDocumentType\\\"\\n                  [(ngModel)]=\\\"thirdParty.orgDocumentType\\\">\\n                  <option></option>\\n                  <option *ngFor=\\\"let documentType of TPLOV.documentTypeLOV\\\" [ngValue]=\\\"documentType.COD_DOCUM\\\">\\n                    {{ documentType.NOM_DOCUM }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgDocumentCode\\\">Contact Document Code</label>\\n                <input type=\\\"text\\\" formControlName=\\\"orgDocumentCode\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"thirdParty.orgDocumentCode\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgNationality\\\">Nationality</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"orgNationality\\\"\\n                  [(ngModel)]=\\\"thirdParty.orgNationality\\\">\\n                  <option></option>\\n                  <option *ngFor=\\\"let nationality of TPLOV.nationalityLOV\\\" [ngValue]=\\\"nationality.COD_PAIS\\\">\\n                    {{ nationality.NOM_PAIS }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgFirstName\\\">Contact First Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"orgFirstName\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"thirdParty.orgFirstName\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgLastName\\\">Contact Last Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"orgLastName\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"thirdParty.orgLastName\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgPost\\\">Post</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"orgPost\\\" [(ngModel)]=\\\"thirdParty.orgPost\\\">\\n                  <option></option>\\n                  <option *ngFor=\\\"let orgPost of TPLOV.orgPostLOV\\\" [ngValue]=\\\"orgPost.COD_MARCA\\\">\\n                    {{ orgPost.NOM_MARCA }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgTypeOfBusiness\\\">Type of Business</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"orgTypeOfBusiness\\\"\\n                  [(ngModel)]=\\\"thirdParty.orgTypeOfBusiness\\\">\\n                  <option></option>\\n                  <option *ngFor=\\\"let orgTypeOfBusiness of TPLOV.orgTypeOfBusinessLOV\\\"\\n                    [ngValue]=\\\"orgTypeOfBusiness.COD_MARCA\\\">\\n                    {{ orgTypeOfBusiness.NOM_MARCA }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-xl-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <h5>Natural Person Data <small>(Optional)</small></h5>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"personMaritalStatus\\\">Marital Status</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"personMaritalStatus\\\"\\n                  [(ngModel)]=\\\"thirdParty.personMaritalStatus\\\">\\n                  <option *ngFor=\\\"let personMaritalStatus of TPLOV.personMaritalStatusLOV\\\"\\n                    [ngValue]=\\\"personMaritalStatus.COD_EST_CIVIL\\\">\\n                    {{ personMaritalStatus.NOM_VALOR }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"personProfession\\\">Profession</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"personProfession\\\"\\n                  [(ngModel)]=\\\"thirdParty.personProfession\\\">\\n                  <option *ngFor=\\\"let personProfession of TPLOV.personProfessionLOV\\\"\\n                    [ngValue]=\\\"personProfession.COD_PROFESION\\\">\\n                    {{ personProfession.NOM_PROFESION }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"personOccupation\\\">Occupation</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"personOccupation\\\"\\n                  [(ngModel)]=\\\"thirdParty.personOccupation\\\">\\n                  <option *ngFor=\\\"let personOccupation of TPLOV.personOccupationLOV\\\"\\n                    [ngValue]=\\\"personOccupation.COD_PROFESION\\\">\\n                    {{ personOccupation.NOM_PROFESION }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"personNationality\\\">Nationality</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"personNationality\\\"\\n                  [(ngModel)]=\\\"thirdParty.personNationality\\\">\\n                  <option *ngFor=\\\"let nationality of TPLOV.nationalityLOV\\\" [ngValue]=\\\"nationality.COD_PAIS\\\">\\n                    {{ nationality.NOM_PAIS }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"personType\\\">Type</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"personType\\\" [(ngModel)]=\\\"thirdParty.personType\\\">\\n                  <option *ngFor=\\\"let personType of TPLOV.personTypeLOV\\\" [ngValue]=\\\"personType.TIP_NACIONALIDAD\\\">\\n                    {{ personType.NOM_VALOR }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['personLanguage'].invalid \\n                      && (tpForm.controls['personLanguage'].dirty \\n                      || tpForm.controls['personLanguage'].touched)}\\\">\\n                <label for=\\\"personLanguage\\\">Language</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"personLanguage\\\"\\n                  [(ngModel)]=\\\"thirdParty.personLanguage\\\">\\n                  <option *ngFor=\\\"let personLanguage of TPLOV.personLanguageLOV\\\" [ngValue]=\\\"personLanguage.COD_IDIOMA\\\">\\n                    {{ personLanguage.NOM_IDIOMA }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['personLanguage'].errors?.required\\\">\\n                  * language is required\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\">\\n        Cancel\\n      </button>\\n      <button [disabled]=\\\"tpForm.pristine || tpForm.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"create()\\\">\\n        Create\\n      </button>\\n    </div>\\n  </div>\\n</form>\";","export default \"<!-- Content Row -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-12 img-container d-none d-lg-block\\\">\\n    <img src=\\\"./assets/images/digital_payment.png\\\" width=\\\"100%\\\" alt=\\\"digital_payment\\\">\\n  </div>\\n\\n  <!-- Forex Exchange -->\\n  <div class=\\\"col-xl-4 col-md-12 mb-4\\\">\\n    <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row no-gutters align-items-center\\\">\\n          <div class=\\\"col mr-2\\\">\\n            <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Forex Exchange</div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\">\\n                <h5 class=\\\"all-caps\\\">\\n                  <span class=\\\"fa-stack fa-md\\\">\\n                    <i class=\\\"fa fa-circle fa-stack-2x dollar\\\"></i>\\n                    <i class=\\\"fa fa-dollar-sign fa-stack-1x fa-inverse\\\"></i>\\n                  </span>\\n                  {{forex.dollar | currency:'PHP': 'symbol-narrow'}}\\n                </h5>\\n              </div>\\n              <div class=\\\"col-6\\\">\\n                <h5 class=\\\"all-caps\\\">\\n                  <span class=\\\"fa-stack fa-md\\\">\\n                    <i class=\\\"fa fa-circle fa-stack-2x euro\\\"></i>\\n                    <i class=\\\"fa fa-euro-sign fa-stack-1x fa-inverse\\\"></i>\\n                  </span>\\n                  {{forex.euro | currency:'PHP': 'symbol-narrow'}}\\n                </h5>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row no-gutters align-items-center\\\">\\n          <div class=\\\"col mr-2\\\">\\n            <div class=\\\"text-xs font-weight-bold text-success text-uppercase mb-1\\\">Total Collected Premium\\n            </div>\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">\\n              <i *ngIf=\\\"!showData\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n              <h3 *ngIf=\\\"showData\\\">{{dashboardInfo.total | currency:'PHP': 'symbol-narrow'}}</h3>\\n            </div>\\n          </div>\\n          <div class=\\\"col-auto\\\">\\n            <i class=\\\"fas fa-coins fa-2x text-gray-300\\\"></i>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card border-left-info shadow h-100 py-2\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row no-gutters align-items-center\\\">\\n          <div class=\\\"col mr-2\\\">\\n            <div class=\\\"text-xs font-weight-bold text-info text-uppercase mb-1\\\">Active Policies</div>\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">\\n              <i *ngIf=\\\"!showData\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n              <h3 *ngIf=\\\"showData\\\">{{dashboardInfo.active}}</h3>\\n            </div>\\n          </div>\\n          <div class=\\\"col-auto\\\">\\n            <i class=\\\"fas fa-clipboard-list fa-2x text-gray-300\\\"></i>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-xl-8\\\">\\n    <div class=\\\"card shadow mb-4\\\">\\n      <div class=\\\"card-header py-3 d-flex flex-row align-items-center justify-content-between\\\">\\n        <h6 class=\\\"m-0 font-weight-bold text-primary\\\">Agent Production</h6>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <i *ngIf=\\\"!showData\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        <div *ngIf=\\\"showData\\\" style=\\\"display: block;\\\">\\n          <canvas baseChart\\n            [datasets]=\\\"barChartData\\\"\\n            [labels]=\\\"barChartLabels\\\" \\n            [options]=\\\"chartOptions\\\"\\n            [plugins]=\\\"barChartPlugins\\\"\\n            [legend]=\\\"chartLegend\\\"\\n            [chartType]=\\\"barChartType\\\"\\n            [colors]=\\\"barChartColors\\\">\\n          </canvas>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\" id=\\\"documentPrinting\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-print fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Document Printing\\n      </h4>\\n\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <form [formGroup]=\\\"documentPrintingForm\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-5 col-md-5 col-sm-12\\\">\\n              <div class=\\\"form-group input-group mb-3\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['documentType'].invalid \\n                && (documentPrintingForm.controls['documentType'].dirty \\n                || documentPrintingForm.controls['documentType'].touched)}\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Document Type</label>\\n                </div>\\n\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"documentType\\\"\\n                  [(ngModel)]=\\\"documentPrintingDetails.documentType\\\">\\n                  <option selected>\\n                    <p *ngIf=\\\"documentPrintingForm.controls['documentType'].errors?.required\\\">\\n                      Select Document Type\\n                    </p>\\n                  </option>\\n                  <option value=\\\"P\\\">Policy</option>\\n                  <option value=\\\"Q\\\">Quotation</option>\\n                  <option value=\\\"C\\\">Commission Statement</option>\\n                  <option value=\\\"S\\\">Statement of Account</option>\\n                </select>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-7 col-sm-6\\\" *ngIf=\\\"showPolicyDetails\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['policyNumber'].invalid \\n                    && (documentPrintingForm.controls['policyNumber'].dirty \\n                    || documentPrintingForm.controls['policyNumber'].touched)}\\\">\\n                <label for=\\\"policyNumber\\\">Policy Number</label>\\n                <input type=\\\"text\\\" formControlName=\\\"policyNumber\\\" class=\\\"form-control required\\\"\\n                  (change)=\\\"policyNumberOnChange()\\\"\\n                  [(ngModel)]=\\\"documentPrintingDetails.policyNumber\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['policyNumber'].errors?.required\\\">\\n                  * policy number is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-7 col-sm-6\\\" *ngIf=\\\"showQuotationDetails\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['quotationNumber'].invalid \\n                    && (documentPrintingForm.controls['quotationNumber'].dirty \\n                    || documentPrintingForm.controls['quotationNumber'].touched)}\\\">\\n                <label for=\\\"quotationNumber\\\">Quotation Number</label>\\n                <input type=\\\"text\\\" formControlName=\\\"quotationNumber\\\" class=\\\"form-control required\\\"\\n                  [(ngModel)]=\\\"documentPrintingDetails.quotationNumber\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['quotationNumber'].errors?.required\\\">\\n                  * quotation number is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-7 col-sm-6\\\" *ngIf=\\\"showCommissionStatementDetails\\\">\\n              <div *ngIf=\\\"!showCsDate\\\" class=\\\"alert alert-info note\\\">\\n                <p>No generated COMMISSION STATEMENT for the past 3 months\\n                </p>\\n              </div>\\n              <div *ngIf=\\\"showCsDate\\\" class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"alert alert-info note\\\">\\n                    <p>Print your COMMISSION STATEMENT for the past 3 months</p>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-6 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['csProcessDate'].invalid \\n                    && (documentPrintingForm.controls['csProcessDate'].dirty \\n                    || documentPrintingForm.controls['csProcessDate'].touched)}\\\">\\n                    <label for=\\\"csProcessDate\\\">Select Date</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"csProcessDate\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.csProcessDate\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let csProcessDate of csProcessDateLOV\\\" [ngValue]=\\\"csProcessDate.value\\\">\\n                        {{ csProcessDate.date }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['csProcessDate'].errors?.required\\\">\\n                      * please select a date\\n                    </p>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-6 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['csPass'].invalid \\n                    && (documentPrintingForm.controls['csPass'].dirty \\n                    || documentPrintingForm.controls['csPass'].touched)}\\\">\\n                    <label for=\\\"csPass\\\">Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"csPass\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.csPass\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['csPass'].errors?.required\\\">\\n                      * password is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-7 col-sm-6\\\" *ngIf=\\\"showSOADetails\\\">\\n              <div class=\\\"alert alert-info note\\\">\\n                <p>Print your STATEMENT OF ACCOUNT for the past 3 months</p>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['soaProcessDate'].invalid \\n                      && (documentPrintingForm.controls['soaProcessDate'].dirty \\n                      || documentPrintingForm.controls['soaProcessDate'].touched)}\\\">\\n                    <label for=\\\"soaProcessDate\\\">Select Date</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"soaProcessDate\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.soaProcessDate\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let soaProcessDate of soaProcessDateLOV\\\" [ngValue]=\\\"soaProcessDate.value\\\">\\n                        {{ soaProcessDate.name }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['soaProcessDate'].errors?.required\\\">\\n                      * please select a date\\n                    </p>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-6 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['soaPass'].invalid \\n                      && (documentPrintingForm.controls['soaPass'].dirty \\n                      || documentPrintingForm.controls['soaPass'].touched)}\\\">\\n                    <label for=\\\"soaPass\\\">Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"soaPass\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.soaPass\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['soaPass'].errors?.required\\\">\\n                      * password is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"clearfix\\\"></div>\\n\\n            <div class=\\\"dp-policy col-lg-12\\\" *ngIf=\\\"showPolicyDetails\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Policy Details</h6>\\n                </div>\\n\\n                <div class=\\\"col-md-3 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['endorsementNumber'].invalid \\n                    && (documentPrintingForm.controls['endorsementNumber'].dirty \\n                    || documentPrintingForm.controls['endorsementNumber'].touched)}\\\">\\n                    <label for=\\\"endorsementNumber\\\">Endorsement Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"endorsementNumber\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.endorsementNumber\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['endorsementNumber'].errors?.required\\\">\\n                      * endorsement number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3 col-sm-6\\\">\\n                  <div class=\\\"form-check\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"policyPPRF\\\" formControlName=\\\"policyPPRF\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.policyPPRF\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"policyPPRF\\\">\\n                      Print Policy Receipt Form (North Luzon Policy)\\n                    </label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3 col-sm-6\\\">\\n                  <div class=\\\"form-check\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"policyPAC\\\" formControlName=\\\"policyPAC\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.policyPAC\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"policyPAC\\\">\\n                      Print Agent's Copy\\n                    </label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3 col-sm-6\\\">\\n                  <div class=\\\"form-check\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"policyPV\\\" formControlName=\\\"policyPV\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.policyPV\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"policyPV\\\">\\n                      Print Voucher\\n                    </label>\\n                  </div>\\n                </div>\\n\\n              </div>\\n              <!-- .row -->\\n            </div>\\n            <!-- dp-policy col-lg-12 -->\\n\\n          </div>\\n          <!-- .row -->\\n\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button [disabled]=\\\"documentPrintingForm.pristine || documentPrintingForm.invalid\\\" type=\\\"button\\\"\\n              class=\\\"btn btn-primary\\\" (click)=\\\"print(documentPrintingDetails)\\\">Print</button>\\n          </div>\\n          <!-- .btn-group -->\\n\\n        </form>\\n\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #documentPrinting -->\";","export default \"<div class=\\\"row\\\" id=\\\"faq\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-question fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Frequently Asked Questions\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"col-md-12\\\">\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;How do I fill-out my Official Receipt based on the\\n                  disbursement statement?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;Sample Disbursement Statement - TWB</h5>\\n                <img src=\\\"./assets/images/faq/sample-ds.png\\\" alt=\\\"disbursement-statement TWB\\\" />\\n                <br />\\n                <br />\\n                <h5>Sample Disbursement Statement - NIIS</h5>\\n                <img src=\\\"./assets/images/faq/sample-cpr.png\\\" alt=\\\"disbursement-statement NIIS\\\" />\\n                <br />\\n                <br />\\n                <h5>Sample BIR Official Receipt</h5>\\n                <img src=\\\"./assets/images/faq/sample-or.png\\\" alt=\\\"disbursement-statement BIR-OR\\\" />\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;How would I know if my Official Receipt is valid?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;Validity period of Official Receipt is <strong>five (5)\\n                    years</strong> only. e.g. If the Official\\n                  Receipt is printed\\n                  on July 12, 2019, Official Receipt is still acceptable until July 11, 2024.</p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;Where can I submit my Official Receipts?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;You may submit your Official Receipts to <strong>any\\n                    MAPFRE Insurance Sales Office</strong> near you.\\n                </p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;What are the cut-offs and schedules I need to remember?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <span class=\\\"qa-label\\\">A.</span>\\n                <ol>\\n                  <li>All Official Receipts in exchange of commission received from previous month shall be\\n                    submitted to Head Office c/o Commission personnel on or before 1st Monday of the following month.\\n                  </li>\\n                  <li>In the event that Official Receipt was not submitted during the 1st week, agent should\\n                    submit the pending Official Receipt before Monday of the following week.</li>\\n                  <li>Transfer of Commission to agent's ATM account is every Wednesday and Thursday</li>\\n                  <li>Disbursement Statement will be sent to agent's registered email every Wednesday and Friday\\n                    by senders noreply@mapfreinsurance.com.ph; treasuryho@mapfreinsurance.com.ph</li>\\n                  <li>Commission to be released is based on the premiums posted as fully paid in the system from\\n                    Tuesday (prior week) up to Monday (current week).</li>\\n                </ol>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;How will I be able to receive my commissions for my paid\\n                  accounts?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;Commissions for licensed individuals shall only be paid\\n                  via transfer to their registered BPI account\\n                  number.</p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;What if I don't have BPI account? Are there other banks\\n                  available?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;<strong>None</strong>, but MAPFRE can endorse you to open\\n                  a BPI account without maintaining balance\\n                  provided you have regular\\n                  commission being credited to your account. If after six months and no amount has been credited, the\\n                  bank\\n                  shall\\n                  change it to regular account with required ADB. Other terms and conditions are indicated in the BPI\\n                  endorsement form.</p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;If I have existing BPI account, can I use it?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;<strong>Yes</strong>, all BPI accounts (current or\\n                  savings) except for BPI Family Savings</p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;What are the requirements in order to receive my commissions\\n                  regularly?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;Aside from having a valid license and duly submitted MOA\\n                  (Memorandum of Agreement), you must submit\\n                  your\\n                  <strong>valid BIR Official Receipts (OR)</strong> on or before the due date which is indicated in the\\n                  email advice sent by\\n                  MAPFRE to your registered email address. You may issue Official Receipt based on the statement\\n                  received\\n                  weekly\\n                  or for the total amount received in a month provided that issue date is within the month commission\\n                  was\\n                  released. Ensure that you sign the OR on the space provided for signature every time you issue the OR.\\n                </p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;Where can I send my queries or concerns with regards to my\\n                  commission?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;You may email your concerns or queries to\\n                  <strong>DCU@mapfreinsurance.com.ph</strong>\\n                  or <strong>mrbdagsa@mapfreinsurance.com.ph</strong></p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;What are the possible causes of a negative amount reflected on\\n                  my disbursement statement</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;Aside from the the deductions found in the column\\n                  <strong>advance disbursement</strong>, which\\n                  represent the\\n                  discounts/commission given to clients by the agent. There will be a negative effect on your\\n                  commission if there is:</p>\\n                <ul>\\n                  <li>returned check/bounced check</li>\\n                  <li>cancellation endorsement</li>\\n                </ul>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n        </div>\\n        <!-- .col-md-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #faq -->\\n\";","export default \"<div id=\\\"coverageBreakdown\\\" class=\\\"card shadow mb-3\\\">\\n  <div class=\\\"card-header\\\">\\n    <strong>Coverage Breakdown</strong>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"flexitable\\\">\\n          <table mat-table [dataSource]=\\\"coverageData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n            <ng-container matColumnDef=\\\"label\\\">\\n              <th mat-header-cell *matHeaderCellDef>Coverage</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.label\\\"></td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"sumInsured\\\">\\n              <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Sum Insured</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                {{element.showDetails ? element.details : element.sumInsured | currency: element.currency: 'symbol-narrow'}}\\n              </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n          </table>\\n        </div>\\n      </div>\\n      <!-- .col-xl-12 -->\\n    </div>\\n    <!-- .row -->\\n  </div>\\n  <!-- .card-body -->\\n</div>\\n<!-- #coverageBreakdown -->\";","export default \"<footer class=\\\"sticky-footer\\\">\\n  <div class=\\\"my-auto\\\">\\n    <div class=\\\"copyright my-auto\\\">\\n      <div class=\\\"col-lg-12 footer-wrapper\\\">\\n        <img class=\\\"footer-logo\\\" src=\\\"./assets/images/mivo-logo/mi_logo.png\\\">\\n        <p><strong>MAPFRE Insurance Corporation</strong></p>\\n        <p>MAPFRE Insurance Corporate Center</p>\\n        <p>Acacia Ave., Madrigal Business Park, Ayala Alabang, Muntinlupa City</p>\\n        <p>VAT REG TIN 000-491-771-00000</p>\\n        <p>Tel: (632) 8876-4444 ; Fax: (632) 8876-4344</p>\\n        <p><a>www.mapfre.com.ph</a></p>\\n        <p>{{version}}</p>\\n      </div>\\n    </div>\\n  </div>\\n</footer>\\n\";","export default \"<div class=\\\"card shadow mb-3\\\">\\n  <div class=\\\"card-header\\\">\\n    <strong>Group Policy Information</strong>\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"gpForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n          <h6>Group Policy</h6>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': gpForm.controls['groupPolicy'].invalid \\n            && (gpForm.controls['groupPolicy'].dirty \\n            || gpForm.controls['groupPolicy'].touched)}\\\">\\n            <label for=\\\"groupPolicy\\\">Group Policy</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"groupPolicy\\\"\\n              [attr.disabled]=\\\"editMode && GPLOV.groupPolicyLOV?.length ? null : true\\\" [(ngModel)]=\\\"groupPolicy.groupPolicy\\\"\\n              (change)=\\\"groupPolicyOnChange(); affecting('groupPolicy', 'Group Policy')\\\">\\n              <option></option>\\n              <option *ngFor=\\\"let groupPolicy of GPLOV.groupPolicyLOV\\\" [ngValue]=\\\"groupPolicy.NUM_POLIZA\\\">\\n                {{ groupPolicy.NOM_POLIZA }}</option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"gpForm.controls['groupPolicy'].errors?.required\\\">\\n              * group policy is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': gpForm.controls['contract'].invalid \\n            && (gpForm.controls['contract'].dirty \\n            || gpForm.controls['contract'].touched)}\\\">\\n            <label for=\\\"contract\\\">Contract</label>\\n            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"contract\\\"\\n              (change)=\\\"contractOnChange(); affecting('contract', 'Contract')\\\"\\n              [(ngModel)]=\\\"groupPolicy.contract\\\"\\n              [attr.disabled]=\\\"editMode && groupPolicy.groupPolicy ? null : true\\\">\\n              <option></option>\\n              <option *ngFor=\\\"let contract of GPLOV.contractLOV\\\" [ngValue]=\\\"contract.NUM_CONTRATO\\\">\\n                {{ contract.NOM_CONTRATO }}\\n              </option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"gpForm.controls['contract'].errors?.required\\\">\\n              * contract is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': gpForm.controls['subContract'].invalid \\n            && (gpForm.controls['subContract'].dirty \\n            || gpForm.controls['subContract'].touched)}\\\">\\n            <label for=\\\"subContract\\\">Sub Contract</label>\\n            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subContract\\\"\\n              (change)=\\\"affecting('subContract', 'Sub Contract')\\\"\\n              [(ngModel)]=\\\"groupPolicy.subContract\\\"\\n              [attr.disabled]=\\\"editMode && groupPolicy.groupPolicy && groupPolicy.contract ? null : true\\\">\\n              <option></option>\\n              <option *ngFor=\\\"let subContract of GPLOV.subContractLOV\\\" [ngValue]=\\\"subContract.NUM_SUBCONTRATO\\\">\\n                {{ subContract.NOM_SUBCONTRATO }}</option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"gpForm.controls['subContract'].errors?.required\\\">\\n              * sub contract is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': gpForm.controls['commercialStructure'].invalid \\n            && (gpForm.controls['commercialStructure'].dirty \\n            || gpForm.controls['commercialStructure'].touched)}\\\">\\n            <label for=\\\"commercialStructure\\\">Commercial Structure</label>\\n            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"commercialStructure\\\"\\n              [(ngModel)]=\\\"groupPolicy.commercialStructure\\\"\\n              [attr.disabled]=\\\"editMode && GPLOV.commercialStructureLOV?.length ? null : true\\\">\\n              <option></option>\\n              <option *ngFor=\\\"let commercialStructure of GPLOV.commercialStructureLOV\\\"\\n                [ngValue]=\\\"commercialStructure.COD_NIVEL3\\\">{{ commercialStructure.NOM_NIVEL3 }}</option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"gpForm.controls['commercialStructure'].errors?.required\\\">\\n              * commercial structure is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': gpForm.controls['agentCode'].invalid \\n            && (gpForm.controls['agentCode'].dirty \\n            || gpForm.controls['agentCode'].touched)}\\\">\\n            <label for=\\\"agentCode\\\">Agent Code</label>\\n            <input type=\\\"number\\\" formControlName=\\\"agentCode\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"groupPolicy.agentCode\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"gpForm.controls['agentCode'].errors?.required\\\">\\n              * agent code is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showExpiring\\\" class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': gpForm.controls['expiringPolicyNumber'].invalid \\n            && (gpForm.controls['expiringPolicyNumber'].dirty \\n            || gpForm.controls['expiringPolicyNumber'].touched)}\\\">\\n            <div class=\\\"form-check\\\">\\n              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbIsRenewal\\\" formControlName=\\\"cbIsRenewal\\\"\\n                [(ngModel)]=\\\"groupPolicy.cbIsRenewal\\\"\\n                [attr.disabled]=\\\"editMode ? null : true\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"cbIsRenewal\\\">\\n                Renewal\\n              </label>\\n            </div>\\n            <label class=\\\"form-check-label\\\" for=\\\"cbIsRenewal\\\">\\n              Expiring Policy Number\\n            </label>\\n            <input type=\\\"text\\\" formControlName=\\\"expiringPolicyNumber\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"groupPolicy.expiringPolicyNumber\\\"\\n              [attr.disabled]=\\\"editMode && groupPolicy.cbIsRenewal ? null : ''\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"gpForm.controls['expiringPolicyNumber'].errors?.required\\\">\\n              * expiring policy number is required\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\";","export default \"<nav class=\\\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\\\">\\n\\n  <!-- Sidebar Toggle (Topbar) -->\\n  <button id=\\\"sidebarToggleTop\\\" class=\\\"btn btn-link d-md-none rounded-circle mr-3\\\">\\n    <i class=\\\"fa fa-bars\\\"></i>\\n  </button>\\n\\n  <div class=\\\"header-name\\\">\\n    <i class=\\\"text-muted\\\">\\n      Bienvenida,\\n    </i>\\n    <h5 class=\\\"all-caps\\\">\\n      {{currentUser.fullName}}\\n    </h5>\\n  </div>\\n\\n  <!-- Topbar Navbar -->\\n  <ul class=\\\"navbar-nav ml-auto\\\">\\n\\n    <!-- Nav Item - Search Dropdown (Visible Only XS) d-sm-none -->\\n    <div class=\\\"topbar-divider d-none d-sm-block\\\"></div>\\n\\n    <!-- Nav Item - User Information -->\\n    <li class=\\\"nav-item dropdown no-arrow\\\">\\n      <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"userDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\"\\n        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        <!-- <span class=\\\"mr-2 d-none d-lg-inline text-gray-600 all-caps\\\">{{currentUser.fullName}}</span> -->\\n        <i class=\\\"fas fa-user-circle fa-2x fa-fw mr-2 text-gray-400\\\"></i>\\n      </a>\\n      <!-- Dropdown - User Information -->\\n      <div class=\\\"dropdown-menu dropdown-menu-right shadow animated--grow-in\\\" aria-labelledby=\\\"userDropdown\\\">\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"setPage(p.UTI.CHA)\\\">\\n          <i class=\\\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\\\"></i>\\n          Profile\\n        </a>\\n        <div *ngIf=\\\"canChooseAgent\\\" class=\\\"dropdown-divider\\\"></div>\\n        <a *ngIf=\\\"canChooseAgent\\\" class=\\\"dropdown-item\\\" (click)=\\\"chooseAgent()\\\">\\n          <i class=\\\"fas fa-user-circle fa-sm fa-fw mr-2 text-gray-400\\\"></i>\\n          Choose agent\\n        </a>\\n        <div class=\\\"dropdown-divider\\\"></div>\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\" data-toggle=\\\"modal\\\" data-target=\\\"#logoutModal\\\">\\n          <i class=\\\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\\\"></i>\\n          Logout\\n        </a>\\n      </div>\\n    </li>\\n\\n  </ul>\\n\\n</nav>\";","export default \"<div id=\\\"termsAndCondition\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"wrap\\\">\\n            <div class=\\\"row\\\">\\n\\n              <div class=\\\"col-lg-4 menu\\\">\\n                <a class=\\\"brand-logo\\\" (click)=\\\"redirect()\\\">\\n                  <img src=\\\"./assets/images/mivo-logo/mivo-logo-light.png\\\" alt=\\\"brand-logo\\\" />\\n                </a>\\n\\n                <ul class=\\\"health-menu\\\">\\n                  <li class=\\\"{{backendConfigList.database ? 'live' : ''}}\\\">\\n                    DATABASE\\n                  </li>\\n                  <li>\\n                    PRINTING\\n                  </li>\\n                </ul>\\n              </div>\\n              <!-- .col-lg-4 -->\\n\\n              <div class=\\\"col-lg-8 details\\\">\\n\\n                <div class=\\\"scroll\\\">\\n                  <div class=\\\"scroll-wrapper\\\">\\n                    <h2>\\n                      CONFIGURATIONS\\n                    </h2>\\n\\n                    <div class=\\\"top-20\\\">\\n                      <h5>\\n                        FRONT END\\n                      </h5>\\n                      <div>\\n                        <ul>\\n                          <li>\\n                            Build Number: <strong>{{version}}</strong>\\n                          </li>\\n                          <li>\\n                            API URL: <strong>{{apiUrl}}</strong>\\n                          </li>\\n                          <li>\\n                            Image URL: <strong>{{imgUrl}}</strong>\\n                          </li>\\n                          <li>\\n                            Production: <strong>{{production}}</strong>\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"top-20\\\">\\n                      <h5>\\n                        BACKEND\\n                      </h5>\\n                      <div>\\n                        <ul>\\n                          <li>\\n                            Version: <strong>{{backendConfigList.version}}</strong>\\n                          </li>\\n                          <li>\\n                            Database URL: <strong>{{backendConfigList.dbUrl}}</strong>\\n                          </li>\\n                          <li>\\n                            COCAF Register URL: <strong>{{backendConfigList.cocafRegisterUrl}}</strong>\\n                          </li>\\n                          <li>\\n                            COCAF Verify URL: <strong>{{backendConfigList.cocafVerifyUrl}}</strong>\\n                          </li>\\n                          <li>\\n                            BPM Policy Central URL: <strong>{{backendConfigList.policyCentralUrl}}</strong>\\n                          </li>\\n                          <li>\\n                            BPM Tech Control URL: <strong>{{backendConfigList.techControlUrl}}</strong>\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n                <!-- .scroll -->\\n\\n              </div>\\n              <!-- .col-lg-8 -->\\n\\n            </div>\\n            <!-- .row -->\\n          </div>\\n          <!-- .wrap -->\\n        </div>\\n        <!-- .container -->\\n      </div>\\n      <!-- .col-lg-12 -->\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n    <!-- .row -->\\n  </div>\\n  <!-- .container-fluid -->\\n</div>\\n<!-- #termsAndCondition -->\";","export default \"<div class=\\\"card shadow mb-3\\\">\\n  <div class=\\\"card-header\\\">\\n    <strong>Individual Policy</strong>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    \\n    <form [formGroup]=\\\"loadForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Quotation Number</label>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Quotation Number here..\\\"\\n            formControlName=\\\"quotationNumber\\\" [(ngModel)]=\\\"details.quotationNumber\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button [disabled]=\\\"disableLoadBtn\\\" class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\">Load</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </form>\\n\\n  </div>\\n</div>\\n\";","export default \"<div id=\\\"login\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-8 d-none d-lg-block login-panel left-container\\\">\\n        <div class=\\\"wrap-banner\\\"></div>\\n      </div>\\n      <div class=\\\"col-lg-4 login-panel right-container\\\">\\n        <div class=\\\"wrap-login\\\">\\n\\n          <img class=\\\"login-logo\\\" src=\\\"./assets/images/mivo-logo/mivo-logo.png\\\" alt=\\\"mivo-logo\\\">\\n\\n          <form class=\\\"login-form\\\" [formGroup]=\\\"loginForm\\\">\\n            <span class=\\\"login-form-title\\\">\\n              <strong class=\\\"d-none d-lg-block\\\">LOGIN</strong>\\n              <strong class=\\\"d-block d-lg-none\\\">MIVO LOGIN</strong>\\n            </span>\\n            <span class=\\\"login-version text-muted\\\">{{version}}</span>\\n\\n            <div *ngIf=\\\"alert\\\" class=\\\"alert alert-danger\\\">{{message}}</div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': loginForm.controls['username'].invalid \\n            && (loginForm.controls['username'].dirty \\n            || loginForm.controls['username'].touched)}\\\">\\n              <input class=\\\"form-control\\\" formControlName=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\">\\n              <p class=\\\"form-error\\\" *ngIf=\\\"loginForm.controls['username'].errors?.required\\\">\\n                * username is required\\n              </p>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': loginForm.controls['password'].invalid \\n            && (loginForm.controls['password'].dirty \\n            || loginForm.controls['password'].touched)}\\\">\\n              <input class=\\\"form-control\\\" formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\"\\n                placeholder=\\\"Password\\\">\\n              <p class=\\\"form-error\\\" *ngIf=\\\"loginForm.controls['password'].errors?.required\\\">\\n                * password is required\\n              </p>\\n            </div>\\n\\n            <div class=\\\"container-login-form-btn\\\">\\n              <button [disabled]=\\\"(loginForm.pristine || loginForm.invalid)\\\"\\n                class=\\\"login-btn btn btn-primary form-control\\\" (click)=\\\"onSubmit()\\\">\\n                Login\\n              </button>\\n            </div>\\n\\n            <br />\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6 col-sm-6\\\">\\n                <div class=\\\"contact-form-checkbox\\\">\\n                  <input type=\\\"checkbox\\\" id=\\\"rememberMe\\\" class=\\\"input-checkbox\\\" formControlName=\\\"rememberMe\\\"\\n                    name=\\\"rememberMe\\\">\\n                  <label class=\\\"label-checkbox\\\" for=\\\"rememberMe\\\">\\n                    Remember me\\n                  </label>\\n                </div>\\n              </div>\\n              <div class=\\\"col-6 col-sm-6\\\">\\n                <!-- <div class=\\\"text-right\\\">\\n                  <a class=\\\"f-password\\\" href=\\\"#\\\">\\n                    Forgot Password?\\n                  </a>\\n                </div> -->\\n              </div>\\n            </div>\\n          </form>\\n\\n        </div>\\n        <div class=\\\"login-footer\\\">\\n          <ul>\\n            <!-- <li>About</li>\\n            <li>Privacy</li>\\n            <li><a href=\\\"/terms-and-condition\\\">Terms and Condition</a></li> -->\\n          </ul>\\n        </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"container-fluid\\\">\\n\\n  <!-- 404 Error Text -->\\n  <div class=\\\"text-center\\\">\\n    <div class=\\\"error mx-auto\\\" data-text=\\\"404\\\">404</div>\\n    <p class=\\\"lead text-gray-800 mb-5\\\">Page Not Found</p>\\n    <p class=\\\"text-gray-500 mb-0\\\">It looks like you found a glitch in the matrix...</p>\\n    <a href=\\\"/\\\">&larr; Back to Dashboard</a>\\n  </div>\\n\\n</div>\\n\";","export default \"<div class=\\\"modal-header {{className}}\\\">\\n  <h4 class=\\\"all-caps\\\">\\n    <span class=\\\"fa-stack fa-md\\\">\\n      <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n      <i class=\\\"fa {{icon}} fa-stack-1x fa-inverse\\\"></i>\\n    </span>\\n    {{title}} \\n  </h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n  <div class=\\\"row\\\">\\n    <div *ngIf=\\\"!isHtml\\\" class=\\\"col-12\\\">\\n      {{message}}\\n    </div>\\n    <div *ngIf=\\\"isHtml\\\" class=\\\"col-12\\\">\\n      <p *ngFor=\\\"let item of items\\\">\\n        {{item}}\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <div *ngIf=\\\"isConfirm\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"confirm()\\\">Confirm</button>\\n  </div>\\n\\n  <div *ngIf=\\\"isOkay\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"okay()\\\">Okay</button>\\n  </div>\\n\\n  <div *ngIf=\\\"isClose\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-{{btnClass}}\\\" (click)=\\\"close()\\\">Close</button>\\n  </div>\\n\\n  <div *ngIf=\\\"isCancel\\\">\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\" id=\\\"outstandingBills\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Outstanding Bills</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n            <div class=\\\"card-body row\\\">\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                  <div class=\\\"col-md-12 col-lg-8\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                  <div class=\\\"col-md-12 col-lg-8\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Currency</label>\\n                  <div class=\\\"col-md-12 col-lg-8\\\">\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" id=\\\"inlineFormCustomSelect\\\">\\n                      <option selected></option>\\n                      <option value=\\\"1\\\">One</option>\\n                    </select>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Invoice Number</label>\\n                  <div class=\\\"col-md-12 col-lg-8\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Receipt Amount</label>\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"from\\\">\\n                  </div>\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"to\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Commission Amount</label>\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"from\\\">\\n                  </div>\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"to\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Withholding Tax</label>\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"from\\\">\\n                  </div>\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"to\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                  <div class=\\\"col-md-12 col-lg-8\\\">\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" id=\\\"inlineFormCustomSelect\\\">\\n                      <option selected></option>\\n                      <option value=\\\"1\\\">One</option>\\n                    </select>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"btn-group\\\">\\n                  <button class=\\\"btn btn-primary\\\">Apply</button>\\n                  <button class=\\\"btn btn-info\\\">Reset</button>\\n                </div>\\n              </div>\\n\\n        </div>\\n\\n        <div class=\\\"divider\\\"></div>\\n\\n        <div class=\\\"flexitable\\\">\\n\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n            <!-- Position Column -->\\n            <ng-container matColumnDef=\\\"policyHolder\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Holder </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"policyNumber\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n            </ng-container>\\n\\n            <!-- Weight Column -->\\n            <ng-container matColumnDef=\\\"currency\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.currency}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"invoiceNumber\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Invoice Number </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceNumber}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"receiptAmount\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Receipt Amount </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.receiptAmount}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"commissionAmount\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Commission Amount </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.commissionAmount}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"withholdingTax\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Withholding Tax </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.withholdingTax}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"source\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n          </table>\\n        </div>\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n\\n        <div class=\\\"btn-group-table\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">View Details</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Pay</button>\\n        </div>\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #outstandingBills -->\\n\";","export default \"<div mat-dialog-content>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <h6>{{isPostPolicy ? 'Policy' : 'Quotation'}} Number</h6>\\n        <h4>{{number}}</h4>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <h6>Product</h6>\\n        <h4>{{product}}</h4>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <h6>Payment Plan</h6>\\n        <h4>{{payment}}</h4>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div id=\\\"paymentBreakdown\\\" *ngFor=\\\"let payment of payments; let i = index\\\">\\n    <div class=\\\"flexitable\\\">\\n      <table mat-table [dataSource]=\\\"payment.dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"effectivityDate\\\">\\n          <th mat-header-cell *matHeaderCellDef> Receipt Effectivity Date </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.effectivityDate}} </td>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"dueDate\\\">\\n          <th mat-header-cell *matHeaderCellDef> Receipt Due Date </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dueDate}} </td>\\n        </ng-container>\\n\\n        <!-- Weight Column -->\\n        <ng-container matColumnDef=\\\"premium\\\">\\n          <th mat-header-cell *matHeaderCellDef> Premium </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.premium | currency: payment.currencyCode : 'symbol-narrow'}} </td>\\n        </ng-container>\\n\\n        <!-- Symbol Column -->\\n        <ng-container matColumnDef=\\\"netPremium\\\">\\n          <th mat-header-cell *matHeaderCellDef> Net Premium </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.netPremium | currency: payment.currencyCode : 'symbol-narrow'}}\\n          </td>\\n        </ng-container>\\n\\n        <!-- Symbol Column -->\\n        <ng-container matColumnDef=\\\"tax\\\">\\n          <th mat-header-cell *matHeaderCellDef> Tax </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.tax | currency: payment.currencyCode : 'symbol-narrow'}} </td>\\n        </ng-container>\\n\\n        <!-- Symbol Column -->\\n        <ng-container matColumnDef=\\\"commission\\\">\\n          <th mat-header-cell *matHeaderCellDef> Commission </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.commission | currency: payment.currencyCode : 'symbol-narrow'}}\\n          </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"payment.displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: payment.displayedColumns;\\\"></tr>\\n      </table>\\n    </div>\\n\\n    <label class=\\\"show-more\\\" (click)=\\\"toggle(i)\\\">\\n      {{payment.toggleLabel}} <i\\n        [ngClass]=\\\"payment.animationState=='out' ? 'fa fa-angle-double-down' : 'fa fa-angle-double-up'\\\"></i>\\n    </label>\\n\\n    <div [@slideInOut]=\\\"payment.animationState\\\" class=\\\"container-fluid breakdown\\\">\\n\\n      <div *ngIf=\\\"payment.showExchangeRate\\\" class=\\\"alert alert-info note\\\">\\n        Exchange rate: <strong>PHP to {{payment.currencyCode}} is\\n          {{payment.exchangeRate | currency: 'PHP' : 'symbol-narrow'}}</strong>\\n      </div>\\n\\n      <div *ngFor=\\\"let item of payment.paymentBreakdown;\\\" class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-4{{item.abrEco == 'TOTLP' ? ' emphasize' : ''}}\\\">\\n          {{item.nomEco}}\\n        </div>\\n        <div class=\\\"col-4 right{{item.abrEco == 'TOTLP' ? ' emphasize' : ''}}\\\">\\n          {{item.impEco | currency: payment.currencyCode : 'symbol-narrow'}}\\n        </div>\\n        <div class=\\\"clearfix divider\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\\n<div mat-dialog-actions align=\\\"end\\\">\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"close(false)\\\">\\n      Close\\n    </button>\\n    <button *ngIf=\\\"isPostPolicy\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"printPolicy()\\\">\\n      Print Policy\\n    </button>\\n    <button *ngIf=\\\"!isPostPolicy\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"printQuote()\\\">\\n      Print Quote\\n    </button>\\n    <button *ngIf=\\\"!isPostPolicy\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceedToIssuance(line)\\\">\\n      Proceed to Issuance\\n    </button>\\n  </div>\\n</div>\";","export default \"<div id=\\\"paymentBreakdown\\\" class=\\\"card shadow mb-3\\\">\\n  <div class=\\\"card-header\\\">\\n    <strong>Payment Breakdown</strong>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div *ngFor=\\\"let payment of payments; let i = index\\\">\\n      <div class=\\\"flexitable\\\">\\n        <table mat-table [dataSource]=\\\"payment.dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n          <!-- Position Column -->\\n          <ng-container matColumnDef=\\\"effectivityDate\\\">\\n            <th mat-header-cell *matHeaderCellDef> Receipt Effectivity Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.effectivityDate}} </td>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"dueDate\\\">\\n            <th mat-header-cell *matHeaderCellDef> Receipt Due Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dueDate}} </td>\\n          </ng-container>\\n\\n          <!-- Weight Column -->\\n          <ng-container matColumnDef=\\\"premium\\\">\\n            <th mat-header-cell *matHeaderCellDef> Premium </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.premium | currency: payment.currencyCode : 'symbol-narrow'}} </td>\\n          </ng-container>\\n\\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"netPremium\\\">\\n            <th mat-header-cell *matHeaderCellDef> Net Premium </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.netPremium | currency: payment.currencyCode : 'symbol-narrow'}}\\n            </td>\\n          </ng-container>\\n\\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"tax\\\">\\n            <th mat-header-cell *matHeaderCellDef> Tax </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.tax | currency: payment.currencyCode : 'symbol-narrow'}} </td>\\n          </ng-container>\\n\\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"commission\\\">\\n            <th mat-header-cell *matHeaderCellDef> Commission </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.commission | currency: payment.currencyCode : 'symbol-narrow'}}\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"payment.displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: payment.displayedColumns;\\\"></tr>\\n        </table>\\n      </div>\\n\\n      <label class=\\\"show-more\\\" (click)=\\\"toggle(i)\\\">\\n        {{payment.toggleLabel}} <i [ngClass]=\\\"payment.animationState=='out' ? 'fa fa-angle-double-down' : 'fa fa-angle-double-up'\\\"></i>\\n      </label>\\n\\n      <div [@slideInOut]=\\\"payment.animationState\\\" class=\\\"container-fluid breakdown\\\">\\n\\n        <div *ngIf=\\\"payment.showExchangeRate\\\" class=\\\"alert alert-info note\\\">\\n          Exchange rate: <strong>PHP to {{payment.currencyCode}} is\\n            {{payment.exchangeRate | currency: 'PHP' : 'symbol-narrow'}}</strong>\\n        </div>\\n\\n        <div *ngFor=\\\"let item of payment.paymentBreakdown;\\\" class=\\\"row justify-content-center\\\">\\n          <div class=\\\"col-4{{item.abrEco == 'TOTLP' ? ' emphasize' : ''}}\\\">\\n            {{item.nomEco}}\\n          </div>\\n          <div class=\\\"col-4 right{{item.abrEco == 'TOTLP' ? ' emphasize' : ''}}\\\">\\n            {{item.impEco | currency: payment.currencyCode : 'symbol-narrow'}}\\n          </div>\\n          <div class=\\\"clearfix divider\\\"></div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\";","export default \"<div class=\\\"card shadow mb-3\\\" id=\\\"{{type}}_panel\\\">\\n  <div *ngIf=\\\"!optional\\\" class=\\\"card-header\\\">\\n    <strong>{{title}}</strong>\\n  </div>\\n  <div *ngIf=\\\"optional\\\" class=\\\"card-header d-flex justify-content-between optional\\\" (click)=\\\"showContent = !showContent\\\"\\n    matTooltip=\\\"click to show/hide alternative policy holder\\\">\\n    <strong>{{title}}</strong>\\n    <div class=\\\"dropdown no-arrow\\\">\\n      <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n    </div>\\n  </div>\\n  <div class=\\\"card-body\\\" *ngIf=\\\"showContent\\\">\\n    <form [formGroup]=\\\"phForm\\\">\\n      <!-- for quotation -->\\n      <div class=\\\"row\\\" *ngIf=\\\"!isIssuance\\\">\\n        <div class=\\\"col-xl-12\\\">\\n          <h6>Policy Holder</h6>\\n        </div>\\n\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': phForm.controls['name'].invalid \\n                  && (phForm.controls['name'].dirty \\n                  || phForm.controls['name'].touched)}\\\">\\n            <label for=\\\"name\\\">Client's Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control required\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"policyHolder.firstName\\\"\\n              [attr.disabled]=\\\"editMode ? null : true\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"phForm.controls['name'].errors?.required\\\">\\n              * client's name is required\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- for issuance -->\\n      <div class=\\\"row\\\" *ngIf=\\\"isIssuance\\\">\\n        <div class=\\\"col-xl-12\\\">\\n          <h6>Policy Holder</h6>\\n        </div>\\n\\n        <div class=\\\"col-xl-12\\\">\\n          <div class=\\\"alert alert-info note\\\">\\n            <p><strong>Important Reminder:</strong> Click <strong>create</strong> button to create a new policy holder\\n              or click <strong>browse</strong> button to\\n              search an existing policy holder. Document code and type will be automatically filled once you select or\\n              create a policy holder.\\n            </p>\\n          </div>\\n          <!-- .note -->\\n        </div>\\n\\n        <div *ngIf=\\\"optional\\\" class=\\\"col-xl-12\\\">\\n          <div class=\\\"row\\\">\\n            <div *ngIf=\\\"showPrefix\\\" class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"secondaryPolicyHolderPrefix\\\">Prefix (Optional)</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"secondaryPolicyHolderPrefix\\\"\\n                  [(ngModel)]=\\\"details.secondaryPolicyHolderPrefix\\\"\\n                  [attr.disabled]=\\\"editMode ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let prefix of prefixLOV\\\" [ngValue]=\\\"prefix.TIP_ASEG_PREF\\\">{{ prefix.NOM_VALOR }}</option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"secondaryPolicyHolderSeparator\\\">Separator</label>\\n                <select class=\\\"custom-select mr-sm-2 {{policyHolder.documentType != undefined && policyHolder.documentType != '' ? 'required' : ''}}\\\"\\n                  formControlName=\\\"secondaryPolicyHolderSeparator\\\"\\n                  [(ngModel)]=\\\"details.secondaryPolicyHolderSeparator\\\"\\n                  [attr.disabled]=\\\"editMode ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let separator of separatorLOV\\\" [ngValue]=\\\"separator.NOM_VALOR\\\">{{ separator.NOM_VALOR }}</option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': phForm.controls['documentType'].invalid \\n                  && (phForm.controls['documentType'].dirty \\n                  || phForm.controls['documentType'].touched)}\\\">\\n            <label for=\\\"documentType\\\">Document Type</label>\\n            <input type=\\\"text\\\" formControlName=\\\"documentType\\\" class=\\\"form-control required {{optional ? '': 'readonly'}}\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"policyHolder.documentType\\\" readonly>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"phForm.controls['documentType'].errors?.required\\\">\\n              * document type is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': phForm.controls['documentCode'].invalid \\n                  && (phForm.controls['documentCode'].dirty \\n                  || phForm.controls['documentCode'].touched)}\\\">\\n            <label for=\\\"documentCode\\\">Document Code</label>\\n            <input type=\\\"text\\\" formControlName=\\\"documentCode\\\" class=\\\"form-control required {{optional ? '': 'readonly'}}\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"policyHolder.documentCode\\\" readonly>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"phForm.controls['documentCode'].errors?.required\\\">\\n              * document code is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"editMode\\\" class=\\\"col-md-12\\\">\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"browse()\\\">Browse</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"create()\\\" *ngIf=\\\"showCreateBtn\\\">Create</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"clear()\\\">Clear</button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n\\n    <div *ngIf=\\\"editMode && showSearch\\\" class=\\\"row\\\">\\n      <div class=\\\"col-xl-12\\\">\\n        <form [formGroup]=\\\"searchForm\\\">\\n          <div class=\\\"form-divider\\\"></div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-4 col-sm-12\\\">\\n              <div class=\\\"form-group input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Search by</label>\\n                </div>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"policyHolderType\\\" [(ngModel)]=\\\"policyHolderType\\\"\\n                  [attr.disabled]=\\\"type == 'mortgagee' ? '' : null\\\">\\n                  <option value=\\\"P\\\">Person</option>\\n                  <option value=\\\"C\\\">Company/Organization</option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-xl-4\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': searchForm.controls['firstName'].invalid \\n                  && (searchForm.controls['firstName'].dirty \\n                  || searchForm.controls['firstName'].touched)}\\\">\\n                <input type=\\\"text\\\" placeholder=\\\"{{firstNameLabel}}\\\" formControlName=\\\"firstName\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control required\\\" [(ngModel)]=\\\"firstName\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"searchForm.controls['firstName'].errors?.required\\\">\\n                  * {{firstNameError}} is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showLastName\\\" class=\\\"col-xl-4\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': searchForm.controls['lastName'].invalid \\n                  && (searchForm.controls['lastName'].dirty \\n                  || searchForm.controls['lastName'].touched)}\\\">\\n                <input type=\\\"text\\\" placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control required\\\" [(ngModel)]=\\\"lastName\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"searchForm.controls['lastName'].errors?.required\\\">\\n                  * last name is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-xl-12\\\" *ngIf=\\\"showSearchResult\\\">\\n\\n              <mat-table [dataSource]=\\\"dataSource\\\">\\n                <ng-container matColumnDef=\\\"documentType\\\">\\n                  <mat-header-cell *matHeaderCellDef> Document Type </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\">\\n                    {{row.tipDocum}}\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"firstName\\\">\\n                  <mat-header-cell *matHeaderCellDef> First Name </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\">\\n                    {{row.nomTercero}}\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"middleName\\\">\\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'amount-header'\\\"> Middle Name </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\">\\n                    {{row.nom2Tercero}}\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"lastName\\\">\\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'amount-header'\\\"> Last Name </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\">\\n                    {{row.ape2Tercero}}\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"address\\\">\\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'amount-header'\\\"> City Address </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\">\\n                    {{row.dirDomicilioCliente}}\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"action\\\">\\n                  <mat-header-cell *matHeaderCellDef> Document Code </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\">\\n                    <div *ngIf=\\\"type != 'mortgagee'\\\" class=\\\"input-group\\\">\\n                      <input #documentCode (keyup)=\\\"enableAddBtn($event, btn)\\\" \\n                        oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <button #btn (click)=\\\"add(row, documentCode)\\\" disabled class=\\\"btn btn-outline-secondary\\\"\\n                          type=\\\"button\\\">Add</button>\\n                      </div>\\n                    </div>\\n                    <button *ngIf=\\\"type == 'mortgagee'\\\" (click)=\\\"add(row)\\\" class=\\\"btn btn-outline-secondary\\\"\\n                      type=\\\"button\\\">{{row.codDocum}}</button>\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n              </mat-table>\\n              <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n            </div>\\n\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button [disabled]=\\\"searchForm.pristine || searchForm.invalid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                  (click)=\\\"searchResult()\\\">Search</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showSearch = !showSearch\\\">Close</button>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\";","export default \"<div class=\\\"row\\\" id=\\\"profile\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-user fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Profile\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"row\\\">\\n\\n      <!-- User Information -->\\n      <div class=\\\"col-xl-12\\\">\\n        <!-- <div class=\\\"col-xl-8 col-lg-7\\\"> -->\\n        <div class=\\\"card shadow mb-4\\\">\\n          <!-- Card Header -->\\n          <div class=\\\"card-header py-3 d-flex flex-row align-items-center justify-content-between\\\">\\n            <h6 class=\\\"m-0 font-weight-bold text-primary\\\">User Information</h6>\\n          </div>\\n          <!-- Card Body -->\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 col-form-label\\\">Agent Code</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentUser.agentCode}}\\\" disabled>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentUser.fullName}}\\\" disabled>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">User Name</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentUser.userName}}\\\" disabled>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Address</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentUser.address}}\\\" disabled>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Password Panel -->\\n      <div *ngIf=\\\"false\\\" class=\\\"col-xl-4 col-lg-5\\\">\\n        <div class=\\\"card shadow mb-4\\\">\\n          <!-- Card Header -->\\n          <div class=\\\"card-header py-3 d-flex flex-row align-items-center justify-content-between\\\">\\n            <h6 class=\\\"m-0 font-weight-bold text-primary\\\">Password</h6>\\n          </div>\\n          <!-- Card Body -->\\n          <div class=\\\"card-body\\\">\\n\\n            <form [formGroup]=\\\"changePasswordForm\\\">\\n              <div class=\\\"form-group row\\\" [ngClass]=\\\"{'input-error': changePasswordForm.controls['oldPassword'].invalid \\n              && (changePasswordForm.controls['oldPassword'].dirty \\n              || changePasswordForm.controls['oldPassword'].touched)}\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"password\\\" class=\\\"form-control required\\\" formControlName=\\\"oldPassword\\\" name=\\\"oldPassword\\\"\\n                    id=\\\"oldPassword\\\" placeholder=\\\"Old Password\\\">\\n                  <p class=\\\"form-error\\\" *ngIf=\\\"changePasswordForm.controls['oldPassword'].errors?.required\\\">\\n                    * old password is required\\n                  </p>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\" [ngClass]=\\\"{'input-error': changePasswordForm.controls['newPassword'].invalid \\n              && (changePasswordForm.controls['newPassword'].dirty \\n              || changePasswordForm.controls['newPassword'].touched)}\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"password\\\" class=\\\"form-control required\\\" formControlName=\\\"newPassword\\\" name=\\\"newPassword\\\"\\n                    id=\\\"newPassword\\\" placeholder=\\\"New Password\\\">\\n                  <p class=\\\"form-error\\\" *ngIf=\\\"changePasswordForm.controls['newPassword'].errors?.required\\\">\\n                    * new password is required\\n                  </p>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\" [ngClass]=\\\"{'input-error': changePasswordForm.controls['confirmPassword'].invalid \\n              && (changePasswordForm.controls['confirmPassword'].dirty \\n              || changePasswordForm.controls['confirmPassword'].touched)}\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"password\\\" class=\\\"form-control required\\\" formControlName=\\\"confirmPassword\\\"\\n                    name=\\\"confirmPassword\\\" id=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\n                  <p class=\\\"form-error\\\" *ngIf=\\\"changePasswordForm.controls['confirmPassword'].errors?.required\\\">\\n                    * confirm password is required\\n                  </p>\\n                  <!-- <p class=\\\"form-error\\\" *ngIf=\\\"changePasswordForm.controls['confirmPassword'].errors?.pattern\\\">\\n                    * confirm password does not match new password\\n                  </p> -->\\n                  <!-- <p class=\\\"form-error\\\" *ngIf=\\\"changePasswordForm.hasError('notSame')\\\">\\n                    * confirm password does not match new password\\n                  </p> -->\\n                </div>\\n              </div>\\n\\n              <p class=\\\"text-muted\\\"><i>* Your password will expire in <strong>{{currentUser.expiryDay}} {{currentUser.expiryDay <= 1 ? 'day' : 'days' }}</strong></i></p>\\n\\n              <div class=\\\"btn-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Confirm</button>\\n              </div>\\n            </form>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #profile -->\\n\";","export default \"<div class=\\\"row\\\" id=\\\"query\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Query</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xl-3 col-md-5 col-sm-12\\\">\\n            <div class=\\\"input-group mb-3\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Options</label>\\n              </div>\\n\\n              <select  value=\\\"{{selectedOption}}\\\" [(ngModel)]=\\\"selectedOption\\\" class=\\\"custom-select mr-sm-2 required\\\" (change)=\\\"onSelectOption(selectedOption)\\\">\\n                <option value=\\\"policy\\\">Policy</option>\\n                <option value=\\\"claims\\\">Claims</option>\\n              </select>\\n            </div>\\n          </div> \\n\\n          <div class=\\\"col-xl-9 col-md-7 col-sm-12\\\">\\n            <div class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control bg-light small\\\" aria-label=\\\"Search\\\"\\n                aria-describedby=\\\"basic-addon2\\\" placeholder=\\\"{{optPlaceholder}}\\\" #inputVal>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"search()\\\">\\n                  <i class=\\\"fas fa-search fa-sm\\\"></i>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #query -->\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quickQuotationAccident\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-shield-alt fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Quick Quotation \\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/accident.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"alert alert-info note\\\">\\n          <p><strong>Important Reminder:</strong> All the amounts shown on the product comparison table are only\\n            estimates and must not be taken as the actual premiums of the products.\\n          </p>\\n        </div>\\n        <!-- .note -->\\n        \\n        <form [formGroup]=\\\"quickQuoteForm\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['subline'].invalid \\n                  && (quickQuoteForm.controls['subline'].dirty \\n                  || quickQuoteForm.controls['subline'].touched)}\\\">\\n                <label for=\\\"subline\\\">Subline</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                  [(ngModel)]=\\\"accidentDetails.subline\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let subline of LOV.sublineLOV\\\" [ngValue]=\\\"subline.COD_RAMO\\\">{{ subline.NOM_RAMO }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['subline'].errors?.required\\\">\\n                  * subline is required\\n                </p>\\n              </div>\\n            </div>\\n            <!-- col-lg-3 col-md-4 col-sm-6 -->\\n            <div class=\\\"clearfix\\\"></div>\\n\\n            <div class=\\\"additional-accident-details\\\" *ngIf=\\\"showDetails\\\">\\n              <div class=\\\"form-divider\\\"></div>\\n              <div class=\\\"col-xl-12\\\">\\n                <h6>Details</h6>\\n              </div>\\n              <!-- .col-xl-12 -->\\n\\n              <div class=\\\"acci-spa col-lg-12\\\" *ngIf=\\\"showSPADetails\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4 col-sm-6\\\">\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['occupationalClass'].invalid \\n                        && (quickQuoteForm.controls['occupationalClass'].dirty \\n                        || quickQuoteForm.controls['occupationalClass'].touched)}\\\">\\n                      <label for=\\\"occupationalClass\\\">Occupational Class</label>\\n                      <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"occupationalClass\\\"\\n                        [(ngModel)]=\\\"accidentDetails.occupationalClass\\\">\\n                        <option selected></option>\\n                        <option *ngFor=\\\"let occupationalClass of LOV.occupationalClassLOV\\\"\\n                          [ngValue]=\\\"occupationalClass.COD_VALOR\\\">\\n                          CLASS {{ occupationalClass.COD_VALOR }} - {{ occupationalClass.NOM_VALOR }}</option>\\n                      </select>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['occupationalClass'].errors?.required\\\">\\n                        * occupational class is required\\n                      </p>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-4 col-sm-6\\\">\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['disablementValue'].invalid \\n                        && (quickQuoteForm.controls['disablementValue'].dirty \\n                        || quickQuoteForm.controls['disablementValue'].touched)}\\\">\\n                      <label for=\\\"disablementValue\\\">Accidental Death and Disablement Value</label>\\n                      <input type=\\\"number\\\" formControlName=\\\"disablementValue\\\" class=\\\"form-control required\\\"\\n                        [(ngModel)]=\\\"accidentDetails.disablementValue\\\">\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['disablementValue'].errors?.required\\\">\\n                        * accidental death and disablement value is required\\n                      </p>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['disablementValue'].errors?.max\\\">\\n                        * accidental death and disablement value must be lower than Php2,000,001.00\\n                      </p>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['disablementValue'].errors?.min\\\">\\n                        * accidental death and disablement value must be higner than Php9,999.00\\n                      </p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"clearfix\\\"></div>\\n                </div>\\n                <!-- .row -->\\n              </div>\\n              <!-- acci-spa col-lg-12 -->\\n\\n              <div class=\\\"acci-hcbi col-lg-12\\\" *ngIf=\\\"showHCBIDetails\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4 col-sm-6\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      Primary Insured\\n                    </label>\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['primaryInsuredAge'].invalid \\n                        && (quickQuoteForm.controls['primaryInsuredAge'].dirty \\n                        || quickQuoteForm.controls['primaryInsuredAge'].touched)}\\\">\\n                      <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"primaryInsuredAge\\\"\\n                        [(ngModel)]=\\\"accidentDetails.primaryInsuredAge\\\">\\n                        <option selected></option>\\n                        <option *ngFor=\\\"let primaryInsuredAge of LOV.ageLOV\\\" [ngValue]=\\\"primaryInsuredAge.value\\\">\\n                          {{ primaryInsuredAge.name }}</option>\\n                      </select>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['primaryInsuredAge'].errors?.required\\\">\\n                        * primary insured is required\\n                      </p>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-4 col-sm-6\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbSpouseAge\\\" formControlName=\\\"cbSpouseAge\\\"\\n                        [(ngModel)]=\\\"accidentDetails.cbSpouseAge\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbSpouseAge\\\">\\n                        Spouse\\n                      </label>\\n                    </div>\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['spouseAge'].invalid \\n                        && (quickQuoteForm.controls['spouseAge'].dirty \\n                        || quickQuoteForm.controls['spouseAge'].touched)}\\\">\\n                      <select class=\\\"custom-select mr-sm-2 required\\\"\\n                        [attr.disabled]=\\\"accidentDetails.cbSpouseAge ? null : ''\\\" formControlName=\\\"spouseAge\\\"\\n                        [(ngModel)]=\\\"accidentDetails.spouseAge\\\">\\n                        <option selected></option>\\n                        <option *ngFor=\\\"let spouseAge of LOV.ageLOV\\\" [ngValue]=\\\"spouseAge.value\\\">\\n                          {{ spouseAge.name }}\\n                        </option>\\n                      </select>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['spouseAge'].errors?.required\\\">\\n                        * spouse is required\\n                      </p>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-4 col-sm-6\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbChildNumber\\\" formControlName=\\\"cbChildNumber\\\"\\n                        [(ngModel)]=\\\"accidentDetails.cbChildNumber\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbChildNumber\\\">\\n                        Child/Children\\n                      </label>\\n                    </div>\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['childNumber'].invalid \\n                        && (quickQuoteForm.controls['childNumber'].dirty \\n                        || quickQuoteForm.controls['childNumber'].touched)}\\\">\\n                      <select class=\\\"custom-select mr-sm-2 required\\\"\\n                        [attr.disabled]=\\\"accidentDetails.cbChildNumber ? null : ''\\\" formControlName=\\\"childNumber\\\"\\n                        [(ngModel)]=\\\"accidentDetails.childNumber\\\">\\n                        <option selected></option>\\n                        <option *ngFor=\\\"let childNumber of LOV.childNumberLOV\\\" [ngValue]=\\\"childNumber.name\\\">{{ childNumber.value }}\\n                        </option>\\n                      </select>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['childNumber'].errors?.required\\\">\\n                        * child/children is required\\n                      </p>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n                <!-- .row -->\\n              </div>\\n              <!-- acci-hcbi col-lg-12 -->\\n            </div>\\n            <!-- .additional-accident-details -->\\n          </div>\\n          <!-- .row -->\\n\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button [disabled]=\\\"quickQuoteForm.pristine || quickQuoteForm.invalid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"quickQuote(accidentDetails)\\\">Generate</button>\\n          </div>\\n          <!-- .btn-group -->\\n          <div class=\\\"clearfix\\\"></div>\\n        </form>\\n        <!-- .quick-quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\" id=\\\"productComparison\\\">\\n    <div class=\\\"product-comparison\\\" *ngIf=\\\"showProductComparison\\\">\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-accident.png\\\" alt=\\\"product-accident\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"accidentData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Packages Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Packages</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Premium Column -->\\n                  <ng-container matColumnDef=\\\"premium\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Premium</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.premium | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"generateCoverage(row)\\\"\\n                    matTooltip=\\\"click to show product coverage\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n          <!-- .row -->\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card  -->\\n\\n      <div id=\\\"productCoverage\\\">\\n        <div class=\\\"card shadow mb-3\\\" *ngIf=\\\"showProductCoverage\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-12\\\">\\n                <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-coverage.png\\\" alt=\\\"product-coverage\\\" />\\n              </div>\\n              <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"flexitable\\\">\\n                  <table mat-table [dataSource]=\\\"coverageData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                    <!-- Position Column -->\\n                    <ng-container matColumnDef=\\\"label\\\">\\n                      <th mat-header-cell *matHeaderCellDef>Limit</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.label\\\"></td>\\n                    </ng-container>\\n\\n                    <!-- Name Column -->\\n                    <ng-container matColumnDef=\\\"premium\\\">\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Premium</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                        {{element.isHeader ? '' : element.premium | currency:'PHP': 'symbol-narrow'}}\\n                      </td>\\n                    </ng-container>\\n\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                  </table>\\n                </div>\\n              </div>\\n              <!-- .col-xl-12 -->\\n            </div>\\n            <!-- .row -->\\n          </div>\\n          <!-- .card-body -->\\n        </div>\\n        <!-- .card  -->\\n      </div>\\n      <!-- #productCoverage -->\\n\\n    </div>\\n    <!-- .product-comparison -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n</div>\\n<!-- #quickQuotationAccident -->\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quickQuotationCar\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-car fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Quick Quotation \\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/car.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"alert alert-info note\\\">\\n          <p><strong>Important Reminder:</strong> All the amounts shown on the product comparison table are only\\n            estimates and must not be taken as the actual premiums of the products.\\n          </p>\\n          <br>\\n          <strong>Fixed Values: </strong>\\n          <ul>\\n            <li>Sum Insured per Passenger: <strong>50,000</strong></li>\\n            <li>VTPL BI : <strong>200,000</strong></li>\\n            <li>VTPL PD : <strong>200,000</strong></li>\\n            <li>LGT : <strong>.75%</strong></li>\\n          </ul>\\n        </div>\\n        <!-- .note -->\\n\\n        <form [formGroup]=\\\"quickQuoteForm\\\" class=\\\"quick-quote-form\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['make'].invalid \\n                && (quickQuoteForm.controls['make'].dirty \\n                || quickQuoteForm.controls['make'].touched)}\\\">\\n                <label for=\\\"make\\\">Make</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"make\\\" (change)=\\\"makeOnchange()\\\"\\n                  [(ngModel)]=\\\"carDetails.make\\\">\\n                  <option *ngFor=\\\"let make of LOV.makeLOV\\\" [ngValue]=\\\"make.COD_MARCA\\\">{{ make.NOM_MARCA }}</option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['make'].errors?.required\\\">\\n                  * make is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['model'].invalid \\n              && (quickQuoteForm.controls['model'].dirty \\n              || quickQuoteForm.controls['model'].touched)}\\\">\\n                <label for=\\\"model\\\">Model</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"model\\\" (change)=\\\"modelOnchange()\\\"\\n                  [(ngModel)]=\\\"carDetails.model\\\" [attr.disabled]=\\\" LOV.modelLOV?.length ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let model of LOV.modelLOV\\\" [ngValue]=\\\"model.COD_MODELO\\\">{{ model.NOM_MODELO }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['model'].errors?.required\\\">\\n                  * model is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['vehicleType'].invalid \\n              && (quickQuoteForm.controls['vehicleType'].dirty \\n              || quickQuoteForm.controls['vehicleType'].touched)}\\\">\\n                <label for=\\\"vehicleType\\\">Vehicle Type</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"vehicleType\\\"\\n                  (change)=\\\"vehicleTypeOnchange()\\\" [(ngModel)]=\\\"carDetails.vehicleType\\\"\\n                  [attr.disabled]=\\\" LOV.vehicleTypeLOV?.length ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let vehicleType of LOV.vehicleTypeLOV\\\" [ngValue]=\\\"vehicleType.COD_TIP_VEHI\\\">\\n                    {{ vehicleType.NOM_TIP_VEHI }}</option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['vehicleType'].errors?.required\\\">\\n                  * vehicle type is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['modelYear'].invalid \\n              && (quickQuoteForm.controls['modelYear'].dirty \\n              || quickQuoteForm.controls['modelYear'].touched)}\\\">\\n                <label for=\\\"modelYear\\\">Model Year</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"modelYear\\\"\\n                  (change)=\\\"modelYearOnchange()\\\" [(ngModel)]=\\\"carDetails.modelYear\\\"\\n                  [attr.disabled]=\\\" LOV.modelYearLOV?.length ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let modelYear of LOV.modelYearLOV\\\" [ngValue]=\\\"modelYear.ANIO_SUB_MODELO\\\">\\n                    {{ modelYear.ANIO_SUB_MODELO }}</option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['modelYear'].errors?.required\\\">\\n                  * model year is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['subModel'].invalid \\n              && (quickQuoteForm.controls['subModel'].dirty \\n              || quickQuoteForm.controls['subModel'].touched)}\\\">\\n                <label for=\\\"subModel\\\">Sub Model</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subModel\\\" (change)=\\\"subModelOnchange()\\\"\\n                  [(ngModel)]=\\\"carDetails.subModel\\\" [attr.disabled]=\\\" LOV.subModelLOV?.length ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let subModel of LOV.subModelLOV\\\" [ngValue]=\\\"subModel.COD_SUB_MODELO\\\">\\n                    {{subModel.NOM_SUB_MODELO + '('+ subModel.TIP_CAJA_CAMBIO+ ') '+ (subModel.NOM_TRACCION == 'UNKNOWN' ? \\\"\\\": subModel.NOM_TRACCION)}}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['subModel'].errors?.required\\\">\\n                  * sub model is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['typeOfUse'].invalid \\n              && (quickQuoteForm.controls['typeOfUse'].dirty \\n              || quickQuoteForm.controls['typeOfUse'].touched)}\\\">\\n                <label for=\\\"typeOfUse\\\">Type of Use</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"typeOfUse\\\"\\n                  (change)=\\\"typeOfUseOnchange()\\\" [(ngModel)]=\\\"carDetails.typeOfUse\\\"\\n                  [attr.disabled]=\\\" LOV.typeOfUseLOV?.length ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let typeOfUse of LOV.typeOfUseLOV\\\" [ngValue]=\\\"typeOfUse.COD_USO_VEHI\\\">\\n                    {{ typeOfUse.NOM_USO_VEHI }}</option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['typeOfUse'].errors?.required\\\">\\n                  * type of use is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['subline'].invalid \\n              && (quickQuoteForm.controls['subline'].dirty \\n              || quickQuoteForm.controls['subline'].touched)}\\\">\\n                <label for=\\\"subline\\\">Subline</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                  (change)=\\\"sublineOnchange($event)\\\" [(ngModel)]=\\\"carDetails.subline\\\"\\n                  [attr.disabled]=\\\" LOV.sublineLOV?.length ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let subline of LOV.sublineLOV\\\" [ngValue]=\\\"subline.value\\\"\\n                    [attr.data-sublinedate]=\\\"subline.effectivityDate\\\">{{ subline.name }}</option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['subline'].errors?.required\\\">\\n                  * subline is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['vehicleValue'].invalid \\n              && (quickQuoteForm.controls['vehicleValue'].dirty \\n              || quickQuoteForm.controls['vehicleValue'].touched)}\\\">\\n                <label for=\\\"vehicleValue\\\">Vehicle Value</label>\\n                <input type=\\\"text\\\" formControlName=\\\"vehicleValue\\\" class=\\\"form-control required\\\"\\n                  [(ngModel)]=\\\"carDetails.vehicleValue\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['vehicleValue'].errors?.required\\\">\\n                  * vehicle value is required\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n          <!-- .row -->\\n\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button [disabled]=\\\"quickQuoteForm.pristine || quickQuoteForm.invalid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"quickQuote(carDetails)\\\">Generate</button>\\n          </div>\\n          <!-- .btn-group -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n        </form>\\n        <!-- .quick-quote-form -->\\n\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\" id=\\\"productComparison\\\">\\n    <div class=\\\"product-comparison\\\" *ngIf=\\\"showProductComparison\\\">\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-car.png\\\" alt=\\\"product-car\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"annualData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Payment Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Payment</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Compre Column -->\\n                  <ng-container matColumnDef=\\\"compre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Compre</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.compre == 0 ? 'n/a' : element.compre | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- CTPL Column -->\\n                  <ng-container matColumnDef=\\\"ctpl\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> CTPL </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.ctpl == 0 ? 'n/a' : element.ctpl | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Column -->\\n                  <ng-container matColumnDef=\\\"autoCompre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoCompre == 0 ? 'n/a' : element.autoCompre | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Plus Column -->\\n                  <ng-container matColumnDef=\\\"autoComprePlus\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre Plus </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoComprePlus == 0 ? 'n/a' : element.autoComprePlus | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liabilty Regular Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilityRegular\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Regular </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilityRegular == 0 ? 'n/a' : element.autoLiabilityRegular | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Select Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilitySelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilitySelect == 0 ? 'n/a' : element.autoLiabilitySelect | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Select Column -->\\n                  <ng-container matColumnDef=\\\"autoSelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoSelect == 0 || !showAutoSelect ? 'n/a' : element.autoSelect | currency:'PHP': 'symbol-narrow'}} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n          <!-- .row -->\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card  -->\\n\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"payment-img-banner\\\" src=\\\"./assets/images/product-payment.png\\\" alt=\\\"product-payment\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n\\n                <table mat-table [dataSource]=\\\"plan30Data\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Label Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <h6>PLAN 30</h6>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Compre Column -->\\n                  <ng-container matColumnDef=\\\"compre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Compre</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.compre == 0 ? 'n/a' : element.compre | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- CTPL Column -->\\n                  <ng-container matColumnDef=\\\"ctpl\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> CTPL </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.ctpl == 0 ? 'n/a' : element.ctpl | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Column -->\\n                  <ng-container matColumnDef=\\\"autoCompre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoCompre == 0 ? 'n/a' : element.autoCompre | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Plus Column -->\\n                  <ng-container matColumnDef=\\\"autoComprePlus\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre Plus </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoComprePlus == 0 ? 'n/a' : element.autoComprePlus | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilityRegular\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Regular </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilityRegular == 0 ? 'n/a' : element.autoLiabilityRegular | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Select Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilitySelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilitySelect == 0 ? 'n/a' : element.autoLiabilitySelect | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Select Column -->\\n                  <ng-container matColumnDef=\\\"autoSelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoSelect == 0 || !showAutoSelect ? 'n/a' : element.autoSelect | currency:'PHP': 'symbol-narrow'}} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n\\n                <table mat-table [dataSource]=\\\"plan60Data\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Label Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <h6>PLAN 60</h6>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Compre Column -->\\n                  <ng-container matColumnDef=\\\"compre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Compre</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.compre == 0 ? 'n/a' : element.compre | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- CTPL Column -->\\n                  <ng-container matColumnDef=\\\"ctpl\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> CTPL </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.ctpl == 0 ? 'n/a' : element.ctpl | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Column -->\\n                  <ng-container matColumnDef=\\\"autoCompre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoCompre == 0 ? 'n/a' : element.autoCompre | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Plus Column -->\\n                  <ng-container matColumnDef=\\\"autoComprePlus\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre Plus </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoComprePlus == 0 ? 'n/a' : element.autoComprePlus | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Regular Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilityRegular\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Regular </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilityRegular == 0 ? 'n/a' : element.autoLiabilityRegular | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Select Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilitySelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilitySelect == 0 ? 'n/a' : element.autoLiabilitySelect | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Select Column -->\\n                  <ng-container matColumnDef=\\\"autoSelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoSelect == 0 || !showAutoSelect ? 'n/a' : element.autoSelect | currency:'PHP': 'symbol-narrow'}} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"plan90Data\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Label Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <h6>PLAN 90</h6>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Compre Column -->\\n                  <ng-container matColumnDef=\\\"compre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Compre</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.compre == 0 ? 'n/a' : element.compre | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- CTPL Column -->\\n                  <ng-container matColumnDef=\\\"ctpl\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> CTPL </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.ctpl == 0 ? 'n/a' : element.ctpl | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Column -->\\n                  <ng-container matColumnDef=\\\"autoCompre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoCompre == 0 ? 'n/a' : element.autoCompre | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Plus Column -->\\n                  <ng-container matColumnDef=\\\"autoComprePlus\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre Plus </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoComprePlus == 0 ? 'n/a' : element.autoComprePlus | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Regular Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilityRegular\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Regular </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilityRegular == 0 ? 'n/a' : element.autoLiabilityRegular | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Select Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilitySelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilitySelect == 0 ? 'n/a' : element.autoLiabilitySelect | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Select Column -->\\n                  <ng-container matColumnDef=\\\"autoSelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoSelect == 0 || !showAutoSelect ? 'n/a' : element.autoSelect | currency:'PHP': 'symbol-narrow'}} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n        </div>\\n      </div>\\n      <!-- .card -->\\n\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-coverage.png\\\" alt=\\\"product-coverage\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"coveragelist\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Payment Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Payment</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Compre Column -->\\n                  <ng-container matColumnDef=\\\"compre\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Compre</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.compre\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- CTPL Column -->\\n                  <ng-container matColumnDef=\\\"ctpl\\\">\\n                    <th mat-header-cell *matHeaderCellDef> CTPL </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.ctpl\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Column -->\\n                  <ng-container matColumnDef=\\\"autoCompre\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Auto Compre </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.autoCompre\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Plus Column -->\\n                  <ng-container matColumnDef=\\\"autoComprePlus\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Auto Compre Plus </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.autoComprePlus\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Regular Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilityRegular\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Auto Liabilty Regular </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.autoLiabilityRegular\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Select Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilitySelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Auto Liability Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.autoLiabilitySelect\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Auto Select Column -->\\n                  <ng-container matColumnDef=\\\"autoSelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Auto Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.autoSelect\\\"></td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n          <!-- .row -->\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card  -->\\n\\n    </div>\\n    <!-- .showProductComparison -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n</div>\\n<!-- #quickQuotationCar -->\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quickQuotationHome\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-home fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Quick Quotation\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/home.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"alert alert-info note\\\">\\n          <p><strong>Important Reminder:</strong> All the amounts shown on the product comparison table are only\\n            estimates and must not be taken as the actual premiums of the products.\\n          </p>\\n        </div>\\n        <!-- .note -->\\n\\n        <form [formGroup]=\\\"quickQuoteForm\\\" class=\\\"quick-quote-form\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['subline'].invalid \\n                  && (quickQuoteForm.controls['subline'].dirty \\n                  || quickQuoteForm.controls['subline'].touched)}\\\">\\n                <label for=\\\"subline\\\">Subline</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                  [(ngModel)]=\\\"homeDetails.subline\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let subline of LOV.sublineLOV\\\" [ngValue]=\\\"subline.COD_RAMO\\\">{{ subline.NOM_RAMO }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['subline'].errors?.required\\\">\\n                  * subline is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-divider\\\"></div>\\n            <div class=\\\"col-xl-12\\\">\\n              <h6>Coverage</h6>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbBuilding\\\" formControlName=\\\"cbBuilding\\\"\\n                  [(ngModel)]=\\\"homeDetails.cbBuilding\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"cbBuilding\\\">\\n                  Building\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['building'].invalid \\n                && (quickQuoteForm.controls['building'].dirty \\n                || quickQuoteForm.controls['building'].touched)}\\\">\\n                <input class=\\\"form-control required\\\" [attr.disabled]=\\\"homeDetails.cbBuilding ? null : ''\\\" type=\\\"number\\\"\\n                  id=\\\"building\\\" formControlName=\\\"building\\\" [(ngModel)]=\\\"homeDetails.building\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['building'].errors?.required\\\">\\n                  * building is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbContent\\\" formControlName=\\\"cbContent\\\"\\n                  [(ngModel)]=\\\"homeDetails.cbContent\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"cbContent\\\">\\n                  Content\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['content'].invalid \\n                && (quickQuoteForm.controls['content'].dirty \\n                || quickQuoteForm.controls['content'].touched)}\\\">\\n                <input class=\\\"form-control required\\\" [attr.disabled]=\\\"homeDetails.cbContent ? null : ''\\\" type=\\\"number\\\"\\n                  id=\\\"content\\\" formControlName=\\\"content\\\" [(ngModel)]=\\\"homeDetails.content\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['content'].errors?.required\\\">\\n                  * content is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-divider\\\"></div>\\n            <div class=\\\"col-xl-12\\\">\\n              <h6>Content</h6>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\"\\n                  [attr.disabled]=\\\"homeDetails.cbBuilding || homeDetails.cbContent ? null : ''\\\" type=\\\"checkbox\\\"\\n                  id=\\\"cbImprovements\\\" formControlName=\\\"cbImprovements\\\" [(ngModel)]=\\\"homeDetails.cbImprovements\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"cbImprovements\\\">\\n                  Improvements\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['improvements'].invalid \\n                && (quickQuoteForm.controls['improvements'].dirty \\n                || quickQuoteForm.controls['improvements'].touched)}\\\">\\n                <input class=\\\"form-control required\\\"\\n                  [attr.disabled]=\\\"(homeDetails.cbBuilding || homeDetails.cbContent) && homeDetails.cbImprovements ? null : ''\\\"\\n                  type=\\\"number\\\" id=\\\"improvements\\\" formControlName=\\\"improvements\\\" [(ngModel)]=\\\"homeDetails.improvements\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['improvements'].errors?.required\\\">\\n                  * improvements is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\"\\n                  [attr.disabled]=\\\"homeDetails.cbBuilding || homeDetails.cbContent ? null : ''\\\" type=\\\"checkbox\\\"\\n                  id=\\\"cbRelatedBuild\\\" formControlName=\\\"cbRelatedBuild\\\" [(ngModel)]=\\\"homeDetails.cbRelatedBuild\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"cbRelatedBuild\\\">\\n                  Other Related Build\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['relatedBuild'].invalid \\n                && (quickQuoteForm.controls['relatedBuild'].dirty \\n                || quickQuoteForm.controls['relatedBuild'].touched)}\\\">\\n                <input class=\\\"form-control required\\\"\\n                  [attr.disabled]=\\\"(homeDetails.cbBuilding || homeDetails.cbContent) && homeDetails.cbRelatedBuild ? null : ''\\\"\\n                  type=\\\"number\\\" id=\\\"relatedBuild\\\" formControlName=\\\"relatedBuild\\\" [(ngModel)]=\\\"homeDetails.relatedBuild\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['relatedBuild'].errors?.required\\\">\\n                  * related build is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\"\\n                  [attr.disabled]=\\\"homeDetails.cbBuilding || homeDetails.cbContent ? null : ''\\\" type=\\\"checkbox\\\"\\n                  id=\\\"cbRelatedContent\\\" formControlName=\\\"cbRelatedContent\\\" [(ngModel)]=\\\"homeDetails.cbRelatedContent\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"cbRelatedContent\\\">\\n                  Other Related Content\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['relatedContent'].invalid \\n                && (quickQuoteForm.controls['relatedContent'].dirty \\n                || quickQuoteForm.controls['relatedContent'].touched)}\\\">\\n                <input class=\\\"form-control required\\\"\\n                  [attr.disabled]=\\\"(homeDetails.cbBuilding || homeDetails.cbContent) && homeDetails.cbRelatedContent ? null : ''\\\"\\n                  type=\\\"number\\\" id=\\\"relatedContent\\\" formControlName=\\\"relatedContent\\\"\\n                  [(ngModel)]=\\\"homeDetails.relatedContent\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['relatedContent'].errors?.required\\\">\\n                  * related content is required\\n                </p>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <!-- .row -->\\n\\n          <div class=\\\"alert alert-warning note\\\">\\n            <p><strong>Note:</strong> Sum Insured should be higher than 999,999 or lower than 30,000,001. Currently,\\n              your sum insured is\\n              <strong>\\n                {{homeDetails.building--homeDetails.content--homeDetails.improvements--homeDetails.relatedBuild--homeDetails.relatedContent  | currency:'PHP': 'symbol-narrow'}}</strong>\\n            </p>\\n          </div>\\n\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button\\n              [disabled]=\\\"quickQuoteForm.pristine || quickQuoteForm.invalid ||\\n            homeDetails.building--homeDetails.content--homeDetails.improvements--homeDetails.relatedBuild--homeDetails.relatedContent < 1000000 ||\\n            homeDetails.building--homeDetails.content--homeDetails.improvements--homeDetails.relatedBuild--homeDetails.relatedContent > 30000000\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"quickQuote(homeDetails)\\\">Generate</button>\\n          </div>\\n          <!-- .btn-group -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n        </form>\\n        <!-- .quick-quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\" id=\\\"productComparison\\\">\\n    <div class=\\\"product-comparison\\\" *ngIf=\\\"showProductComparison\\\">\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-home.png\\\" alt=\\\"product-home\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"annualData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Payment Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Payment</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Fire Column -->\\n                  <ng-container matColumnDef=\\\"fire\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Fire</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.fire | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Earth Column -->\\n                  <ng-container matColumnDef=\\\"earth\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Earth </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.earth | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Water Column -->\\n                  <ng-container matColumnDef=\\\"water\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Water </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.water | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n          <!-- .row -->\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card  -->\\n\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"payment-img-banner\\\" src=\\\"./assets/images/product-payment.png\\\" alt=\\\"product-payment\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n\\n                <table mat-table [dataSource]=\\\"plan30Data\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Label Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <h6>PLAN 30</h6>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Fire Column -->\\n                  <ng-container matColumnDef=\\\"fire\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Fire</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.fire | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Earth Column -->\\n                  <ng-container matColumnDef=\\\"earth\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Earth </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.earth | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Water Column -->\\n                  <ng-container matColumnDef=\\\"water\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Water </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.water | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n\\n                <table mat-table [dataSource]=\\\"plan60Data\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Label Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <h6>PLAN 60</h6>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Fire Column -->\\n                  <ng-container matColumnDef=\\\"fire\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Fire</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.fire | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Earth Column -->\\n                  <ng-container matColumnDef=\\\"earth\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Earth </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.earth | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Water Column -->\\n                  <ng-container matColumnDef=\\\"water\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Water </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.water | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"plan90Data\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Label Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <h6>PLAN 90</h6>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Fire Column -->\\n                  <ng-container matColumnDef=\\\"fire\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Fire</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.fire | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Earth Column -->\\n                  <ng-container matColumnDef=\\\"earth\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Earth </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.earth | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Water Column -->\\n                  <ng-container matColumnDef=\\\"water\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Water </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.water | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n        </div>\\n      </div>\\n      <!-- .card -->\\n\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-coverage.png\\\" alt=\\\"product-coverage\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"coveragelist\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Payment Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Payment</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Fire Column -->\\n                  <ng-container matColumnDef=\\\"fire\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Fire</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.fire\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Earth Column -->\\n                  <ng-container matColumnDef=\\\"earth\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Earth</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.earth\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Water Column -->\\n                  <ng-container matColumnDef=\\\"water\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Water </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.water\\\"></td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n          <!-- .row -->\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card  -->\\n\\n    </div>\\n    <!-- .product-comparison -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n</div>\\n<!-- #quickQuotationHome -->\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quickQuotationTravel\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-plane fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Quick Quotation \\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/travel.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"alert alert-info note\\\">\\n          <p><strong>Important Reminder:</strong> All the amounts shown on the product comparison table are only\\n            estimates and must not be taken as the actual premiums of the products. Family risk should be max of 6 \\n            members and age of children should be from 0-21 years old only. Please also be advised that family is considered\\n            as 1 risk and no multirisk is allowed for quotation. Premiums reflected are based on highest \\n            LGT of 0.75%. For exact premiums based on branch LGT, please proceed to regular quote.\\n          </p>\\n        </div>\\n        <!-- .note -->\\n\\n        <form [formGroup]=\\\"quickQuoteForm\\\" class=\\\"quick-quote-form\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['currency'].invalid \\n                && (quickQuoteForm.controls['currency'].dirty \\n                || quickQuoteForm.controls['currency'].touched)}\\\">\\n                <label for=\\\"currency\\\">Currency</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"currency\\\"\\n                  [(ngModel)]=\\\"travelDetails.currency\\\" (change)=\\\"currencyOnchange()\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let currency of LOV.currencyLOV\\\" [ngValue]=\\\"currency.COD_MON\\\">{{ currency.NOM_MON }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['currency'].errors?.required\\\">\\n                  * currency is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-5 col-md-5 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['country'].invalid \\n                  && (quickQuoteForm.controls['country'].dirty \\n                  || quickQuoteForm.controls['country'].touched)}\\\">\\n                <label for=\\\"country\\\">Itinerary</label>\\n                <ng-select [items]=\\\"LOV.countryLOV\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select Country to visit\\\"\\n                  appendTo=\\\"body\\\" formControlName=\\\"country\\\" multiple=\\\"true\\\" [(ngModel)]=\\\"travelDetails.countries\\\">\\n                </ng-select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['country'].errors?.required\\\">\\n                  * country is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-divider\\\"></div>\\n            <div class=\\\"col-xl-12\\\">\\n              <h6>Travel Information</h6>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['travelPackage'].invalid \\n                && (quickQuoteForm.controls['travelPackage'].dirty \\n                || quickQuoteForm.controls['travelPackage'].touched)}\\\">\\n                <label for=\\\"travelPackage\\\">Travel Package</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"travelPackage\\\"\\n                  [(ngModel)]=\\\"travelDetails.travelPackage\\\" [attr.disabled]=\\\"true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let package of LOV.packageLOV\\\" [ngValue]=\\\"package.TRAVEL_PACK\\\">{{ package.NOM_VALOR }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['travelPackage'].errors?.required\\\">\\n                  * travel package is required\\n                </p>\\n              </div>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['typeOfCoverage'].invalid \\n                && (quickQuoteForm.controls['typeOfCoverage'].dirty \\n                || quickQuoteForm.controls['typeOfCoverage'].touched)}\\\">\\n                <label for=\\\"typeOfCoverage\\\">Type of Coverage</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"typeOfCoverage\\\"\\n                  [(ngModel)]=\\\"travelDetails.typeOfCoverage\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let coverage of LOV.coverageLOV\\\" [ngValue]=\\\"coverage.INSURANCE_COVERAGE\\\">\\n                    {{ coverage.NOM_VALOR }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['typeOfCoverage'].errors?.required\\\">\\n                  * type of coverage is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"clearfix\\\"></div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['startDate'].invalid \\n                && (quickQuoteForm.controls['startDate'].dirty \\n                || quickQuoteForm.controls['startDate'].touched)}\\\">\\n                <label for=\\\"startDate\\\">Start Date</label>\\n                <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\" [minDate]=\\\"mindate\\\"\\n                  formControlName=\\\"startDate\\\" [(ngModel)]=\\\"travelDetails.startDate\\\" bsDatepicker>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['startDate'].errors?.required\\\">\\n                  * start date is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['endDate'].invalid \\n                && (quickQuoteForm.controls['endDate'].dirty \\n                || quickQuoteForm.controls['endDate'].touched)}\\\">\\n                <label for=\\\"endDate\\\">End Date</label>\\n                <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\" [minDate]=\\\"endDateMinDate\\\"\\n                  formControlName=\\\"endDate\\\" [(ngModel)]=\\\"travelDetails.endDate\\\" bsDatepicker\\n                  [attr.disabled]=\\\"enableEndDate ? null : ''\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['endDate'].errors?.required\\\">\\n                  * end date is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['noOfDays'].invalid \\n                && (quickQuoteForm.controls['noOfDays'].dirty \\n                || quickQuoteForm.controls['noOfDays'].touched)}\\\">\\n                <label for=\\\"noOfDays\\\">No. of Days</label>\\n                <input class=\\\"form-control required\\\" id=\\\"noOfDays\\\" formControlName=\\\"noOfDays\\\"\\n                  [(ngModel)]=\\\"travelDetails.noOfDays\\\" [attr.disabled]=\\\"true\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['noOfDays'].errors?.required\\\">\\n                  * number of days is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"clearfix\\\"></div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['ageRange'].invalid \\n                && (quickQuoteForm.controls['ageRange'].dirty \\n                || quickQuoteForm.controls['ageRange'].touched)}\\\">\\n                <label for=\\\"ageRange\\\">Select the range of the eldest insured from the list</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"ageRange\\\"\\n                  [(ngModel)]=\\\"travelDetails.ageRange\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let ageRange of LOV.ageRangeLOV\\\" [ngValue]=\\\"ageRange.AGE_RANGE\\\">\\n                    {{ ageRange.NOM_VALOR }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['ageRange'].errors?.required\\\">\\n                  * age range is required\\n                </p>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <!-- .row -->\\n\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button [disabled]=\\\"quickQuoteForm.pristine || quickQuoteForm.invalid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"quickQuote(travelDetails)\\\">Generate</button>\\n          </div>\\n          <!-- .btn-group -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n        </form>\\n        <!-- .quick-quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\" id=\\\"productComparison\\\">\\n    <div class=\\\"product-comparison\\\" *ngIf=\\\"showProductComparison\\\">\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-travel.png\\\" alt=\\\"product-travel\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"travelData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Position Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Limit</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\">{{element.label}}</td>\\n                  </ng-container>\\n\\n                  <!-- Name Column -->\\n                  <ng-container matColumnDef=\\\"complete\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Travel Complete</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.complete == null ? 'n/a' : element.complete | currency: element.currency: 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Weight Column -->\\n                  <ng-container matColumnDef=\\\"personalAssistance\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Travel Assist with Personal Assistance</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.personalAssistance == null ? 'n/a' : element.personalAssistance | currency: element.currency: 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Symbol Column -->\\n                  <ng-container matColumnDef=\\\"assist\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Travel Assist Only</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.assist == null ? 'n/a' : element.assist | currency: element.currency: 'symbol-narrow' }}\\n                    </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"generateCoverage(row)\\\"\\n                    matTooltip=\\\"click to show product coverage\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n          <!-- .row -->\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card  -->\\n\\n      <div id=\\\"productCoverage\\\">\\n        <div class=\\\"card shadow mb-3\\\" *ngIf=\\\"showProductCoverage\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-12\\\">\\n                <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-coverage.png\\\" alt=\\\"product-coverage\\\" />\\n              </div>\\n              <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"flexitable\\\">\\n                  <table mat-table [dataSource]=\\\"coverageData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                    <!-- Position Column -->\\n                    <ng-container matColumnDef=\\\"label\\\">\\n                      <th mat-header-cell *matHeaderCellDef>Limit</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.label\\\"></td>\\n                    </ng-container>\\n\\n                    <!-- Name Column -->\\n                    <ng-container matColumnDef=\\\"complete\\\">\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Travel Complete</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                        {{element.isHeader && (element.code != '330' && element.code != '332') ? '' : element.complete == null ? 'n/a' : element.complete == 0 ? element.isHeader ? '' : 'actual cost' : element.complete | currency: element.currency: 'symbol-narrow'}}\\n                      </td>\\n                    </ng-container>\\n\\n                    <!-- Weight Column -->\\n                    <ng-container matColumnDef=\\\"personalAssistance\\\">\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Travel Assist with Personal Assistance</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                        {{element.isHeader && (element.code != '330' && element.code != '332') ? '' : element.personalAssistance == null ? 'n/a' : element.personalAssistance == 0 ? element.isHeader ? '' : 'actual cost' : element.personalAssistance | currency: element.currency: 'symbol-narrow'}}\\n                      </td>\\n                    </ng-container>\\n\\n                    <!-- Symbol Column -->\\n                    <ng-container matColumnDef=\\\"assist\\\">\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Travel Assist Only</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                        {{element.isHeader && (element.code != '330' && element.code != '332') ? '' : element.assist == null ? 'n/a' : element.assist == 0 ? element.isHeader ? '' : 'actual cost' : element.assist | currency: element.currency: 'symbol-narrow' }}\\n                      </td>\\n                    </ng-container>\\n\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                  </table>\\n                </div>\\n              </div>\\n              <!-- .col-xl-12 -->\\n            </div>\\n            <!-- .row -->\\n          </div>\\n          <!-- .card-body -->\\n        </div>\\n        <!-- .card  -->\\n      </div>\\n      <!-- #productCoverage -->\\n\\n    </div>\\n    <!-- .showProductComparison -->\\n\\n  </div>\\n  <!-- #quickQuotationTravel -->\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quotationAccident\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-shield-alt fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        {{pageLabel}}\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/accident.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"clearfix\\\"></div>\\n        <form [formGroup]=\\\"quoteForm\\\">\\n\\n          <div *ngIf='isIssuance' class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Individual Policy</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <label class=\\\"input-group-text\\\" for=\\\"quotationNumber\\\">Quotation Number</label>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Quotation Number here..\\\"\\n                      formControlName=\\\"quotationNumber\\\" [(ngModel)]=\\\"accidentDetails.quotationNumber\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <button [disabled]=\\\"disableLoadBtn\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"loadQuotation()\\\"\\n                        type=\\\"button\\\">Load</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Business Line</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['subline'].invalid \\n                    && (quoteForm.controls['subline'].dirty \\n                    || quoteForm.controls['subline'].touched)}\\\">\\n                    <label for=\\\"subline\\\">Subline</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                      [(ngModel)]=\\\"accidentDetails.subline\\\"\\n                      (change)=\\\"sublineOnChange()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let subline of LOV.sublineLOV\\\" [ngValue]=\\\"subline.COD_RAMO\\\">{{ subline.NOM_RAMO }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['subline'].errors?.required\\\">\\n                      * subline is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <app-group-policy #appGroupPolicy\\n            [subline]=\\\"accidentDetails.subline\\\"\\n            [prevDetails]=\\\"prevAccidentDetails\\\"\\n            [groupPolicy]=\\\"groupPolicy\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [showExpiring]=\\\"false\\\"\\n            [(changedValues)]=\\\"changedValues\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-group-policy>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>General Information</strong>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Movement Dates</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['effectivityDate'].invalid \\n                    && (quoteForm.controls['effectivityDate'].dirty \\n                    || quoteForm.controls['effectivityDate'].touched)}\\\">\\n                    <label for=\\\"effectivityDate\\\">Effectivity Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                      (bsValueChange)=\\\"affecting('effectivityDate', 'Effectivity Date')\\\"\\n                      formControlName=\\\"effectivityDate\\\"\\n                      [(ngModel)]=\\\"accidentDetails.effectivityDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"\\n                      bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['effectivityDate'].errors?.required\\\">\\n                      * effectivity date is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['expiryDate'].invalid \\n                    && (quoteForm.controls['expiryDate'].dirty \\n                    || quoteForm.controls['expiryDate'].touched)}\\\">\\n                    <label for=\\\"expiryDate\\\">Expiry Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                      [minDate]=\\\"expiryDateMinDate\\\"\\n                      (bsValueChange)=\\\"affecting('expiryDate', 'Expirty Date')\\\"\\n                      formControlName=\\\"expiryDate\\\"\\n                      [(ngModel)]=\\\"accidentDetails.expiryDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"\\n                      bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['expiryDate'].errors?.required\\\">\\n                      * expiry date is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <app-policy-holder #appPolicyHolder\\n            [title]=\\\"'Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"accidentDetails\\\"\\n            [(policyHolder)]=\\\"policyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'primary'\\\"\\n            [optional]=\\\"false\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-policy-holder>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Insured Details</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Personal Information</h6>\\n                </div>\\n              </div>\\n\\n              <div formArrayName=\\\"insured\\\">\\n                <div *ngFor=\\\"let ins of quoteForm.get('insured')['controls']; let i=index\\\">\\n                  <div [formGroupName]=\\\"i\\\" class=\\\"card insured-card\\\">\\n                    <div class=\\\"card-body\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['firstName'].invalid \\n                              && (ins.controls['firstName'].dirty \\n                              || ins.controls['firstName'].touched)}\\\">\\n                            <label for=\\\"firstName\\\">First Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control required\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['firstName'].errors?.required\\\">\\n                              * first name is required\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"middleName\\\">Middle Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"middleName\\\" class=\\\"form-control\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['lastName'].invalid \\n                              && (ins.controls['lastName'].dirty \\n                              || ins.controls['lastName'].touched)}\\\">\\n                            <label for=\\\"lastName\\\">Last Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control required\\\"\\n                             oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                             [attr.disabled]=\\\"editMode ? null : true\\\">\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['lastName'].errors?.required\\\">\\n                              * last name is required\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"commercialStructure\\\">Suffix</label>\\n                            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"suffix\\\"\\n                              (change)=\\\"suffixOnChange(ins)\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                              <option></option>\\n                              <option *ngFor=\\\"let suffix of LOV.suffixLOV\\\" [ngValue]=\\\"suffix.TIPO_SUFIJO_NOMBRE\\\">{{ suffix.NOM_VALOR }}</option>\\n                            </select>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['gender'].invalid \\n                              && (ins.controls['gender'].dirty \\n                              || ins.controls['gender'].touched)}\\\">\\n                            <label for=\\\"gender\\\">Gender</label>\\n                            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"gender\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                              <option></option>\\n                              <option [ngValue]=\\\"1\\\">MALE</option>\\n                              <option [ngValue]=\\\"0\\\">FEMALE</option>\\n                            </select>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['gender'].errors?.required\\\">\\n                              * gender is required\\n                            </p>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['relationship'].invalid \\n                          && (ins.controls['relationship'].dirty \\n                          || ins.controls['relationship'].touched)}\\\">\\n                            <label for=\\\"relationship\\\">Relationship</label>\\n                            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"relationship\\\"\\n                              (change)=\\\"relationshipOnChange(ins)\\\"\\n                              [attr.disabled]=\\\"editMode && LOV.relationshipLOV?.length && i != 0 && editMode? null: true\\\">\\n                              <option \\n                                *ngFor=\\\"let relationship of LOV.relationshipLOV\\\"\\n                                [attr.disabled]=\\\"relationship.disabled ? '' : null\\\"\\n                                [ngValue]=\\\"relationship.COD_VALOR\\\">\\n                                {{ relationship.NOM_VALOR }}</option>\\n                            </select>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['relationship'].errors?.required\\\">\\n                              * relationship is required\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['birthDate'].invalid \\n                              && (ins.controls['birthDate'].dirty \\n                              || ins.controls['birthDate'].touched)}\\\">\\n                            <label for=\\\"birthDate\\\">Birth Date</label>\\n                            <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                              [maxDate]=\\\"ins.controls['bdaymaxdate'].value\\\" [minDate]=\\\"ins.controls['bdaymindate'].value\\\"\\n                              formControlName=\\\"birthDate\\\" bsDatepicker\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['birthDate'].errors?.required\\\">\\n                              * birth date is required\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-lg-12\\\">\\n                          <div class=\\\"form-check\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbWithHealthDeclaration{{i}}\\\"\\n                              formControlName=\\\"cbWithHealthDeclaration\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\"\\n                              (change)=\\\"cbWithHealthDeclarationOnChange(ins)\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"cbWithHealthDeclaration{{i}}\\\">\\n                              With Health Declaration\\n                            </label>\\n                          </div>\\n                          <label class=\\\"form-check-label\\\" for=\\\"cbWithHealthDeclaration\\\">\\n                            Declare Pre-existing Illness\\n                          </label>\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['preExistingIllness'].invalid \\n                              && (ins.controls['preExistingIllness'].dirty \\n                              || ins.controls['preExistingIllness'].touched)}\\\">\\n                            <textarea class=\\\"form-control required\\\"\\n                              [attr.disabled]=\\\"ins.controls['cbWithHealthDeclaration'].value && editMode ? null : ''\\\" type=\\\"text\\\"\\n                              id=\\\"preExistingIllness\\\" formControlName=\\\"preExistingIllness\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"></textarea>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['preExistingIllness'].errors?.required\\\">\\n                              * please indicate pre-existing illness\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['occupationalClass'].invalid \\n                              && (ins.controls['occupationalClass'].dirty \\n                              || ins.controls['occupationalClass'].touched)}\\\">\\n                            <label for=\\\"occupationalClass\\\">Occupational Class</label>\\n                            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"occupationalClass\\\"\\n                              (change)=\\\"occupationalClassOnchange(ins)\\\"\\n                              [attr.disabled]=\\\"LOV.occupationalClassLOV?.length && editMode? null : true\\\">\\n                              <option></option>\\n                              <option *ngFor=\\\"let occupationalClass of LOV.occupationalClassLOV\\\"\\n                                [ngValue]=\\\"occupationalClass.COD_VALOR\\\">CLASS {{ occupationalClass.COD_VALOR }} - {{ occupationalClass.NOM_VALOR }}</option>\\n                            </select>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['occupationalClass'].errors?.required\\\">\\n                              * occupational class is required\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['occupation'].invalid \\n                              && (ins.controls['occupation'].dirty \\n                              || ins.controls['occupation'].touched)}\\\">\\n                            <label for=\\\"occupation\\\">Occupation</label>\\n                            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"occupation\\\"\\n                              (change)=\\\"occupationOnchange(ins)\\\"\\n                              [attr.disabled]=\\\"ins.controls['occupationList'].value.length && editMode? null : true\\\">\\n                              <option></option>\\n                              <option *ngFor=\\\"let occupation of ins.controls['occupationList'].value\\\" [ngValue]=\\\"occupation.COD_VALOR\\\">\\n                                {{ occupation.NOM_VALOR }}</option>\\n                            </select>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['occupation'].errors?.required\\\">\\n                              * occupation is required\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-lg-12\\\" *ngIf=\\\"ins.controls['showOtherOccupation'].value\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"occupation\\\">\\n                            Declare Other Occupation\\n                          </label>\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['otherOccupation'].invalid \\n                              && (ins.controls['otherOccupation'].dirty \\n                              || ins.controls['otherOccupation'].touched)}\\\">\\n                            <textarea class=\\\"form-control required\\\" type=\\\"text\\\"\\n                              id=\\\"otherOccupation\\\" formControlName=\\\"otherOccupation\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['otherOccupation'].errors?.required\\\">\\n                              * please indicate other occupation\\n                            </p>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"clearfix\\\"></div>\\n                        <div class=\\\"col-lg-12\\\">\\n                          <div class=\\\"btn-group\\\" *ngIf=\\\"i > 0 && editMode\\\">\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"removeInsured(i)\\\">Remove</button>\\n                          </div>\\n                        </div>\\n\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div *ngIf=\\\"insuredHeadCount <= 5 && showHCBIDetails\\\" class=\\\"btn-group\\\">\\n                <button [disabled]=\\\"!editMode || quoteForm.get('insured').status !== 'VALID'\\\" type=\\\"button\\\"\\n                  (click)=\\\"addInsured(false)\\\" class=\\\"btn btn-primary\\\">Add Insured Individual</button>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\" *ngIf=\\\"showSPADetails\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Accidental Death / Disablement Detail</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['disablementValue'].invalid \\n                        && (quoteForm.controls['disablementValue'].dirty \\n                        || quoteForm.controls['disablementValue'].touched)}\\\">\\n                    <label for=\\\"disablementValue\\\">Accidental Death and Disablement Value</label>\\n                    <input type=\\\"number\\\" formControlName=\\\"disablementValue\\\" class=\\\"form-control required\\\"\\n                        [(ngModel)]=\\\"accidentDetails.disablementValue\\\"\\n                        [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['disablementValue'].errors?.required\\\">\\n                      * accidental death and disablement value is required\\n                    </p>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['disablementValue'].errors?.max\\\">\\n                      * accidental death and disablement value must be lower than Php2,000,001.00\\n                    </p>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['disablementValue'].errors?.min\\\">\\n                      * accidental death and disablement value must be higner than Php9,999.00\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <app-payment-breakdown\\n            *ngIf=\\\"showPaymentBreakdown\\\"\\n            #appPaymentBreakdown\\n            [paymentReceipt]=\\\"paymentReceipt\\\"\\n            [paymentBreakdown]=\\\"paymentBreakdown\\\"\\n            [showExchangeRate]=\\\"false\\\"\\n            [loadBreakdown]=\\\"triggerBreakdown\\\">\\n          </app-payment-breakdown>\\n\\n          <app-fixed-coverages\\n            *ngIf=\\\"showCoverage\\\"\\n            [line]=\\\"'accident'\\\"\\n            [coverageList]=\\\"coverageList\\\"\\n            [loadCoverage]=\\\"triggerCoverage\\\">\\n          </app-fixed-coverages>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Product</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['product'].invalid \\n                    && (quoteForm.controls['product'].dirty \\n                    || quoteForm.controls['product'].touched)}\\\">\\n                    <label for=\\\"product\\\">Product List</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"product\\\"\\n                      [(ngModel)]=\\\"accidentDetails.product\\\"\\n                      [attr.disabled]=\\\"LOV.productListLOV?.length && editMode? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let product of LOV.productListLOV\\\" [ngValue]=\\\"product.COD_MODALIDAD\\\">\\n                        {{ product.NOM_MODALIDAD }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['product'].errors?.required\\\">\\n                      * product list is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n         <!-- button controls for quotation -->\\n         <div *ngIf=\\\"!isIssuance\\\">\\n          <div *ngIf=\\\"showGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button\\n              *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n            <button\\n              *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"proceed(1)\\\">Generate</button>\\n          </div>\\n          <div *ngIf=\\\"showIssueQuoteBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button *ngIf=\\\"!editMode\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"manageBtn(1)\\\">Edit Details</button>\\n            <button\\n              *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Issue Quote</button>\\n            <button\\n              *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"proceed(2)\\\">Issue Quote</button>\\n          </div>\\n          <div *ngIf=\\\"showProceedToIssuanceBtn\\\" class=\\\"text-right\\\">\\n            <h5><small>Your quotation number:</small> {{accidentDetails.quotationNumber}}</h5>\\n          </div>\\n          <div *ngIf=\\\"showProceedToIssuanceBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button type=\\\"button\\\" (click)=\\\"newQuote()\\\" class=\\\"btn btn-primary\\\">New Quote</button>\\n            <button type=\\\"button\\\" (click)=\\\"printQuote()\\\" class=\\\"btn btn-primary\\\">Print Quote</button>\\n            <button type=\\\"button\\\" (click)=\\\"proceedToIssuance()\\\" class=\\\"btn btn-primary\\\">Proceed to Issuance</button>\\n          </div>\\n        </div>\\n\\n        <!-- button controls for issuance -->\\n        <div *ngIf=\\\"isIssuance\\\">\\n          <div *ngIf=\\\"(showSaveBtn && withTechControl) || (showPostBtn && withTechControl)\\\">\\n            <div class=\\\"alert alert-warning note\\\">\\n              <p>\\n                <strong>Quotation has tech control!</strong> Unable to issue policy.\\n              </p>\\n            </div>\\n            <!-- .note -->\\n            <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"showNewPolicyBtn\\\">\\n            <div class=\\\"alert alert-danger note\\\">\\n              <p>\\n                <strong>Quotation has error!</strong> Unable to issue policy.\\n              </p>\\n            </div>\\n            <!-- .note -->\\n            <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"showIssuanceGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button\\n              *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n            <button\\n              *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"proceed(1)\\\">Generate</button>\\n          </div>\\n\\n          <div *ngIf=\\\"showSaveBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button *ngIf=\\\"!editMode\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"manageBtn(1)\\\">Edit Details</button>\\n            <button\\n              *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Save</button>\\n            <button\\n              *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"proceed(3)\\\">Save</button>\\n          </div>\\n\\n          <div *ngIf=\\\"showPostBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button *ngIf=\\\"!editMode\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"editMode = !editMode\\\">Edit Details</button>\\n            <button\\n              *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Post</button>\\n            <button\\n              *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"proceed(4)\\\">Post</button>\\n          </div>\\n\\n          <div *ngIf=\\\"showPrintBtn\\\" class=\\\"text-right\\\">\\n            <h5><small>Your policy number:</small> {{accidentDetails.policyNumber}}</h5>\\n          </div>\\n          <div *ngIf=\\\"showPrintBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"newPolicy()\\\">New Policy</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"printPolicy()\\\">Print</button>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n        </form>\\n        <!-- .quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #quotationAccident -->\\n\\n<ng-template #proceedModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Are you sure you want to proceed?</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have changes to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of changedValues\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n    <h6>Changes may affect your premium and will create a new quotation.</h6>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Cancel\\n      </button>\\n      <button *ngIf=\\\"data.generateBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"issueQuote('S')\\\">\\n        Generate\\n      </button>\\n      <button *ngIf=\\\"data.saveBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"savePolicy()\\\">\\n        Save\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #validationModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Your application is incomplete</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have invalid/empty data to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of invalidForms\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Okay\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quotationCar\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-car fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        {{pageLabel}}\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/car.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\" id=\\\"topDiv\\\">\\n        <form [formGroup]=\\\"quoteForm\\\" class=\\\"regular-quote-form\\\">\\n\\n          <div *ngIf='isIssuance' class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Individual Policy</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <label class=\\\"input-group-text\\\" for=\\\"quotationNumber\\\">Quotation Number</label>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Quotation Number here..\\\"\\n                      formControlName=\\\"quotationNumber\\\" [(ngModel)]=\\\"carDetails.quotationNumber\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <button [disabled]=\\\"disableLoadBtn\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"loadQuotation()\\\"\\n                        type=\\\"button\\\">Load</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Vehicle Information</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Risk Details</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['make'].invalid \\n                    && (quoteForm.controls['make'].dirty \\n                    || quoteForm.controls['make'].touched)}\\\">\\n                    <label for=\\\"make\\\">Make</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"make\\\"\\n                      (change)=\\\"makeOnchange(); affecting('make', 'Make')\\\"\\n                      [(ngModel)]=\\\"carDetails.make\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.makeLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let make of LOV.makeLOV\\\" [ngValue]=\\\"make.COD_MARCA\\\">{{ make.NOM_MARCA }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['make'].errors?.required\\\">\\n                      * make is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['model'].invalid \\n                  && (quoteForm.controls['model'].dirty \\n                  || quoteForm.controls['model'].touched)}\\\">\\n                    <label for=\\\"model\\\">Model</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"model\\\"\\n                      (change)=\\\"modelOnchange(); affecting('model', 'Model')\\\"\\n                      [(ngModel)]=\\\"carDetails.model\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.modelLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let model of LOV.modelLOV\\\" [ngValue]=\\\"model.COD_MODELO\\\">{{ model.NOM_MODELO }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['model'].errors?.required\\\">\\n                      * model is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['vehicleType'].invalid \\n                  && (quoteForm.controls['vehicleType'].dirty \\n                  || quoteForm.controls['vehicleType'].touched)}\\\">\\n                    <label for=\\\"vehicleType\\\">Vehicle Type</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"vehicleType\\\"\\n                      (change)=\\\"vehicleTypeOnchange(); affecting('vehicleType', 'Vehicle Type')\\\"\\n                      [(ngModel)]=\\\"carDetails.vehicleType\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.vehicleTypeLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let vehicleType of LOV.vehicleTypeLOV\\\" [ngValue]=\\\"vehicleType.COD_TIP_VEHI\\\">\\n                        {{ vehicleType.NOM_TIP_VEHI }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['vehicleType'].errors?.required\\\">\\n                      * vehicle type is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['modelYear'].invalid \\n                  && (quoteForm.controls['modelYear'].dirty \\n                  || quoteForm.controls['modelYear'].touched)}\\\">\\n                    <label for=\\\"modelYear\\\">Model Year</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"modelYear\\\"\\n                      (change)=\\\"modelYearOnchange(); affecting('modelYear', 'Model Year')\\\"\\n                      [(ngModel)]=\\\"carDetails.modelYear\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.modelYearLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let modelYear of LOV.modelYearLOV\\\" [ngValue]=\\\"modelYear.ANIO_SUB_MODELO\\\">\\n                        {{ modelYear.ANIO_SUB_MODELO }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['modelYear'].errors?.required\\\">\\n                      * model year is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['subModel'].invalid \\n                  && (quoteForm.controls['subModel'].dirty \\n                  || quoteForm.controls['subModel'].touched)}\\\">\\n                    <label for=\\\"subModel\\\">Sub Model</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subModel\\\"\\n                      (change)=\\\"subModelOnchange(); affecting('subModel', 'Sub Model')\\\"\\n                      [(ngModel)]=\\\"carDetails.subModel\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.subModelLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let subModel of LOV.subModelLOV\\\" [ngValue]=\\\"subModel.COD_SUB_MODELO\\\">\\n                        {{subModel.NOM_SUB_MODELO + '('+ subModel.TIP_CAJA_CAMBIO+ ') '+ (subModel.NOM_TRACCION == 'UNKNOWN' ? \\\"\\\": subModel.NOM_TRACCION)}}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['subModel'].errors?.required\\\">\\n                      * sub model is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['typeOfUse'].invalid \\n                  && (quoteForm.controls['typeOfUse'].dirty \\n                  || quoteForm.controls['typeOfUse'].touched)}\\\">\\n                    <label for=\\\"typeOfUse\\\">Type of Use</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"typeOfUse\\\"\\n                      (change)=\\\"typeOfUseOnchange(); affecting('typeOfUse', 'Type of Use')\\\"\\n                      [(ngModel)]=\\\"carDetails.typeOfUse\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.typeOfUseLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let typeOfUse of LOV.typeOfUseLOV\\\" [ngValue]=\\\"typeOfUse.COD_USO_VEHI\\\">\\n                        {{ typeOfUse.NOM_USO_VEHI }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['typeOfUse'].errors?.required\\\">\\n                      * type of use is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['subline'].invalid \\n                  && (quoteForm.controls['subline'].dirty \\n                  || quoteForm.controls['subline'].touched)}\\\">\\n                    <label for=\\\"subline\\\">Subline</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                      (change)=\\\"sublineOnchange($event); affecting('subline', 'Subline')\\\"\\n                      [(ngModel)]=\\\"carDetails.subline\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.sublineLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let subline of LOV.sublineLOV\\\" [ngValue]=\\\"subline.value\\\"\\n                        [attr.data-sublinedate]=\\\"subline.effectivityDate\\\">{{ subline.name }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['subline'].errors?.required\\\">\\n                      * subline is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['vehicleValue'].invalid \\n                  && (quoteForm.controls['vehicleValue'].dirty \\n                  || quoteForm.controls['vehicleValue'].touched)}\\\">\\n                    <label for=\\\"vehicleValue\\\">Vehicle Value</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"vehicleValue\\\" class=\\\"form-control required\\\"\\n                      (change)=\\\"affecting('vehicleValue', 'Vehicle Value')\\\"\\n                      [(ngModel)]=\\\"carDetails.vehicleValue\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['vehicleValue'].errors?.required\\\">\\n                      * vehicle value is required\\n                    </p>\\n                  </div>\\n                </div>\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Vehicle Information</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['color'].invalid \\n                    && (quoteForm.controls['color'].dirty \\n                    || quoteForm.controls['color'].touched)}\\\">\\n                    <label for=\\\"color\\\">Color</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"color\\\"\\n                      [(ngModel)]=\\\"carDetails.color\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option *ngFor=\\\"let color of LOV.colorLOV\\\" [ngValue]=\\\"color.COD_COLOR\\\">{{ color.NOM_COLOR }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['color'].errors?.required\\\">\\n                      * color is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['areaOfUsage'].invalid \\n                    && (quoteForm.controls['areaOfUsage'].dirty \\n                    || quoteForm.controls['areaOfUsage'].touched)}\\\">\\n                    <label for=\\\"areaOfUsage\\\">Area of Usage</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"areaOfUsage\\\"\\n                      [(ngModel)]=\\\"carDetails.areaOfUsage\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.areaOfUsageLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let areaOfUsage of LOV.areaOfUsageLOV\\\" [ngValue]=\\\"areaOfUsage.COD_VALOR\\\">\\n                        {{ areaOfUsage.NOM_VALOR }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['areaOfUsage'].errors?.required\\\">\\n                      * area of usage is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['conductionNumber'].invalid \\n                  && (quoteForm.controls['conductionNumber'].dirty \\n                  || quoteForm.controls['conductionNumber'].touched)}\\\">\\n                    <label for=\\\"conductionNumber\\\">Conduction Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"conductionNumber\\\" class=\\\"form-control\\\" \\n                      [ngClass]=\\\"{'required' : (carDetails.plateNumber === undefined\\n                      || carDetails.plateNumber === null\\n                      || carDetails.plateNumber === '')\\n                      && carDetails.subline !== 120}\\\"\\n                      [(ngModel)]=\\\"carDetails.conductionNumber\\\"\\n                      (change)=\\\"affecting('conductionNumber', 'Conduction Number')\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['conductionNumber'].errors?.required\\\">\\n                      * conduction number is required\\n                    </p>\\n                    <p class=\\\"form-error\\\"\\n                      *ngIf=\\\"quoteForm.controls['conductionNumber'].errors?.invalidConductionNumber\\\">\\n                      * conduction number is invalid\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['plateNumber'].invalid \\n                  && (quoteForm.controls['plateNumber'].dirty \\n                  || quoteForm.controls['plateNumber'].touched)}\\\">\\n                    <label for=\\\"plateNumber\\\">Plate Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"plateNumber\\\" class=\\\"form-control\\\"\\n                      [ngClass]=\\\"{'required' : (carDetails.conductionNumber === undefined\\n                      || carDetails.conductionNumber === null\\n                      || carDetails.conductionNumber === '')\\n                      && carDetails.subline !== 120}\\\" \\n                      [(ngModel)]=\\\"carDetails.plateNumber\\\"\\n                      (change)=\\\"affecting('plateNumber', 'Plate Number')\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode && (LOV.sublineLOV?.length && LOV.modelYearLOV?.length) ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['plateNumber'].errors?.required\\\">\\n                      * plate number is required\\n                    </p>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['plateNumber'].errors?.invalidPlateNumber\\\">\\n                      * plate number is invalid\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['serialNumber'].invalid \\n                  && (quoteForm.controls['serialNumber'].dirty \\n                  || quoteForm.controls['serialNumber'].touched)}\\\">\\n                    <label for=\\\"serialNumber\\\">Chassis Number/Serial Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"serialNumber\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"carDetails.serialNumber\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['serialNumber'].errors?.required\\\">\\n                      * serial number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['engineNumber'].invalid \\n                  && (quoteForm.controls['engineNumber'].dirty \\n                  || quoteForm.controls['engineNumber'].touched)}\\\">\\n                    <label for=\\\"engineNumber\\\">Motor Number/Engine Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"engineNumber\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"carDetails.engineNumber\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['engineNumber'].errors?.required\\\">\\n                      * engine number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!-- <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['mvFileNumber'].invalid \\n                    && (quoteForm.controls['mvFileNumber'].dirty \\n                    || quoteForm.controls['mvFileNumber'].touched)}\\\">\\n                    <label for=\\\"mvFileNumber\\\">MV File Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"mvFileNumber\\\" class=\\\"form-control {{isIssuance ? 'required' : ''}}\\\"\\n                      [(ngModel)]=\\\"carDetails.mvFileNumber\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['mvFileNumber'].errors?.required\\\">\\n                        * MV File Number is required\\n                      </p>\\n                  </div>\\n                </div> -->\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"mvFileNumber\\\">MV File Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"mvFileNumber\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"carDetails.mvFileNumber\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"purchaseDate\\\">Purchase Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                      formControlName=\\\"purchaseDate\\\" [(ngModel)]=\\\"carDetails.purchaseDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"\\n                      bsDatepicker>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['receivedBy'].invalid \\n                  && (quoteForm.controls['receivedBy'].dirty \\n                  || quoteForm.controls['receivedBy'].touched)}\\\">\\n                    <label for=\\\"receivedBy\\\">Received By</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"receivedBy\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"carDetails.receivedBy\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['receivedBy'].errors?.required\\\">\\n                      * received by is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['receivedDate'].invalid \\n                      && (quoteForm.controls['receivedDate'].dirty \\n                      || quoteForm.controls['receivedDate'].touched)}\\\">\\n                    <label for=\\\"receivedDate\\\">Received Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\" [maxDate]=\\\"today\\\"\\n                      formControlName=\\\"receivedDate\\\" [(ngModel)]=\\\"carDetails.receivedDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"\\n                      bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['receivedDate'].errors?.required\\\">\\n                      * received date is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <app-policy-holder\\n            #appPolicyHolder\\n            [title]=\\\"'Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"carDetails\\\"\\n            [(policyHolder)]=\\\"policyHolder\\\"\\n            [compareTo]=\\\"assigneePolicyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'primary'\\\"\\n            [optional]=\\\"false\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-policy-holder>\\n\\n          <app-policy-holder\\n            *ngIf=\\\"isIssuance\\\"\\n            [title]=\\\"'Alternative Policy Holder (Optional)'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"carDetails\\\"\\n            [(policyHolder)]=\\\"secondaryPolicyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'secondary'\\\"\\n            [optional]=\\\"true\\\">\\n          </app-policy-holder>\\n\\n          <app-group-policy\\n            #appGroupPolicy\\n            [subline]=\\\"carDetails.subline\\\"\\n            [prevDetails]=\\\"prevCarDetails\\\"\\n            [groupPolicy]=\\\"groupPolicy\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [showExpiring]=\\\"true\\\"\\n            [(changedValues)]=\\\"changedValues\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-group-policy>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>General Information</strong>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Movement Dates</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['effectivityDate'].invalid \\n                    && (quoteForm.controls['effectivityDate'].dirty \\n                    || quoteForm.controls['effectivityDate'].touched)}\\\">\\n                    <label for=\\\"effectivityDate\\\">Effectivity Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                      (bsValueChange)=\\\"affecting('effectivityDate', 'Effectivity Date')\\\"\\n                      formControlName=\\\"effectivityDate\\\"\\n                      [(ngModel)]=\\\"carDetails.effectivityDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"\\n                      bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['effectivityDate'].errors?.required\\\">\\n                      * effectivity date is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['expiryDate'].invalid \\n                    && (quoteForm.controls['expiryDate'].dirty \\n                    || quoteForm.controls['expiryDate'].touched)}\\\">\\n                    <label for=\\\"expiryDate\\\">Expiry Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                      [minDate]=\\\"expiryDateMinDate\\\"\\n                      (bsValueChange)=\\\"affecting('expiryDate', 'Expirty Date')\\\"\\n                      formControlName=\\\"expiryDate\\\"\\n                      [(ngModel)]=\\\"carDetails.expiryDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"\\n                      bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['expiryDate'].errors?.required\\\">\\n                      * expiry date is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\"\\n              (click)=\\\"showAccessories = !showAccessories\\\" matTooltip=\\\"click to show/hide accessories\\\">\\n              <strong>Accessories (Optional)</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showAccessories\\\">\\n\\n              <div formArrayName=\\\"accessories\\\">\\n                <div *ngFor=\\\"let accessories of quoteForm.get('accessories')['controls']; let i=index\\\">\\n                  <div [formGroupName]=\\\"i\\\" class=\\\"card accessory-card\\\">\\n                    <div class=\\\"card-body\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-10 col-md-9\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': accessories.controls['accessory'].invalid \\n                                && (accessories.controls['accessory'].dirty \\n                                || accessories.controls['accessory'].touched)}\\\">\\n                                <label for=\\\"accessory\\\">Accessory List</label>\\n                                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"accessory\\\"\\n                                  (change)=\\\"accessoryOnchange($event, i)\\\"\\n                                  [attr.disabled]=\\\"editMode ? null : true\\\">\\n                                  <option *ngFor=\\\"let accessoryList of LOV.accessoryListLOV\\\"\\n                                    [ngValue]=\\\"accessoryList.COD_ACCESORIO\\\"\\n                                    [attr.disabled]=\\\"accessoryList.disabled ? '' : null\\\"\\n                                    [attr.data-price]=\\\"accessoryList.IMP_ACCESORIO\\\"\\n                                    [attr.data-type]=\\\"accessoryList.ABR_AGRUP_ACCESORIO\\\">\\n                                    {{ accessoryList.NOM_ACCESORIO }}\\n                                    ( {{ \\n                                      accessoryList.ABR_AGRUP_ACCESORIO == 'A' ? 'Additional' :\\n                                      accessoryList.ABR_AGRUP_ACCESORIO == 'B' ? 'Built-in' : 'Free'\\n                                    }} )</option>\\n                                </select>\\n                                <p class=\\\"form-error\\\" *ngIf=\\\"accessories.controls['accessory'].errors?.required\\\">\\n                                  * accessory list is required\\n                                </p>\\n                              </div>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': accessories.controls['accessoryType'].invalid \\n                                && (accessories.controls['accessoryType'].dirty \\n                                || accessories.controls['accessoryType'].touched)}\\\">\\n                                <label for=\\\"accessoryType\\\">Accessory Type</label>\\n                                <input type=\\\"text\\\" formControlName=\\\"accessoryType\\\" class=\\\"form-control required\\\"\\n                                  readonly>\\n                                <p class=\\\"form-error\\\" *ngIf=\\\"accessories.controls['accessoryType'].errors?.required\\\">\\n                                  * accessory type is required\\n                                </p>\\n                              </div>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': accessories.controls['price'].invalid \\n                                && (accessories.controls['price'].dirty \\n                                || accessories.controls['price'].touched)}\\\">\\n                                <label for=\\\"price\\\">Price</label>\\n                                <input type=\\\"number\\\"  class=\\\"form-control required\\\"\\n                                  formControlName=\\\"price\\\"\\n                                  [attr.disabled]=\\\"editMode ? null : true\\\">\\n                                <p class=\\\"form-error\\\" *ngIf=\\\"accessories.controls['price'].errors?.required\\\">\\n                                  * price is required\\n                                </p>\\n                              </div>\\n                            </div>\\n\\n                            <div class=\\\"col-md-12\\\">\\n                              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': accessories.controls['description'].invalid \\n                                && (accessories.controls['description'].dirty \\n                                || accessories.controls['description'].touched)}\\\">\\n                                <label for=\\\"description\\\">Description</label>\\n                                <textarea type=\\\"text\\\" formControlName=\\\"description\\\"\\n                                  class=\\\"form-control required\\\"\\n                                  [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                                <p class=\\\"form-error\\\" *ngIf=\\\"accessories.controls['description'].errors?.required\\\">\\n                                  * description is required\\n                                </p>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-lg-2 col-md-3\\\">\\n                          <div *ngIf=\\\"editMode\\\" class=\\\"btn-group\\\">\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"removeAccessory(i)\\\">Remove</button>\\n                          </div>\\n                        </div>\\n\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"btn-group\\\">\\n                <button [disabled]=\\\"!editMode || quoteForm.get('accessories').status !== 'VALID' || !carDetails.subline\\\"\\n                  type=\\\"button\\\" (click)=\\\"addAccessory()\\\" class=\\\"btn btn-primary\\\">Add Accessory</button>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\"\\n              (click)=\\\"showAdditionalInformation = !showAdditionalInformation\\\"\\n              matTooltip=\\\"click to show/hide additional policy information\\\">\\n              <strong>Additional Policy Information (Optional)</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showAdditionalInformation\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Additional Vehicle Information</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-9\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"customRiskName\\\">Custom Risk Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carDetails.customRiskName\\\"\\n                      formControlName=\\\"customRiskName\\\">\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"seatingCapacity\\\">Seating Capacity</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                      (change)=\\\"affecting('seatingCapacity', 'Seating Capacity')\\\"\\n                      [(ngModel)]=\\\"carDetails.seatingCapacity\\\"\\n                      formControlName=\\\"seatingCapacity\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"weight\\\">Weight</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carDetails.weight\\\" formControlName=\\\"weight\\\"\\n                      readonly>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"displacement\\\">Displacement</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carDetails.displacement\\\"\\n                      formControlName=\\\"displacement\\\" readonly>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"classification\\\">Classification</label>\\n                    <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"classification\\\"\\n                      [(ngModel)]=\\\"carDetails.classification\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let classification of LOV.classificationLOV\\\"\\n                        [ngValue]=\\\"classification.TIP_VEHI_PESO\\\">{{ classification.NOM_VALOR }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"price\\\">Coverage Area</label>\\n                    <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"coverageArea\\\"\\n                      (change)=\\\"affecting('coverageArea', 'Coverage Area')\\\"\\n                      [(ngModel)]=\\\"carDetails.coverageArea\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let coverageArea of LOV.coverageAreaLOV\\\" [ngValue]=\\\"coverageArea.COD_AREA_COVER\\\">\\n                        {{ coverageArea.NOM_VALOR }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['assuredsCoinsuranceShare'].invalid \\n                  && (quoteForm.controls['assuredsCoinsuranceShare'].dirty \\n                  || quoteForm.controls['assuredsCoinsuranceShare'].touched)}\\\">\\n                    <label for=\\\"assuredCoinsuranceShare\\\">Assured's Coinsurance Share</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carDetails.assuredsCoinsuranceShare\\\"\\n                      formControlName=\\\"assuredsCoinsuranceShare\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['assuredsCoinsuranceShare'].errors?.max\\\">\\n                      * assured's coinsurance share max value is 100\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbWaivedMinPremium\\\"\\n                        (change)=\\\"affecting('cbWaivedMinPremium', 'Waived Min. Premium')\\\"\\n                        [(ngModel)]=\\\"carDetails.cbWaivedMinPremium\\\"\\n                        formControlName=\\\"cbWaivedMinPremium\\\"\\n                        [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbWaivedMinPremium\\\">\\n                        Waived Min. Premium\\n                      </label>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div *ngIf=\\\"isIssuance\\\" class=\\\"col-xl-12\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"form-divider\\\"></div>\\n\\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <div class=\\\"form-check\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbPolicyOnlyDriver\\\"\\n                            [(ngModel)]=\\\"carDetails.cbPolicyOnlyDriver\\\" formControlName=\\\"cbPolicyOnlyDriver\\\"\\n                            [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"cbPolicyOnlyDriver\\\">\\n                            Is the Policy Holder the only Driver?\\n                          </label>\\n                        </div>\\n                      </div>\\n                    </div>\\n    \\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <div class=\\\"form-check\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbPolicyOwner\\\"\\n                            [(ngModel)]=\\\"carDetails.cbPolicyOwner\\\" formControlName=\\\"cbPolicyOwner\\\"\\n                            [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"cbPolicyOwner\\\">\\n                            Is the Policy Holder the Owner?\\n                          </label>\\n                        </div>\\n                      </div>\\n                    </div>\\n    \\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <div class=\\\"form-check\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbHasAssignee\\\"\\n                            [(ngModel)]=\\\"carDetails.cbHasAssignee\\\"\\n                            formControlName=\\\"cbHasAssignee\\\"\\n                            (change)=\\\"showAssignee = !showAssignee\\\"\\n                            [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"cbHasAssignee\\\">\\n                            Has Assignee?\\n                          </label>\\n                        </div>\\n                      </div>\\n                    </div>\\n    \\n                    <div class=\\\"form-divider\\\"></div>\\n    \\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['mortgageClause'].invalid \\n                      && (quoteForm.controls['mortgageClause'].dirty \\n                      || quoteForm.controls['mortgageClause'].touched)}\\\">\\n                        <div class=\\\"form-check\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbVehicleMortgaged\\\"\\n                            [(ngModel)]=\\\"carDetails.cbVehicleMortgaged\\\"\\n                            formControlName=\\\"cbVehicleMortgaged\\\"\\n                            (change)=\\\"showMortgagee = !showMortgagee\\\"\\n                            [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"cbVehicleMortgaged\\\">\\n                            Vehicle Mortgaged\\n                          </label>\\n                        </div>\\n                        <label class=\\\"form-check-label\\\" for=\\\"mortgageClause\\\">\\n                          Mortgage Clause\\n                        </label>\\n                        <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"mortgageClause\\\"\\n                          [attr.disabled]=\\\"editMode && carDetails.cbVehicleMortgaged ? null : ''\\\"\\n                          [(ngModel)]=\\\"carDetails.mortgageClause\\\">\\n                          <option></option>\\n                          <option *ngFor=\\\"let mortgageClause of LOV.mortgageClauseLOV\\\"\\n                            [ngValue]=\\\"mortgageClause.TIP_MORT_CLAUSE\\\">{{ mortgageClause.NOM_VALOR }}</option>\\n                        </select>\\n                        <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['mortgageClause'].errors?.required\\\">\\n                          * mortgage clause is required\\n                        </p>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Other Details</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbGlassEtchingEntitled\\\"\\n                        [(ngModel)]=\\\"carDetails.cbGlassEtchingEntitled\\\" formControlName=\\\"cbGlassEtchingEntitled\\\"\\n                        [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbGlassEtchingEntitled\\\">\\n                        Glass Etching Entitled\\n                      </label>\\n                    </div>\\n                    <label class=\\\"form-check-label\\\" for=\\\"glassEtchingAvailmentDate\\\">\\n                      Glass Etching Availment Date\\n                    </label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\" [minDate]=\\\"today\\\"\\n                      [attr.disabled]=\\\"editMode && carDetails.cbGlassEtchingEntitled ? null : ''\\\"\\n                      formControlName=\\\"glassEtchingAvailmentDate\\\" [(ngModel)]=\\\"carDetails.glassEtchingAvailmentDate\\\"\\n                      bsDatepicker>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbPrepaidPremium\\\"\\n                        [(ngModel)]=\\\"carDetails.cbPrepaidPremium\\\" formControlName=\\\"cbPrepaidPremium\\\"\\n                        [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbPrepaidPremium\\\">\\n                        Prepaid Premium\\n                      </label>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Inspection Details</h6>\\n                </div>\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"alert alert-info note\\\">\\n                    <p><strong>Important Reminder:</strong> Only fill up the following details when advised by the\\n                      UNDERWRITER.\\n                    </p>\\n                  </div>\\n                  <!-- .note -->\\n                </div>\\n\\n                <div class=\\\"col-md-8\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"existingDamages\\\">Existing Damages</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carDetails.existingDamages\\\"\\n                      formControlName=\\\"existingDamages\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"price\\\">Inspection Assessment</label>\\n                    <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"inspectionAssessment\\\"\\n                      [(ngModel)]=\\\"carDetails.inspectionAssessment\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let inspectionAssessment of LOV.inspectionAssessmentLOV\\\"\\n                        [ngValue]=\\\"inspectionAssessment.COD_VALOR\\\">{{ inspectionAssessment.NOM_VALOR }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <app-policy-holder\\n            *ngIf=\\\"isIssuance && showAssignee\\\"\\n            [title]=\\\"'Assignee Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"carDetails\\\"\\n            [(policyHolder)]=\\\"assigneePolicyHolder\\\"\\n            [compareTo]=\\\"policyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'assignee'\\\"\\n            [optional]=\\\"false\\\">\\n          </app-policy-holder>\\n\\n          <app-policy-holder\\n            *ngIf=\\\"isIssuance && showMortgagee\\\"\\n            [title]=\\\"'Mortgagee Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"false\\\"\\n            [details]=\\\"carDetails\\\"\\n            [(policyHolder)]=\\\"mortgageePolicyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'mortgagee'\\\"\\n            [optional]=\\\"false\\\">\\n          </app-policy-holder>\\n\\n          <div *ngIf='isIssuance' class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\" (click)=\\\"showSubAgent = !showSubAgent\\\"\\n              matTooltip=\\\"click to show/hide subagents\\\">\\n              <strong>Subagent (Optional)</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showSubAgent\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                  <h6>Subagent List</h6>\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['subAgents'].invalid \\n                      && (quoteForm.controls['subAgents'].dirty \\n                      || quoteForm.controls['subAgents'].touched)}\\\">\\n                    <ng-select [items]=\\\"LOV.subagentLOV\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select Subagent\\\" appendTo=\\\"body\\\"\\n                      formControlName=\\\"subAgents\\\" multiple=\\\"true\\\" [(ngModel)]=\\\"carDetails.subAgents\\\">\\n                    </ng-select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['subAgents'].errors?.required\\\">\\n                      * subagent is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"isIssuance && showCTPL\\\" class=\\\"card shadow mb-3\\\" id=\\\"CTPLAuth\\\">\\n            <!-- <div *ngIf=\\\"isIssuance\\\" class=\\\"card shadow mb-3\\\" id=\\\"CTPLAuth\\\"> -->\\n            <div class=\\\"card-header\\\">\\n              <strong>CTPL Authentication (for products with CTPL)</strong>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['automaticAuth'].invalid \\n                    && (quoteForm.controls['automaticAuth'].dirty \\n                    || quoteForm.controls['automaticAuth'].touched)}\\\">\\n                    <label for=\\\"automaticAuth\\\">Automatic Authentication</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"automaticAuth\\\"\\n                      [(ngModel)]=\\\"carDetails.automaticAuth\\\">\\n                      <option value=\\\"S\\\">YES</option>\\n                      <option value=\\\"N\\\">NO</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['automaticAuth'].errors?.required\\\">\\n                      * automatic authentication is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['registrationType'].invalid \\n                    && (quoteForm.controls['registrationType'].dirty \\n                    || quoteForm.controls['registrationType'].touched)}\\\">\\n                    <label for=\\\"registrationType\\\">Registration Type</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"registrationType\\\"\\n                      [(ngModel)]=\\\"carDetails.registrationType\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let rType of LOV.registrationTypeLOV\\\" [ngValue]=\\\"rType.COD_VALOR\\\">\\n                        {{ rType.NOM_VALOR }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['registrationType'].errors?.required\\\">\\n                      * registration type is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"mvType\\\">MV Type (leave blank to set default value)</label>\\n                    <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"mvType\\\" [(ngModel)]=\\\"carDetails.mvType\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let mv of LOV.mvTypeLOV\\\" [ngValue]=\\\"mv.COD_VALOR\\\">{{ mv.NOM_VALOR }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['cocNumber'].invalid \\n                  && (quoteForm.controls['cocNumber'].dirty \\n                  || quoteForm.controls['cocNumber'].touched)}\\\">\\n                    <label for=\\\"cocNumber\\\">COC Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"cocNumber\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"carDetails.cocNumber\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['cocNumber'].errors?.required\\\">\\n                      * coc number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-sm-8\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['authNumber'].invalid \\n                    && (quoteForm.controls['authNumber'].dirty \\n                    || quoteForm.controls['authNumber'].touched)}\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbIsNotRequiredAuthNumber\\\"\\n                        formControlName=\\\"cbIsNotRequiredAuthNumber\\\" [(ngModel)]=\\\"carDetails.cbIsNotRequiredAuthNumber\\\"\\n                        (change)=\\\"cbIsNotRequiredAuthNumberChange()\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbIsNotRequiredAuthNumber\\\">\\n                        Do not require Authentication Number\\n                      </label>\\n                    </div>\\n                    <label class=\\\"form-check-label\\\" for=\\\"cbIsNotRequiredAuthNumber\\\">\\n                      Authentication Number (ISAP Authentication)\\n                    </label>\\n                    <div class=\\\"input-group mb-3\\\">\\n                      <input type=\\\"text\\\" formControlName=\\\"authNumber\\\"\\n                        [attr.disabled]=\\\"carDetails.cbIsNotRequiredAuthNumber ? '' : null\\\" class=\\\"form-control required\\\"\\n                        [(ngModel)]=\\\"carDetails.authNumber\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <button (click)=\\\"authCOCRegistration()\\\" [attr.disabled]=\\\"carDetails.cbIsNotRequiredAuthNumber ? '' : null\\\"\\n                          class=\\\"btn btn-primary\\\" type=\\\"button\\\">Authenticate</button>\\n                      </div>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['authNumber'].errors?.required\\\">\\n                        * authentication number is required\\n                      </p>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- cannot use reference variable and ngIf -->\\n          <app-coverages\\n            *ngIf=\\\"showCoverage\\\"\\n            [carDetails]=\\\"carDetails\\\"\\n            [(showCTPL)]=\\\"showCTPL\\\"\\n            [quoteForm]=\\\"quoteForm\\\"\\n            [coverageList]=\\\"coverageList\\\"\\n            [coverageVariable]=\\\"coverageVariable\\\"\\n            [amountList]=\\\"amountList\\\"\\n            [premiumAmount]=\\\"premiumAmount\\\"\\n            [coverageAmount]=\\\"coverageAmount\\\"\\n            [coverageVariableData]=\\\"coverageVariableData\\\"\\n            [isModifiedCoverage]=\\\"isModifiedCoverage\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [hasRoadAssist]=\\\"hasRoadAssist\\\"\\n            [loadCoverage]=\\\"triggerCoverage\\\">\\n          </app-coverages>\\n\\n          <app-payment-breakdown\\n            *ngIf=\\\"showPaymentBreakdown\\\"\\n            #appPaymentBreakdown\\n            [paymentReceipt]=\\\"paymentReceipt\\\"\\n            [paymentBreakdown]=\\\"paymentBreakdown\\\"\\n            [showExchangeRate]=\\\"false\\\"\\n            [loadBreakdown]=\\\"triggerBreakdown\\\">\\n          </app-payment-breakdown>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Product</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Product Data</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['paymentMethod'].invalid \\n                        && (quoteForm.controls['paymentMethod'].dirty \\n                        || quoteForm.controls['paymentMethod'].touched)}\\\">\\n                    <label for=\\\"paymentMethod\\\">Payment Method</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"paymentMethod\\\"\\n                      [(ngModel)]=\\\"carDetails.paymentMethod\\\"\\n                      (change)=\\\"affecting('paymentMethod', 'Payment Method')\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.paymentMethodLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let paymentMethod of LOV.paymentMethodLOV\\\"\\n                        [ngValue]=\\\"paymentMethod.COD_FRACC_PAGO\\\">\\n                        {{ paymentMethod.NOM_FRACC_PAGO }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['paymentMethod'].errors?.required\\\">\\n                      * payment method is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['product'].invalid \\n                        && (quoteForm.controls['product'].dirty \\n                        || quoteForm.controls['product'].touched)}\\\">\\n                    <label for=\\\"product\\\">Product List</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"product\\\"\\n                      [(ngModel)]=\\\"carDetails.productList\\\"\\n                      (change)=\\\"affecting('productList', 'Product List')\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.productListLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let product of LOV.productListLOV\\\" [ngValue]=\\\"product.COD_MODALIDAD\\\">\\n                        {{ product.NOM_MODALIDAD }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['product'].errors?.required\\\">\\n                      * product list is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined\\\" class=\\\"alert alert-warning note\\\">\\n            <p>\\n              <strong>Required:</strong> You need to fill out Alternative Policy holder <strong>Separator</strong>.\\n              Scroll to <button class=\\\"btn btn-warning\\\" (click)=\\\"scrollTo('secondary_panel')\\\">Alternative</button>\\n            </p>\\n          </div>\\n          <!-- .note -->\\n\\n          <div *ngIf=\\\"carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')\\\" class=\\\"alert alert-warning note\\\">\\n            <p>\\n              <strong>Required:</strong> You are required to add <strong>Assignee</strong>.\\n              Scroll to <button class=\\\"btn btn-warning\\\" (click)=\\\"scrollTo('assignee_panel')\\\">Assignee</button>\\n            </p>\\n          </div>\\n          <!-- .note -->\\n\\n          <div *ngIf=\\\"carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == '')\\\" class=\\\"alert alert-warning note\\\">\\n            <p>\\n              <strong>Required:</strong> You are required to add <strong>Mortgagee</strong>. \\n              Scroll to <button class=\\\"btn btn-warning\\\" (click)=\\\"scrollTo('mortgagee_panel')\\\">Mortgagee</button>\\n            </p>\\n          </div>\\n          <!-- .note -->\\n\\n          <!-- button controls for quotation -->\\n          <div *ngIf=\\\"!isIssuance\\\">\\n            <div *ngIf=\\\"showGenerateBtnGrp\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n              <button *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceed(1)\\\">Generate</button>\\n            </div>\\n  \\n            <div *ngIf=\\\"showIssueQuoteBtnGrp\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"manageBtn(1)\\\">Edit Details</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"manageBtn(1, true)\\\">Edit Coverage</button>\\n              <button\\n                [disabled]=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(2)\\\">Issue Quote</button>\\n            </div>\\n  \\n            <div *ngIf=\\\"showProceedToIssuanceBtnGrp\\\" class=\\\"text-right\\\">\\n              <h5><small>Your quotation number:</small> {{carDetails.quotationNumber}}</h5>\\n            </div>\\n            <div *ngIf=\\\"showProceedToIssuanceBtnGrp\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" (click)=\\\"newQuote()\\\" class=\\\"btn btn-primary\\\">New Quote</button>\\n              <button type=\\\"button\\\" (click)=\\\"printQuote()\\\" class=\\\"btn btn-primary\\\">Print Quote</button>\\n              <button type=\\\"button\\\" (click)=\\\"proceedToIssuance()\\\" class=\\\"btn btn-primary\\\">Proceed to Issuance</button>\\n            </div>\\n          </div>\\n\\n          <!-- button controls for issuance -->\\n          <div *ngIf=\\\"isIssuance\\\">\\n            <div *ngIf=\\\"(showSaveBtn && withTechControl) || (showPostBtn && withTechControl)\\\">\\n              <div class=\\\"alert alert-warning note\\\">\\n                <p>\\n                  <strong>Quotation has tech control!</strong> Unable to issue policy.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showNewPolicyBtn\\\">\\n              <div class=\\\"alert alert-danger note\\\">\\n                <p>\\n                  <strong>Quotation has error!</strong> Unable to issue policy.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showIssuanceGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button \\n                *ngIf=\\\"\\n                  quoteForm.invalid ||\\n                  appGroupPolicy.gpForm.invalid ||\\n                  appPolicyHolder.phForm.invalid ||\\n                  (secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) ||\\n                  (carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) ||\\n                  (carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">\\n                  Generate\\n              </button>\\n              <button \\n                *ngIf=\\\"\\n                  !quoteForm.invalid &&\\n                  !appGroupPolicy.gpForm.invalid &&\\n                  !appPolicyHolder.phForm.invalid &&\\n                  !(secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) &&\\n                  !(carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) &&\\n                  !(carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(1)\\\">\\n                  Generate\\n              </button>\\n            </div>\\n\\n            <div *ngIf=\\\"showSaveBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"manageBtn(1)\\\">Edit Details</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"manageBtn(1, true)\\\">Edit Coverage</button>\\n              <button \\n                *ngIf=\\\"\\n                  quoteForm.invalid ||\\n                  appGroupPolicy.gpForm.invalid ||\\n                  appPolicyHolder.phForm.invalid ||\\n                  (secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) ||\\n                  (carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) ||\\n                  (carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">\\n                  Save\\n              </button>\\n              <button \\n                *ngIf=\\\"\\n                  !quoteForm.invalid &&\\n                  !appGroupPolicy.gpForm.invalid &&\\n                  !appPolicyHolder.phForm.invalid &&\\n                  !(secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) &&\\n                  !(carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) &&\\n                  !(carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(3)\\\">\\n                Save\\n              </button>\\n            </div>\\n\\n            <div *ngIf=\\\"showPostBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"editMode = !editMode\\\">Edit Details</button>\\n              <button \\n                *ngIf=\\\"\\n                  quoteForm.invalid ||\\n                  appGroupPolicy.gpForm.invalid ||\\n                  appPolicyHolder.phForm.invalid ||\\n                  (secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) ||\\n                  (carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) ||\\n                  (carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">\\n                  Post\\n              </button>\\n              <button \\n                *ngIf=\\\"\\n                  !quoteForm.invalid &&\\n                  !appGroupPolicy.gpForm.invalid &&\\n                  !appPolicyHolder.phForm.invalid &&\\n                  !(secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) &&\\n                  !(carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) &&\\n                  !(carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(4)\\\">\\n                Post\\n              </button>\\n            </div>\\n\\n            <div *ngIf=\\\"showPrintBtn\\\" class=\\\"text-right\\\">\\n              <h5><small>Your policy number:</small> {{carDetails.policyNumber}}</h5>\\n            </div>\\n            <div *ngIf=\\\"showPrintBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"newPolicy()\\\">New Policy</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"printPolicy()\\\">Print</button>\\n            </div>\\n          </div>\\n\\n        </form>\\n        <!-- .regular-quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #quotationCar -->\\n\\n<ng-template #proceedModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Are you sure you want to proceed?</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have changes to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of changedValues\\\">\\n        {{item}}\\n      </li>\\n\\n      <li *ngFor=\\\"let item of changedAccessoryValues\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n    <h6>Changes may affect your premium and will create a new quotation.</h6>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Cancel\\n      </button>\\n      <button *ngIf=\\\"data.generateBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"issueQuote('S')\\\">\\n        Generate\\n      </button>\\n      <button *ngIf=\\\"data.saveBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"savePolicy()\\\">\\n        Save\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #validationModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Your application is incomplete</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have invalid/empty data to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of invalidForms\\\">\\n        {{item}}\\n      </li>\\n      <li *ngIf=\\\"secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined\\\">\\n        Alternative Policy holder Separator\\n      </li>\\n      <li *ngIf=\\\"carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')\\\">\\n        Assignee\\n      </li>\\n      <li *ngIf=\\\"carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == '')\\\">\\n        Mortgagee\\n      </li>\\n    </ul>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Okay\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quotationHome\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-home fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        {{pageLabel}}\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/home.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"quoteForm\\\">\\n\\n          <div *ngIf='isIssuance' class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Individual Policy</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"alert alert-info note\\\">\\n                    <p><strong>Important Reminder:</strong> You need to have an approved quotation to proceed issuing a policy.</p>\\n                  </div>\\n                  <!-- .note -->\\n                </div>\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <label class=\\\"input-group-text\\\" for=\\\"quotationNumber\\\">Quotation Number</label>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Quotation Number here..\\\"\\n                      formControlName=\\\"quotationNumber\\\" [(ngModel)]=\\\"homeDetails.quotationNumber\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <button [disabled]=\\\"disableLoadBtn\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"loadQuotation()\\\"\\n                        type=\\\"button\\\">Load</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Risk Details</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['subline'].invalid \\n                    && (quoteForm.controls['subline'].dirty \\n                    || quoteForm.controls['subline'].touched)}\\\">\\n                    <label for=\\\"subline\\\">Business Line</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                      [(ngModel)]=\\\"homeDetails.subline\\\" [attr.disabled]=\\\"true\\\">\\n                      <option *ngFor=\\\"let subline of LOV.sublineLOV\\\" [ngValue]=\\\"subline.COD_RAMO\\\">\\n                        {{ subline.NOM_RAMO }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['subline'].errors?.required\\\">\\n                      * business line is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['currency'].invalid \\n                  && (quoteForm.controls['currency'].dirty \\n                  || quoteForm.controls['currency'].touched)}\\\">\\n                    <label for=\\\"currency\\\">Currency</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"currency\\\"\\n                      [(ngModel)]=\\\"homeDetails.currency\\\" [attr.disabled]=\\\"true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let currency of LOV.currencyLOV\\\" [ngValue]=\\\"currency.COD_MON\\\">\\n                        {{ currency.NOM_MON }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['currency'].errors?.required\\\">\\n                      * currency is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Location of Risk</h6>\\n                </div>\\n\\n                <div *ngIf=\\\"isIssuance\\\" class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['district'].invalid \\n                  && (quoteForm.controls['district'].dirty \\n                  || quoteForm.controls['district'].touched)}\\\">\\n                    <label for=\\\"district\\\">District</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"district\\\"\\n                      [(ngModel)]=\\\"homeDetails.district\\\" (change)=\\\"getBlockNumber()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let district of LOV.districtLOV\\\" [ngValue]=\\\"district.NUM_DISTRICT\\\">\\n                        {{ district.NUM_DISTRICT }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['district'].errors?.required\\\">\\n                      * district is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div *ngIf=\\\"isIssuance\\\" class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['blockNumber'].invalid \\n                  && (quoteForm.controls['blockNumber'].dirty \\n                  || quoteForm.controls['blockNumber'].touched)}\\\">\\n                    <label for=\\\"blockNumber\\\">Block Number</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"blockNumber\\\"\\n                      [(ngModel)]=\\\"homeDetails.blockNumber\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let blockNumber of LOV.blockNumberLOV\\\" [ngValue]=\\\"blockNumber.NUM_BLOCK\\\">\\n                        {{ blockNumber.NUM_BLOCK }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['blockNumber'].errors?.required\\\">\\n                      * block number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['buildingNumber'].invalid \\n                  && (quoteForm.controls['buildingNumber'].dirty \\n                  || quoteForm.controls['buildingNumber'].touched)}\\\">\\n                    <label for=\\\"buildingNumber\\\">House/Building Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"buildingNumber\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.buildingNumber\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['buildingNumber'].errors?.required\\\">\\n                      * building number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['subdivision'].invalid \\n                  && (quoteForm.controls['subdivision'].dirty \\n                  || quoteForm.controls['subdivision'].touched)}\\\">\\n                    <label for=\\\"subdivision\\\">Village/Subdivision</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"subdivision\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.subdivision\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['subdivision'].errors?.required\\\">\\n                      * subdivision is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['buildingName'].invalid \\n                  && (quoteForm.controls['buildingName'].dirty \\n                  || quoteForm.controls['buildingName'].touched)}\\\">\\n                    <label for=\\\"buildingName\\\">Building Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"buildingName\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.buildingName\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['buildingName'].errors?.required\\\">\\n                      * building name is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['streetName'].invalid \\n                  && (quoteForm.controls['streetName'].dirty \\n                  || quoteForm.controls['streetName'].touched)}\\\">\\n                    <label for=\\\"streetName\\\">Street Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"streetName\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.streetName\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['streetName'].errors?.required\\\">\\n                      * street name is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['barangay'].invalid \\n                  && (quoteForm.controls['barangay'].dirty \\n                  || quoteForm.controls['barangay'].touched)}\\\">\\n                    <label for=\\\"barangay\\\">Barangay</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"barangay\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.barangay\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['barangay'].errors?.required\\\">\\n                      * barangay is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['region'].invalid \\n                  && (quoteForm.controls['region'].dirty \\n                  || quoteForm.controls['region'].touched)}\\\">\\n                    <label for=\\\"region\\\">Region</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"region\\\"\\n                      [(ngModel)]=\\\"homeDetails.region\\\" (change)=\\\"getProvince()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let region of LOV.regionLOV\\\" [ngValue]=\\\"region.COD_ESTADO\\\">\\n                        {{ region.NOM_ESTADO }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['region'].errors?.required\\\">\\n                      * region is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['province'].invalid \\n                  && (quoteForm.controls['province'].dirty \\n                  || quoteForm.controls['province'].touched)}\\\">\\n                    <label for=\\\"province\\\">Province</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"province\\\"\\n                      [(ngModel)]=\\\"homeDetails.province\\\" (change)=\\\"getCity()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let province of LOV.provinceLOV\\\" [ngValue]=\\\"province.COD_PROV\\\">\\n                        {{ province.NOM_PROV }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['province'].errors?.required\\\">\\n                      * province is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['city'].invalid \\n                  && (quoteForm.controls['city'].dirty \\n                  || quoteForm.controls['city'].touched)}\\\">\\n                    <label for=\\\"city\\\">City</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"city\\\"\\n                      [(ngModel)]=\\\"homeDetails.city\\\" (change)=\\\"getZipCode()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let city of LOV.cityLOV\\\" [ngValue]=\\\"city.COD_LOCALIDAD\\\">\\n                        {{ city.NOM_LOCALIDAD }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['city'].errors?.required\\\">\\n                      * city is required\\n                    </p>\\n                  </div>\\n                </div>\\n                <div class=\\\"clearfix\\\"></div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Building / Content Details</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Building/Content</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['buildingCapital'].invalid \\n                  && (quoteForm.controls['buildingCapital'].dirty \\n                  || quoteForm.controls['buildingCapital'].touched)}\\\">\\n                    <label for=\\\"buildingCapital\\\">Building Capital</label>\\n                    <input type=\\\"number\\\" formControlName=\\\"buildingCapital\\\" class=\\\"form-control required\\\" \\n                      [(ngModel)]=\\\"homeDetails.buildingCapital\\\"\\n                      (change)=\\\"affecting('buildingCapital', 'Building Capital')\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['buildingCapital'].errors?.required\\\">\\n                      * building capital is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"contentValue\\\">Content Value</label>\\n                    <input type=\\\"number\\\" formControlName=\\\"contentValue\\\" class=\\\"form-control\\\"\\n                      (change)=\\\"affecting('contentValue', 'Content Value')\\\"\\n                      [(ngModel)]=\\\"homeDetails.contentValue\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                  </div>\\n                </div>\\n\\n                <div *ngIf=\\\"isIssuance\\\" class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"buildingContent\\\">Content</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"buildingContent\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.buildingContent\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Additional Details</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['constructionOfBuilding'].invalid \\n                  && (quoteForm.controls['constructionOfBuilding'].dirty \\n                  || quoteForm.controls['constructionOfBuilding'].touched)}\\\">\\n                    <label for=\\\"constructionOfBuilding\\\">Construction of Building</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"constructionOfBuilding\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"homeDetails.constructionOfBuilding\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['constructionOfBuilding'].errors?.required\\\">\\n                      * construction of building required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['occupancyOfBuilding'].invalid \\n                  && (quoteForm.controls['occupancyOfBuilding'].dirty \\n                  || quoteForm.controls['occupancyOfBuilding'].touched)}\\\">\\n                    <label for=\\\"occupancyOfBuilding\\\">Occupancy of Building</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"occupancyOfBuilding\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"homeDetails.occupancyOfBuilding\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['occupancyOfBuilding'].errors?.required\\\">\\n                      * occupancy of building is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Boundaries</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['front'].invalid \\n                  && (quoteForm.controls['front'].dirty \\n                  || quoteForm.controls['front'].touched)}\\\">\\n                    <label for=\\\"front\\\">Front</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"front\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"homeDetails.front\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['front'].errors?.required\\\">\\n                      * front is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['right'].invalid \\n                  && (quoteForm.controls['right'].dirty \\n                  || quoteForm.controls['right'].touched)}\\\">\\n                    <label for=\\\"right\\\">Right</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"right\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"homeDetails.right\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['right'].errors?.required\\\">\\n                      * right is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['left'].invalid \\n                  && (quoteForm.controls['left'].dirty \\n                  || quoteForm.controls['left'].touched)}\\\">\\n                    <label for=\\\"left\\\">Left</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"left\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"homeDetails.left\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['left'].errors?.required\\\">\\n                      * left is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['rear'].invalid \\n                  && (quoteForm.controls['rear'].dirty \\n                  || quoteForm.controls['rear'].touched)}\\\">\\n                    <label for=\\\"rear\\\">Rear</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"rear\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"homeDetails.rear\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['rear'].errors?.required\\\">\\n                      * rear is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\"\\n              (click)=\\\"showImprovement = !showImprovement\\\" matTooltip=\\\"click to show/hide improvement details\\\">\\n              <strong>Improvement Details</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showImprovement\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['improvement'].invalid \\n                  && (quoteForm.controls['improvement'].dirty \\n                  || quoteForm.controls['improvement'].touched)}\\\">\\n                    <label for=\\\"improvement\\\">Improvement</label>\\n                    <input type=\\\"number\\\" formControlName=\\\"improvement\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.improvement\\\"\\n                      (change)=\\\"affecting('improvement', 'Improvement')\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['improvement'].errors?.min\\\">\\n                      * should be higher than 0\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\"\\n              (click)=\\\"showRelatedStructure = !showRelatedStructure\\\"\\n              matTooltip=\\\"click to show/hide other related structure details\\\">\\n              <strong>Other Related Structure Details</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showRelatedStructure\\\">\\n\\n              <div class=\\\"row\\\" formArrayName=\\\"relatedStructure\\\">\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\"\\n                  *ngFor=\\\"let item of quoteForm.get('relatedStructure')['controls']; let i=index\\\">\\n                  <div class=\\\"form-group\\\" [formGroupName]=\\\"i\\\" [ngClass]=\\\"{'input-error': item.controls['_value'].invalid \\n                  && (item.controls['_value'].dirty \\n                  || item.controls['_value'].touched)}\\\">\\n                    <label>{{item.get('_name').value}}</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"_value\\\" [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"item.controls['_value'].errors?.min\\\">\\n                      * should be higher than 0\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\"\\n              (click)=\\\"showRelatedContent = !showRelatedContent\\\"\\n              matTooltip=\\\"click to show/hide other related content details\\\">\\n              <strong>Other Related Content Details</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showRelatedContent\\\">\\n\\n              <div class=\\\"row\\\" formArrayName=\\\"relatedContent\\\">\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\"\\n                  *ngFor=\\\"let item of quoteForm.get('relatedContent')['controls']; let i=index\\\">\\n                  <div class=\\\"form-group\\\" [formGroupName]=\\\"i\\\" [ngClass]=\\\"{'input-error': item.controls['_value'].invalid \\n                  && (item.controls['_value'].dirty \\n                  || item.controls['_value'].touched)}\\\">\\n                    <label>{{item.get('_name').value}}</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"_value\\\" [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"item.controls['_value'].errors?.min\\\">\\n                      * should be higher than 0\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <app-group-policy \\n            #appGroupPolicy\\n            [subline]=\\\"homeDetails.subline\\\"\\n            [prevDetails]=\\\"prevHomeDetails\\\"\\n            [groupPolicy]=\\\"groupPolicy\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [showExpiring]=\\\"true\\\"\\n            [(changedValues)]=\\\"changedValues\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-group-policy>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>General Information</strong>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Movement Dates</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['effectivityDate'].invalid \\n                    && (quoteForm.controls['effectivityDate'].dirty \\n                    || quoteForm.controls['effectivityDate'].touched)}\\\">\\n                    <label for=\\\"effectivityDate\\\">Effectivity Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                      (bsValueChange)=\\\"affecting('effectivityDate', 'Effectivity Date')\\\"\\n                      formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"homeDetails.effectivityDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\" bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['effectivityDate'].errors?.required\\\">\\n                      * effectivity date is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['expiryDate'].invalid \\n                    && (quoteForm.controls['expiryDate'].dirty \\n                    || quoteForm.controls['expiryDate'].touched)}\\\">\\n                    <label for=\\\"expiryDate\\\">Expiry Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                      [minDate]=\\\"expiryDateMinDate\\\" (bsValueChange)=\\\"affecting('expiryDate', 'Expirty Date')\\\"\\n                      formControlName=\\\"expiryDate\\\" [(ngModel)]=\\\"homeDetails.expiryDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\" bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['expiryDate'].errors?.required\\\">\\n                      * expiry date is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <app-policy-holder #appPolicyHolder\\n            [title]=\\\"'Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"homeDetails\\\"\\n            [(policyHolder)]=\\\"policyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\" \\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'primary'\\\"\\n            [optional]=\\\"false\\\" \\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-policy-holder>\\n\\n          <app-policy-holder\\n            *ngIf=\\\"isIssuance\\\"\\n            [title]=\\\"'Alternative Policy Holder (Optional)'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"homeDetails\\\"\\n            [(policyHolder)]=\\\"secondaryPolicyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'secondary'\\\"\\n            [optional]=\\\"true\\\"\\n            [showPrefix]=\\\"false\\\">\\n          </app-policy-holder>\\n\\n          <div class=\\\"card shadow mb-3\\\" *ngIf=\\\"isIssuance\\\">\\n            <div class=\\\"card-header d-flex justify-content-between\\\">\\n              <strong>Additional Policy Information</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Additional Details for Location of Risk</h6>\\n                </div>\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"crestaZone\\\">Cresta Zone</label>\\n                        <input type=\\\"number\\\" formControlName=\\\"crestaZone\\\" class=\\\"form-control\\\"\\n                          [(ngModel)]=\\\"homeDetails.crestaZone\\\"\\n                          [attr.disabled]=\\\"true\\\">\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['zipCode'].invalid \\n                        && (quoteForm.controls['zipCode'].dirty \\n                        || quoteForm.controls['zipCode'].touched)}\\\">\\n                        <label for=\\\"zipCode\\\">Zip Code</label>\\n                        <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"zipCode\\\"\\n                          [(ngModel)]=\\\"homeDetails.zipCode\\\" [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          <option selected></option>\\n                          <option *ngFor=\\\"let zipCode of LOV.zipCodeLOV\\\" [ngValue]=\\\"zipCode.COD_POSTAL\\\">\\n                            {{ zipCode.COD_POSTAL }}\\n                          </option>\\n                        </select>\\n                        <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['zipCode'].errors?.required\\\">\\n                          * zip code is required\\n                        </p>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-divider\\\"></div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"alert alert-info note\\\">\\n                    <p><strong>Important Reminder:</strong> Please provide mortgagee details if you selected <strong>Mortgagee</strong>.\\n                    </p>\\n                  </div>\\n                  <!-- .note -->\\n                </div>\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Mortgagee</h6>\\n                </div>\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <div class=\\\"form-check\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbMortgagee\\\"\\n                            [(ngModel)]=\\\"homeDetails.cbMortgagee\\\" formControlName=\\\"cbMortgagee\\\"\\n                            (change)=\\\"showMortgagee = !showMortgagee\\\" [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"cbMortgagee\\\">\\n                            Mortgagee\\n                          </label>\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <app-policy-holder\\n            *ngIf=\\\"isIssuance && showMortgagee\\\"\\n            [title]=\\\"'Mortgagee Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"false\\\"\\n            [details]=\\\"homeDetails\\\"\\n            [(policyHolder)]=\\\"mortgageePolicyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'mortgagee'\\\"\\n            [optional]=\\\"false\\\">\\n          </app-policy-holder>\\n\\n          <div class=\\\"card shadow mb-3\\\" *ngIf=\\\"showRatePercentage\\\">\\n            <div class=\\\"card-header d-flex justify-content-between\\\">\\n              <strong>Rate Percentage</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"alert alert-info note\\\">\\n                    <p><strong>Important Reminder:</strong> Rate should be modified <strong>higher</strong> than the original rate.\\n                    </p>\\n                  </div>\\n                  <!-- .note -->\\n                </div>\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['ratePercentage'].invalid \\n                      && (quoteForm.controls['ratePercentage'].dirty \\n                      || quoteForm.controls['ratePercentage'].touched)}\\\">\\n                        <label for=\\\"ratePercentage\\\">Rate Percentage</label>\\n                        <input type=\\\"number\\\" formControlName=\\\"ratePercentage\\\" class=\\\"form-control\\\"\\n                          [(ngModel)]=\\\"homeDetails.ratePercentage\\\"\\n                          [attr.disabled]=\\\"editMode ? null : true\\\"\\n                          (change)=\\\"affecting('ratePercentage', 'Rate Percentage')\\\">\\n                          <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['ratePercentage'].errors?.required\\\">\\n                            * rate percentage is required\\n                          </p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\" *ngIf=\\\"isIssuance\\\">\\n            <div class=\\\"card-header d-flex justify-content-between\\\">\\n              <strong>Warranted No Loss</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"warrantedNoLoss\\\">Warranted No Loss</label>\\n                        <input type=\\\"number\\\" formControlName=\\\"warrantedNoLoss\\\" class=\\\"form-control\\\"\\n                          [(ngModel)]=\\\"homeDetails.warrantedNoLoss\\\"\\n                          [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <app-payment-breakdown\\n            *ngIf=\\\"showPaymentBreakdown\\\"\\n            #appPaymentBreakdown\\n            [paymentReceipt]=\\\"paymentReceipt\\\"\\n            [paymentBreakdown]=\\\"paymentBreakdown\\\"\\n            [showExchangeRate]=\\\"false\\\"\\n            [loadBreakdown]=\\\"triggerBreakdown\\\">\\n          </app-payment-breakdown>\\n\\n          <app-fixed-coverages\\n            *ngIf=\\\"showCoverage\\\"\\n            [line]=\\\"'home'\\\"\\n            [coverageList]=\\\"coverageList\\\"\\n            [loadCoverage]=\\\"triggerCoverage\\\">\\n          </app-fixed-coverages>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Product</strong>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Product Data</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['paymentMethod'].invalid \\n                    && (quoteForm.controls['paymentMethod'].dirty \\n                    || quoteForm.controls['paymentMethod'].touched)}\\\">\\n                    <label for=\\\"paymentMethod\\\">Payment Method</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"paymentMethod\\\"\\n                      [(ngModel)]=\\\"homeDetails.paymentMethod\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.paymentMethodLOV?.length ? null : true\\\">\\n                      <option *ngFor=\\\"let paymentMethod of LOV.paymentMethodLOV\\\"\\n                        [ngValue]=\\\"paymentMethod.COD_FRACC_PAGO\\\">\\n                        {{ paymentMethod.NOM_FRACC_PAGO }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['paymentMethod'].errors?.required\\\">\\n                      * payment method is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['product'].invalid \\n                    && (quoteForm.controls['product'].dirty \\n                    || quoteForm.controls['product'].touched)}\\\">\\n                    <label for=\\\"product\\\">Product List</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"product\\\"\\n                      [(ngModel)]=\\\"homeDetails.product\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.productListLOV?.length ? null : true\\\">\\n                      <option *ngFor=\\\"let product of LOV.productListLOV\\\" [ngValue]=\\\"product.COD_MODALIDAD\\\">\\n                        {{ product.NOM_MODALIDAD }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['product'].errors?.required\\\">\\n                      * product list is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- button controls for quotation -->\\n          <div *ngIf=\\\"!isIssuance\\\">\\n            <div *ngIf=\\\"showGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n              <button *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceed(1)\\\">Generate</button>\\n            </div>\\n            <div *ngIf=\\\"showIssueQuoteBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"manageBtn(1)\\\">Edit\\n                Details</button>\\n              <button *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Issue\\n                Quote</button>\\n              <button *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceed(2)\\\">Issue Quote</button>\\n            </div>\\n            <div *ngIf=\\\"showProceedToIssuanceBtn\\\" class=\\\"text-right\\\">\\n              <h5><small>Your quotation number:</small> {{homeDetails.quotationNumber}}</h5>\\n            </div>\\n            <div *ngIf=\\\"showProceedToIssuanceBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" (click)=\\\"newQuote()\\\" class=\\\"btn btn-primary\\\">New Quote</button>\\n              <button type=\\\"button\\\" (click)=\\\"printQuote()\\\" class=\\\"btn btn-primary\\\">Print Quote</button>\\n              <button type=\\\"button\\\" (click)=\\\"proceedToIssuance()\\\" class=\\\"btn btn-primary\\\">Proceed to Issuance</button>\\n            </div>\\n          </div>\\n\\n          <!-- button controls for issuance -->\\n          <div *ngIf=\\\"isIssuance\\\">\\n            <!-- <div *ngIf=\\\"showIssuanceGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                [disabled]=\\\"!editMode\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n              <button *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceed(1)\\\">Generate</button>\\n            </div> -->\\n            <div *ngIf=\\\"(showSaveBtn && withTechControl) || (showPostBtn && withTechControl)\\\">\\n              <div class=\\\"alert alert-warning note\\\">\\n                <p>\\n                  <strong>Quotation has tech control!</strong> Unable to issue policy.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showNewPolicyBtn\\\">\\n              <div class=\\\"alert alert-danger note\\\">\\n                <p>\\n                  <strong>Quotation has error!</strong> Unable to issue policy.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showSaveBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"manageBtn(1)\\\">Edit\\n                Details</button>\\n              <button *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Save</button>\\n              <button *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceed(3)\\\">Save</button>\\n            </div>\\n\\n            <div *ngIf=\\\"showPostBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editMode = !editMode\\\">Edit\\n                Details</button>\\n              <button *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Post</button>\\n              <button *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceed(4)\\\">Post</button>\\n            </div>\\n\\n            <div *ngIf=\\\"showPrintBtn\\\" class=\\\"text-right\\\">\\n              <h5><small>Your policy number:</small> {{homeDetails.policyNumber}}</h5>\\n            </div>\\n            <div *ngIf=\\\"showPrintBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"printPolicy()\\\">Print</button>\\n            </div>\\n          </div>\\n\\n        </form>\\n        <!-- .quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #quotationHome -->\\n\\n<ng-template #proceedModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Are you sure you want to proceed?</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have changes to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of changedValues\\\">\\n        {{item}}\\n      </li>\\n\\n      <li *ngIf=\\\"hasRSChanges\\\">\\n        Other Related Structure Details\\n      </li>\\n\\n      <li *ngIf=\\\"hasRCChanges\\\">\\n        Other Related Content Details\\n      </li>\\n    </ul>\\n    <h6>Changes may affect your premium and will create a new quotation.</h6>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Cancel\\n      </button>\\n      <button *ngIf=\\\"data.generateBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"issueQuote('S')\\\">\\n        Generate\\n      </button>\\n      <button *ngIf=\\\"data.saveBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"savePolicy()\\\">\\n        Save\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #validationModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Your application is incomplete</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have invalid/empty data to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of invalidForms\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Okay\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\";","export default \"<div class=\\\"row\\\" id=\\\"quickQuotationTravel\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-plane fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        {{pageLabel}}\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/travel.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"quoteForm\\\" class=\\\"quote-form\\\">\\n\\n          <div *ngIf='isIssuance' class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Individual Policy</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <label class=\\\"input-group-text\\\" for=\\\"quotationNumber\\\">Quotation Number</label>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Quotation Number here..\\\"\\n                      formControlName=\\\"quotationNumber\\\" [(ngModel)]=\\\"travelDetails.quotationNumber\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <button [disabled]=\\\"disableLoadBtn\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"loadQuotation()\\\"\\n                        type=\\\"button\\\">Load</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Travel Itinerary</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['currency'].invalid \\n                    && (quoteForm.controls['currency'].dirty \\n                    || quoteForm.controls['currency'].touched)}\\\">\\n                    <label for=\\\"currency\\\">Currency</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"currency\\\"\\n                      [(ngModel)]=\\\"travelDetails.currency\\\"\\n                      (change)=\\\"currencyOnchange(); affecting('currency', 'Currency')\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.currencyLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let currency of LOV.currencyLOV\\\" [ngValue]=\\\"currency.COD_MON\\\">\\n                        {{ currency.NOM_MON }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['currency'].errors?.required\\\">\\n                      * currency is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-5 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['countries'].invalid \\n                    && (quoteForm.controls['countries'].dirty \\n                    || quoteForm.controls['countries'].touched)}\\\">\\n                    <label for=\\\"currency\\\">Itinerary</label>\\n                    <ng-select [items]=\\\"LOV.countryLOV\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select Country to visit\\\"\\n                      appendTo=\\\"body\\\" formControlName=\\\"countries\\\" multiple=\\\"true\\\" [(ngModel)]=\\\"travelDetails.countries\\\"\\n                      [readonly]=\\\"!editMode\\\">\\n                    </ng-select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['countries'].errors?.required\\\">\\n                      * country is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>General Information</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['travelPackage'].invalid \\n                    && (quoteForm.controls['travelPackage'].dirty \\n                    || quoteForm.controls['travelPackage'].touched)}\\\">\\n                    <label for=\\\"travelPackage\\\">Travel Package</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"travelPackage\\\"\\n                      [(ngModel)]=\\\"travelDetails.travelPackage\\\"\\n                      (change)=\\\"affecting('travelPackage', 'Travel Package')\\\"\\n                      [attr.disabled]=\\\"true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let package of LOV.packageLOV\\\" [ngValue]=\\\"package.TRAVEL_PACK\\\">\\n                        {{ package.NOM_VALOR }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['travelPackage'].errors?.required\\\">\\n                      * travel package is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['travelType'].invalid \\n                    && (quoteForm.controls['travelType'].dirty \\n                    || quoteForm.controls['travelType'].touched)}\\\">\\n                    <label for=\\\"travelType\\\">Travel Type</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"travelType\\\"\\n                      [(ngModel)]=\\\"travelDetails.travelType\\\" [attr.disabled]=\\\"true\\\">\\n                      <option value=\\\"D\\\">Domestic</option>\\n                      <option value=\\\"I\\\">International</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['travelType'].errors?.required\\\">\\n                      * travel type is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['startDate'].invalid \\n                    && (quoteForm.controls['startDate'].dirty \\n                    || quoteForm.controls['startDate'].touched)}\\\">\\n                    <label for=\\\"startDate\\\">Start Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\" [minDate]=\\\"mindate\\\"\\n                      formControlName=\\\"startDate\\\" [(ngModel)]=\\\"travelDetails.startDate\\\" bsDatepicker\\n                      (bsValueChange)=\\\"affecting('startDate', 'Start Date')\\\"\\n                      [attr.disabled]=\\\"(editMode && travelDetails.currency) ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['startDate'].errors?.required\\\">\\n                      * start date is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['endDate'].invalid \\n                    && (quoteForm.controls['endDate'].dirty \\n                    || quoteForm.controls['endDate'].touched)}\\\">\\n                    <label for=\\\"endDate\\\">End Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\" [minDate]=\\\"endDateMinDate\\\"\\n                      formControlName=\\\"endDate\\\" [(ngModel)]=\\\"travelDetails.endDate\\\" bsDatepicker\\n                      (ngModelChange)=\\\"getOneTrip()\\\"\\n                      (bsValueChange)=\\\"affecting('endDate', 'End Date')\\\"\\n                      [attr.disabled]=\\\"(editMode && enableEndDate && travelDetails.currency) ? null : ''\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['endDate'].errors?.required\\\">\\n                      * end date is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['noOfDays'].invalid \\n                    && (quoteForm.controls['noOfDays'].dirty \\n                    || quoteForm.controls['noOfDays'].touched)}\\\">\\n                    <label for=\\\"noOfDays\\\">No. of Days</label>\\n                    <input class=\\\"form-control required\\\" id=\\\"noOfDays\\\" formControlName=\\\"noOfDays\\\"\\n                      [(ngModel)]=\\\"travelDetails.noOfDays\\\"\\n                      (change)=\\\"affecting('noOfDays', 'No. of Days')\\\"\\n                      [attr.disabled]=\\\"true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['noOfDays'].errors?.required\\\">\\n                      * number of days is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['completeItinerary'].invalid \\n                    && (quoteForm.controls['completeItinerary'].dirty \\n                    || quoteForm.controls['completeItinerary'].touched)}\\\">\\n                    <label for=\\\"completeItinerary\\\">Complete Itinerary</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"completeItinerary\\\" class=\\\"form-control required\\\"\\n                      placeholder=\\\"ex. Manila-Japan-China-Manila\\\" [(ngModel)]=\\\"travelDetails.completeItinerary\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['completeItinerary'].errors?.required\\\">\\n                      * complete itinerary is required\\n                    </p>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['completeItinerary'].errors?.invalidItinerary\\\">\\n                      * invalid itinerary\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['purposeOfTrip'].invalid \\n                    && (quoteForm.controls['purposeOfTrip'].dirty \\n                    || quoteForm.controls['purposeOfTrip'].touched)}\\\">\\n                    <label for=\\\"purposeOfTrip\\\">Purpose of Trip</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"purposeOfTrip\\\"\\n                      [(ngModel)]=\\\"travelDetails.purposeOfTrip\\\"\\n                      (change)=\\\"affecting('purposeOfTrip', 'Purpose of Trip')\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.purposeOfTripLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let purposeOfTrip of LOV.purposeOfTripLOV\\\" [ngValue]=\\\"purposeOfTrip.COD_BUSINESS\\\">\\n                        {{ purposeOfTrip.NOM_BUSINESS }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['purposeOfTrip'].errors?.required\\\">\\n                      * purpose of trip is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbOneTripOnly\\\"\\n                        [(ngModel)]=\\\"travelDetails.cbOneTripOnly\\\" formControlName=\\\"cbOneTripOnly\\\"\\n                        [attr.disabled]=\\\"true\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbOneTripOnly\\\">\\n                        One Trip Only?\\n                      </label>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbWithCruise\\\"\\n                        [(ngModel)]=\\\"travelDetails.cbWithCruise\\\" formControlName=\\\"cbWithCruise\\\"\\n                        [attr.disabled]=\\\"editMode && travelDetails.travelType != 'D' ? null : true\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbWithCruise\\\">\\n                        With Cruise?\\n                      </label>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div *ngIf=\\\"showOthersDescription\\\" class=\\\"col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['othersDescription'].invalid \\n                    && (quoteForm.controls['othersDescription'].dirty \\n                    || quoteForm.controls['othersDescription'].touched)}\\\">\\n                    <label for=\\\"othersDescription\\\">If others, please specify</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"othersDescription\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"travelDetails.othersDescription\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['othersDescription'].errors?.required\\\">\\n                      * please specify your purpose of trip\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <app-group-policy #appGroupPolicy\\n            [subline]=\\\"travelDetails.subline\\\"\\n            [prevDetails]=\\\"prevTravelDetails\\\"\\n            [groupPolicy]=\\\"groupPolicy\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [showExpiring]=\\\"false\\\"\\n            [(changedValues)]=\\\"changedValues\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-group-policy>\\n\\n          <app-policy-holder #appPolicyHolder\\n            [title]=\\\"'Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"travelDetails\\\"\\n            [(policyHolder)]=\\\"policyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'primary'\\\"\\n            [optional]=\\\"false\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-policy-holder>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Travelers</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n\\n              <div class=\\\"alert alert-info note\\\">\\n                <p>\\n                  <strong>Important Reminder:</strong> Family risk should be max of 6 members, age of primary should be from 18-65 and age of children \\n                  should be from 0-21 years old only. Please also be advised that family is considered as 1 risk and no multirisk is allowed for quotation.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n\\n              <div formArrayName=\\\"travelers\\\">\\n                <div *ngFor=\\\"let traveler of quoteForm.get('travelers')['controls']; let i=index\\\">\\n                  <div [formGroupName]=\\\"i\\\" class=\\\"card traveler-card\\\">\\n                    <div class=\\\"card-body\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': traveler.controls['completeName'].invalid \\n                              && (traveler.controls['completeName'].dirty \\n                              || traveler.controls['completeName'].touched)}\\\">\\n                            <label for=\\\"completeName\\\">Complete Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"completeName\\\" class=\\\"form-control required\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"traveler.controls['completeName'].errors?.required\\\">\\n                              * complete name is required\\n                            </p>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': traveler.controls['relationship'].invalid \\n                          && (traveler.controls['relationship'].dirty \\n                          || traveler.controls['relationship'].touched)}\\\">\\n                            <label for=\\\"relationship\\\">Relationship</label>\\n                            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"relationship\\\"\\n                              (change)=\\\"relationshipOnChange(traveler)\\\"\\n                              [attr.disabled]=\\\"editMode && LOV.relationshipLOV?.length && i != 0 ? null: true\\\">\\n                              <option \\n                                *ngFor=\\\"let relationship of LOV.relationshipLOV\\\"\\n                                [attr.disabled]=\\\"relationship.disabled ? '' : null\\\"\\n                                [ngValue]=\\\"relationship.COD_VALOR\\\">\\n                                {{ relationship.NOM_VALOR }}</option>\\n                            </select>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"traveler.controls['relationship'].errors?.required\\\">\\n                              * relationship is required\\n                            </p>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': traveler.controls['birthDate'].invalid \\n                          && (traveler.controls['birthDate'].dirty \\n                          || traveler.controls['birthDate'].touched)}\\\">\\n                            <label for=\\\"birthDate\\\">Birthdate</label>\\n                            <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                              [maxDate]=\\\"traveler.controls['bdaymaxdate'].value\\\" [minDate]=\\\"traveler.controls['bdaymindate'].value\\\"\\n                              formControlName=\\\"birthDate\\\" bsDatepicker\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"traveler.controls['birthDate'].errors?.required\\\">\\n                              * birthdate is required\\n                            </p>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-md-6 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': traveler.controls['passportNumber'].invalid \\n                          && (traveler.controls['passportNumber'].dirty \\n                          || traveler.controls['passportNumber'].touched)}\\\">\\n                            <label for=\\\"passportNumber\\\">Passport Number</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"passportNumber\\\" class=\\\"form-control required\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"traveler.controls['passportNumber'].errors?.required\\\">\\n                              * passport number is required\\n                            </p>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-md-6 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"physicianName\\\">Usual Physician Name and Number</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"physicianName\\\" class=\\\"form-control\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"clearfix\\\"></div>\\n                        <div class=\\\"col-lg-12\\\">\\n                          <div class=\\\"btn-group\\\" *ngIf=\\\"i > 0 && editMode\\\">\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"removeTraveler(i)\\\">Remove</button>\\n                          </div>\\n                        </div>\\n\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div *ngIf=\\\"travelerHeadCount <= 5\\\" class=\\\"btn-group\\\">\\n                <button [disabled]=\\\"!editMode || quoteForm.get('travelers').status !== 'VALID'\\\" type=\\\"button\\\"\\n                  (click)=\\\"addTraveler()\\\" class=\\\"btn btn-primary\\\">Add Traveler</button>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\"\\n              (click)=\\\"showAdditionalInformation = !showAdditionalInformation\\\"\\n              matTooltip=\\\"click to show/hide additional policy information\\\">\\n              <strong>Additional Policy Information (Optional)</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showAdditionalInformation\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-check\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbSportsEquipment\\\"\\n                      formControlName=\\\"cbSportsEquipment\\\" [(ngModel)]=\\\"travelDetails.cbSportsEquipment\\\"\\n                      (change)=\\\"affecting('cbSportsEquipment', 'Sports Equipment Checkbox')\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"cbSportsEquipment\\\">\\n                      will bring sports equipment?\\n                    </label>\\n                  </div>\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['sportsEquipment'].invalid \\n                    && (quoteForm.controls['sportsEquipment'].dirty \\n                    || quoteForm.controls['sportsEquipment'].touched)}\\\">\\n                    <textarea class=\\\"form-control required\\\"\\n                      [attr.disabled]=\\\"editMode && travelDetails.cbSportsEquipment ? null : ''\\\" type=\\\"text\\\"\\n                      id=\\\"sportsEquipment\\\" formControlName=\\\"sportsEquipment\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [(ngModel)]=\\\"travelDetails.sportsEquipment\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['sportsEquipment'].errors?.required\\\">\\n                      * please indicate sport equipment/s\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-check\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbHazardousSports\\\"\\n                      formControlName=\\\"cbHazardousSports\\\" [(ngModel)]=\\\"travelDetails.cbHazardousSports\\\"\\n                      (change)=\\\"affecting('cbHazardousSports', 'Hazardous Sports Checkbox')\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"cbHazardousSports\\\">\\n                      will do hazardous sports?\\n                    </label>\\n                  </div>\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['hazardousSports'].invalid \\n                    && (quoteForm.controls['hazardousSports'].dirty \\n                    || quoteForm.controls['hazardousSports'].touched)}\\\">\\n                    <textarea class=\\\"form-control required\\\"\\n                      [attr.disabled]=\\\"editMode && travelDetails.cbHazardousSports ? null : ''\\\" type=\\\"text\\\"\\n                      id=\\\"hazardousSports\\\" formControlName=\\\"hazardousSports\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [(ngModel)]=\\\"travelDetails.hazardousSports\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['hazardousSports'].errors?.required\\\">\\n                      * please indicate the sport\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <app-payment-breakdown\\n            *ngIf=\\\"showPaymentBreakdown\\\"\\n            #appPaymentBreakdown\\n            [paymentReceipt]=\\\"paymentReceipt\\\"\\n            [paymentBreakdown]=\\\"paymentBreakdown\\\"\\n            [showExchangeRate]=\\\"true\\\"\\n            [loadBreakdown]=\\\"triggerBreakdown\\\">\\n          </app-payment-breakdown>\\n\\n          <app-fixed-coverages\\n            *ngIf=\\\"showCoverage\\\"\\n            [line]=\\\"'travel'\\\"\\n            [coverageList]=\\\"coverageList\\\"\\n            [loadCoverage]=\\\"triggerCoverage\\\">\\n          </app-fixed-coverages>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Coverages</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Coverage Option</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['insuranceCoverage'].invalid \\n                      && (quoteForm.controls['insuranceCoverage'].dirty \\n                      || quoteForm.controls['insuranceCoverage'].touched)}\\\">\\n                    <label for=\\\"insuranceCoverage\\\">Travel Insurance Coverage</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"insuranceCoverage\\\"\\n                      [(ngModel)]=\\\"travelDetails.insuranceCoverage\\\"\\n                      (change)=\\\"affecting('insuranceCoverage', 'Travel Insurance Coverage')\\\"\\n                      [attr.disabled]=\\\"true\\\">\\n                      <option *ngFor=\\\"let insuranceCoverage of LOV.insuranceCoverageLOV\\\" [ngValue]=\\\"insuranceCoverage.INSURANCE_COVERAGE\\\">\\n                        {{ insuranceCoverage.NOM_VALOR }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['insuranceCoverage'].errors?.required\\\">\\n                      * travel insurance coverage is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['coverageOption'].invalid \\n                        && (quoteForm.controls['coverageOption'].dirty \\n                        || quoteForm.controls['coverageOption'].touched)}\\\">\\n                    <label for=\\\"coverageOption\\\">Coverage Option Pack</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"coverageOption\\\"\\n                      [(ngModel)]=\\\"travelDetails.coverageOption\\\"\\n                      (change)=\\\"affecting('coverageOption', 'Coverage Option Pack')\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.coverageOptionLOV?.length ? null : true\\\">\\n                      <option></option>\\n                      <option *ngFor=\\\"let coverageOption of LOV.coverageOptionLOV\\\" [ngValue]=\\\"coverageOption.COVERAGE_OPTIONS\\\">\\n                        {{ coverageOption.NOM_VALOR }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['coverageOption'].errors?.required\\\">\\n                      * coverage option pack is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['medicalExpenses'].invalid \\n                          && (quoteForm.controls['medicalExpenses'].dirty \\n                          || quoteForm.controls['medicalExpenses'].touched)}\\\">\\n                    <label for=\\\"medicalExpenses\\\">Medical Expenses Coverage</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"medicalExpenses\\\"\\n                      [(ngModel)]=\\\"travelDetails.medicalExpenses\\\"\\n                      (change)=\\\"affecting('medicalExpenses', 'Medical Expenses Coverage')\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.medicalExpensesLOV?.length ? null : true\\\">\\n                      <option></option>\\n                      <option *ngFor=\\\"let medicalExpenses of LOV.medicalExpensesLOV\\\" [ngValue]=\\\"medicalExpenses.VAL_CAMPO1\\\">\\n                        {{ medicalExpenses.VAL_CAMPO2 }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['medicalExpenses'].errors?.required\\\">\\n                      * medical expenses coverage is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- button controls for quotation -->\\n          <div *ngIf=\\\"!isIssuance\\\">\\n            <div *ngIf=\\\"showGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button\\n                *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n              <button\\n                *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(1)\\\">Generate</button>\\n            </div>\\n            <div *ngIf=\\\"showIssueQuoteBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"manageBtn(1)\\\">Edit Details</button>\\n              <button\\n                *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Issue Quote</button>\\n              <button\\n                *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(2)\\\">Issue Quote</button>\\n            </div>\\n            <div *ngIf=\\\"showProceedToIssuanceBtn\\\" class=\\\"text-right\\\">\\n              <h5><small>Your quotation number:</small> {{travelDetails.quotationNumber}}</h5>\\n            </div>\\n            <div *ngIf=\\\"showProceedToIssuanceBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" (click)=\\\"newQuote()\\\" class=\\\"btn btn-primary\\\">New Quote</button>\\n              <button type=\\\"button\\\" (click)=\\\"printQuote()\\\" class=\\\"btn btn-primary\\\">Print Quote</button>\\n              <button type=\\\"button\\\" (click)=\\\"proceedToIssuance()\\\" class=\\\"btn btn-primary\\\">Proceed to Issuance</button>\\n            </div>\\n          </div>\\n\\n          <!-- button controls for issuance -->\\n          <div *ngIf=\\\"isIssuance\\\">\\n            <div *ngIf=\\\"(showSaveBtn && withTechControl) || (showPostBtn && withTechControl)\\\">\\n              <div class=\\\"alert alert-warning note\\\">\\n                <p>\\n                  <strong>Quotation has tech control!</strong> Unable to issue policy.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showNewPolicyBtn\\\">\\n              <div class=\\\"alert alert-danger note\\\">\\n                <p>\\n                  <strong>Quotation has error!</strong> Unable to issue policy.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showIssuanceGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button\\n                *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n              <button\\n                *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(1)\\\">Generate</button>\\n            </div>\\n\\n            <div *ngIf=\\\"showSaveBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"manageBtn(1)\\\">Edit Details</button>\\n              <button\\n                *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Save</button>\\n              <button\\n                *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(3)\\\">Save</button>\\n            </div>\\n\\n            <div *ngIf=\\\"showPostBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"editMode = !editMode\\\">Edit Details</button>\\n              <button\\n                *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Post</button>\\n              <button\\n                *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(4)\\\">Post</button>\\n            </div>\\n\\n            <div *ngIf=\\\"showPrintBtn\\\" class=\\\"text-right\\\">\\n              <h5><small>Your policy number:</small> {{travelDetails.policyNumber}}</h5>\\n            </div>\\n            <div *ngIf=\\\"showPrintBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"newPolicy()\\\">New Policy</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"printPolicy()\\\">Print</button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n        </form>\\n        <!-- .quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #QuotationTravel -->\\n\\n<ng-template #proceedModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Are you sure you want to proceed?</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have changes to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of changedValues\\\">\\n        {{item}}\\n      </li>\\n\\n      <li *ngFor=\\\"let item of changedTravelerValues\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n    <h6>Changes may affect your premium and will create a new quotation.</h6>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Cancel\\n      </button>\\n      <button *ngIf=\\\"data.generateBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"issueQuote('S')\\\">\\n        Generate\\n      </button>\\n      <button *ngIf=\\\"data.saveBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"savePolicy()\\\">\\n        Save\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #validationModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Your application is incomplete</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have invalid/empty data to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of invalidForms\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Okay\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\";","export default \"<p>reloading page</p>\\n\";","export default \"<div class=\\\"row\\\" id=\\\"requests\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-plus fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Create Requests\\n      </h4>\\n\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <form [formGroup]=\\\"requestForm\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-5 col-md-5 col-sm-12\\\">\\n              <div class=\\\"form-group input-group mb-3\\\" [ngClass]=\\\"{'input-error': requestForm.controls['type'].invalid \\n                  && (requestForm.controls['type'].dirty \\n                  || requestForm.controls['type'].touched)}\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Request Type</label>\\n                </div>\\n\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"type\\\" [(ngModel)]=\\\"requestDetails.type\\\">\\n                  <option selected>\\n                    <p *ngIf=\\\"requestForm.controls['type'].errors?.required\\\">\\n                      Select Request Type\\n                    </p>\\n                  </option>\\n                  <option value=\\\"P\\\">Policy Request</option>\\n                  <option value=\\\"E\\\">Endorsement</option>\\n                  <option value=\\\"R\\\">Renewal</option>\\n                  <option value=\\\"U\\\">Underwriting</option>\\n                </select>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n            <div class=\\\"form-divider\\\"></div>\\n\\n            <div class=\\\"col-md-12\\\" *ngIf=\\\"showPolicyDetails\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['type1'].invalid \\n                              && (requestForm.controls['type1'].dirty \\n                              || requestForm.controls['type1'].touched)}\\\">\\n\\n                    <label for=\\\"type1\\\">Type 1</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"type1\\\"\\n                      [(ngModel)]=\\\"requestDetails.type1\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['type1'].errors?.required\\\">\\n                      * type 1 is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['type2'].invalid \\n                              && (requestForm.controls['type2'].dirty \\n                              || requestForm.controls['type2'].touched)}\\\">\\n\\n                    <label for=\\\"type2\\\">Type 2</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"type2\\\"\\n                      [(ngModel)]=\\\"requestDetails.type2\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['type2'].errors?.required\\\">\\n                      * type 2 is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['branch'].invalid \\n                              && (requestForm.controls['branch'].dirty \\n                              || requestForm.controls['branch'].touched)}\\\">\\n\\n                    <label for=\\\"branch\\\">Branch</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"branch\\\"\\n                      [(ngModel)]=\\\"requestDetails.branch\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['branch'].errors?.required\\\">\\n                      * branch is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['line'].invalid \\n                              && (requestForm.controls['line'].dirty \\n                              || requestForm.controls['line'].touched)}\\\">\\n\\n                    <label for=\\\"line\\\">Line</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"line\\\"\\n                      [(ngModel)]=\\\"requestDetails.line\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['line'].errors?.required\\\">\\n                      * line is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['subline'].invalid \\n                              && (requestForm.controls['subline'].dirty \\n                              || requestForm.controls['subline'].touched)}\\\">\\n\\n                    <label for=\\\"subline\\\">Subline</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                      [(ngModel)]=\\\"requestDetails.subline\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['subline'].errors?.required\\\">\\n                      * subline is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['typeOfPolicy'].invalid \\n                        && (requestForm.controls['typeOfPolicy'].dirty \\n                        || requestForm.controls['typeOfPolicy'].touched)}\\\">\\n\\n                    <label for=\\\"typeOfPolicy\\\">Type of Policy</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"typeOfPolicy\\\"\\n                      [(ngModel)]=\\\"requestDetails.typeOfPolicy\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['typeOfPolicy'].errors?.required\\\">\\n                      * type of policy is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['clientName'].invalid \\n                          && (requestForm.controls['clientName'].dirty \\n                          || requestForm.controls['clientName'].touched)}\\\">\\n                    <label for=\\\"clientName\\\">Client Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"clientName\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.clientName\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['clientName'].errors?.required\\\">\\n                      * client name is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['clientGroup'].invalid \\n                              && (requestForm.controls['clientGroup'].dirty \\n                              || requestForm.controls['clientGroup'].touched)}\\\">\\n\\n                    <label for=\\\"clientGroup\\\">Client Group</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"clientGroup\\\"\\n                      [(ngModel)]=\\\"requestDetails.clientGroup\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['clientGroup'].errors?.required\\\">\\n                      * client group is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['copyNotify'].invalid \\n                          && (requestForm.controls['copyNotify'].dirty \\n                          || requestForm.controls['copyNotify'].touched)}\\\">\\n                    <label for=\\\"copyNotify\\\">Copy Notify</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"copyNotify\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.copyNotify\\\" placeholder=\\\"Use semicolon (;) as email separator\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['copyNotify'].errors?.required\\\">\\n                      * copy notify is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['comments'].invalid \\n                      && (requestForm.controls['comments'].dirty \\n                      || requestForm.controls['comments'].touched)}\\\">\\n                    <label for=\\\"comments\\\">Comments or Remarks</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"comments\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.comments\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['comments'].errors?.required\\\">\\n                      * comments/remarks is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"row\\\">\\n                    <ngx-dropzone (change)=\\\"onSelect($event)\\\"\\n                      accept=\\\"image/jpeg,\\n                      image/jpg,\\n                      image/png,\\n                      image/gif,\\n                      application/pdf,\\n                      application/xls,\\n                      application/xlsx,\\n                      application/doc,\\n                      application/docx,\\n                      application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,\\n                      application/vnd.openxmlformats-officedocument.wordprocessingml.document\\\"\\n                      >\\n                      <ngx-dropzone-label>Drop file here</ngx-dropzone-label>\\n                      <ngx-dropzone-preview *ngFor=\\\"let f of files\\\" [removable]=\\\"true\\\" (removed)=\\\"onRemove(f)\\\">\\n                        <ngx-dropzone-label>{{ f.name }}</ngx-dropzone-label>\\n                      </ngx-dropzone-preview>\\n                    </ngx-dropzone>\\n                  </div>\\n                  \\n                </div>\\n\\n                \\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-12\\\" *ngIf=\\\"showDetails\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['requestType'].invalid \\n                        && (requestForm.controls['requestType'].dirty \\n                        || requestForm.controls['requestType'].touched)}\\\">\\n\\n                    <label for=\\\"requestType\\\">Request Type</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"requestType\\\"\\n                      [(ngModel)]=\\\"requestDetails.requestType\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\" *ngIf=\\\"showUnderwritingRT\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['issueType'].invalid \\n                        && (requestForm.controls['issueType'].dirty \\n                        || requestForm.controls['issueType'].touched)}\\\">\\n                    <label for=\\\"issueType\\\">Issue Type</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"issueType\\\"\\n                      [(ngModel)]=\\\"requestDetails.issueType\\\">\\n                      <option value=\\\"P\\\">Policy</option>\\n                      <option value=\\\"C\\\">Quotation</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['issueType'].errors?.required\\\">\\n                      * issue type is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['policyNumber'].invalid \\n                        && (requestForm.controls['policyNumber'].dirty \\n                        || requestForm.controls['policyNumber'].touched)}\\\">\\n                    <label for=\\\"policyNumber\\\">Policy Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"policyNumber\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.policyNumber\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['policyNumber'].errors?.required\\\">\\n                      * policy number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['reason'].invalid \\n                    && (requestForm.controls['reason'].dirty \\n                    || requestForm.controls['reason'].touched)}\\\">\\n                    <label for=\\\"reason\\\">Reason</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"reason\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.reason\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['reason'].errors?.required\\\">\\n                      * reason is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['agentEmail'].invalid \\n                    && (requestForm.controls['agentEmail'].dirty \\n                    || requestForm.controls['agentEmail'].touched)}\\\">\\n                    <label for=\\\"agentEmail\\\">Agent's Email</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"agentEmail\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.agentEmail\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['agentEmail'].errors?.required\\\">\\n                      * agent's email is required\\n                    </p>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['agentEmail'].errors?.email\\\">\\n                      * invalid email format\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['name'].invalid \\n                    && (requestForm.controls['name'].dirty \\n                    || requestForm.controls['name'].touched)}\\\">\\n                    <label for=\\\"name\\\">Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.name\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['name'].errors?.required\\\">\\n                      * name is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"clearfix\\\"></div>\\n\\n          </div>\\n          <!-- .row -->\\n\\n          <div class=\\\"alert alert-info note\\\">\\n            <p>\\n              <strong>Important Reminder:</strong> Please make sure to fill out all required fields to enable the button below.\\n            </p>\\n          </div>\\n          <!-- .note -->\\n\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button [disabled]=\\\"requestForm.invalid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"request(requestDetails)\\\">Create Request</button>\\n          </div>\\n\\n          <!-- .btn-group -->\\n\\n        </form>\\n\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #requests -->\";","export default \"<form [formGroup]=\\\"requestForm\\\">\\n  <h2 mat-dialog-title>View Details</h2>\\n  <div mat-dialog-content>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <h5>Main Details</h5>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"requestId\\\">Request ID</label>\\n            <input type=\\\"text\\\" formControlName=\\\"requestId\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"requestDetailsList.requestId\\\" [readOnly]=\\\"true\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"requestHandler\\\">Request Handler</label>\\n            <input type=\\\"text\\\" formControlName=\\\"requestHandler\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"requestDetailsList.requestHandler\\\" [attr.disabled]=\\\"true\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"requestType\\\">Request Type</label>\\n            <input type=\\\"text\\\" formControlName=\\\"requestType\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"requestDetailsList.requestType\\\" [attr.disabled]=\\\"true\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"policyNumber\\\">Policy Number</label>\\n            <input type=\\\"text\\\" formControlName=\\\"policyNumber\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"requestDetailsList.policyNumber\\\" [attr.disabled]=\\\"true\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"status\\\">Status</label>\\n            <input type=\\\"text\\\" formControlName=\\\"status\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"requestDetailsList.status\\\" [attr.disabled]=\\\"true\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"address\\\">Message</label>\\n            <textarea type=\\\"text\\\" formControlName=\\\"message\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"requestDetailsList.message\\\" [attr.disabled]=\\\"true\\\"></textarea>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-divider\\\"></div>\\n        \\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"flexitable\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  \\n              <ng-container matColumnDef=\\\"requestHandler\\\">\\n                <th mat-header-cell *matHeaderCellDef> Request Handler </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.requestHandler}} </td>\\n              </ng-container>\\n  \\n              <ng-container matColumnDef=\\\"message\\\">\\n                <th mat-header-cell *matHeaderCellDef> Message </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.message\\\"> {{element.message}} </td>\\n              </ng-container>\\n  \\n              <ng-container matColumnDef=\\\"user\\\">\\n                <th mat-header-cell *matHeaderCellDef> User </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.user}} </td>\\n              </ng-container>\\n  \\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n  \\n              <ng-container matColumnDef=\\\"postDate\\\">\\n                <th mat-header-cell *matHeaderCellDef> Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.postDate}} </td>\\n              </ng-container>\\n  \\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  \\n            </table>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n        \\n        <div class=\\\"form-divider\\\"></div>\\n\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['replyMessage'].invalid \\n              && (requestForm.controls['replyMessage'].dirty \\n              || requestForm.controls['replyMessage'].touched)}\\\">\\n            <label for=\\\"address\\\">Reply</label>\\n            <textarea type=\\\"text\\\" formControlName=\\\"replyMessage\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"replyDetails.message\\\"></textarea>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['replyMessage'].errors?.required\\\">\\n              * reply is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['agentEmail'].invalid \\n              && (requestForm.controls['agentEmail'].dirty \\n              || requestForm.controls['agentEmail'].touched)}\\\">\\n            <label for=\\\"agentEmail\\\">Agent's Email</label>\\n            <input type=\\\"text\\\" formControlName=\\\"agentEmail\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"replyDetails.agentEmail\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['agentEmail'].errors?.required\\\">\\n              * agent's email is required\\n            </p>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['agentEmail'].errors?.email\\\">\\n              * invalid email format\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['name'].invalid \\n              && (requestForm.controls['name'].dirty \\n              || requestForm.controls['name'].touched)}\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control required\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"replyDetails.name\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['name'].errors?.required\\\">\\n              * name is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"close()\\\">\\n        Close\\n      </button>\\n      <button [disabled]=\\\"requestForm.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"reply()\\\">\\n        Reply\\n      </button>\\n    </div>\\n  </div>\\n</form>\";","export default \"<div class=\\\"row\\\" id=\\\"requestList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Request List</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"requestType\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Request Type</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"requestType\\\" id=\\\"requestType\\\" [(ngModel)]=\\\"pageFilter.requestType\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of requestTypeItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"requestId\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Request ID</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"requestId\\\" id=\\\"requestId\\\" [(ngModel)]=\\\"pageFilter.requestId\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\" [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"status\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Status</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"status\\\" id=\\\"status\\\" [(ngModel)]=\\\"pageFilter.status\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of statusItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"requestHandler\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Request Handler</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"requestHandler\\\" id=\\\"requestHandler\\\" [(ngModel)]=\\\"pageFilter.requestHandler\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"user\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">User</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"user\\\" id=\\\"user\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"pageFilter.user\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n            </form>\\n            \\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n\\n              <!-- Position Column -->\\n              <ng-container matColumnDef=\\\"requestType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Request Type </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.requestType}} </td>\\n              </ng-container>\\n\\n              <!-- Name Column -->\\n              <ng-container matColumnDef=\\\"requestId\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Request ID </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.requestId}} </td>\\n              </ng-container>\\n\\n              <!-- Weight Column -->\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"status\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\n              </ng-container>\\n\\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"requestHandler\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Request Hanlder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.requestHandler}} </td>\\n              </ng-container>\\n\\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"user\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> User </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.user}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card.shadow -->\\n    </div>\\n    <!-- .col-xl-12 -->\\n  </div>\\n  <!-- #requestList -->\";","export default \"<ul class=\\\"navbar-nav sidebar sidebar-dark accordion\\\" id=\\\"accordionSidebar\\\">\\n\\n  <!-- Sidebar - Brand -->\\n  <a class=\\\"sidebar-brand d-flex align-items-center justify-content-center\\\" (click)=\\\"setPage(p.DAS.N)\\\">\\n    <img src=\\\"./assets/images/{{logo}}.png\\\" alt=\\\"brand-logo\\\" />\\n  </a>\\n\\n  <!-- Divider -->\\n  <hr class=\\\"sidebar-divider my-0\\\">\\n\\n  <!-- Nav Item - Dashboard -->\\n  <li *ngIf=\\\"menu.dash\\\" [ngClass]=\\\"{'active': page==p.DAS.N}\\\" class=\\\"nav-item\\\" (click)=\\\"setPage(p.DAS.N)\\\">\\n    <a class=\\\"nav-link\\\">\\n      <i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i>\\n      <span>Dashboard</span></a>\\n  </li>\\n\\n  <!-- Divider -->\\n  <hr class=\\\"sidebar-divider\\\">\\n\\n  <!-- Nav Item - Pages Collapse Menu -->\\n  <li *ngIf=\\\"menu.account\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myAccount\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"myAccount\\\">\\n      <i class=\\\"fas fa-fw fa-user\\\"></i>\\n      <span>My Account</span>\\n    </a>\\n    <div id=\\\"myAccount\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <a *ngIf=\\\"menu.outstanding\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ACC.OUT}\\\"\\n          (click)=\\\"setPage(p.ACC.OUT)\\\"><i class=\\\"fas fa-fw fa-star\\\"></i> Outstanding Bills</a>\\n        <a *ngIf=\\\"menu.commissionsPaid\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ACC.COM}\\\"\\n          (click)=\\\"setPage(p.ACC.COM)\\\"><i class=\\\"fas fa-fw fa-money-bill-wave\\\"></i> Commissions Paid</a>\\n        <a *ngIf=\\\"menu.estimatedCommissions\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ACC.EST}\\\"\\n          (click)=\\\"setPage(p.ACC.EST)\\\"><i class=\\\"fas fa-fw fa-calculator\\\"></i> Estimated Commissions</a>\\n        <a *ngIf=\\\"menu.premiumCollection\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ACC.PRE}\\\"\\n          (click)=\\\"setPage(p.ACC.PRE)\\\"><i class=\\\"fas fa-fw fa-award\\\"></i> Premium Collection</a>\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.client\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myClient\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"myClient\\\">\\n      <i class=\\\"fas fa-fw fa-handshake\\\"></i>\\n      <span>My Client</span>\\n    </a>\\n    <div id=\\\"myClient\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <h6 class=\\\"collapse-header\\\">Clients:</h6>\\n        <a *ngIf=\\\"menu.clientDetails\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.CLI}\\\"\\n          (click)=\\\"setPage(p.CLI.CLI)\\\"><i class=\\\"fas fa-fw fa-info-circle\\\"></i> Details</a>\\n        <h6 class=\\\"collapse-header\\\">Policies:</h6>\\n        <a *ngIf=\\\"menu.active\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.ACT}\\\"\\n          (click)=\\\"setPage(p.CLI.ACT)\\\"><i class=\\\"fas fa-fw fa-user-check\\\"></i> Active</a>\\n        <a *ngIf=\\\"menu.cancelled\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.CAN}\\\"\\n          (click)=\\\"setPage(p.CLI.CAN)\\\"><i class=\\\"fas fa-fw fa-user-times\\\"></i> Cancelled</a>\\n        <a *ngIf=\\\"menu.renewed\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.REN}\\\"\\n          (click)=\\\"setPage(p.CLI.REN)\\\"><i class=\\\"fas fa-fw fa-sync\\\"></i> Renewed</a>\\n        <a *ngIf=\\\"menu.notRenewed\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.NOT}\\\"\\n          (click)=\\\"setPage(p.CLI.NOT)\\\"><i class=\\\"fas fa-fw fa-user-slash\\\"></i> Not Renewed</a>\\n        <a *ngIf=\\\"menu.expiring\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.EXP}\\\"\\n          (click)=\\\"setPage(p.CLI.EXP)\\\"><i class=\\\"fas fa-fw fa-exclamation-triangle\\\"></i> Expiring</a>\\n        <a *ngIf=\\\"menu.provisional\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.PRO}\\\"\\n          (click)=\\\"setPage(p.CLI.PRO)\\\"><i class=\\\"fas fa-fw fa-user-clock\\\"></i> Provisional</a>\\n        <h6 class=\\\"collapse-header\\\">Quotations:</h6>\\n        <a *ngIf=\\\"menu.activeQuotation\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.ACTQ}\\\"\\n          (click)=\\\"setPage(p.CLI.ACTQ)\\\"><i class=\\\"fas fa-fw fa-user-check\\\"></i> Active</a>\\n        <a *ngIf=\\\"menu.provisionalQuotation\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.PROQ}\\\"\\n          (click)=\\\"setPage(p.CLI.PROQ)\\\"><i class=\\\"fas fa-fw fa-user-clock\\\"></i> Provisional</a>\\n        <h6 class=\\\"collapse-header\\\">Claims:</h6>\\n        <a *ngIf=\\\"menu.claims\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.CLA}\\\"\\n          (click)=\\\"setPage(p.CLI.CLA)\\\"><i class=\\\"fas fa-fw fa-info-circle\\\"></i> Details</a>\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.quick\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#quickQuotation\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"quickQuotation\\\">\\n      <i class=\\\"fas fa-fw fa-play\\\"></i>\\n      <span>Quick Quotation</span>\\n    </a>\\n    <div id=\\\"quickQuotation\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <a *ngIf=\\\"menu.quickCar\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUI.CAR}\\\"\\n          (click)=\\\"setPage(p.QUI.CAR)\\\"><i class=\\\"fas fa-fw fa-car\\\"></i> Car</a>\\n        <a *ngIf=\\\"menu.quickHome\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUI.HOM}\\\"\\n          (click)=\\\"setPage(p.QUI.HOM)\\\"><i class=\\\"fas fa-fw fa-home\\\"></i> Home</a>\\n        <a *ngIf=\\\"menu.quickTravel\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUI.TRA}\\\"\\n          (click)=\\\"setPage(p.QUI.TRA)\\\"><i class=\\\"fas fa-fw fa-plane\\\"></i> Travel</a>\\n        <a *ngIf=\\\"menu.quickAccident\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUI.ACC}\\\"\\n          (click)=\\\"setPage(p.QUI.ACC)\\\"><i class=\\\"fas fa-fw fa-shield-alt\\\"></i> Accident</a>\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.quotation\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link{{appType!='Q' ? ' collapsed' : ''}}\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#quotation\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"quotation\\\">\\n      <i class=\\\"fas fa-fw fa-play\\\"></i>\\n      <span>Quotation</span>\\n    </a>\\n    <div id=\\\"quotation\\\" class=\\\"collapse{{appType=='Q' ? ' show' : ''}}\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <a *ngIf=\\\"menu.quotationCar\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUO.CAR}\\\"\\n          (click)=\\\"setAppPage(p.QUO.CAR)\\\"><i class=\\\"fas fa-fw fa-car\\\"></i> Car</a>\\n        <a *ngIf=\\\"menu.quotationHome\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUO.HOM}\\\"\\n          (click)=\\\"setPage(p.QUO.HOM)\\\"><i class=\\\"fas fa-fw fa-home\\\"></i> Home</a>\\n        <a *ngIf=\\\"menu.quotationTravel\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUO.TRA}\\\"\\n          (click)=\\\"setAppPage(p.QUO.TRA)\\\"><i class=\\\"fas fa-fw fa-plane\\\"></i> Travel</a>\\n        <a *ngIf=\\\"menu.quotationAccident\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUO.ACC}\\\"\\n          (click)=\\\"setPage(p.QUO.ACC)\\\"><i class=\\\"fas fa-fw fa-shield-alt\\\"></i> Accident</a>\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.issuance\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link{{appType!='I' ? ' collapsed' : ''}}\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#policyIssuance\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"policyIssuance\\\">\\n      <i class=\\\"fas fa-fw fa-play\\\"></i>\\n      <span>Policy Issuance</span>\\n    </a>\\n    <div id=\\\"policyIssuance\\\" class=\\\"collapse{{appType=='I' ? ' show' : ''}}\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <a *ngIf=\\\"menu.issuanceCar\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ISS.CAR}\\\"\\n          (click)=\\\"setAppPage(p.ISS.CAR)\\\"><i class=\\\"fas fa-fw fa-car\\\"></i> Car</a>\\n        <a *ngIf=\\\"menu.issuanceHome\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ISS.HOM}\\\"\\n          (click)=\\\"setAppPage(p.ISS.HOM)\\\"><i class=\\\"fas fa-fw fa-home\\\"></i> Home</a>\\n        <a *ngIf=\\\"menu.issuanceTravel\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ISS.TRA}\\\"\\n          (click)=\\\"setAppPage(p.ISS.TRA)\\\"><i class=\\\"fas fa-fw fa-plane\\\"></i> Travel</a>\\n        <a *ngIf=\\\"menu.issuanceAccident\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ISS.ACC}\\\"\\n          (click)=\\\"setPage(p.ISS.ACC)\\\"><i class=\\\"fas fa-fw fa-shield-alt\\\"></i> Accident</a>\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.requests\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#requests\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"requests\\\">\\n      <i class=\\\"fas fa-fw fa-bell\\\"></i>\\n      <span>Requests</span>\\n    </a>\\n    <div id=\\\"requests\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <a *ngIf=\\\"menu.requestCreate\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.REQ.CRE}\\\"\\n          (click)=\\\"setPage(p.REQ.CRE)\\\"><i class=\\\"fas fa-fw fa-plus\\\"></i> Create Request</a>\\n        <a *ngIf=\\\"menu.requestList\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.REQ.LIS}\\\"\\n          (click)=\\\"setPage(p.REQ.LIS)\\\"><i class=\\\"fas fa-fw fa-clipboard-list\\\"></i> Request List</a>\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.utilities\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#utilities\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"utilities\\\">\\n      <i class=\\\"fas fa-fw fa-tools\\\"></i>\\n      <span>Utilities</span>\\n    </a>\\n    <div id=\\\"utilities\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <a *ngIf=\\\"menu.query\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.UTI.QUE}\\\"\\n          (click)=\\\"setPage(p.UTI.QUE)\\\"><i class=\\\"fas fa-fw fa-clipboard-list\\\"></i> Query</a>\\n        <a *ngIf=\\\"menu.documentPrinting\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.UTI.DOC}\\\"\\n          (click)=\\\"setPage(p.UTI.DOC)\\\"><i class=\\\"fas fa-fw fa-print\\\"></i> Document Printing</a>\\n        <!-- <a *ngIf=\\\"menu.changePassword\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.UTI.CHA}\\\"\\n          (click)=\\\"setPage(p.UTI.CHA)\\\"><i class=\\\"fas fa-fw fa-key\\\"></i> Change Password</a> -->\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.news\\\" [ngClass]=\\\"{'active': page==p.NEW.N}\\\" class=\\\"nav-item\\\" (click)=\\\"setPage(p.NEW.N)\\\">\\n    <a class=\\\"nav-link\\\">\\n      <i class=\\\"fas fa-fw fa-newspaper\\\"></i>\\n      <span>News</span>\\n    </a>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.faq\\\" [ngClass]=\\\"{'active': page==p.FAQ.N}\\\" class=\\\"nav-item\\\" (click)=\\\"setPage(p.FAQ.N)\\\">\\n    <a class=\\\"nav-link\\\">\\n      <i class=\\\"fas fa-fw fa-question\\\"></i>\\n      <span>FAQ</span>\\n    </a>\\n  </li>\\n\\n  <!-- Divider -->\\n  <hr class=\\\"sidebar-divider\\\">\\n\\n  <!-- Heading -->\\n  <div class=\\\"sidebar-heading\\\">\\n    User Information\\n  </div>\\n\\n  <li class=\\\"nav-item\\\">\\n    <div class=\\\"nav-link\\\">\\n      <i class=\\\"fas fa-fw fa-user\\\"></i>\\n      <span>{{currentUser.userName}}</span></div>\\n  </li>\\n\\n  <li *ngIf=\\\"currentUser.address\\\" class=\\\"nav-item\\\">\\n    <div class=\\\"nav-link\\\">\\n      <i class=\\\"fas fa-fw fa-map-marked-alt\\\"></i>\\n      <span>{{currentUser.address}}</span></div>\\n  </li>\\n\\n  <!-- <li class=\\\"nav-item\\\">\\n    <div class=\\\"nav-link\\\">\\n      <i class=\\\"fas fa-fw fa-key\\\"></i>\\n      <span>Your password will expire in <strong>{{currentUser.expiryDay}}\\n          {{currentUser.expiryDay <= 1 ? 'day' : 'days' }}</strong></span></div>\\n  </li> -->\\n\\n  <div *ngIf=\\\"hasSelectedAgent\\\">\\n    <!-- Divider -->\\n    <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\n\\n    <!-- Heading -->\\n    <div class=\\\"sidebar-heading\\\">\\n      Agent Information\\n    </div>\\n\\n    <li class=\\\"nav-item\\\">\\n      <div class=\\\"nav-link\\\">\\n        <i class=\\\"fas fa-fw fa-user\\\"></i>\\n        <span>{{currentUser.selectedAgent.agentName}}</span></div>\\n    </li>\\n\\n    <li *ngIf=\\\"currentUser.selectedAgent.agentAddress\\\" class=\\\"nav-item\\\">\\n      <div class=\\\"nav-link\\\">\\n        <i class=\\\"fas fa-fw fa-map-marked-alt\\\"></i>\\n        <span>{{currentUser.selectedAgent.agentAddress}}</span></div>\\n    </li>\\n  </div>\\n\\n  <!-- Sidebar Toggler (Sidebar) -->\\n  <!-- <div class=\\\"text-center d-none d-md-inline\\\">\\n    <button class=\\\"rounded-circle border-0\\\" id=\\\"sidebarToggle\\\"></button>\\n  </div> -->\\n</ul>\";","export default \"  <!-- Page Wrapper -->\\n  <div id=\\\"wrapper\\\">\\n\\n    <!-- Sidebar -->\\n    <app-sidenav class=\\\"{{sideNavClass}}\\\"></app-sidenav>\\n\\n    <!-- Content Wrapper -->\\n    <div id=\\\"content-wrapper\\\" class=\\\"d-flex flex-column\\\">\\n\\n      <!-- Main Content -->\\n      <div id=\\\"content\\\">\\n\\n        <!-- Header -->\\n        <app-header></app-header>\\n\\n        <!-- Begin Page Content -->\\n        <div class=\\\"container-fluid\\\">\\n          <app-dashboard *ngIf=\\\"page === p.DAS.N\\\"></app-dashboard>\\n\\n          <app-profile *ngIf=\\\"page === p.UTI.CHA\\\"></app-profile>\\n\\n          <app-account-outstanding-bills-list *ngIf=\\\"page === p.ACC.OUT\\\"></app-account-outstanding-bills-list>\\n          <app-account-commissions-paid-list *ngIf=\\\"page === p.ACC.COM\\\"></app-account-commissions-paid-list>\\n          <app-account-estimated-commissions-list *ngIf=\\\"page === p.ACC.EST\\\"></app-account-estimated-commissions-list>\\n          <app-account-premium-collection-list *ngIf=\\\"page === p.ACC.PRE\\\"></app-account-premium-collection-list>\\n\\n          <app-client-details-list *ngIf=\\\"page === p.CLI.CLI\\\"></app-client-details-list>\\n          <app-client-policy-active-list *ngIf=\\\"page === p.CLI.ACT\\\"></app-client-policy-active-list>\\n          <app-client-policy-cancelled-list *ngIf=\\\"page === p.CLI.CAN\\\"></app-client-policy-cancelled-list>\\n          <app-client-policy-renewed-list *ngIf=\\\"page === p.CLI.REN\\\"></app-client-policy-renewed-list>\\n          <app-client-policy-not-renewed-list *ngIf=\\\"page === p.CLI.NOT\\\"></app-client-policy-not-renewed-list>\\n          <app-client-policy-expiring-list *ngIf=\\\"page === p.CLI.EXP\\\"></app-client-policy-expiring-list>\\n          <app-client-policy-provisional-list *ngIf=\\\"page === p.CLI.PRO\\\"></app-client-policy-provisional-list>\\n          <app-client-quotation-active-list *ngIf=\\\"page === p.CLI.ACTQ\\\"></app-client-quotation-active-list>\\n          <app-client-quotation-provisional-list *ngIf=\\\"page === p.CLI.PROQ\\\"></app-client-quotation-provisional-list>\\n          <app-client-claims-list *ngIf=\\\"page === p.CLI.CLA\\\"></app-client-claims-list>\\n\\n          <app-quick-quotation-car *ngIf=\\\"page === p.QUI.CAR\\\"></app-quick-quotation-car>\\n          <app-quick-quotation-home *ngIf=\\\"page === p.QUI.HOM\\\"></app-quick-quotation-home>\\n          <app-quick-quotation-travel *ngIf=\\\"page === p.QUI.TRA\\\"></app-quick-quotation-travel>\\n          <app-quick-quotation-accident *ngIf=\\\"page === p.QUI.ACC\\\"></app-quick-quotation-accident>\\n\\n          <app-quotation-car *ngIf=\\\"page === p.QUO.CAR\\\"></app-quotation-car>\\n          <app-quotation-home *ngIf=\\\"page === p.QUO.HOM\\\"></app-quotation-home>\\n          <app-quotation-travel *ngIf=\\\"page === p.QUO.TRA\\\"></app-quotation-travel>\\n          <app-quotation-accident *ngIf=\\\"page === p.QUO.ACC\\\"></app-quotation-accident>\\n\\n          <app-quotation-car *ngIf=\\\"page === p.ISS.CAR\\\"></app-quotation-car>\\n          <app-quotation-home *ngIf=\\\"page === p.ISS.HOM\\\"></app-quotation-home>\\n          <app-quotation-travel *ngIf=\\\"page === p.ISS.TRA\\\"></app-quotation-travel>\\n          <app-quotation-accident *ngIf=\\\"page === p.ISS.ACC\\\"></app-quotation-accident>\\n\\n          <app-request-list *ngIf=\\\"page === p.REQ.LIS\\\"></app-request-list>\\n          <app-request-create *ngIf=\\\"page === p.REQ.CRE\\\"></app-request-create>\\n          \\n          <app-query *ngIf=\\\"page === p.UTI.QUE\\\"></app-query>\\n          <app-document-printing *ngIf=\\\"page === p.UTI.DOC\\\"></app-document-printing>\\n\\n          <app-missing-page *ngIf=\\\"page === p.NEW.N\\\"></app-missing-page>\\n\\n          <app-faq *ngIf=\\\"page === p.FAQ.N\\\"></app-faq>\\n        </div>\\n        <!-- End Page Content -->\\n\\n      </div>\\n      <!-- End of Main Content -->\\n\\n      <!-- Footer -->\\n      <app-footer></app-footer>\\n\\n    </div>\\n    <!-- End of Content Wrapper -->\\n\\n    <!-- Scroll to Top Button-->\\n    <a class=\\\"scroll-to-top rounded\\\" href=\\\"#page-top\\\">\\n      <i class=\\\"fas fa-angle-up\\\"></i>\\n    </a>\\n  </div>\\n  <!-- End of Page Wrapper -->\\n\";","export default \"<div id=\\\"termsAndCondition\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"wrap\\\">\\n            <div class=\\\"row\\\">\\n\\n              <div class=\\\"col-lg-4 menu\\\">\\n                <a class=\\\"brand-logo\\\" (click)=\\\"redirect()\\\">\\n                    <img src=\\\"./assets/images/mivo-logo/mivo-logo-light.png\\\" alt=\\\"brand-logo\\\" />\\n                </a>\\n\\n                <ul class=\\\"terms-menu\\\">\\n                  <li (click)=\\\"scrollTo('cancellation')\\\">\\n                    CANCELLATION AND REFUND\\n                  </li>\\n                  <li (click)=\\\"scrollTo('security')\\\">\\n                    SECURITY CAPABILITIES & POLICY FOR TRANSMISSION OF PAYMENT\\n                  </li>\\n                  <li (click)=\\\"scrollTo('copyright')\\\">\\n                    COPYRIGHT\\n                  </li>\\n                  <li (click)=\\\"scrollTo('disclaimer')\\\">\\n                    DISCLAIMER\\n                  </li>\\n                  <li (click)=\\\"scrollTo('jurisdiction')\\\">\\n                    JURISDICTION\\n                  </li>\\n                </ul>\\n              </div>\\n              <!-- .col-lg-4 -->\\n\\n              <div class=\\\"col-lg-8 details\\\">\\n\\n                <div class=\\\"scroll\\\">\\n                  <div class=\\\"scroll-wrapper\\\">\\n                    <h2>\\n                      TERMS AND CONDITIONS\\n                    </h2>\\n\\n                    <div id=\\\"cancellation\\\" class=\\\"top-20\\\">\\n                      <h5>\\n                        CANCELLATION AND REFUND\\n                      </h5>\\n                      <div class=\\\"terms\\\">\\n                        <p>\\n                          For policy cancellation and refund, Terms and Conditions of Mapfre Insurance Corporation shall apply.\\n                        </p>\\n                      </div>\\n                    </div>\\n\\n                    <div id=\\\"security\\\" class=\\\"top-20\\\">\\n                      <h5>\\n                        SECURITY CAPABILITIES & POLICY FOR TRANSMISSION OF PAYMENT\\n                      </h5>\\n                      <div class=\\\"terms\\\">\\n                        <ol>\\n                          <li>\\n                            What information do we collect and how do we use it? When you make credit card transaction through\\n                            this website, we need your personal information such as (e.g. name, e-mail, phone number, address,\\n                            and etc). This allows us to process and fulfill your transaction successfully. It also helps us in\\n                            maintaining your account.\\n                          </li>\\n                          <li>\\n                            How does MAPFRE Insurance protect customer information? When you make transaction, we use a secure\\n                            server. The secure server software (SSL) encrypts all information you input before it is sent to\\n                            us. Furthermore, all of the sensitive customer data we collect is protected by several layers of\\n                            encryption and several layers of security to prevent unauthorized access.\\n                          </li>\\n                          <li>\\n                            Credit Card Details All credit card payments are processed securely through Paynamics. MAPFRE\\n                            Insurance does not store any credit card information on our servers.\\n                          </li>\\n                        </ol>\\n                      </div>\\n                    </div>\\n\\n                    <div id=\\\"copyright\\\" class=\\\"top-20\\\">\\n                      <h5>\\n                        COPYRIGHT\\n                      </h5>\\n                      <div class=\\\"terms\\\">\\n                        <p>All contents included in this site, such as text, graphics, logos, button icons, images, audio\\n                          clips and software are property of mapfre.com.ph or its content suppliers and protected by\\n                          Philippine and International copyright laws. The compilation of all contents on this site is the\\n                          exclusive property of mapfre.com.ph and protected by Philippine and International copyright laws.\\n                          The reproduction, distribution, transmission, republication or display of the content in this\\n                          website without consent from mapfre.com.ph is strictly prohibited.</p>\\n                      </div>\\n                    </div>\\n\\n                    <div id=\\\"disclaimer\\\" class=\\\"top-20\\\">\\n                      <h5>\\n                        DISCLAIMER\\n                      </h5>\\n                      <div class=\\\"terms\\\">\\n                        <p>This website and the information, services, products and materials available through it are\\n                          provided \\\"as is\\\" basis, without warranty of any kind, either express or implied, to the extent\\n                          permitted under any applicable law, including without limitation, implied warranties or\\n                          conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual\\n                          property or other violation of rights, Further Mapfre.com.ph does not warrant or make any representations\\n                          concerning the accuracy, likely results or reliability of the use of the materials on its Internet\\n                          web or otherwise relating to such materials or on any sites linked to this site.</p>\\n                      </div>\\n                    </div>\\n\\n                    <div id=\\\"jurisdiction\\\" class=\\\"top-20\\\">\\n                      <h5>\\n                        JURISDICTION\\n                      </h5>\\n                      <div class=\\\"terms\\\">\\n                        <p>\\n                          For products and services only available for purchase in the Philippines, these terms and conditions\\n                          shall be governed by and construed in accordance with Philippine Law. Disputes arising between you\\n                          and Mapfre.com.ph shall be subject to the exclusive jurisdiction of the courts of the\\n                          Philippines.\\n                        </p>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n                <!-- .scroll -->\\n\\n              </div>\\n              <!-- .col-lg-8 -->\\n\\n            </div>\\n            <!-- .row -->\\n          </div>\\n          <!-- .wrap -->\\n        </div>\\n        <!-- .container -->\\n      </div>\\n      <!-- .col-lg-12 -->\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n    <!-- .row -->\\n  </div>\\n  <!-- .container-fluid -->\\n</div>\\n<!-- #termsAndCondition -->\";","export default \"<h2 mat-dialog-title>{{ title || 'View Details'}}</h2>\\n<div mat-dialog-content>\\n  <div class=\\\"container\\\">\\n    <!-- MY CLIENT lists -->\\n    <!-- CLIENT DETAILS -->\\n    <div *ngIf=\\\"type == 'client-details'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Client Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.name}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.email}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"address\\\">Address</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.address}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"documentType\\\">Document Type</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.documentType}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"documentCode\\\">Document Code</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.documentCode}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"homeTelNumber\\\">Home Tel. No.</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.homeTelNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"BusinessTelNumber\\\">Business Tel. No.</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listClientDetails.businessTelNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"mobileNumber\\\">Mobile Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.mobileNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- ACTIVE POLICY -->\\n    <div *ngIf=\\\"type == 'client-active'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Active Policy Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyActive.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyDueDate\\\">Due Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.policyDueDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"line\\\">Line</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.line}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"documentType\\\">Document Type</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.documentType}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"documentCode\\\">Document Code</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.documentCode}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- CANCELLED POLICY -->\\n    <div *ngIf=\\\"type == 'client-cancelled'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Cancelled Policy Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyCancelled.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyCancelled.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"line\\\">Line</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyCancelled.line}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyCancelled.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyCancelled.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- RENEWED POLICY -->\\n    <div *ngIf=\\\"type == 'client-renewed'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Renewed Policy Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyRenewed.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyRenewed.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyDueDate\\\">Due Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyRenewed.policyDueDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyRenewed.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"documentType\\\">Document Type</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyRenewed.documentType}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"documentCode\\\">Document Code</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyRenewed.documentCode}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- NOT RENEWED POLICY -->\\n    <div *ngIf=\\\"type == 'client-not-renewed'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Not Renewed Policy Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyNotRenewed.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyNotRenewed.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyDueDate\\\">Due Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyNotRenewed.policyDueDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"line\\\">Line</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyNotRenewed.line}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyNotRenewed.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyNotRenewed.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- EXPIRING POLICY -->\\n    <div *ngIf=\\\"type == 'client-expiring'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Expiring Policy Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyExpiring.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyExpiring.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyExpiryDate\\\">Expirty Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyExpiring.policyExpiryDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyExpiring.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyExpiring.email}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"telephoneNumber\\\">Telephone Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyExpiring.telephoneNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- PROVISIONAL POLICY -->\\n    <div *ngIf=\\\"type == 'client-provisional'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Provisional Policy Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyProvisional.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyProvisional.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyDueDate\\\">Due Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyProvisional.policyDueDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"line\\\">Line</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyProvisional.line}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyProvisional.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyProvisional.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- ACTIVE QUOTATION -->\\n    <div *ngIf=\\\"type == 'client-active-quotation'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Active Quotation Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"quotationNumber\\\">Quotation Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationActive.quotationNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationActive.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyDueDate\\\">Due Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationActive.policyDueDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"line\\\">Line</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listQuotationActive.line}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listQuotationActive.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listQuotationActive.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- PROVISIONAL QUOTATION -->\\n    <div *ngIf=\\\"type == 'client-provisional-quotation'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Provisional Quotation Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"quotationNumber\\\">Quotation Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationProvisional.quotationNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationProvisional.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyDueDate\\\">Due Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationProvisional.policyDueDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"line\\\">Line</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listQuotationProvisional.line}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationProvisional.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listQuotationProvisional.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- CLAIM DETAILS -->\\n    <div *ngIf=\\\"type == 'client-claims'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Claim Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"claimNumber\\\">Claim Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClaimDetails.claimNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"fileNumber\\\">File Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClaimDetails.fileNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"fileName\\\">File Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClaimDetails.fileName}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"lossDate\\\">Loss Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClaimDetails.lossDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"notificationDate\\\">Notification Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listClaimDetails.notificationDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"reserveAmount\\\">Reserve Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClaimDetails.reserveAmount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClaimDetails.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- MY ACCOUNT lists -->\\n    <!-- OUTSTANDING BILLS -->\\n    <div *ngIf=\\\"type == 'account-outstanding-bills' && !isProceedToPayment\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Outstanding Bills Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"claimNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"prn\\\">PRN</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listAccountOutstandingBills.prn}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"invoiceNumber\\\">Invoice Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.invoiceNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"currency\\\">Currency</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.currency}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"effectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.effectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"expiryDate\\\">Expiry Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.expiryDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"paymentDateExpiry\\\">Payment Date Expiry</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.paymentDateExpiry}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"age\\\">Age</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listAccountOutstandingBills.age}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"amount\\\">Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.amount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"paymentStatus\\\">Payment Status</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.paymentStatus}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"subline\\\">Subline</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.subline}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- OUTSTANDING BILLS PROCEED TO PAYMENT -->\\n    <form [formGroup]=\\\"paymentForm\\\">\\n      <div *ngIf=\\\"type == 'account-outstanding-bills' && isProceedToPayment\\\" class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <h5>Additional Information for Payment</h5>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <h6>Pay via:</h6>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"form-check\\\">\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"paynamics\\\" formControlName=\\\"paymentMethod\\\" id=\\\"radioPaynamics\\\" (change)=\\\"changePaymentMethod($event)\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"radioPaynamics\\\">\\n              Paynamics\\n            </label>\\n          </div>\\n          <div class=\\\"form-check\\\">\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"globalpay\\\" formControlName=\\\"paymentMethod\\\" id=\\\"radioGlobalPay\\\" (change)=\\\"changePaymentMethod($event)\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"radioGlobalPay\\\">\\n              Global Pay\\n            </label>\\n          </div>\\n        </div>\\n        <hr class=\\\"w-100\\\" />\\n        <ng-container *ngIf=\\\"paymentMethod === 'paynamics'\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"claimNumber\\\"><span class=\\\"required-indicator\\\">*</span>Email</label>\\n              <input type=\\\"text\\\" class=\\\"form-control required\\\" formControlName=\\\"email\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"claimNumber\\\">Phone</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"claimNumber\\\">Mobile</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"mobile\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"claimNumber\\\"><span class=\\\"required-indicator\\\">*</span>Address 1</label>\\n              <input type=\\\"text\\\" class=\\\"form-control required\\\" formControlName=\\\"address1\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"policyHolder\\\">Address 2</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address2\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"prn\\\"><span class=\\\"required-indicator\\\">*</span>City/Town</label>\\n              <input type=\\\"text\\\" class=\\\"form-control required\\\"  formControlName=\\\"city\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"invoiceNumber\\\"><span class=\\\"required-indicator\\\">*</span>Province/State</label>\\n              <input type=\\\"text\\\" class=\\\"form-control required\\\" formControlName=\\\"province\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"currency\\\">Zip</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"zip\\\">\\n            </div>\\n          </div>\\n          <hr class=\\\"w-100\\\" />\\n        </ng-container>\\n        <div class=\\\"col-md-12\\\">\\n          <h5>TERMS AND CONDITION</h5>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <h6>CANCELLATION AND REFUND</h6>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <p>For policy cancellation and refund, Terms and Conditions of Mapfre Insurance Corporation shall apply.</p>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <h6>SECURITY CAPABILITIES & POLICY FOR TRANSMISSION OF PAYMENT</h6>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <ul>1. What information do we collect and how do we use it? When you make credit card transaction through this website, we need your personal information such as (e.g. name, e-mail, phone number, address, and etc). This allows us to process and fulfill your transaction successfully. It also helps us in maintaining your account.</ul>\\n          <ul>2. How does MAPFRE Insurance protect customer information? When you make transaction, we use a secure server. The secure server software (SSL) encrypts all information you input before it is sent to us. Furthermore, all of the sensitive customer data we collect is protected by several layers of encryption and several layers of security to prevent unauthorized access.</ul>\\n          <ul>3. Credit Card Details All credit card payments are processed securely through Paynamics. MAPFRE Insular does not store any credit card information on our servers.</ul>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <h6>COPYRIGHT</h6>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <p>All contents included in this site, such as text, graphics, logos, button icons, images, audio clips and software are property of mapfre.com.ph or its content suppliers and protected by Philippine and International copyright laws. The compilation of all contents on this site is the exclusive property of mapfre.com.ph and protected by Philippine and International copyright laws. The reproduction, distribution, transmission, republication or display of the content in this website without consent from mapfre.com.ph is strictly prohibited.</p>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <h6>DISCLAIMER</h6>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <p>This website and the information, services, products and materials available through it are provided \\\"as is\\\" basis, without warranty of any kind, either express or implied, to the extent permitted under any applicable law, including without limitation, implied warranties or conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual property or other violation of rights, Further Mapfre.com.ph does not warrant or make any representations concerning the accuracy, likely results or reliability of the use of the materials on its Internet web or otherwise relating to such materials or on any sites linked to this site.</p>  \\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <h6>JURISDICTION</h6>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <p>For products and services only available for purchase in the Philippines, these terms and conditions shall be governed by and construed in accordance with Philippine Law. Disputes arising between you and Mapfre.com.ph shall be subject to the exclusive jurisdiction of the courts of the Philippines.</p>  \\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <span>By clicking 'I agree', you are accepting to the Mapfre's Payment terms and condition.</span>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n    </form>\\n\\n    <!-- COMMISSIONS PAID -->\\n    <div *ngIf=\\\"type == 'account-commissions-paid'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Commissions Paid Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"currency\\\">Currency</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.currency}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"invoiceNumber\\\">Invoice Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.invoiceNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"receiptAmount\\\">Receipt Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.receiptAmount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"commissionAmount\\\">Commission Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.commissionAmount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"withholdingTaxAmount\\\">Withholding Tax Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.withholdingTaxAmount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- ESTIMATED COMMISSIONS -->\\n    <div *ngIf=\\\"type == 'account-estimated-commissions'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Estimated Commissions Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"currency\\\">Currency</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.currency}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"invoiceNumber\\\">Invoice Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.invoiceNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"movementDate\\\">Movement Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.movementDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"receiptAmount\\\">Receipt Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.receiptAmount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"estimatedCommission\\\">Estimated Commission</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.estimatedCommission}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- PREMIUM COLLECTION -->\\n    <div *ngIf=\\\"type == 'account-premium-collection'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Premium Collection Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"currency\\\">Currency</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.currency}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"subline\\\">Subline</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.subline}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"invoiceNumber\\\">Invoice Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.invoiceNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"effectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.effectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"expiryDate\\\">Expiry Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.expiryDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"collectedDate\\\">Collected Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.collectedDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"collectionType\\\">Collection Type</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.collectionType}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"receiptAmount\\\">Receipt Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.receiptAmount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"netPremium\\\">Net Premium</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.netPremium}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"surcharge\\\">Surcharge</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.surcharge}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"tax\\\">Tax</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.tax}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"interest\\\">Interest</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.interest}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n  </div>\\n  <!-- .container -->\\n</div>\\n<!-- mat-dialog-content -->\\n\\n<div mat-dialog-actions align=\\\"end\\\">\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button *ngIf=\\\"type == 'account-outstanding-bills' && !isProceedToPayment\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"pay()\\\">\\n      Proceed to Payment\\n    </button>\\n    <button *ngIf=\\\"type == p.ACC.SUC\\\"  type=\\\"button\\\" class=\\\"btn btn-success\\\">\\n      Print Policy\\n    </button>\\n    <button *ngIf=\\\"type == 'account-outstanding-bills' && isProceedToPayment\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"redirectToPayment(listAccountOutstandingBills)\\\">\\n      I agree\\n    </button>\\n    <button *ngIf=\\\"type == 'client-active' || type == 'client-claims'\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"inquire()\\\">\\n      Inquire\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"close()\\\">\\n      Close\\n    </button>\\n  </div>\\n</div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\nimport { Spinkit } from 'ng-http-loader';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'mivo';\n  spinnerStyle = Spinkit;\n}\n","import {\n  BrowserModule\n} from \"@angular/platform-browser\";\nimport {\n  NgModule\n} from \"@angular/core\";\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from \"@angular/forms\";\nimport {\n  HTTP_INTERCEPTORS\n} from \"@angular/common/http\";\n\nimport {\n  NgxDropzoneModule\n} from \"ngx-dropzone\";\nimport {\n  HttpClientModule\n} from \"@angular/common/http\";\nimport {\n  AppRoutingModule\n} from \"./app-routing.module\";\nimport {\n  AppComponent\n} from \"./app.component\";\nimport {\n  BrowserAnimationsModule\n} from \"@angular/platform-browser/animations\";\nimport {\n  BsDatepickerModule\n} from \"ngx-bootstrap/datepicker\";\nimport {\n  ModalModule\n} from \"ngx-bootstrap/modal\";\nimport {\n  NgMultiSelectDropDownModule\n} from \"ng-multiselect-dropdown\";\nimport {\n  NgSelectModule\n} from \"@ng-select/ng-select\";\nimport {\n  MatTableModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatTooltipModule,\n  MatDialogModule,\n} from \"@angular/material\";\nimport {\n  ChartsModule\n} from 'ng2-charts';\n\nimport {\n  RouterModule,\n  Routes\n} from \"@angular/router\";\nimport {\n  TranslateModule\n} from \"@ngx-translate/core\";\nimport {\n  NgHttpLoaderModule\n} from \"ng-http-loader\";\nimport {\n  ServiceModule\n} from \"./services/service.module\";\n\n//login component\nimport {\n  LoginComponent\n} from \"./components/login/login.component\";\n\n//page component\nimport {\n  DashboardComponent\n} from \"./components/dashboard/dashboard.component\";\nimport {\n  FooterComponent\n} from \"./components/footer/footer.component\";\nimport {\n  HeaderComponent\n} from \"./components/header/header.component\";\nimport {\n  SidenavComponent\n} from \"./components/sidenav/sidenav.component\";\nimport {\n  TemplateComponent\n} from \"./components/template/template.component\";\n\n//other feature components\nimport {\n  MissingPageComponent\n} from \"./components/missing-page/missing-page.component\";\nimport {\n  ProfileComponent\n} from \"./components/profile/profile.component\";\nimport {\n  QueryComponent\n} from \"./components/query/query.component\";\nimport {\n  FaqComponent\n} from \"./components/faq/faq.component\";\n\n//table list components\nimport {\n  OutstandingBillsComponent\n} from \"./components/outstanding-bills/outstanding-bills.component\";\n\n// quotation components\nimport {\n  QuotationCarComponent\n} from \"./components/quotation-car/quotation-car.component\";\nimport {\n  QuotationHomeComponent\n} from \"./components/quotation-home/quotation-home.component\";\nimport {\n  QuotationTravelComponent\n} from \"./components/quotation-travel/quotation-travel.component\";\nimport {\n  QuotationAccidentComponent\n} from \"./components/quotation-accident/quotation-accident.component\";\n\n// quick quotation components\nimport {\n  QuickQuotationCarComponent\n} from \"./components/quick-quotation-car/quick-quotation-car.component\";\nimport {\n  QuickQuotationHomeComponent\n} from \"./components/quick-quotation-home/quick-quotation-home.component\";\nimport {\n  QuickQuotationTravelComponent\n} from \"./components/quick-quotation-travel/quick-quotation-travel.component\";\nimport {\n  QuickQuotationAccidentComponent\n} from \"./components/quick-quotation-accident/quick-quotation-accident.component\";\n\nimport {\n  ModalComponent\n} from \"./components/modal/modal.component\";\nimport {\n  GroupPolicyComponent\n} from \"./components/group-policy/group-policy.component\";\n\nimport {\n  AuthGuard\n} from \"./helpers/auth.guard\";\nimport {\n  JwtInterceptor\n} from \"./helpers/jwt.interceptor\";\nimport {\n  ErrorInterceptor\n} from \"./helpers/error.interceptor\";\nimport {\n  fakeBackendProvider\n} from \"./helpers/fake-backend\";\nimport {\n  IndividualPolicyComponent\n} from \"./components/individual-policy/individual-policy.component\";\nimport {\n  ChooseAgentComponent\n} from \"./components/choose-agent/choose-agent.component\";\nimport {\n  DocumentPrintingComponent\n} from \"./components/document-printing/document-printing.component\";\nimport {\n  PolicyHolderComponent\n} from \"./components/policy-holder/policy-holder.component\";\nimport {\n  PaymentBreakdownComponent\n} from \"./components/payment-breakdown/payment-breakdown.component\";\nimport {\n  CoveragesComponent\n} from \"./components/coverages/coverages.component\";\nimport {\n  PaymentBreakdownModalComponent\n} from \"./components/payment-breakdown-modal/payment-breakdown-modal.component\";\nimport {\n  ReloadComponent\n} from \"./components/reload/reload.component\";\nimport {\n  CoverageVariableDataComponent\n} from \"./components/coverage-variable-data/coverage-variable-data.component\";\nimport {\n  CreateThirdPartyComponent\n} from \"./components/create-third-party/create-third-party.component\";\nimport {\n  FixedCoveragesComponent\n} from './components/fixed-coverages/fixed-coverages.component';\nimport {\n  RequestCreateComponent\n} from './components/request-create/request-create.component';\nimport {\n  RequestListComponent\n} from './components/request-list/request-list.component';\nimport {\n  RequestDetailsModalComponent\n} from './components/request-details-modal/request-details-modal.component';\nimport {\n  ClientDetailsListComponent\n} from './components/client-details-list/client-details-list.component';\nimport {\n  ViewDetailsModalComponent\n} from './components/view-details-modal/view-details-modal.component';\nimport {\n  ClientPolicyActiveListComponent\n} from './components/client-policy-active-list/client-policy-active-list.component';\nimport {\n  ClientPolicyCancelledListComponent\n} from './components/client-policy-cancelled-list/client-policy-cancelled-list.component';\nimport {\n  ClientPolicyRenewedListComponent\n} from './components/client-policy-renewed-list/client-policy-renewed-list.component';\nimport {\n  ClientPolicyNotRenewedListComponent\n} from './components/client-policy-not-renewed-list/client-policy-not-renewed-list.component';\nimport {\n  ClientPolicyExpiringListComponent\n} from './components/client-policy-expiring-list/client-policy-expiring-list.component';\nimport {\n  ClientPolicyProvisionalListComponent\n} from './components/client-policy-provisional-list/client-policy-provisional-list.component';\nimport {\n  ClientQuotationActiveListComponent\n} from './components/client-quotation-active-list/client-quotation-active-list.component';\nimport {\n  ClientQuotationProvisionalListComponent\n} from './components/client-quotation-provisional-list/client-quotation-provisional-list.component';\nimport {\n  ClientClaimsListComponent\n} from './components/client-claims-list/client-claims-list.component';\nimport {\n  AccountOutstandingBillsListComponent\n} from './components/account-outstanding-bills-list/account-outstanding-bills-list.component';\nimport {\n  AccountCommissionsPaidListComponent\n} from './components/account-commissions-paid-list/account-commissions-paid-list.component';\nimport {\n  AccountEstimatedCommissionsListComponent\n} from './components/account-estimated-commissions-list/account-estimated-commissions-list.component';\nimport {\n  AccountPremiumCollectionListComponent\n} from './components/account-premium-collection-list/account-premium-collection-list.component';\nimport {\n  TermsAndConditionComponent\n} from './components/terms-and-condition/terms-and-condition.component';\nimport {\n  HealthCheckComponent\n} from './components/health-check/health-check.component';\n\nconst routes: Routes = [{\n    path: \"login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"agent\",\n    component: ChooseAgentComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"\",\n    component: TemplateComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"reload\",\n    component: ReloadComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"terms-and-condition\",\n    component: TermsAndConditionComponent,\n  },\n  {\n    path: \"health-check\",\n    component: HealthCheckComponent,\n  },\n  {\n    path: \"404\",\n    component: MissingPageComponent,\n  },\n  // otherwise redirect to home\n  {\n    path: \"**\",\n    redirectTo: \"404\",\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    FooterComponent,\n    HeaderComponent,\n    SidenavComponent,\n    TemplateComponent,\n    FaqComponent,\n    OutstandingBillsComponent,\n    QueryComponent,\n    MissingPageComponent,\n    ProfileComponent,\n    QuotationCarComponent,\n    QuotationHomeComponent,\n    QuotationTravelComponent,\n    QuotationAccidentComponent,\n    QuickQuotationCarComponent,\n    QuickQuotationHomeComponent,\n    QuickQuotationTravelComponent,\n    QuickQuotationAccidentComponent,\n    ModalComponent,\n    GroupPolicyComponent,\n    IndividualPolicyComponent,\n    ChooseAgentComponent,\n    DocumentPrintingComponent,\n    PolicyHolderComponent,\n    PaymentBreakdownComponent,\n    CoveragesComponent,\n    PaymentBreakdownModalComponent,\n    ReloadComponent,\n    CoverageVariableDataComponent,\n    CreateThirdPartyComponent,\n    FixedCoveragesComponent,\n    RequestCreateComponent,\n    RequestListComponent,\n    RequestDetailsModalComponent,\n    ClientDetailsListComponent,\n    ViewDetailsModalComponent,\n    ClientPolicyActiveListComponent,\n    ClientPolicyCancelledListComponent,\n    ClientPolicyRenewedListComponent,\n    ClientPolicyNotRenewedListComponent,\n    ClientPolicyExpiringListComponent,\n    ClientPolicyProvisionalListComponent,\n    ClientQuotationActiveListComponent,\n    ClientQuotationProvisionalListComponent,\n    ClientClaimsListComponent,\n    AccountOutstandingBillsListComponent,\n    AccountCommissionsPaidListComponent,\n    AccountEstimatedCommissionsListComponent,\n    AccountPremiumCollectionListComponent,\n    TermsAndConditionComponent,\n    HealthCheckComponent,\n  ],\n  entryComponents: [\n    ModalComponent,\n    PaymentBreakdownModalComponent,\n    CreateThirdPartyComponent,\n    RequestDetailsModalComponent,\n    ViewDetailsModalComponent],\n  imports: [\n    AppRoutingModule,\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTooltipModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ServiceModule,\n    NgSelectModule,\n    NgxDropzoneModule,\n    TranslateModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgMultiSelectDropDownModule.forRoot(),\n    NgHttpLoaderModule.forRoot(),\n    ChartsModule\n  ],\n  providers: [{\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n    // provider used to create fake backend\n    fakeBackendProvider,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LWNvbW1pc3Npb25zLXBhaWQtbGlzdC9hY2NvdW50LWNvbW1pc3Npb25zLXBhaWQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC1jb21taXNzaW9ucy1wYWlkLWxpc3QvYWNjb3VudC1jb21taXNzaW9ucy1wYWlkLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoLm1hdC1zb3J0LWhlYWRlci1zb3J0ZWQge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmRpdmlkZXIge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbn1cblxuLmNvbC1mb3JtLWxhYmVsIHtcbiAgZm9udC1zaXplOiA5MCU7XG59Il19 */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterAccount\n} from 'src/app/objects/PageFilterAccount';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  ListAccountCommissionsPaid\n} from 'src/app/objects/ListAccountCommissionsPaid';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  AccountService\n} from 'src/app/services/account.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-account-commissions-paid-list',\n  templateUrl: './account-commissions-paid-list.component.html',\n  styleUrls: ['./account-commissions-paid-list.component.css']\n})\nexport class AccountCommissionsPaidListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyHolder',\n    'currency',\n    'invoiceNumber',\n    'receiptAmount',\n    'commissionAmount',\n    'withholdingTaxAmount',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  currencyItems: any[] = ['PHP', 'EUR', 'USD'];\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterAccount = new PageFilterAccount();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'polilcyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private as: AccountService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      policyHolder: [null],\n      currency: [null],\n      invoiceNumber: [null],\n      receiptAmount: [null],\n      commissionAmount: [null],\n      withholdingTaxAmount: [null],\n      source: [null]\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.as.getCommissionsPaidList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListAccountCommissionsPaid[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'polilcyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListAccountCommissionsPaid) {\n    row.type = page.ACC.COM;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListAccountCommissionsPaid) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('currency').setValue('');\n    this.filterForm.get('invoiceNumber').setValue('');\n    this.filterForm.get('receiptAmount').setValue('');\n    this.filterForm.get('commissionAmount').setValue('');\n    this.filterForm.get('withholdingTaxAmount').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LWVzdGltYXRlZC1jb21taXNzaW9ucy1saXN0L2FjY291bnQtZXN0aW1hdGVkLWNvbW1pc3Npb25zLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FjY291bnQtZXN0aW1hdGVkLWNvbW1pc3Npb25zLWxpc3QvYWNjb3VudC1lc3RpbWF0ZWQtY29tbWlzc2lvbnMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterAccount\n} from 'src/app/objects/PageFilterAccount';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  ListAccountEstimatedCommissions\n} from 'src/app/objects/ListAccountEstimatedCommissions';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  AccountService\n} from 'src/app/services/account.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-account-estimated-commissions-list',\n  templateUrl: './account-estimated-commissions-list.component.html',\n  styleUrls: ['./account-estimated-commissions-list.component.css']\n})\nexport class AccountEstimatedCommissionsListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyHolder',\n    'currency',\n    'invoiceNumber',\n    'movementDate',\n    'receiptAmount',\n    'estimatedCommission',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  currencyItems: any[] = ['PHP', 'EUR', 'USD'];\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterAccount = new PageFilterAccount();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private as: AccountService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      policyHolder: [null],\n      currency: [null],\n      invoiceNumber: [null],\n      movementDate: [null],\n      receiptAmount: [null],\n      estimatedCommission: [null],\n      source: [null]\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.movementDate = Utility.convertDatePickerDate(this.pageFilter.movementDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.as.getEstimatedCommissionsList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListAccountEstimatedCommissions[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'name';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListAccountEstimatedCommissions) {\n    row.type = page.ACC.EST;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListAccountEstimatedCommissions) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('currency').setValue('');\n    this.filterForm.get('invoiceNumber').setValue('');\n    this.filterForm.get('movementDate').setValue('');\n    this.filterForm.get('receiptAmount').setValue('');\n    this.filterForm.get('estimatedCommission').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n\\n/* modal css */\\n\\n.mat-dialog-container {\\n  padding: 0px !important;\\n}\\n\\n.header {\\n  padding-bottom: 20px;\\n}\\n\\n.header img {\\n  height: 30px;\\n}\\n\\n.footer {\\n  text-align: center;\\n}\\n\\n.footer p {\\n  color: #979797;\\n  font-size: 12px;\\n  text-shadow: 0 0 black;\\n}\\n\\n.paynamics-logo {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: 0;\\n}\\n\\n.payment-icon {\\n  font-size: 45px;\\n}\\n\\n.payment-icon.success {\\n  color: #4caf50;\\n}\\n\\n.payment-icon.failed {\\n  color: #c31f09;\\n}\\n\\n.payment-result-content {\\n  text-align: center;\\n  padding: 30px 0;\\n}\\n\\n.fa-times {\\n  color: #fff !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LW91dHN0YW5kaW5nLWJpbGxzLWxpc3QvYWNjb3VudC1vdXRzdGFuZGluZy1iaWxscy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBLGNBQWM7O0FBQ2Q7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LW91dHN0YW5kaW5nLWJpbGxzLWxpc3QvYWNjb3VudC1vdXRzdGFuZGluZy1iaWxscy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufVxuXG4vKiBtb2RhbCBjc3MgKi9cbi5tYXQtZGlhbG9nLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xufVxuXG4uaGVhZGVyIHtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG59XG5cbi5oZWFkZXIgaW1nIHtcbiAgaGVpZ2h0OiAzMHB4O1xufVxuXG4uZm9vdGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZm9vdGVyIHAge1xuICBjb2xvcjogIzk3OTc5NztcbiAgZm9udC1zaXplOiAxMnB4O1xuICB0ZXh0LXNoYWRvdzogMCAwIGJsYWNrO1xufVxuXG4ucGF5bmFtaWNzLWxvZ28ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cblxuLnBheW1lbnQtaWNvbiB7XG4gIGZvbnQtc2l6ZTogNDVweDtcbn1cblxuLnBheW1lbnQtaWNvbi5zdWNjZXNzIHtcbiAgY29sb3I6ICM0Y2FmNTA7XG59XG5cbi5wYXltZW50LWljb24uZmFpbGVkIHtcbiAgY29sb3I6ICNjMzFmMDk7XG59XG5cbi5wYXltZW50LXJlc3VsdC1jb250ZW50IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAzMHB4IDA7XG59XG5cbi5mYS10aW1lcyB7XG4gIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG59Il19 */\";","import {\n  Component,\n  OnInit,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef\n} from '@angular/material';\nimport {\n  ListAccountOutstandingBills\n} from 'src/app/objects/ListAccountOutstandingBills';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  AccountService\n} from 'src/app/services/account.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  page\n} from '../../constants/page';\nimport {\n  PageFilterAccount\n} from 'src/app/objects/PageFilterAccount';\nimport {\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  filter\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-account-outstanding-bills-list',\n  templateUrl: './account-outstanding-bills-list.component.html',\n  styleUrls: ['./account-outstanding-bills-list.component.css']\n})\nexport class AccountOutstandingBillsListComponent implements OnInit {\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyHolder',\n    'prn',\n    'invoiceNumber',\n    'currency',\n    'effectivityDate',\n    'expiryDate',\n    'paymentDateExpiry',\n    'age',\n    'amount',\n    'paymentStatus',\n    'source',\n    'subline'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  paymentStatusItems: any[] = ['Processing'];\n  currencyItems: any[] = ['PHP', 'EUR', 'USD'];\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterAccount = new PageFilterAccount();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n  @ViewChild('paymentResult') paymentResultModal: TemplateRef < any > ;\n\n  //modal reference\n  modalRef: BsModalRef;\n  dialogRef: MatDialogRef < TemplateRef < any >> ;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private as: AccountService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    var _this = this;\n    //opening modal for success/failed payment\n    this.route.queryParams\n      .pipe(filter(params => params.successPage) )\n      .subscribe(params => {\n        setTimeout(function(){\n          params.message\n          _this.openPaymentResultModal(params.successPage == 'true', params.message);\n        }, 500);\n      });\n\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      policyHolder: [null],\n      prn: [null],\n      invoiceNumber: [null],\n      currency: [null],\n      effectivityDate: [null],\n      expiryDate: [null],\n      paymentDateExpiry: [null],\n      amount: [null],\n      paymentStatus: [null],\n      source: [null],\n      subline: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.expiryDate = Utility.convertDatePickerDate(this.pageFilter.expiryDate);\n    this.pageFilter.paymentDateExpiry = Utility.convertDatePickerDate(this.pageFilter.paymentDateExpiry);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.as.getOutstandingBillsList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListAccountOutstandingBills[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListAccountOutstandingBills) {\n    row.type = page.ACC.OUT;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListAccountOutstandingBills) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  openPaymentResultModal(status: boolean, error: String): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '600px';\n    dialogConfig.data = {status : status, errorMessage: error};\n\n    this.dialogRef = this.dialog.open(this.paymentResultModal, dialogConfig);\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('prn').setValue('');\n    this.filterForm.get('invoiceNumber').setValue('');\n    this.filterForm.get('currency').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('expiryDate').setValue('');\n    this.filterForm.get('paymentDateExpiry').setValue('');\n    this.filterForm.get('amount').setValue('');\n    this.filterForm.get('paymentStatus').setValue('');\n    this.filterForm.get('source').setValue('');\n    this.filterForm.get('subline').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LXByZW1pdW0tY29sbGVjdGlvbi1saXN0L2FjY291bnQtcHJlbWl1bS1jb2xsZWN0aW9uLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FjY291bnQtcHJlbWl1bS1jb2xsZWN0aW9uLWxpc3QvYWNjb3VudC1wcmVtaXVtLWNvbGxlY3Rpb24tbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterAccount\n} from 'src/app/objects/PageFilterAccount';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  ListAccountPremiumCollection\n} from 'src/app/objects/ListAccountPremiumCollection';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  AccountService\n} from 'src/app/services/account.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-account-premium-collection-list',\n  templateUrl: './account-premium-collection-list.component.html',\n  styleUrls: ['./account-premium-collection-list.component.css']\n})\nexport class AccountPremiumCollectionListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'currency',\n    'subline',\n    'invoiceNumber',\n    'effectivityDate',\n    'expiryDate',\n    'collectedDate',\n    'collectionType',\n    'receiptAmount',\n    'netPremium',\n    'surcharge',\n    'tax',\n    'interest',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  currencyItems: any[] = ['PHP', 'EUR', 'USD'];\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterAccount = new PageFilterAccount();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private as: AccountService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      currency: [null],\n      subline: [null],\n      invoiceNumber: [null],\n      effectivityDate: [null],\n      expiryDate: [null],\n      collectedDate: [null],\n      collectionType: [null],\n      receiptAmount: [null],\n      netPremium: [null],\n      surcharge: [null],\n      tax: [null],\n      interest: [null],\n      source: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.expiryDate = Utility.convertDatePickerDate(this.pageFilter.expiryDate);\n    this.pageFilter.collectedDate = Utility.convertDatePickerDate(this.pageFilter.collectedDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.as.getPremiumCollectionList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListAccountPremiumCollection[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListAccountPremiumCollection) {\n    row.type = page.ACC.PRE;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListAccountPremiumCollection) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('currency').setValue('');\n    this.filterForm.get('subline').setValue('');\n    this.filterForm.get('invoiceNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('expiryDate').setValue('');\n    this.filterForm.get('collectedDate').setValue('');\n    this.filterForm.get('collectionType').setValue('');\n    this.filterForm.get('receiptAmount').setValue('');\n    this.filterForm.get('netPremium').setValue('');\n    this.filterForm.get('surcharge').setValue('');\n    this.filterForm.get('tax').setValue('');\n    this.filterForm.get('interest').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}\n","export default \".container {\\n  width: 100%;\\n  min-height: 100vh;\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 15px;\\n\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-size: cover;\\n  position: relative;\\n  z-index: 1;\\n}\\n\\n.container::before {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  z-index: -1;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.wrap {\\n  max-width: 450px;\\n  width: 100%;\\n  border-radius: 5px;\\n  overflow: hidden;\\n  padding: 15px 25px;\\n  background: #fff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jaG9vc2UtYWdlbnQvY2hvb3NlLWFnZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0VBS2pCLGFBQWE7RUFDYixlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixhQUFhOztFQUViLDRCQUE0QjtFQUM1QiwyQkFBMkI7RUFDM0Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsV0FBVztFQUNYLFlBQVk7RUFDWixNQUFNO0VBQ04sT0FBTztBQUNUOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Nob29zZS1hZ2VudC9jaG9vc2UtYWdlbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMTVweDtcblxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbn1cblxuLmNvbnRhaW5lcjo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogLTE7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbn1cblxuLndyYXAge1xuICBtYXgtd2lkdGg6IDQ1MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAxNXB4IDI1cHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59Il19 */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport {\n  AuthenticationService\n} from '../../services/authentication.service';\nimport {\n  AgentService\n} from '../../services/agent.service';\nimport {\n  CURRENT_USER,\n  DASH_INFO\n} from '../../constants/local.storage';\nimport {\n  SelectedAgent\n} from 'src/app/objects/SelectedAgent';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Component({\n  selector: 'app-choose-agent',\n  templateUrl: './choose-agent.component.html',\n  styleUrls: ['./choose-agent.component.css']\n})\nexport class ChooseAgentComponent implements OnInit {\n  chooseAgentForm: FormGroup;\n  commercialStructureLOV: any[];\n  agentLOV: any[];\n  currentUser = this.auths.currentUserValue;\n  hasSelectedAgent = !Utility.isUndefined(this.currentUser.selectedAgent);\n  showCancelBtn: boolean = false;\n\n  constructor(private router: Router,\n    private auths: AuthenticationService,\n    private as: AgentService,\n    private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.createForm();\n    const _this = this;\n    if (this.hasSelectedAgent) {\n      this.showCancelBtn = true;\n      this.as.getAgentList(this.currentUser.selectedAgent.commStructure).then(res => {\n        _this.agentLOV = res;\n      });\n\n      this.chooseAgentForm.get('commercialStructure').markAsDirty();\n      this.chooseAgentForm.get('agent').markAsDirty();\n    }\n\n    this.as.getCommercialStructure().then(res => {\n      _this.commercialStructureLOV = res;\n    });\n  }\n\n  createForm() {\n    let comval = null;\n    let agentval = null;\n    if (this.hasSelectedAgent) {\n      comval = this.currentUser.selectedAgent.commStructure;\n      agentval = this.currentUser.selectedAgent.agentCode;\n    }\n    this.chooseAgentForm = this.fb.group({\n      commercialStructure: [comval, Validators.required],\n      agent: [agentval, Validators.required],\n    });\n  }\n\n  comStructureChange() {\n    const _this = this;\n    const commercialStructure: number = parseInt(this.chooseAgentForm.get('commercialStructure').value);\n    this.as.getAgentList(commercialStructure).then(res => {\n      _this.agentLOV = res;\n    });\n  }\n\n  cancel() {\n    this.router.navigate(['']);\n  };\n\n  next() {\n    const currentUser = this.auths.currentUserValue;\n    const agentCode: number = parseInt(this.chooseAgentForm.get('agent').value);\n    currentUser.agentCode = agentCode;\n    //adds chosen agent to current user detail\n    localStorage.setItem(CURRENT_USER, JSON.stringify(currentUser));\n\n    const param = {\n      agentCode: agentCode\n    };\n\n    this.as.getProductionAgentProfile(JSON.stringify(param)).then(res => {\n      if (res.status) {\n        var sa = new SelectedAgent();\n\n        const agentInfo = res.obj[\"agentInfo\"];\n\n        sa.agentCode = parseInt(agentInfo[\"codAgente\"]);\n        sa.agentName = agentInfo[\"nomAgente\"];\n        sa.documentCode = agentInfo[\"codDocumento\"];\n        sa.documentType = agentInfo[\"tipoDocumento\"];\n        sa.documentName = agentInfo[\"nomTipoDocumento\"];\n        sa.agentType = agentInfo[\"tipoAgente\"];\n        sa.agentTypeName = agentInfo[\"nomTipoAgente\"];\n        sa.agentAddress = agentInfo[\"dirAgente\"];\n        sa.commStructure = parseInt(this.chooseAgentForm.get('commercialStructure').value);\n        currentUser.selectedAgent = sa;\n        currentUser.commercialStructure = sa.commStructure;\n        currentUser.token = \"Bearer \" + res.obj[\"token\"];\n\n        //adds chosen agent to current user detail\n        localStorage.setItem(CURRENT_USER, JSON.stringify(currentUser));\n        localStorage.removeItem(DASH_INFO);\n      }\n      this.router.navigate(['']);\n    });\n  }\n\n}\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtY2xhaW1zLWxpc3QvY2xpZW50LWNsYWltcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtY2xhaW1zLWxpc3QvY2xpZW50LWNsYWltcy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListClaimDetails\n} from 'src/app/objects/ListClaimDetails';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-claims-list',\n  templateUrl: './client-claims-list.component.html',\n  styleUrls: ['./client-claims-list.component.css']\n})\nexport class ClientClaimsListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'claimNumber',\n    'fileNumber',\n    'fileName',\n    'lossDate',\n    'notificationDate',\n    'reserveAmount',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'claimNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      claimNumber: [null],\n      fileNumber: [null],\n      fileName: [null],\n      lossDate: [null],\n      notificationDate: [null],\n      source: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.lossDate = Utility.convertDatePickerDate(this.pageFilter.lossDate);\n    this.pageFilter.notificationDate = Utility.convertDatePickerDate(this.pageFilter.notificationDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getClaimsList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListClaimDetails[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'claimNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListClaimDetails) {\n    row.type = page.CLI.CLA;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListClaimDetails) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('claimNumber').setValue('');\n    this.filterForm.get('fileNumber').setValue('');\n    this.filterForm.get('fileName').setValue('');\n    this.filterForm.get('lossDate').setValue('');\n    this.filterForm.get('notificationDate').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtZGV0YWlscy1saXN0L2NsaWVudC1kZXRhaWxzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC1kZXRhaWxzLWxpc3QvY2xpZW50LWRldGFpbHMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  ListClientDetails\n} from 'src/app/objects/ListClientDetails';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ThirdPartyLOVServices\n} from 'src/app/services/lov/third-party-lov-service';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-details-list',\n  templateUrl: './client-details-list.component.html',\n  styleUrls: ['./client-details-list.component.css']\n})\nexport class ClientDetailsListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'name',\n    'documentType',\n    'documentCode',\n    'address',\n    'homeTelNumber',\n    'businessTelNumber',\n    'mobileNumber',\n    'email'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  documentTypeItems: any[] = [];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'name';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n    private tpls: ThirdPartyLOVServices\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n\n    var _this = this;\n    this.tpls.getDocumentType().then(res => {\n      var types = [];\n      res.forEach(r => {\n        if (r.TIP_DOCUM != 'OTH') {\n          types.push(r);\n        }\n      });\n      _this.documentTypeItems = types;\n    });\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      name: [null],\n      documentType: [null],\n      documentCode: [null],\n      address: [null],\n      homeTelNumber: [null],\n      businessTelNumber: [null],\n      mobileNumber: [null],\n      email: [null]\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getClientDetailsList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListClientDetails[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'name';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListClientDetails) {\n    row.type = page.CLI.CLI;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListClientDetails) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('name').setValue('');\n    this.filterForm.get('documentType').setValue('');\n    this.filterForm.get('documentCode').setValue('');\n    this.filterForm.get('address').setValue('');\n    this.filterForm.get('homeTelNumber').setValue('');\n    this.filterForm.get('businessTelNumber').setValue('');\n    this.filterForm.get('mobileNumber').setValue('');\n    this.filterForm.get('email').setValue('');\n\n    this.getList();\n  }\n\n}\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LWFjdGl2ZS1saXN0L2NsaWVudC1wb2xpY3ktYWN0aXZlLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC1wb2xpY3ktYWN0aXZlLWxpc3QvY2xpZW50LXBvbGljeS1hY3RpdmUtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ThirdPartyLOVServices\n} from 'src/app/services/lov/third-party-lov-service';\nimport {\n  ListPolicyActive\n} from 'src/app/objects/ListPolicyActive';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-policy-active-list',\n  templateUrl: './client-policy-active-list.component.html',\n  styleUrls: ['./client-policy-active-list.component.css']\n})\nexport class ClientPolicyActiveListComponent implements OnInit {\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyEffectivityDate',\n    'policyDueDate',\n    'line',\n    'policyHolder',\n    'documentType',\n    'documentCode',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  documentTypeItems: any[] = [];\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n    private tpls: ThirdPartyLOVServices\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n\n    var _this = this;\n    this.tpls.getDocumentType().then(res => {\n      var types = [];\n      res.forEach(r => {\n        if (r.TIP_DOCUM != 'OTH') {\n          types.push(r);\n        }\n      });\n      _this.documentTypeItems = types;\n    });\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      effectivityDate: [null],\n      dueDate: [null],\n      line: [null],\n      policyHolder: [null],\n      documentType: [null],\n      documentCode: [null],\n      source: [null]\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.dueDate = Utility.convertDatePickerDate(this.pageFilter.dueDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getPolicyActiveList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListPolicyActive[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListPolicyActive) {\n    row.type = page.CLI.ACT;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListPolicyActive) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('dueDate').setValue('');\n    this.filterForm.get('line').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('documentType').setValue('');\n    this.filterForm.get('documentCode').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LWNhbmNlbGxlZC1saXN0L2NsaWVudC1wb2xpY3ktY2FuY2VsbGVkLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC1wb2xpY3ktY2FuY2VsbGVkLWxpc3QvY2xpZW50LXBvbGljeS1jYW5jZWxsZWQtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListPolicyCancelled\n} from 'src/app/objects/ListPolicyCancelled';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-policy-cancelled-list',\n  templateUrl: './client-policy-cancelled-list.component.html',\n  styleUrls: ['./client-policy-cancelled-list.component.css']\n})\nexport class ClientPolicyCancelledListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyEffectivityDate',\n    'line',\n    'policyHolder',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      effectivityDate: [null],\n      line: [null],\n      policyHolder: [null],\n      source: [null]\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getPolicyCancelledList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListPolicyCancelled[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListPolicyCancelled) {\n    row.type = page.CLI.CAN;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListPolicyCancelled) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('line').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LWV4cGlyaW5nLWxpc3QvY2xpZW50LXBvbGljeS1leHBpcmluZy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LWV4cGlyaW5nLWxpc3QvY2xpZW50LXBvbGljeS1leHBpcmluZy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListPolicyExpiring\n} from 'src/app/objects/ListPolicyExpiring';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-policy-expiring-list',\n  templateUrl: './client-policy-expiring-list.component.html',\n  styleUrls: ['./client-policy-expiring-list.component.css']\n})\nexport class ClientPolicyExpiringListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyEffectivityDate',\n    'policyExpiryDate',\n    'policyHolder',\n    'email',\n    'telephoneNumber'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      effectivityDate: [null],\n      expiryDate: [null],\n      policyHolder: [null],\n      email: [null],\n      telephoneNumber: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.expiryDate = Utility.convertDatePickerDate(this.pageFilter.expiryDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getPolicyExpiringList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListPolicyExpiring[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListPolicyExpiring) {\n    row.type = page.CLI.EXP;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListPolicyExpiring) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('expiryDate').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('email').setValue('');\n    this.filterForm.get('telephoneNumber').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LW5vdC1yZW5ld2VkLWxpc3QvY2xpZW50LXBvbGljeS1ub3QtcmVuZXdlZC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LW5vdC1yZW5ld2VkLWxpc3QvY2xpZW50LXBvbGljeS1ub3QtcmVuZXdlZC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListPolicyNotRenewed\n} from 'src/app/objects/ListPolicyNotRenewed';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-policy-not-renewed-list',\n  templateUrl: './client-policy-not-renewed-list.component.html',\n  styleUrls: ['./client-policy-not-renewed-list.component.css']\n})\nexport class ClientPolicyNotRenewedListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyEffectivityDate',\n    'policyDueDate',\n    'line',\n    'policyHolder',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      effectivityDate: [null],\n      dueDate: [null],\n      line: [null],\n      policyHolder: [null],\n      source: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.dueDate = Utility.convertDatePickerDate(this.pageFilter.dueDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getPolicyNotRenewedList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListPolicyNotRenewed[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListPolicyNotRenewed) {\n    row.type = page.CLI.NOT;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListPolicyNotRenewed) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('dueDate').setValue('');\n    this.filterForm.get('line').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LXByb3Zpc2lvbmFsLWxpc3QvY2xpZW50LXBvbGljeS1wcm92aXNpb25hbC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LXByb3Zpc2lvbmFsLWxpc3QvY2xpZW50LXBvbGljeS1wcm92aXNpb25hbC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListPolicyProvisional\n} from 'src/app/objects/ListPolicyProvisional';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-policy-provisional-list',\n  templateUrl: './client-policy-provisional-list.component.html',\n  styleUrls: ['./client-policy-provisional-list.component.css']\n})\nexport class ClientPolicyProvisionalListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyEffectivityDate',\n    'policyDueDate',\n    'line',\n    'policyHolder',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      effectivityDate: [null],\n      dueDate: [null],\n      line: [null],\n      policyHolder: [null],\n      source: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.dueDate = Utility.convertDatePickerDate(this.pageFilter.dueDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getPolicyProvisionalList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListPolicyProvisional[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListPolicyProvisional) {\n    row.type = page.CLI.PRO;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListPolicyProvisional) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('dueDate').setValue('');\n    this.filterForm.get('line').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LXJlbmV3ZWQtbGlzdC9jbGllbnQtcG9saWN5LXJlbmV3ZWQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50LXBvbGljeS1yZW5ld2VkLWxpc3QvY2xpZW50LXBvbGljeS1yZW5ld2VkLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoLm1hdC1zb3J0LWhlYWRlci1zb3J0ZWQge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmRpdmlkZXIge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbn1cblxuLmNvbC1mb3JtLWxhYmVsIHtcbiAgZm9udC1zaXplOiA5MCU7XG59Il19 */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ThirdPartyLOVServices\n} from 'src/app/services/lov/third-party-lov-service';\nimport {\n  ListPolicyRenewed\n} from 'src/app/objects/ListPolicyRenewed';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-policy-renewed-list',\n  templateUrl: './client-policy-renewed-list.component.html',\n  styleUrls: ['./client-policy-renewed-list.component.css']\n})\nexport class ClientPolicyRenewedListComponent implements OnInit {\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyEffectivityDate',\n    'policyDueDate',\n    'policyHolder',\n    'documentType',\n    'documentCode'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  documentTypeItems: any[] = [];\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n    private tpls: ThirdPartyLOVServices\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n\n    var _this = this;\n    this.tpls.getDocumentType().then(res => {\n      var types = [];\n      res.forEach(r => {\n        if (r.TIP_DOCUM != 'OTH') {\n          types.push(r);\n        }\n      });\n      _this.documentTypeItems = types;\n    });\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      effectivityDate: [null],\n      dueDate: [null],\n      policyHolder: [null],\n      documentType: [null],\n      documentCode: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.dueDate = Utility.convertDatePickerDate(this.pageFilter.dueDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getPolicyRenewedList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListPolicyRenewed[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListPolicyRenewed) {\n    row.type = page.CLI.REN;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListPolicyRenewed) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('dueDate').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('documentType').setValue('');\n    this.filterForm.get('documentCode').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcXVvdGF0aW9uLWFjdGl2ZS1saXN0L2NsaWVudC1xdW90YXRpb24tYWN0aXZlLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC1xdW90YXRpb24tYWN0aXZlLWxpc3QvY2xpZW50LXF1b3RhdGlvbi1hY3RpdmUtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListQuotationActive\n} from 'src/app/objects/ListQuotationActive';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-quotation-active-list',\n  templateUrl: './client-quotation-active-list.component.html',\n  styleUrls: ['./client-quotation-active-list.component.css']\n})\nexport class ClientQuotationActiveListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'quotationNumber',\n    'policyEffectivityDate',\n    'policyDueDate',\n    'line',\n    'policyHolder',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'quotationNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      quotationNumber: [null],\n      effectivityDate: [null],\n      dueDate: [null],\n      line: [null],\n      policyHolder: [null],\n      source: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.dueDate = Utility.convertDatePickerDate(this.pageFilter.dueDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getQuotationActiveList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListQuotationActive[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'quotationNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListQuotationActive) {\n    row.type = page.CLI.ACTQ;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListQuotationActive) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('quotationNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('dueDate').setValue('');\n    this.filterForm.get('line').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcXVvdGF0aW9uLXByb3Zpc2lvbmFsLWxpc3QvY2xpZW50LXF1b3RhdGlvbi1wcm92aXNpb25hbC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcXVvdGF0aW9uLXByb3Zpc2lvbmFsLWxpc3QvY2xpZW50LXF1b3RhdGlvbi1wcm92aXNpb25hbC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListQuotationProvisional\n} from 'src/app/objects/ListQuotationProvisional';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-quotation-provisional-list',\n  templateUrl: './client-quotation-provisional-list.component.html',\n  styleUrls: ['./client-quotation-provisional-list.component.css']\n})\nexport class ClientQuotationProvisionalListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'quotationNumber',\n    'policyEffectivityDate',\n    'policyDueDate',\n    'line',\n    'policyHolder',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'quotationNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      quotationNumber: [null],\n      effectivityDate: [null],\n      dueDate: [null],\n      line: [null],\n      policyHolder: [null],\n      source: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.dueDate = Utility.convertDatePickerDate(this.pageFilter.dueDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getQuotationProvisionalList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListQuotationProvisional[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'quotationNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListQuotationProvisional) {\n    row.type = page.CLI.PROQ;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListQuotationProvisional) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('quotationNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('dueDate').setValue('');\n    this.filterForm.get('line').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY292ZXJhZ2UtdmFyaWFibGUtZGF0YS9jb3ZlcmFnZS12YXJpYWJsZS1kYXRhLmNvbXBvbmVudC5jc3MifQ== */\";","import {\n  Component,\n  OnInit,\n  Inject\n} from '@angular/core';\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  CarLOVServices\n} from 'src/app/services/lov/car.service';\n\n@Component({\n  selector: 'app-coverage-variable-data',\n  templateUrl: './coverage-variable-data.component.html',\n  styleUrls: ['./coverage-variable-data.component.css']\n})\nexport class CoverageVariableDataComponent implements OnInit {\n\n  variableForm: FormGroup;\n  sumInsuredPerPassengerLOV: any[];\n\n  constructor(public dialogRef: MatDialogRef < CoverageVariableDataComponent > ,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private cls: CarLOVServices) {\n    this.createVariableForm();\n  }\n\n  coverage = this.data.c.coverage;\n  code = this.data.c.code;\n\n  createVariableForm() {\n    this.variableForm = this.fb.group({\n      //1101\n      lossAndDamageType: {\n        value: null,\n        disabled: true\n      },\n      finalRate: ['', [Validators.nullValidator]],\n      adjustedCommissionRate: ['', [Validators.nullValidator]],\n      lossRatioRate: ['', [Validators.nullValidator]],\n\n      //1002\n      ownDamageTowingLimit: {\n        value: null,\n        disabled: true\n      },\n      ownDamageRepairLimit: {\n        value: null,\n        disabled: true\n      },\n      ownDamageSpecialDeductible: {\n        value: null,\n        disabled: true\n      },\n\n      //1003\n      theftTowingLimit: {\n        value: null,\n        disabled: true\n      },\n      theftRepairLimit: {\n        value: null,\n        disabled: true\n      },\n      theftSpecialDeductible: {\n        value: null,\n        disabled: true\n      },\n\n      //1007\n      uppaDiscountType: {\n        value: null,\n        disabled: true\n      },\n      uppaDiscountAmount: {\n        value: null,\n        disabled: true\n      },\n      uppaCommissionAdjustment: ['', [Validators.nullValidator]],\n      sumInsuredPerPassenger: ['', [Validators.nullValidator]],\n\n      //1008\n      aonFinalRate: ['', [Validators.nullValidator]],\n      aonTowingLimit: {\n        value: null,\n        disabled: true\n      },\n      aonRepairLimit: {\n        value: null,\n        disabled: true\n      },\n      aonSpecialDeductible: {\n        value: null,\n        disabled: true\n      },\n      aonCommissionAdjustment: ['', [Validators.nullValidator]],\n\n      //1020\n      srccFinalRate: ['', [Validators.nullValidator]],\n      srccTowingLimit: {\n        value: null,\n        disabled: true\n      },\n      srccRepairLimit: {\n        value: null,\n        disabled: true\n      },\n      srccSpecialDeductible: {\n        value: null,\n        disabled: true\n      },\n      srccCommissionAdjustment: ['', [Validators.nullValidator]],\n\n      //1040\n      roadAssistDiscount: {\n        value: null,\n        disabled: true\n      },\n\n      //1029\n      ra100Discount: {\n        value: null,\n        disabled: true\n      }\n    }, {\n      updateOn: 'submit'\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.code == 1007) {\n      this.cls.getSumInsuredPerPassenger(this.data.subline).then((res) => {\n        this.sumInsuredPerPassengerLOV = res;\n      });\n    }\n  }\n\n  update(): void {\n    this.dialogRef.close(true);\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n}\n","export default \"#coverages table {\\n  text-align: center !important;\\n  width: 100%;\\n}\\n\\n#coverages .mat-header-cell {\\n  text-align: center;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-cell.amount,\\n.mat-header-cell.amount-header {\\n  display: inline-grid;\\n  text-align: right !important;\\n}\\n\\n.mat-row.included {\\n  background-color: #e1fce3;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb3ZlcmFnZXMvY292ZXJhZ2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2QkFBNkI7RUFDN0IsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBOztFQUVFLG9CQUFvQjtFQUNwQiw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NvdmVyYWdlcy9jb3ZlcmFnZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb3ZlcmFnZXMgdGFibGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbiNjb3ZlcmFnZXMgLm1hdC1oZWFkZXItY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1jZWxsLmFtb3VudCxcbi5tYXQtaGVhZGVyLWNlbGwuYW1vdW50LWhlYWRlciB7XG4gIGRpc3BsYXk6IGlubGluZS1ncmlkO1xuICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LXJvdy5pbmNsdWRlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMWZjZTM7XG59Il19 */\";","import {\n  Component,\n  OnInit,\n  Input,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormArray,\n} from '@angular/forms';\nimport {\n  Car\n} from 'src/app/objects/Car';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  CoverageVariableDataComponent\n} from '../coverage-variable-data/coverage-variable-data.component';\nimport {\n  CoverageVariableData\n} from 'src/app/objects/CoverageVariableData';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  CarQuoteServices\n} from 'src/app/services/car-quote.service';\n\nexport interface TablesDTO {\n  isMandatory: boolean;\n  included: boolean;\n  coverage: string;\n  options: [];\n  sumInsured: number;\n  netPremium: number;\n  isRoadAssist: boolean;\n  isSelect: boolean;\n  code: number;\n}\n\n@Component({\n  selector: 'app-coverages',\n  templateUrl: './coverages.component.html',\n  styleUrls: ['./coverages.component.css']\n})\nexport class CoveragesComponent implements OnInit {\n  @Input() carDetails: Car;\n  @Input() coverageList: any[];\n  @Input() amountList: any[];\n  @Input() coverageVariable: any[];\n  @Input() premiumAmount: any[];\n  @Input() coverageAmount: any[];\n  @Input() coverageVariableData: CoverageVariableData;\n  @Input() isModifiedCoverage: boolean;\n  @Input() isIssuance: boolean;\n  @Input() hasRoadAssist: boolean;\n\n  @Input() quoteForm: FormGroup;\n  @Input() showCTPL: boolean;\n  @Input()\n  set loadCoverage(value: number) {\n    this.triggerCounter = value;\n    this.generateCoverage();\n  }\n\n  @Output() showCTPLChange = new EventEmitter < boolean > ();\n\n  cForm: FormGroup;\n  displayedColumns: string[] = ['included', 'coverage', 'sumInsured', 'netPremium', 'action'];\n  source: any[];\n  dataSource = new MatTableDataSource < TablesDTO > (this.source);\n  cvddv: CoverageVariableData;\n  triggerCounter: number;\n\n  constructor(\n    private fb: FormBuilder,\n    private cqs: CarQuoteServices,\n    public dialog: MatDialog) {}\n\n  ngOnInit() {\n    // for testing purposes\n    // this.coverageList = coverageList;\n    // this.amountList = amountList;\n    // this.coverageVariable = coverageVariable;\n    // this.premiumAmount = premiumAmount;\n    // this.coverageAmount = coverageAmount2;\n    this.generateCoverage();\n  }\n\n  generateCoverage() {\n    //getting and setting defaults to variable data\n    const cvd = new CoverageVariableData();\n    this.cvddv = cvd.getDefaultValues(this.coverageVariable, this.coverageVariableData);\n    this.source = this.getCoverageData();\n    if (this.source.length) {\n      this.dataSource = new MatTableDataSource < TablesDTO > (this.source);\n      this.setForm(this.dataSource.filteredData);\n    }\n  }\n\n  editCoverage(coverage: TablesDTO) {\n    var modalData = {\n      c: coverage,\n      subline: this.carDetails.subline,\n      cvd: this.coverageVariableData,\n      cvddv: this.cvddv\n    };\n    const dialogRef = this.dialog.open(CoverageVariableDataComponent, {\n      width: '500px',\n      data: modalData\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // if update button is clicked\n      if (!Utility.isUndefined(result)) {\n        const c = new CoverageVariableData();\n        c.validateValues(this.cvddv, this.coverageVariableData);\n      }\n    });\n  }\n\n  private setForm(d: any[]) {\n    this.cForm = this.fb.group({\n      coverages: this.fb.array([])\n    });\n\n    const control = this.cForm.get('coverages') as FormArray;\n    d.forEach((coverage) => {\n      control.push(this.setCoverageFormArray(coverage));\n    });\n  }\n\n  updateRow(row: TablesDTO) {\n    row.included = !row.included;\n    let updateItem = this.source.find(this.findIndexToUpdate, row.coverage);\n    let index = this.source.indexOf(updateItem);\n\n    if (row.code == 1020 || row.code == 1008) {\n      //if acts of nature or strike and riots is selected\n      row.sumInsured = row.included ? this.carDetails.vehicleValue : 0;\n    }\n\n    if (row.isRoadAssist) {\n      //unselect Road Assits options\n      this.unselectRAOptions(row.code);\n    }\n\n    this.source[index] = row;\n\n    // updating source\n    this.dataSource = new MatTableDataSource < TablesDTO > (this.source);\n    this.dataSource._updateChangeSubscription();\n    this.dataSource._renderChangesSubscription;\n    this.setForm(this.dataSource.filteredData);\n  }\n\n  findIndexToUpdate(row: any) {\n    return row.coverage === this;\n  }\n\n  unselectRAOptions(code: number) {\n    this.source.forEach(s => {\n      if (s.isRoadAssist && s.code != code) {\n        s.included = false;\n      }\n    });\n  }\n\n  get coverages(): FormArray {\n    return <FormArray > this.cForm.get('coverages');\n  }\n\n  private setCoverageFormArray(coverage: any) {\n    return this.fb.group({\n      isMandatory: [coverage.isMandatory],\n      included: [coverage.included],\n      code: [coverage.code],\n      coverage: [coverage.coverage],\n      options: [coverage.options],\n      sumInsured: [coverage.sumInsured],\n      netPremium: [coverage.netPremium],\n      isRoadAssist: [coverage.isRoadAssist],\n      hasVariableData: [coverage.hasVariableData],\n      isSelect: [coverage.isSelect]\n    });\n  }\n\n  private getCoverageData() {\n    var returnData: any[] = [];\n\n    this.coverageList.forEach((cov) => {\n      var code = parseInt(cov.COD_COB);\n      var product = this.carDetails.productList;\n      // for testing\n      // product = 10002;\n      var name = cov.NOM_COB;\n      var type = cov.MCA_TIP_CAPITAL;\n      var isMandatory = cov.MCA_OBLIGATORIO == \"S\";\n      var included = isMandatory;\n\n      var options = [];\n      var isSelect = false;\n      var sumInsured = 0;\n      var netPremium = 0;\n\n      //gets the net premium per code\n      this.premiumAmount.forEach((prem) => {\n        if (code == prem.codCob) {\n          netPremium = prem.impSpto;\n        }\n      });\n\n      //gets sum insured per code\n      this.coverageAmount.forEach((covAmount) => {\n        if (code == covAmount.codCob) {\n          sumInsured = covAmount.sumaAseg;\n          included = true;\n        }\n      });\n\n      if (code == 1040 && !included) {\n        // checking for product with Road Assist if code is 1040 or ROAD ASSIST\n        included = this.hasRoadAssist;\n      } else if (code == 1001 && included && this.isIssuance) {\n        // opens CTPL panel if code is 1001 or COMP. THIRD PAR. LIAB.\n        this.showCTPL = included;\n        this.showCTPLChange.emit(this.showCTPL);\n        this.cqs.activateCTPL(this.quoteForm, this.carDetails, this.showCTPL);\n      }\n\n      if (type == 4) {\n        isSelect = true;\n        this.amountList.forEach((amount) => {\n          if (code == amount.codCob) {\n            options.push({\n              value: amount.impLimite\n            });\n          }\n        });\n\n        var hasCounterpart = false;\n        options.forEach((o) => {\n          if (o.value == sumInsured) {\n            hasCounterpart = true;\n          }\n        });\n\n        //if has no counterpart to sum insured select options, gets the first option value\n        if (!hasCounterpart) {\n          sumInsured = options[0].value;\n        }\n      } else if (!included) {\n        sumInsured = 0;\n        netPremium = 0;\n      }\n\n      var returnObj = {\n        isMandatory: isMandatory,\n        included: included,\n        code: code,\n        coverage: name,\n        options: options,\n        sumInsured: sumInsured,\n        netPremium: netPremium,\n        isRoadAssist: (code == 1040),\n        hasVariableData: (\n          code == 1100 ||\n          code == 1002 ||\n          code == 1003 ||\n          code == 1007 ||\n          code == 1008 ||\n          code == 1020 ||\n          code == 1040),\n        isSelect: isSelect\n      }\n\n      //exclude to coverages list\n      if (\n        code != 1006 &&\n        code != 1018 &&\n        code != 1026 &&\n        code != 1027 &&\n        code != 1029 &&\n        code != 1037 &&\n        !(code == 1036 && product == 10001)) {\n        returnData.push(returnObj);\n      }\n    });\n\n    return returnData;\n  };\n}","export default \".mat-dialog-title {\\n  background: #3a3a3a;\\n  color: #fff;\\n  text-align: center;\\n  padding: 10px 0;\\n}\\n\\nh5 {\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtdGhpcmQtcGFydHkvY3JlYXRlLXRoaXJkLXBhcnR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtdGhpcmQtcGFydHkvY3JlYXRlLXRoaXJkLXBhcnR5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWRpYWxvZy10aXRsZSB7XG4gIGJhY2tncm91bmQ6ICMzYTNhM2E7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cblxuaDUge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  Inject\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material';\nimport {\n  ThirdPartyListObject\n} from 'src/app/objects/LOV/thirdPartyList';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ThirdPartyLOVServices\n} from 'src/app/services/lov/third-party-lov-service';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  ThirdPartyService\n} from 'src/app/services/third-party.service';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-create-third-party',\n  templateUrl: './create-third-party.component.html',\n  styleUrls: ['./create-third-party.component.css']\n})\nexport class CreateThirdPartyComponent implements OnInit {\n  tpForm: FormGroup;\n  title: String = this.data.title;\n  thirdParty: PolicyHolder = new PolicyHolder();\n\n  TPLOV = new ThirdPartyListObject();\n\n  today: Date = new Date();\n\n  firstNameLabel = \"First Name\";\n  firstNameError = \"first name\"\n\n  //flag to show data for creating a person policy holder\n  showPersonDetails: boolean = true;\n\n  //flag to show data for creating organization/company \n  showOrgDetails: boolean = false;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(public dialogRef: MatDialogRef < CreateThirdPartyComponent > ,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private tpls: ThirdPartyLOVServices,\n    private tps: ThirdPartyService,\n    private bms: BsModalService) {}\n\n  ngOnInit(): void {\n    // getting all list of values needed for creating of third party person/organizaion/company\n    this.getLOVs();\n    this.setData();\n    this.setValidations();\n  }\n\n  createForm(type: string) {\n    this.tpForm = this.fb.group({\n      documentCode: ['', Validators.required],\n      documentType: ['', Validators.required],\n      policyHolderType: [null],\n      prefix: [null],\n      suffix: [null],\n      firstName: ['', Validators.required],\n      middleName: [null],\n      lastName: type == \"P\" ? ['', Validators.required] : [null],\n      gender: type == \"P\" ? ['', Validators.required] : [null],\n      birthDate: [null],\n      mobileNumber: ['', Validators.required],\n      correspondenceType: ['', Validators.required],\n      country: [null],\n      state: [null],\n      province: [null],\n      city: [null],\n      address: ['', Validators.required],\n      zipcode: [null],\n      email: ['', [Validators.required, Validators.email]],\n\n      orgDocumentType: [null],\n      orgDocumentCode: [null],\n      orgNationality: [null],\n      orgFirstName: [null],\n      orgLastName: [null],\n      orgPost: [null],\n      orgTypeOfBusiness: [null],\n\n      personMaritalStatus: [null],\n      personProfession: [null],\n      personOccupation: [null],\n      personNationality: [null],\n      personType: [null],\n      personLanguage: type == \"P\" ? ['', Validators.required] : [null],\n    });\n  }\n\n  setData() {\n    const policyHolder = this.data.policyHolder;\n    const type = policyHolder.policyHolderType;\n    this.createForm(type);\n    if (policyHolder.documentType == null || policyHolder.isExisting) {\n      this.thirdParty.policyHolderType = \"P\"; //person\n      this.thirdParty.correspondenceType = 1; //home\n      this.thirdParty.personLanguage = \"EN\" //english\n    } else {\n      this.thirdParty = policyHolder;\n      this.tpForm.get('documentType').markAsDirty();\n      this.tpForm.get('correspondenceType').markAsDirty();\n      if (this.thirdParty.policyHolderType == \"P\") {\n        this.tpForm.get('gender').markAsDirty();\n      }\n      this.getState()\n      this.getProvince();\n      this.getCity();\n      this.getZipCode();\n    }\n  }\n\n  setValidations() {\n    var policyHolderType = this.tpForm.get('policyHolderType');\n    var lastName = this.tpForm.get('lastName');\n    var gender = this.tpForm.get('gender');\n\n    policyHolderType.valueChanges.subscribe(type => {\n      this.showPersonDetails = type == \"P\";\n      this.showOrgDetails = type == \"C\";\n      this.firstNameLabel = type == \"P\" ? \"First Name\" : \"Company/Organization\";\n      this.firstNameError = this.firstNameLabel.toLocaleLowerCase();\n      Utility.updateValidator(lastName, type == \"P\" ? Validators.required : null);\n      Utility.updateValidator(gender, type == \"P\" ? Validators.required : null);\n    });\n  }\n\n  getLOVs() {\n    const _this = this;\n    this.tpls.getDocumentType().then(res => {\n      var types = [];\n      res.forEach(r => {\n        if (r.TIP_DOCUM != 'OTH') {\n          types.push(r);\n        }\n      });\n      _this.TPLOV.documentTypeLOV = types;\n    });\n    this.tpls.getPrefix().then(res => {\n      _this.TPLOV.prefixLOV = res;\n    });\n    this.tpls.getSuffix().then(res => {\n      _this.TPLOV.suffixLOV = res;\n    });\n    this.tpls.getCorrespondenceType().then(res => {\n      _this.TPLOV.correspondenceTypeLOV = res;\n    });\n    this.tpls.getCountry().then(res => {\n      _this.TPLOV.countryLOV = res;\n    });\n    this.tpls.getNationality().then(res => {\n      _this.TPLOV.nationalityLOV = res;\n    });\n    this.tpls.getPost().then(res => {\n      _this.TPLOV.orgPostLOV = res;\n    });\n    this.tpls.getTypeOfBusiness().then(res => {\n      _this.TPLOV.orgTypeOfBusinessLOV = res;\n    });\n    this.tpls.getMaritalStatus().then(res => {\n      _this.TPLOV.personMaritalStatusLOV = res;\n    });\n    this.tpls.getProfession().then(res => {\n      _this.TPLOV.personProfessionLOV = res;\n      _this.TPLOV.personOccupationLOV = res;\n    });\n    this.tpls.getType().then(res => {\n      _this.TPLOV.personTypeLOV = res;\n    });\n    this.tpls.getLanguage().then(res => {\n      _this.TPLOV.personLanguageLOV = res;\n    });\n  }\n\n  getState() {\n    const _this = this;\n    this.tpls.getState(this.thirdParty).then(res => {\n      _this.TPLOV.stateLOV = res;\n    });\n  }\n\n  getProvince() {\n    const _this = this;\n    this.tpls.getProvince(this.thirdParty).then(res => {\n      _this.TPLOV.provinceLOV = res;\n    });\n  }\n\n  getCity() {\n    const _this = this;\n    this.tpls.getCity(this.thirdParty).then(res => {\n      _this.TPLOV.cityLOV = res;\n    });\n  }\n\n  getZipCode() {\n    const _this = this;\n    this.tpls.getZipCode(this.thirdParty).then(res => {\n      _this.TPLOV.zipcodeLOV = res;\n    });\n  }\n\n  create(): void {\n    this.tps.getThirdPartyDetails(this.thirdParty.documentType, this.thirdParty.documentCode).then((res) => {\n      if (res.status) {\n        this.modalRef = Utility.showWarning(this.bms, \"Client information is already existing in the system. Search the client instead or create with a different document ID.\");\n      } else {\n        this.thirdParty.isExisting = false;\n        this.thirdParty.isPerson = this.thirdParty.policyHolderType == 'P';\n        this.dialogRef.close(this.thirdParty);\n      }\n    });\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n}","export default \".dollar {\\n  color: #4caf50;\\n}\\n\\n.euro {\\n  color: #03a9f4;\\n}\\n\\n.img-container {\\n  margin-bottom: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRvbGxhciB7XG4gIGNvbG9yOiAjNGNhZjUwO1xufVxuXG4uZXVybyB7XG4gIGNvbG9yOiAjMDNhOWY0O1xufVxuXG4uaW1nLWNvbnRhaW5lciB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59Il19 */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  DashboardService\n} from '../../services/dashboard.service';\nimport {\n  ChartOptions,\n  ChartType,\n  ChartDataSets\n} from 'chart.js';\nimport {\n  Label,\n  Color\n} from 'ng2-charts';\nimport {\n  DASH_INFO\n} from \"../../constants/local.storage\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  forex = {\n    dollar: 0.0,\n    euro: 0.0\n  }\n\n  dashboardInfo: any = {};\n  showData: boolean = false;\n\n  chartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          callback: function (value) {\n            return value.toLocaleString(\"en-US\", {\n              style: \"currency\",\n              currency: \"PHP\"\n            });\n          }\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    },\n    tooltips: {\n      mode: 'label',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          var value = Number(data.datasets[0].data[tooltipItem.index]).toFixed(2);\n          \n          return ' PHP ' + value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        },\n      },\n    }\n  };\n  chartLegend = true;\n  barChartLabels: Label[] = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n  barChartType: ChartType = 'bar';\n  barChartPlugins = [];\n  barChartColors: Color[] = [{\n    backgroundColor: \"#212529\"\n  }];\n  barChartData: ChartDataSets[] = [{\n    data: [],\n    label: 'Monthly Production'\n  }, ];\n\n  constructor(private ds: DashboardService) {}\n\n  ngOnInit() {\n    const _this = this;\n    this.ds.getForeignExchange().then((res) => {\n      if (res.status) {\n        _this.forex.dollar = res.obj[\"dollar\"];\n        _this.forex.euro = res.obj[\"euro\"];\n      }\n    });\n\n    const dashInfo = localStorage.getItem(DASH_INFO);\n\n    if (dashInfo != null) {\n      this.dashboardInfo = JSON.parse(dashInfo);\n      this.barChartData = [{\n        data: this.dashboardInfo[\"month\"],\n        label: 'Monthly Production'\n      }];\n      this.showData = true;\n    } else {\n      this.ds.getDashboardInfo().then((res) => {\n        if (res.status) {\n          localStorage.setItem(DASH_INFO, JSON.stringify(res.obj));\n          _this.dashboardInfo = res.obj;\n          _this.barChartData = [{\n            data: res.obj[\"month\"],\n            label: 'Monthly Production'\n          }];\n          this.showData = true;\n        }\n      });\n    }\n\n\n    // this.loadScripts();\n  }\n\n  // loadScripts() {\n  //   const dynamicScripts = [\n  //     './assets/js/chart.js'\n  //   ];\n  //   for (let i = 0; i < dynamicScripts.length; i++) {\n  //     const node = document.createElement('script');\n  //     node.src = dynamicScripts[i];\n  //     node.type = 'text/javascript';\n  //     node.async = false;\n  //     node.charset = 'utf-8';\n  //     document.getElementsByTagName('head')[0].appendChild(node);\n  //   }\n  // }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdW1lbnQtcHJpbnRpbmcvZG9jdW1lbnQtcHJpbnRpbmcuY29tcG9uZW50LmNzcyJ9 */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  DocumentPrinting\n} from '../../objects/DocumentPrinting';\nimport {\n  UtilityService\n} from '../../services/utility.service';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-document-printing',\n  templateUrl: './document-printing.component.html',\n  styleUrls: ['./document-printing.component.css']\n})\nexport class DocumentPrintingComponent implements OnInit {\n  documentPrintingDetails = new DocumentPrinting();\n  documentPrintingForm: FormGroup;\n  csProcessDateLOV: any[];\n  soaProcessDateLOV: any[];\n\n  showPolicyDetails: boolean = false;\n  showQuotationDetails: boolean = false;\n  showCommissionStatementDetails: boolean = false;\n  //flag if there is no generated commission statement dates for the agent\n  showCsDate: boolean = false;\n\n  showSOADetails: boolean = false;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  dateNameFormat: string = 'MMM DD, YYYY';\n  dateValueFormat: string = 'DDMMYYYY';\n\n  constructor(\n    private fb: FormBuilder,\n    private us: UtilityService,\n    private bms: BsModalService) {\n    this.createForm();\n    this.setValidations();\n  }\n\n  ngOnInit(): void {\n    this.getSOADates();\n    this.us.getDateRecord().then((res) => {\n      // date records for commission statement dates\n      if (res.status) {\n        this.csProcessDateLOV = res.obj as[];\n        if (this.csProcessDateLOV.length) {\n          this.formatDate(this.csProcessDateLOV);\n          this.showCsDate = true;\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  formatDate(lov: any[]) {\n    lov.forEach(el => {\n      var date = new Date(el.fec_PROCESO);\n      el.date = moment(date).format(this.dateNameFormat);\n      el.value = moment(date).format(this.dateValueFormat);\n    });\n  }\n\n  getSOADates() {\n    const number = 3;\n    let today = new Date();\n    var arr = [];\n\n    for (var i = 1; i <= number; i++) {\n      var name = moment(today).subtract(1, 'months').endOf('month').format(this.dateNameFormat);\n      var value = moment(today).subtract(1, 'months').endOf('month').format(this.dateValueFormat);\n      today = new Date(name);\n      arr.push({\n        name,\n        value\n      });\n    }\n    this.soaProcessDateLOV = arr;\n  }\n\n  createForm() {\n    this.documentPrintingForm = this.fb.group({\n      documentType: ['', Validators.required],\n      policyNumber: ['', Validators.required],\n      endorsementNumber: [null],\n      policyPPRF: [null],\n      policyPAC: [null],\n      policyPV: [null],\n      quotationNumber: ['', Validators.required],\n      csProcessDate: ['', Validators.required],\n      csPass: ['', Validators.required],\n      soaProcessDate: ['', Validators.required],\n      soaPass: ['', Validators.required]\n    });\n  }\n\n  setValidations() {\n    var policyNumber = this.documentPrintingForm.get('policyNumber');\n    var quotationNumber = this.documentPrintingForm.get('quotationNumber');\n    var csProcessDate = this.documentPrintingForm.get('csProcessDate');\n    var csPass = this.documentPrintingForm.get('csPass');\n    var soaProcessDate = this.documentPrintingForm.get('soaProcessDate');\n    var soaPass = this.documentPrintingForm.get('soaPass');\n\n    this.documentPrintingForm.get('documentType').valueChanges.subscribe(documentType => {\n      this.showPolicyDetails = false;\n      this.showQuotationDetails = false;\n      this.showCommissionStatementDetails = false;\n      this.showSOADetails = false;\n\n      //removing required validation\n      Utility.updateValidator(policyNumber, null);\n      Utility.updateValidator(quotationNumber, null);\n      Utility.updateValidator(csProcessDate, null);\n      Utility.updateValidator(csPass, null);\n      Utility.updateValidator(soaProcessDate, null);\n      Utility.updateValidator(soaPass, null);\n\n      if (documentType == \"P\") { //policy\n        this.showPolicyDetails = true;\n        Utility.updateValidator(policyNumber, [Validators.required]);\n      } else if (documentType == \"Q\") { //quotation\n        this.showQuotationDetails = true;\n        Utility.updateValidator(quotationNumber, [Validators.required]);\n      } else if (documentType == \"C\") { //commission statement\n        this.showCommissionStatementDetails = true;\n        Utility.updateValidator(csProcessDate, [Validators.required]);\n        Utility.updateValidator(csPass, [Validators.required]);\n      } else if (documentType == \"S\") { //commission statement\n        this.showSOADetails = true;\n        Utility.updateValidator(soaProcessDate, [Validators.required]);\n        Utility.updateValidator(soaPass, [Validators.required]);\n      }\n    });\n  }\n\n  policyNumberOnChange() {\n    this.us.getEndorsementNumber(this.documentPrintingDetails).then((res) => {\n      if (res.status) {\n        this.documentPrintingDetails.endorsementNumber = res.obj as String;\n      }\n    });\n  }\n\n  print(documentPrintingDetails: DocumentPrinting) {\n    this.us.validatePrinting(documentPrintingDetails).then((res) => {\n      if (res.status) {\n        var ext = res.obj;\n        this.us.printDocument(ext.toString()).subscribe(data => {\n          if (data != null) {\n            window.open(URL.createObjectURL(data));\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n}\n","export default \"\\n#faq span.qa-label {\\n    font-size: 35px;\\n    font-weight: 700;\\n}\\n\\n#faq .question-panel {\\n\\tpadding-bottom: 40px;\\n\\tmargin-bottom: 40px;\\n\\tborder-bottom: 1px solid #e0e0e0;\\n}\\n\\n#faq .question-container {\\n\\tpadding: 10px;\\n\\tbackground: #f5f5f5;\\n\\tborder-left: 5px solid #dc291e;\\n}\\n\\n#faq .question-section h4 {\\n\\tmargin: 9px 0;\\n}\\n\\n#faq .answer-container {\\n\\tbackground: #ffffff;\\n\\tborder-left: 5px solid #4a4a4a;\\n\\tpadding: 10px;\\n\\tcolor: #828282;\\n}\\n\\n#faq .answer-section p, #faq .answer-section li {\\n\\tfont-size: 14px;\\n\\tline-height: 25px;\\n}\\n\\n#faq img {\\n\\twidth: 100%;\\n    border: 1px solid #000;\\n    max-width: 900px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mYXEvZmFxLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7QUFFQTtDQUNDLG9CQUFvQjtDQUNwQixtQkFBbUI7Q0FDbkIsZ0NBQWdDO0FBQ2pDOztBQUVBO0NBQ0MsYUFBYTtDQUNiLG1CQUFtQjtDQUNuQiw4QkFBOEI7QUFDL0I7O0FBRUE7Q0FDQyxhQUFhO0FBQ2Q7O0FBRUE7Q0FDQyxtQkFBbUI7Q0FDbkIsOEJBQThCO0NBQzlCLGFBQWE7Q0FDYixjQUFjO0FBQ2Y7O0FBRUE7Q0FDQyxlQUFlO0NBQ2YsaUJBQWlCO0FBQ2xCOztBQUVBO0NBQ0MsV0FBVztJQUNSLHNCQUFzQjtJQUN0QixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2ZhcS9mYXEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuI2ZhcSBzcGFuLnFhLWxhYmVsIHtcbiAgICBmb250LXNpemU6IDM1cHg7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuI2ZhcSAucXVlc3Rpb24tcGFuZWwge1xuXHRwYWRkaW5nLWJvdHRvbTogNDBweDtcblx0bWFyZ2luLWJvdHRvbTogNDBweDtcblx0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbiNmYXEgLnF1ZXN0aW9uLWNvbnRhaW5lciB7XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGJhY2tncm91bmQ6ICNmNWY1ZjU7XG5cdGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2RjMjkxZTtcbn1cblxuI2ZhcSAucXVlc3Rpb24tc2VjdGlvbiBoNCB7XG5cdG1hcmdpbjogOXB4IDA7XG59XG5cbiNmYXEgLmFuc3dlci1jb250YWluZXIge1xuXHRiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuXHRib3JkZXItbGVmdDogNXB4IHNvbGlkICM0YTRhNGE7XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGNvbG9yOiAjODI4MjgyO1xufVxuXG4jZmFxIC5hbnN3ZXItc2VjdGlvbiBwLCAjZmFxIC5hbnN3ZXItc2VjdGlvbiBsaSB7XG5cdGZvbnQtc2l6ZTogMTRweDtcblx0bGluZS1oZWlnaHQ6IDI1cHg7XG59XG5cbiNmYXEgaW1nIHtcblx0d2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDtcbiAgICBtYXgtd2lkdGg6IDkwMHB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.css']\n})\nexport class FaqComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"#coverageBreakdown table {\\n  text-align: center !important;\\n  width: 100%;\\n}\\n\\n#coverageBreakdown .mat-header-cell {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9maXhlZC1jb3ZlcmFnZXMvZml4ZWQtY292ZXJhZ2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2QkFBNkI7RUFDN0IsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9maXhlZC1jb3ZlcmFnZXMvZml4ZWQtY292ZXJhZ2VzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjY292ZXJhZ2VCcmVha2Rvd24gdGFibGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbiNjb3ZlcmFnZUJyZWFrZG93biAubWF0LWhlYWRlci1jZWxsIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\n\nexport interface coverageDTO {\n  label: string;\n  sumInsured: number;\n  currency: string;\n  code: number;\n  details: string;\n  isHeader: boolean;\n  showDetails: boolean;\n}\n\n@Component({\n  selector: 'app-fixed-coverages',\n  templateUrl: './fixed-coverages.component.html',\n  styleUrls: ['./fixed-coverages.component.css']\n})\nexport class FixedCoveragesComponent implements OnInit {\n  @Input() line: string;\n  @Input() coverageList: any[] = [];\n  @Input()\n  set loadCoverage(value: number) {\n    this.triggerCounter = value;\n    this.generateCoverage();\n  }\n\n  displayedColumns: string[] = ['label', 'sumInsured'];\n  coverageData: Array < coverageDTO > = [];\n  triggerCounter: number;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.generateCoverage();\n  }\n\n  generateCoverage() {\n    this.coverageData = [];\n\n    let headers = [];\n    //coverage headers\n\n    if (this.line == 'travel') {\n      headers = [300, 332, 330, 302, 316, 319, 324, 333];\n    } else if (this.line == 'accident') {\n      headers = [340];\n    }\n\n    this.coverageList.forEach(coverage => {\n      var obj = {} as coverageDTO;\n      // bolder label if it is a header\n      obj.code = coverage.codCob;\n      if (this.line == 'home') {\n        obj.isHeader = coverage.MCA_TIP_CAPITAL == '5' || coverage.nomCob == 'OTHER RELATED STRUCTURES' || coverage.nomCob == 'OTHER RELATED CONTENTS';\n      } else {\n        obj.isHeader = headers.indexOf(obj.code) !== -1;\n      }\n\n      obj.label = obj.isHeader ? '<strong>' + coverage.nomCob + '</strong>' : coverage.nomCob;\n      obj.sumInsured = coverage.sumaAseg;\n      obj.showDetails = false;\n\n      if (obj.isHeader && obj.code != 330 && obj.code != 332) {\n        if (this.line != 'home' || obj.sumInsured == 0) {\n          obj.showDetails = true;\n        }\n        obj.details = '';\n      } else if (obj.sumInsured == null) {\n        obj.showDetails = true;\n        obj.details = 'n/a';\n      } else if (obj.sumInsured == 0) {\n        obj.showDetails = true;\n        obj.details = obj.isHeader ? '' : 'actual cost';\n      }\n\n      if (coverage.codMon == 2) {\n        obj.currency = 'USD';\n      } else if (coverage.codMon == 3) {\n        obj.currency = 'EU';\n      } else {\n        obj.currency = 'PHP';\n      }\n      \n      this.coverageData.push(obj);\n\n      //if selected product has hospital cash benefit coverage\n      if (this.line == 'accident' && coverage.codCob == 357) {\n        var obj1 = {} as coverageDTO;\n        obj1.showDetails = true;\n        obj1.label = 'Daily Cash Benefit - up to 365 days only, starting on the first day of Hospital Confinement or after 24 hours of covered accident / Sudden illness';\n        obj1.details = 'Php 1,000.00/day';\n        this.coverageData.push(obj1);\n\n        var obj2 = {} as coverageDTO;\n        obj2.showDetails = true;\n        obj2.label = '50% increase in Daily Cash Benefit, in case of Intensive Care Unit confinement';\n        obj2.details = 'Php 1,500.00/day';\n        this.coverageData.push(obj2);\n\n        var obj3 = {} as coverageDTO;\n        obj3.showDetails = true;\n        obj3.label = 'Surgical Cash Benefit for every covered surgery (Subject to Schedule of Surgical Benefits)';\n        obj3.details = 'max of Php 10,000.00';\n        this.coverageData.push(obj3);\n      }\n    });\n  }\n}","export default \"footer.sticky-footer {\\n    padding: 0;\\n    flex-shrink: 0;\\n    text-align: right;\\n}\\n\\n.footer-wrapper {\\n    padding-top: 30px;\\n}\\n\\n.footer-wrapper p {\\n    margin-bottom: 6px;\\n    font-size: 10px;\\n}\\n\\n.footer-wrapper img {\\n    width: 200px;\\n    margin: 0 -9px 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsY0FBYztJQUNkLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9vdGVyLnN0aWNreS1mb290ZXIge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgZmxleC1zaHJpbms6IDA7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5mb290ZXItd3JhcHBlciB7XG4gICAgcGFkZGluZy10b3A6IDMwcHg7XG59XG5cbi5mb290ZXItd3JhcHBlciBwIHtcbiAgICBtYXJnaW4tYm90dG9tOiA2cHg7XG4gICAgZm9udC1zaXplOiAxMHB4O1xufVxuXG4uZm9vdGVyLXdyYXBwZXIgaW1nIHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgbWFyZ2luOiAwIC05cHggNXB4O1xufSJdfQ== */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  VER\n} from '../../constants/app.constant';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  version = VER;\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZ3JvdXAtcG9saWN5L2dyb3VwLXBvbGljeS5jb21wb25lbnQuY3NzIn0= */\";","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  Validate\n} from '../../validators/validate';\nimport {\n  GroupPolicyLOVServices\n} from '../../services/lov/group-policy.service';\nimport {\n  GroupPolicyListObject\n} from 'src/app/objects/LOV/groupPolicyList';\nimport {\n  GroupPolicy\n} from 'src/app/objects/GroupPolicy';\nimport {\n  AuthenticationService\n} from '../../services/authentication.service';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Component({\n  selector: 'app-group-policy',\n  templateUrl: './group-policy.component.html',\n  styleUrls: ['./group-policy.component.css']\n})\n\nexport class GroupPolicyComponent {\n  user = this.auths.currentUserValue;\n  @Input() groupPolicy: GroupPolicy;\n  @Input() prevDetails: any;\n  @Input() changedValues: any[] = [];\n  @Input() editMode: boolean;\n  @Input() showExpiring: boolean;\n  @Input()\n  set subline(subline: number) {\n    this._subline = subline;\n    if (subline != null) {\n      this.getGroupPolicyLOV();\n    }\n  }\n  @Input()\n  set loadQuotation(value: number) {\n    this.triggerCounter = value;\n    if (!Utility.isUndefined(this.groupPolicy.commercialStructure)) {\n      this.gpForm.get('commercialStructure').markAsDirty();\n    }\n    if (!Utility.isUndefined(this.groupPolicy.groupPolicy)) {\n      this.gpForm.get('groupPolicy').markAsDirty();\n    }\n    if (!Utility.isUndefined(this.groupPolicy.contract)) {\n      this.gpForm.get('contract').markAsDirty();\n      this.gpls.getContract(this._subline, this.groupPolicy).then(res => {\n        this.GPLOV.contractLOV = res;\n      });\n    }\n    if (!Utility.isUndefined(this.groupPolicy.subContract)) {\n      this.gpForm.get('subContract').markAsDirty();\n      this.gpls.getSubContract(this._subline, this.groupPolicy).then(res => {\n        this.GPLOV.subContractLOV = res;\n      });\n    }\n  }\n\n  @Output() changedValuesChange = new EventEmitter < any[] > ();\n  triggerCounter: number;\n  _subline: number;\n\n  gpForm: FormGroup;\n  GPLOV = new GroupPolicyListObject();\n\n  today: Date = new Date();\n  expiryDateMinDate: Date = moment().add(1, 'years').toDate();\n\n  constructor(\n    private gpls: GroupPolicyLOVServices,\n    private fb: FormBuilder,\n    private auths: AuthenticationService) {}\n\n  ngOnInit(): void {\n    this.createForm();\n    setTimeout(() => {\n      this.groupPolicy.agentCode = this.user.agentCode;\n      this.groupPolicy.commercialStructure = this.user.commercialStructure;\n      if (!Utility.isUndefined(this.groupPolicy.commercialStructure)) {\n        this.gpForm.get('commercialStructure').markAsDirty();\n      }\n\n      const _this = this;\n      this.gpls.getCommercialStructure().then(res => {\n        _this.GPLOV.commercialStructureLOV = res;\n      });\n\n      Validate.setGroupPolicyValidations(this.gpForm, this.groupPolicy);\n    });\n  }\n\n  getGroupPolicyLOV() {\n    const _this = this;\n    this.gpls.getGroupPolicy(this._subline).then(res => {\n      _this.GPLOV.groupPolicyLOV = res;\n    });\n  }\n\n  createForm() {\n    this.gpForm = this.fb.group({\n      //group policy\n      groupPolicy: [null],\n      contract: [null],\n      subContract: [null],\n      commercialStructure: ['', Validators.required],\n      agentCode: [{\n        value: '',\n        disabled: true\n      }, Validators.required],\n      cbIsRenewal: [null],\n      expiringPolicyNumber: [null]\n    });\n  }\n\n  groupPolicyOnChange() {\n    const _this = this;\n    _this.GPLOV.contractLOV = []\n    this.gpls.getContract(this._subline, this.groupPolicy).then(res => {\n      _this.GPLOV.contractLOV = res;\n    });\n    if (this.groupPolicy.groupPolicy == undefined || this.groupPolicy.groupPolicy == 0) {\n      this.changedValues = this.changedValues.filter(v => v !== 'Contract');\n      this.changedValues = this.changedValues.filter(v => v !== 'Sub Contract');\n      this.changedValuesChange.emit(this.changedValues);\n    }\n  }\n\n  contractOnChange() {\n    const _this = this;\n    _this.GPLOV.subContractLOV = []\n    this.gpls.getSubContract(this._subline, this.groupPolicy).then(res => {\n      _this.GPLOV.subContractLOV = res;\n    });\n  }\n\n  affecting(key: string, label: string) {\n    if (this.prevDetails != null && 'groupPolicy' in this.prevDetails) {\n      const prev = this.prevDetails.groupPolicy[key] == undefined ? \"\" : this.prevDetails.groupPolicy[key];\n      const curr = this.groupPolicy[key] == undefined ? \"\" : this.groupPolicy[key];\n      if (prev != curr) {\n        if (!this.changedValues.includes(label)) {\n          //if changedValues length is greater than 0, request is affecting\n          this.changedValues.push(label);\n        }\n      } else {\n        //remove all occurence\n        this.changedValues = this.changedValues.filter(v => v !== label); \n      }\n      this.changedValuesChange.emit(this.changedValues);\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  Globals\n} from '../../utils/global';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  AuthenticationService\n} from '../../services/authentication.service';\nimport {\n  page\n} from '../../constants/page';\nimport {\n  User\n} from 'src/app/objects/User';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  p = page; //constant pages\n  canChooseAgent: boolean = false;\n  currentUser = new User();\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService) {}\n\n  ngOnInit() {\n    this.currentUser = this.authenticationService.currentUserValue;\n    this.canChooseAgent = this.currentUser.role === 2;\n  }\n\n  setPage(val: String) {\n    Globals.setPage(val);\n  }\n\n  chooseAgent() {\n    this.router.navigate(['/agent']);\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n","export default \".container {\\n    width: 100%;\\n    min-height: 100vh;\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n    align-items: center;\\n    padding: 15px;\\n  \\n    background-repeat: no-repeat;\\n    background-position: center;\\n    background-size: cover;\\n    position: relative;\\n    z-index: 1;\\n  }\\n  \\n  .container::before {\\n    content: \\\"\\\";\\n    display: block;\\n    position: absolute;\\n    z-index: -1;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n  }\\n  \\n  .wrap {\\n    max-width: 1200px;\\n    height: 650px;\\n    width: 100%;\\n    border-radius: 5px;\\n    overflow: hidden;\\n    background: #fff;\\n  }\\n  \\n  .brand-logo {\\n    cursor: pointer;\\n  }\\n  \\n  .brand-logo img {\\n    width: 100%;\\n    margin: 35px 0 0;\\n    padding: 20px;\\n  }\\n  \\n  .col-lg-4.menu {\\n    padding-left: 30px;\\n    background: #2a2a2a;\\n  }\\n  \\n  .col-lg-8.details {\\n    padding: 30px 40px 0 30px;\\n    text-align: justify;\\n  }\\n  \\n  ul.health-menu {\\n    display: block;\\n    margin: 10px;\\n    top: 90px;\\n    position: relative;\\n    list-style: none;\\n    padding: 0;\\n  }\\n  \\n  ul.health-menu li {\\n    padding: 10px 5px;\\n    background-color: #c64c4c;\\n    border: 1px solid #525252;\\n    margin: 20px 0;\\n    text-align: center;\\n    border-radius: 5px;\\n    color: #fbfbfb;\\n  }\\n  \\n  ul.health-menu li.live {\\n    background-color: #8de865;\\n    color: #404040;\\n  }\\n  \\n  .scroll {\\n    overflow: scroll;\\n    height: 100%;\\n  }\\n  \\n  .scroll-wrapper {\\n    height: 635px;\\n  }\\n  \\n  .top-20 {\\n    padding-top: 20px;\\n  }\\n  \\n  h5 {\\n    font-weight: bold;\\n  }\\n  \\n  h2 {\\n    font-weight: bold;\\n    text-align: center;\\n    margin: 20px 0;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9oZWFsdGgtY2hlY2svaGVhbHRoLWNoZWNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsaUJBQWlCO0lBS2pCLGFBQWE7SUFDYixlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixhQUFhOztJQUViLDRCQUE0QjtJQUM1QiwyQkFBMkI7SUFDM0Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixVQUFVO0VBQ1o7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsV0FBVztJQUNYLFlBQVk7SUFDWixNQUFNO0lBQ04sT0FBTztFQUNUOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxZQUFZO0lBQ1osU0FBUztJQUNULGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsVUFBVTtFQUNaOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6Qix5QkFBeUI7SUFDekIsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsY0FBYztFQUNoQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsY0FBYztFQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhbHRoLWNoZWNrL2hlYWx0aC1jaGVjay5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogMTAwdmg7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tb3otYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMTVweDtcbiAgXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMTtcbiAgfVxuICBcbiAgLmNvbnRhaW5lcjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAtMTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gIH1cbiAgXG4gIC53cmFwIHtcbiAgICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgICBoZWlnaHQ6IDY1MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gIH1cbiAgXG4gIC5icmFuZC1sb2dvIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgXG4gIC5icmFuZC1sb2dvIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAzNXB4IDAgMDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICB9XG4gIFxuICAuY29sLWxnLTQubWVudSB7XG4gICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICAgIGJhY2tncm91bmQ6ICMyYTJhMmE7XG4gIH1cbiAgXG4gIC5jb2wtbGctOC5kZXRhaWxzIHtcbiAgICBwYWRkaW5nOiAzMHB4IDQwcHggMCAzMHB4O1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gIH1cbiAgXG4gIHVsLmhlYWx0aC1tZW51IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgdG9wOiA5MHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbiAgXG4gIHVsLmhlYWx0aC1tZW51IGxpIHtcbiAgICBwYWRkaW5nOiAxMHB4IDVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzY0YzRjO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM1MjUyNTI7XG4gICAgbWFyZ2luOiAyMHB4IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjb2xvcjogI2ZiZmJmYjtcbiAgfVxuXG4gIHVsLmhlYWx0aC1tZW51IGxpLmxpdmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM4ZGU4NjU7XG4gICAgY29sb3I6ICM0MDQwNDA7XG4gIH1cbiAgXG4gIC5zY3JvbGwge1xuICAgIG92ZXJmbG93OiBzY3JvbGw7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG4gIFxuICAuc2Nyb2xsLXdyYXBwZXIge1xuICAgIGhlaWdodDogNjM1cHg7XG4gIH1cbiAgXG4gIC50b3AtMjAge1xuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICB9XG4gIFxuICBoNSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbiAgXG4gIGgyIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAyMHB4IDA7XG4gIH0iXX0= */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  LovService\n} from 'src/app/services/lov.service';\nimport {\n  environment\n} from '../../../environments/environment';\nimport {\n  VER\n} from '../../constants/app.constant';\n\n@Component({\n  selector: 'app-health-check',\n  templateUrl: './health-check.component.html',\n  styleUrls: ['./health-check.component.css']\n})\nexport class HealthCheckComponent implements OnInit {\n\n  apiUrl = environment.apiUrl;\n  imgUrl = environment.imgUrl;\n  production = environment.production;\n  version = VER;\n  backendConfigList : any[] = [];\n\n  constructor(private ls: LovService) {}\n\n  ngOnInit(): void {\n    this.ls.getConfigList().then(res => {\n      if (res.status) {\n        this.backendConfigList = res.obj as any[];\n      }\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5kaXZpZHVhbC1wb2xpY3kvaW5kaXZpZHVhbC1wb2xpY3kuY29tcG9uZW50LmNzcyJ9 */\";","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder\n} from '@angular/forms';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Component({\n  selector: 'app-individual-policy',\n  templateUrl: './individual-policy.component.html',\n  styleUrls: ['./individual-policy.component.css']\n})\nexport class IndividualPolicyComponent implements OnInit {\n  @Input() details: any;\n  loadForm: FormGroup;\n\n  disableLoadBtn: boolean = true;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private bms: BsModalService) {\n    this.createForm();\n    this.setValidations();\n  }\n\n  ngOnInit(): void {}\n\n  createForm() {\n    this.loadForm = this.fb.group({\n      quotationNumber: ['', null],\n    });\n  }\n\n  setValidations() {\n    var quotationNumber = this.loadForm.get('quotationNumber');\n    quotationNumber.valueChanges.subscribe(number => {\n      this.disableLoadBtn = Utility.isUndefined(number);\n    });\n  }\n\n}","export default \"#login,\\n#login .container-fluid,\\n#login .row,\\n#login .row .login-panel {\\n  height: 100%;\\n}\\n\\n#login .left-container img {\\n  width: 100%;\\n}\\n\\n.wrap-banner {\\n  position: relative;\\n  top: calc(50% - 100px);\\n  color: #efefef;\\n  max-width: 450px;\\n  position: relative;\\n  margin: 0 auto;\\n}\\n\\n.login-form-title {\\n  color: #c31f09;\\n  font-size: 20px;\\n  font-weight: 700;\\n  margin-bottom: 10px;\\n  display: block;\\n}\\n\\n.wrap-input {\\n  margin-bottom: 20px;\\n}\\n\\n.wrap-login {\\n  top: calc(50% - 180px);\\n  width: 80%;\\n  position: relative;\\n  margin: 0px auto;\\n}\\n\\n.login-logo {\\n  width: 80%;\\n  display: block;\\n  margin: 0 auto 40px;\\n}\\n\\n.login-footer {\\n  position: absolute;\\n  bottom: 10px;\\n  margin: 0px auto;\\n  padding: 0;\\n  width: 94%;\\n}\\n\\n.login-footer ul {\\n  margin: 0 auto;\\n  padding: 0px;\\n  text-align: center;\\n}\\n\\n.login-footer ul li {\\n  display: inline-block;\\n  margin-left: 15px;\\n}\\n\\n.f-password {\\n  color: #c31f09;\\n}\\n\\n.login-version {\\n  font-size: 11px;\\n}\\n\\n#rememberMe {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0VBSUUsWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsY0FBYztFQUNkLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNsb2dpbixcbiNsb2dpbiAuY29udGFpbmVyLWZsdWlkLFxuI2xvZ2luIC5yb3csXG4jbG9naW4gLnJvdyAubG9naW4tcGFuZWwge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbiNsb2dpbiAubGVmdC1jb250YWluZXIgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi53cmFwLWJhbm5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiBjYWxjKDUwJSAtIDEwMHB4KTtcbiAgY29sb3I6ICNlZmVmZWY7XG4gIG1heC13aWR0aDogNDUwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5sb2dpbi1mb3JtLXRpdGxlIHtcbiAgY29sb3I6ICNjMzFmMDk7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi53cmFwLWlucHV0IHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLndyYXAtbG9naW4ge1xuICB0b3A6IGNhbGMoNTAlIC0gMTgwcHgpO1xuICB3aWR0aDogODAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogMHB4IGF1dG87XG59XG5cbi5sb2dpbi1sb2dvIHtcbiAgd2lkdGg6IDgwJTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCBhdXRvIDQwcHg7XG59XG5cbi5sb2dpbi1mb290ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMTBweDtcbiAgbWFyZ2luOiAwcHggYXV0bztcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IDk0JTtcbn1cblxuLmxvZ2luLWZvb3RlciB1bCB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmxvZ2luLWZvb3RlciB1bCBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XG59XG5cbi5mLXBhc3N3b3JkIHtcbiAgY29sb3I6ICNjMzFmMDk7XG59XG5cbi5sb2dpbi12ZXJzaW9uIHtcbiAgZm9udC1zaXplOiAxMXB4O1xufVxuXG4jcmVtZW1iZXJNZSB7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xufSJdfQ== */\";","import {\n  Component,\n  OnInit\n} from \"@angular/core\";\nimport {\n  Router,\n  ActivatedRoute\n} from \"@angular/router\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from \"@angular/forms\";\nimport {\n  Utility\n} from \"../../utils/utility\";\nimport {\n  BsModalService,\n  BsModalRef\n} from \"ngx-bootstrap/modal\";\nimport {\n  first\n} from \"rxjs/operators\";\nimport {\n  AuthenticationService\n} from \"../../services/authentication.service\";\nimport {\n  MIVO_LOGIN\n} from \"../../constants/local.storage\";\nimport {\n  VER\n} from \"../../constants/app.constant\";\nimport {\n  Globals\n} from \"../../utils/global\";\nimport {\n  page\n} from \"../../constants/page\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  returnUrl: String;\n  loading = false;\n  message: any;\n  alert: boolean;\n  version = VER;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private modalService: BsModalService,\n    private authenticationService: AuthenticationService\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate([\"/\"]);\n    }\n    this.createForm();\n  }\n\n  ngOnInit() {\n    this.modalRef = Utility.modal(\n      this.modalService,\n      \"You are about to enter MAPFRE Insurance Information System. The access and use of this system is limited to duly authorized personnel and strictly for official use only. MAPFRE Insurance informs all of its employees, agents, representatives, service providers, and all natural or juridical persons having official transactions with the company involving similar access to its information system that Information accessed in MAPFRE SYSTEM is considered property of MAPFRE Insurance and is subject to obligation of confidentiality and security in accordance with the laws on privacy and protection of personal information. All registered users of this system shall be monitored and all accesses be recorded by MAPFRE INSURANCE as a matter of right, in accordance with existing and applicable laws and Company Rules and regulations.\",\n      \"MAPFRE INFORMATION USAGE SECURITY NOTICE\"\n    );\n\n    var mivoLogin = localStorage.getItem(MIVO_LOGIN);\n    if (mivoLogin != null) {\n      var login = JSON.parse(mivoLogin);\n      this.loginForm.markAsDirty();\n      this.loginForm.setValue({\n        username: login.username,\n        password: login.password,\n        rememberMe: login.rememberMe,\n      });\n    }\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\n  }\n\n  createForm() {\n    this.loginForm = this.fb.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required],\n      rememberMe: [],\n    });\n  }\n\n  rememberMe(): void {\n    if (this.loginForm.value.rememberMe) {\n      localStorage.setItem(MIVO_LOGIN, JSON.stringify(this.loginForm.value));\n    } else {\n      localStorage.removeItem(MIVO_LOGIN);\n    }\n  }\n\n  onSubmit(): void {\n    this.rememberMe();\n    this.loading = true;\n    this.authenticationService\n      .login(this.loginForm.value.username, this.loginForm.value.password)\n      .pipe(first())\n      .subscribe(\n        (data) => {\n          if (data != null) {\n            Globals.setPage(page.DAS.N);\n            if (data.role === 2) { // if employee\n              this.router.navigate([\"/agent\"]);\n            } else {\n              this.router.navigate([this.returnUrl]);\n            }\n          } else {\n            this.loading = false;\n            this.alert = true;\n            this.message = \"Incorrect useraname or password.\";\n          }\n        },\n        (err) => {\n          this.loading = false;\n            this.alert = true;\n            this.message = \"Application Error! \" + err.message;\n        }\n      );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWlzc2luZy1wYWdlL21pc3NpbmctcGFnZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-missing-page',\n  templateUrl: './missing-page.component.html',\n  styleUrls: ['./missing-page.component.css']\n})\nexport class MissingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".modal-footer {\\n  padding: 0.50rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9tb2RhbC9tb2RhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9tb2RhbC9tb2RhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLWZvb3RlciB7XG4gIHBhZGRpbmc6IDAuNTByZW07XG59Il19 */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  BsModalRef\n} from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n\n  className: string;\n  title: string;\n  message: string;\n  items: any[];\n  isHtml: boolean;\n  isConfirm: boolean;\n  isOkay: boolean;\n  isClose: boolean;\n  isCancel: boolean;\n  icon: string = 'fa-smile';\n  btnClass: string = 'default';\n\n  constructor(\n    private bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {\n    if (this.title == \"Error\") {\n      this.icon = 'fa-times';\n      this.btnClass = 'danger';\n    } else if (this.title == \"Warning\") {\n      this.icon = 'fa-exclamation';\n    } else if (this.title == \"Info\") {\n      this.icon = 'fa-info';\n      this.btnClass = 'primary';\n    }\n  }\n\n  confirm() {\n    this.close();\n  }\n\n  okay() {\n    this.bsModalRef.hide();\n  }\n\n  close() {\n    this.bsModalRef.hide();\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n  }\n\n}\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9vdXRzdGFuZGluZy1iaWxscy9vdXRzdGFuZGluZy1iaWxscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvb3V0c3RhbmRpbmctYmlsbHMvb3V0c3RhbmRpbmctYmlsbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoLm1hdC1zb3J0LWhlYWRlci1zb3J0ZWQge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmRpdmlkZXIge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbn1cblxuLmNvbC1mb3JtLWxhYmVsIHtcbiAgZm9udC1zaXplOiA5MCU7XG59XG4iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\n\nexport interface OutstandingBillsDTO {\n  policyHolder: string;\n  policyNumber: string;\n  currency: string;\n  invoiceNumber: number;\n  receiptAmount: string;\n  commissionAmount: string;\n  withholdingTax: string;\n  source: string;\n}\n\nconst ELEMENT_DATA: OutstandingBillsDTO[] = [{\n    policyHolder: \"JAMES, LeBRON\",\n    policyNumber: \"1001661000178\",\n    currency: \"PHP\",\n    invoiceNumber: 33432,\n    receiptAmount: \"560.00\",\n    commissionAmount: \"44.80\",\n    withholdingTax: \"0.00\",\n    source: \"TRONWEB\"\n  },{\n    policyHolder: \"WADE, DYWANE\",\n    policyNumber: \"2001892000786\",\n    currency: \"PHP\",\n    invoiceNumber: 416512,\n    receiptAmount: \"1,974.96\",\n    commissionAmount: \"624.00\",\n    withholdingTax: \"93.60\",\n    source: \"TRONWEB\"\n  },{\n    policyHolder: \"BRYANT, KOBE\",\n    policyNumber: \"2001892000783\",\n    currency: \"PHP\",\n    invoiceNumber: 33432,\n    receiptAmount: \"4,605.00\",\n    commissionAmount: \"144.80\",\n    withholdingTax: \"203.00\",\n    source: \"TRONWEB\"\n  },{\n    policyHolder: \"MITCHELL, DONOVAN\",\n    policyNumber: \"2001892000787\",\n    currency: \"PHP\",\n    invoiceNumber: 87687,\n    receiptAmount: \"800.00\",\n    commissionAmount: \"444.80\",\n    withholdingTax: \"405.00\",\n    source: \"TRONWEB\"\n  },{\n    policyHolder: \"ROSE, DERRICK\",\n    policyNumber: \"2001892000788\",\n    currency: \"PHP\",\n    invoiceNumber: 6323,\n    receiptAmount: \"560.00\",\n    commissionAmount: \"44.80\",\n    withholdingTax: \"0.00\",\n    source: \"TRONWEB\"\n  },{\n    policyHolder: \"IRVING, KYRIE\",\n    policyNumber: \"2001892000789\",\n    currency: \"PHP\",\n    invoiceNumber: 132433,\n    receiptAmount: \"5600.00\",\n    commissionAmount: \"4764.80\",\n    withholdingTax: \"6780.00\",\n    source: \"TRONWEB\"\n  }\n];\n\n@Component({\n  selector: 'app-outstanding-bills',\n  templateUrl: './outstanding-bills.component.html',\n  styleUrls: ['./outstanding-bills.component.css']\n})\nexport class OutstandingBillsComponent implements OnInit {\n\n  displayedColumns: string[] = ['policyHolder', 'policyNumber', 'currency', 'invoiceNumber', 'receiptAmount', 'commissionAmount', 'withholdingTax', 'source'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n}\n","export default \"#paymentBreakdown table {\\n  text-align: center !important;\\n  width: 100%;\\n}\\n\\n.header.row {\\n  background: #3a3a3a;\\n  color: #fff;\\n  text-align: center;\\n  padding: 10px 0 0;\\n}\\n\\n#paymentBreakdown .mat-header-cell {\\n  text-align: center;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-dialog-actions {\\n    border-top: 1px solid #e0e0e0;\\n}\\n\\n.breakdown .col-4 {\\n  padding: 10px 0;\\n}\\n\\n.breakdown .col-4.right {\\n  text-align: right;\\n}\\n\\n.clearfix.divider {\\n  border-bottom: 1px solid #e0e0e0;\\n}\\n\\n.show-more {\\n  margin: 10px 0;\\n  padding: 10px 0;\\n  text-align: center;\\n  display: block;\\n  cursor: pointer;\\n}\\n\\n.show-more:hover {\\n  background: #e7e7e7;\\n}\\n\\n.emphasize {\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXltZW50LWJyZWFrZG93bi1tb2RhbC9wYXltZW50LWJyZWFrZG93bi1tb2RhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNkJBQTZCO0VBQzdCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtJQUNJLDZCQUE2QjtBQUNqQzs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3BheW1lbnQtYnJlYWtkb3duLW1vZGFsL3BheW1lbnQtYnJlYWtkb3duLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcGF5bWVudEJyZWFrZG93biB0YWJsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmhlYWRlci5yb3cge1xuICBiYWNrZ3JvdW5kOiAjM2EzYTNhO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAxMHB4IDAgMDtcbn1cblxuI3BheW1lbnRCcmVha2Rvd24gLm1hdC1oZWFkZXItY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1kaWFsb2ctYWN0aW9ucyB7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5icmVha2Rvd24gLmNvbC00IHtcbiAgcGFkZGluZzogMTBweCAwO1xufVxuXG4uYnJlYWtkb3duIC5jb2wtNC5yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uY2xlYXJmaXguZGl2aWRlciB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uc2hvdy1tb3JlIHtcbiAgbWFyZ2luOiAxMHB4IDA7XG4gIHBhZGRpbmc6IDEwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uc2hvdy1tb3JlOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2U3ZTdlNztcbn1cblxuLmVtcGhhc2l6ZSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  Inject\n} from '@angular/core';\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatTableDataSource\n} from '@angular/material';\nimport {\n  SlideInOutAnimation\n} from 'src/app/utils/animation';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n// import {\n//   CarQuoteServices\n// } from 'src/app/services/car-quote.service';\n// import {\n//   TravelIssueServices\n// } from 'src/app/services/travel-issue.service';\n// import {\n//   AccidentIssueServices\n// } from 'src/app/services/accident-issue.service';\nimport {\n  PrintingService\n} from 'src/app/services/printing.service';\nimport {\n  page\n} from 'src/app/constants/page';\n\nexport interface TablesDTO {\n  effectivityDate: string;\n  dueDate: string;\n  premium: number;\n  netPremium: number;\n  tax: number;\n  commission: number;\n}\n\n@Component({\n  selector: 'app-payment-breakdown-modal',\n  templateUrl: './payment-breakdown-modal.component.html',\n  styleUrls: ['./payment-breakdown-modal.component.css'],\n  animations: [SlideInOutAnimation]\n})\nexport class PaymentBreakdownModalComponent implements OnInit {\n\n  constructor(\n    // private cqs: CarQuoteServices,\n    // private tis: TravelIssueServices,\n    // private ais: AccidentIssueServices,\n    private ps: PrintingService,\n    public dialogRef: MatDialogRef < PaymentBreakdownModalComponent > ,\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  payments: any[] = [];\n  number = this.data.number;\n  product = this.data.product;\n  payment = this.data.payment;\n  isPostPolicy = this.data.isPostPolicy;\n  line = this.data.line;\n\n  ngOnInit(): void {\n    this.data.receipt.forEach((receipt) => {\n      var exchangeRate = receipt[\"valCambio\"];\n      var currency = receipt[\"codMon\"];\n      var paymentNumber = receipt[\"numCuota\"];\n\n      var paymentBreakdown = [];\n      this.data.breakdown.forEach((breakdown) => {\n        var breakdownNumber = breakdown[\"numCuota\"];\n        if (breakdownNumber == paymentNumber) {\n          paymentBreakdown.push(breakdown);\n        }\n      });\n\n      var currencyCode = \"PHP\";\n      if (currency == \"2\") {\n        currencyCode = \"USD\";\n      } else if (currency == \"3\") {\n        currencyCode = \"EUR\"\n      }\n\n      var efectivityDate = new Date(receipt[\"fecEfecRecibo\"].substr(0, 10));\n      var dueDate = new Date(receipt[\"fecVctoRecibo\"].substr(0, 10));\n\n      const data: TablesDTO[] = [{\n        effectivityDate: Utility.formatDate(efectivityDate),\n        dueDate: Utility.formatDate(dueDate),\n        premium: receipt[\"impRecibo\"],\n        netPremium: receipt[\"impNeta\"],\n        tax: receipt[\"impImptos\"],\n        commission: receipt[\"impComis\"],\n      }];\n      var dataSource = new MatTableDataSource(data);\n      const obj = {\n        exchangeRate: exchangeRate,\n        currency: currency,\n        paymentNumber: paymentNumber,\n        currencyCode: currencyCode,\n        dataSource: dataSource,\n        displayedColumns: ['effectivityDate', 'dueDate', 'premium', 'netPremium', 'tax', 'commission'],\n        animationState: 'out',\n        showExchangeRate: this.data.showExchangeRate,\n        toggleLabel: 'Show Economic Values',\n        paymentBreakdown: paymentBreakdown\n      };\n      this.payments.push(obj);\n    });\n  }\n\n  toggle(index: number) {\n    this.payments[index].animationState = this.payments[index].animationState === 'out' ? 'in' : 'out';\n    this.payments[index].toggleLabel = (this.payments[index].animationState === 'out' ? 'Show' : 'Hide') + ' Economic Values';\n  }\n\n  close(b: boolean): void {\n    this.dialogRef.close(b);\n  }\n\n  printPolicy() {\n    this.ps.printPolicy(this.data.number);\n  }\n\n  printQuote() {\n    this.ps.printQuote(this.data.number);\n  }\n\n  proceedToIssuance(line: string) {\n    this.dialogRef.close(false);\n    if (line == \"CAR\") {\n      // this.cqs.proceedToIssuance(this.data.number);\n      this.ps.proceedToIssuance(this.data.number, page.ISS.CAR);\n    } else if (line == \"TRAVEL\") {\n      // this.tis.proceedToIssuance(this.data.number);\n      this.ps.proceedToIssuance(this.data.number, page.ISS.TRA);\n    } else if (line == \"ACCIDENT\") {\n      // this.ais.proceedToIssuance(this.data.number);\n      this.ps.proceedToIssuance(this.data.number, page.ISS.ACC);\n    } else if (line == \"HOME\") {\n      this.ps.proceedToIssuance(this.data.number, page.ISS.HOM);\n    }\n  }\n\n}","export default \"#paymentBreakdown table {\\n  text-align: center !important;\\n  width: 100%;\\n}\\n\\n#paymentBreakdown .mat-header-cell {\\n  text-align: center;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.breakdown .col-4 {\\n  padding: 10px 0;\\n}\\n\\n.breakdown .col-4.right {\\n  text-align: right;\\n}\\n\\n.clearfix.divider {\\n  border-bottom: 1px solid #e0e0e0;\\n}\\n\\n.show-more {\\n  margin: 10px 0;\\n  padding: 10px 0;\\n  text-align: center;\\n  display: block;\\n  cursor: pointer;\\n}\\n\\n.show-more:hover {\\n  background: #e7e7e7;\\n}\\n\\n.emphasize {\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXltZW50LWJyZWFrZG93bi9wYXltZW50LWJyZWFrZG93bi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNkJBQTZCO0VBQzdCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3BheW1lbnQtYnJlYWtkb3duL3BheW1lbnQtYnJlYWtkb3duLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcGF5bWVudEJyZWFrZG93biB0YWJsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xuICB3aWR0aDogMTAwJTtcbn1cblxuI3BheW1lbnRCcmVha2Rvd24gLm1hdC1oZWFkZXItY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLmJyZWFrZG93biAuY29sLTQge1xuICBwYWRkaW5nOiAxMHB4IDA7XG59XG5cbi5icmVha2Rvd24gLmNvbC00LnJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5jbGVhcmZpeC5kaXZpZGVyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5zaG93LW1vcmUge1xuICBtYXJnaW46IDEwcHggMDtcbiAgcGFkZGluZzogMTBweCAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5zaG93LW1vcmU6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZTdlN2U3O1xufVxuXG4uZW1waGFzaXplIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNjAwO1xufVxuIl19 */\";","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  SlideInOutAnimation\n} from '../../utils/animation';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\nexport interface TablesDTO {\n  effectivityDate: string;\n  dueDate: string;\n  premium: number;\n  netPremium: number;\n  tax: number;\n  commission: number;\n}\n\n@Component({\n  selector: 'app-payment-breakdown',\n  templateUrl: './payment-breakdown.component.html',\n  styleUrls: ['./payment-breakdown.component.css'],\n  animations: [SlideInOutAnimation]\n})\nexport class PaymentBreakdownComponent implements OnInit {\n  @Input() paymentBreakdown: any[];\n  @Input() paymentReceipt: any[];\n  @Input() showExchangeRate: boolean;\n  @Input()\n  set loadBreakdown(value: number) {\n    this.triggerCounter = value;\n    this.generateBreakdown();\n  }\n\n  payments: any[] = [];\n  triggerCounter: number;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.generateBreakdown();\n  }\n\n  generateBreakdown() {\n    this.payments = [];\n    this.paymentReceipt.forEach((receipt)=>{\n      var exchangeRate = receipt[\"valCambio\"];\n      var currency = receipt[\"codMon\"];\n      var paymentNumber = receipt[\"numCuota\"];\n\n      var paymentBreakdown = [];\n      this.paymentBreakdown.forEach((breakdown)=>{\n        var breakdownNumber = breakdown[\"numCuota\"];\n        if (breakdownNumber == paymentNumber) {\n          paymentBreakdown.push(breakdown);\n        }\n      });\n\n      var currencyCode = \"PHP\";\n      if (currency == \"2\") {\n        currencyCode = \"USD\";\n      } else if (currency == \"3\") {\n        currencyCode = \"EUR\"\n      }\n  \n      var efectivityDate = new Date(receipt[\"fecEfecRecibo\"].substr(0, 10));\n      var dueDate = new Date(receipt[\"fecVctoRecibo\"].substr(0, 10));\n  \n      const data: TablesDTO[] = [{\n        effectivityDate: Utility.formatDate(efectivityDate),\n        dueDate: Utility.formatDate(dueDate),\n        premium: receipt[\"impRecibo\"],\n        netPremium: receipt[\"impNeta\"],\n        tax: receipt[\"impImptos\"],\n        commission: receipt[\"impComis\"],\n      }];\n      var dataSource = new MatTableDataSource(data);\n      const obj = {\n        exchangeRate: exchangeRate,\n        currency: currency,\n        paymentNumber: paymentNumber,\n        currencyCode: currencyCode,\n        dataSource: dataSource,\n        displayedColumns: ['effectivityDate', 'dueDate', 'premium', 'netPremium', 'tax', 'commission'],\n        animationState: 'out',\n        showExchangeRate: this.showExchangeRate,\n        toggleLabel: 'Show Economic Values',\n        paymentBreakdown: paymentBreakdown\n      };\n      this.payments.push(obj);\n    });\n  }\n\n  toggle(index: number) {\n    this.payments[index].animationState = this.payments[index].animationState === 'out' ? 'in' : 'out';\n    this.payments[index].toggleLabel = (this.payments[index].animationState === 'out' ? 'Show' : 'Hide') + ' Economic Values';\n  }\n\n}","export default \".btn-group {\\n  float: right !important;\\n}\\n\\nform .required.readonly {\\n  border-left: 6px solid #7e7e7e !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wb2xpY3ktaG9sZGVyL3BvbGljeS1ob2xkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLHlDQUF5QztBQUMzQyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcG9saWN5LWhvbGRlci9wb2xpY3ktaG9sZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWdyb3VwIHtcbiAgZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7XG59XG5cbmZvcm0gLnJlcXVpcmVkLnJlYWRvbmx5IHtcbiAgYm9yZGVyLWxlZnQ6IDZweCBzb2xpZCAjN2U3ZTdlICFpbXBvcnRhbnQ7XG59Il19 */\";","import {\n  Component,\n  OnInit,\n  Input,\n  ViewChild,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  MatTableDataSource,\n  MatPaginator,\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  ThirdPartyService\n} from 'src/app/services/third-party.service';\nimport {\n  CreateThirdPartyComponent\n} from '../create-third-party/create-third-party.component';\nimport {\n  CarLOVServices\n} from 'src/app/services/lov/car.service';\n\n@Component({\n  selector: 'app-policy-holder',\n  templateUrl: './policy-holder.component.html',\n  styleUrls: ['./policy-holder.component.css']\n})\nexport class PolicyHolderComponent implements OnInit {\n  @Input() title: String;\n  @Input() showCreateBtn: boolean;\n  @Input() policyHolder: PolicyHolder;\n  @Input() compareTo: PolicyHolder;\n  @Input() details: any;\n  @Input() isIssuance: boolean;\n  @Input() type: String;\n  @Input() optional: boolean;\n  @Input() editMode: boolean;\n  @Input() showPrefix: boolean = true;\n  @Input()\n  set loadQuotation(value: number) {\n    this.triggerCounter = value;\n    if (!Utility.isUndefined(this.policyHolder.documentCode)) {\n      this.phForm.get('documentType').markAsDirty();\n      this.phForm.get('documentCode').markAsDirty();\n    }\n  }\n\n  @Output() policyHolderChange = new EventEmitter < PolicyHolder > ();\n  \n  _details: any;\n  triggerCounter: number;\n\n  displayedColumns: string[] = ['documentType', 'firstName', 'middleName', 'lastName', 'address', 'action'];\n  source: any[] = [];\n  dataSource = new MatTableDataSource(this.source);\n\n  @ViewChild(MatPaginator, {\n    static: false\n  }) paginator: MatPaginator;\n\n  phForm: FormGroup;\n  searchForm: FormGroup;\n\n  //for optional content\n  showContent: boolean;\n\n  showSearch: boolean = false;\n  showSearchResult: boolean = false;\n\n  policyHolderType: string;\n  firstName: string;\n  lastName: string;\n  showLastName: boolean = true;\n\n  firstNameLabel: string = \"First Name\";\n  firstNameError: string = \"first name\";\n\n  prefixLOV: any[];\n  separatorLOV: any[];\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private bms: BsModalService,\n    private tps: ThirdPartyService,\n    private cls: CarLOVServices,\n    public dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    this.createForm();\n    this.setValidations();\n    this.showContent = !this.optional;\n\n    if (this.isIssuance) {\n      //can only search company/organization if type is mortgagee\n      this.policyHolderType = this.type == 'mortgagee' ? 'C' : 'P';\n\n      if (this.type == 'secondary') {\n        var _this = this;\n        this.cls.getPHPrefix().then(res => {\n          _this.prefixLOV = res;\n        });\n        this.cls.getPHSeparator().then(res => {\n          _this.separatorLOV = res;\n        });\n      }\n    }\n  }\n\n  createForm() {\n    if (this.isIssuance) {\n      this.phForm = this.fb.group({\n        documentCode: this.optional ? [null] : ['', Validators.required],\n        documentType: this.optional ? [null] : ['', Validators.required],\n        secondaryPolicyHolderPrefix: [null],\n        secondaryPolicyHolderSeparator: [null]\n      });\n    } else {\n      this.phForm = this.fb.group({\n        name: ['', Validators.required],\n      });\n    }\n\n    this.searchForm = this.fb.group({\n      policyHolderType: [null],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n    });\n  }\n\n  setValidations() {\n    var policyHolderType = this.searchForm.get('policyHolderType');\n    var lastName = this.searchForm.get('lastName');\n\n    policyHolderType.valueChanges.subscribe(type => {\n      this.showLastName = type == \"P\";\n      this.firstNameLabel = type == \"P\" ? \"First Name\" : \"Company/Organization\";\n      this.firstNameError = this.firstNameLabel.toLowerCase();\n      Utility.updateValidator(lastName, type == \"P\" ? Validators.required : null);\n    });\n  }\n\n  browse() {\n    this.showSearch = true;\n    this.showSearchResult = false;\n  }\n\n  create() {\n    this.showSearch = false;\n    this.showSearchResult = false;\n\n    var label = this.type == 'secondary' ? \"Alternative \" :\n      this.type == 'assignee' ? \"Assignee \" :\n      this.type == 'morgagee' ? \"Mortagee \" : '';\n\n    let title = \"Create \" + label + \"Policy Holder\";\n\n    const modalData = {\n      title: title,\n      policyHolder: this.policyHolder\n    };\n\n    const dialogRef = this.dialog.open(CreateThirdPartyComponent, {\n      width: '1000px',\n      data: modalData\n    });\n\n    dialogRef.afterClosed().subscribe(thirdParty => {\n      // if create button is clicked\n      if (!Utility.isUndefined(thirdParty)) {\n        this.setPolicyHolder(thirdParty);\n      }\n    });\n  }\n\n  clear() {\n    this.showSearch = false;\n    this.showSearchResult = false;\n    this.setPolicyHolder(new PolicyHolder());\n  }\n\n  setPolicyHolder(update: PolicyHolder) {\n    this.policyHolder = update;\n    this.policyHolderChange.emit(this.policyHolder);\n    this.phForm.get('documentType').markAsDirty();\n    this.phForm.get('documentCode').markAsDirty();\n    var id = this.type + '_panel';\n    Utility.scroll(id);\n  }\n\n  searchResult() {\n    this.showSearchResult = false;\n    const isPerson = this.policyHolderType == \"P\";\n    this.lastName = isPerson ? this.lastName : \"\";\n\n    this.tps.getThirdPartyList(1, this.firstName, this.lastName).then((res) => {\n      if (res.status) {\n        this.source = res.obj as[];\n        if (this.source.length) {\n          this.showSearchResult = true;\n          this.dataSource = new MatTableDataSource(this.source);\n          setTimeout(() => {\n            this.dataSource.paginator = this.paginator;\n          }, 100);\n        } else {\n          var completeName = isPerson ? this.firstName + \" \" + this.lastName : this.firstName;\n          this.modalRef = Utility.showInfo(this.bms, \"No results for \" + completeName);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  enableAddBtn(event: any, input: HTMLInputElement) {\n    var val = event.target.value;\n    input.disabled = Utility.isEmpty(val);\n  }\n\n  add(row: any, input ? : HTMLInputElement) {\n    if (Utility.isUndefined(input) || row.codDocum == input.value) {\n      if (!Utility.isUndefined(this.compareTo) &&\n        (this.type == 'primary' || this.type == 'assignee') &&\n        this.compareTo.documentCode == row.codDocum &&\n        this.compareTo.documentType == row.tipDocum) {\n        // preventing user to choose same policy holder for both primary and assignee\n        this.modalRef = Utility.showWarning(this.bms, \"Policy Holder and Assignee can not be the same, choose or create a new one.\");\n      } else {\n        this.showSearch = false;\n        this.showSearchResult = false;\n\n        this.policyHolder.isExisting = true;\n        this.policyHolder.isPerson = this.policyHolderType == \"P\";\n        this.policyHolder.documentCode = row.codDocum;\n        this.policyHolder.documentType = row.tipDocum;\n        this.policyHolder.firstName = this.firstName;\n        this.policyHolder.lastName = this.lastName;\n\n        this.setPolicyHolder(this.policyHolder);\n      }\n    } else {\n      var completeName = this.policyHolderType == \"P\" ? this.firstName + \" \" + this.lastName : this.firstName;\n      this.modalRef = Utility.showError(this.bms, \"Incorrect document code entered for \" + completeName);\n    }\n  }\n}\n\n// for testing\nconst thirdPartyList: any[] = [{\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"P99999\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"MANILA\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"P00000000\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"MAKATI CITY\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"DRI\",\n  \"codDocum\": \"DRI-77777\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"BUENAVISTA\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"P77777\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"SANTO TOMAS\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"P1232131\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"MANGALDAN\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"P1111111\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"MANILA\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"231123\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"MAKATI CITY\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"9876111\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"MAKATI CITY\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"TIN\",\n  \"codDocum\": \"441-724-648-000\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"LAS PIÑAS CITY\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"02-3499027-4\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"LAS PIÑAS CITY\",\n  \"codActTercero\": \"1\"\n}];\n\nconst coverageList: any[] = [{\n  \"MCA_TIP_CAPITAL\": \"4\",\n  \"MCA_OBLIGATORIO\": \"N\",\n  \"COD_COB\": \"1001\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"COMP. THIRD PAR. LIAB.\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1100\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"LOSS AND DAMAGE\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1002\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"OWN DAMAGE\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1003\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"THEFT\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"4\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1004\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"VTPL-BODILY INJURY\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"4\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1005\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"VTPL-PROPERTY DAMAGE\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1007\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"UNNAMED PASS. P.A.\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1008\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"ACTS OF NATURE\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"N\",\n  \"COD_COB\": \"1020\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"STRIKE AND RIOTS\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"4\",\n  \"MCA_OBLIGATORIO\": \"N\",\n  \"COD_COB\": \"1026\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"ACCD'L DEATH/DISABL.\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"\",\n  \"MCA_OBLIGATORIO\": \"N\",\n  \"COD_COB\": \"1040\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"ROAD ASSIST\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"N\",\n  \"COD_COB\": \"1029\",\n  \"IMP_CALCULO\": \"360\",\n  \"NOM_COB\": \"ROAD ASSIST 100\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"\",\n  \"MCA_OBLIGATORIO\": \"N\",\n  \"COD_COB\": \"1027\",\n  \"IMP_CALCULO\": \"500\",\n  \"NOM_COB\": \"MAPFRE ROAD ASSIST\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"4\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1036\",\n  \"IMP_CALCULO\": \"1\",\n  \"NOM_COB\": \"PERSONAL PROPERTY COVER\"\n}];","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  AuthenticationService\n} from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  currentUser = this.authenticationService.currentUserValue;\n  changePasswordForm: FormGroup;\n  constructor(private fb: FormBuilder,\n    private authenticationService: AuthenticationService) {\n    this.createChangePasswordForm();\n  }\n\n  createChangePasswordForm() {\n    this.changePasswordForm = this.fb.group({\n      oldPassword: ['', Validators.required],\n      newPassword: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVlcnkvcXVlcnkuY29tcG9uZW50LmNzcyJ9 */\";","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\nimport {\n  UtilitiesQueryFilter\n} from '../../objects/UtilitiesQueryFilter';\nimport {\n  UtilityQueryService\n} from 'src/app/services/utility-query.service';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  MIVO_LOGIN\n} from \"../../constants/local.storage\";\n\n@Component({\n  selector: 'app-query',\n  templateUrl: './query.component.html',\n  styleUrls: ['./query.component.css']\n})\nexport class QueryComponent implements OnInit {\n  selectedOption = 'policy';\n  optPlaceholder = 'Policy Number';\n  filter: UtilitiesQueryFilter = new UtilitiesQueryFilter();\n  modalRef: BsModalRef;\n\n  @ViewChild('inputVal') inputVal: ElementRef;\n\n  constructor(\n    private utilityQueryService: UtilityQueryService,\n    private bms: BsModalService, ) {}\n\n  ngOnInit() {}\n\n  search() {\n    if (this.inputVal.nativeElement.value === '') {\n      this.modalRef = Utility.showError(this.bms, 'Search value is empty.');\n    } else {\n      const userName = JSON.parse(localStorage.getItem(MIVO_LOGIN)).username\n\n      if (userName != null) {\n        this.filter.userName = userName\n        this.filter.param = this.inputVal.nativeElement.value;\n        this.filter.inquiryType = this.selectedOption === 'policy' ? 'GETPOLICYDETAILS' : 'GETCLAIMDETAILS';\n        this.filter.paramName = this.selectedOption;\n\n        this.utilityQueryService.getSearchResult(this.filter).then((res) => {\n          if (res) {\n            const jsonData = JSON.parse(JSON.stringify(res));\n            window.open(jsonData.obj, '_blank');\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, 'No login credentials found!');\n      }\n    }\n  }\n\n  onSelectOption(opt: string) {\n    this.optPlaceholder = (opt === 'policy' ? 'Policy Number' : 'Claim Number');\n  }\n\n}\n","export default \".additional-accident-details,\\n.acci-spa,\\n.acci-hcbi {\\n  width: 100%;\\n}\\n\\n.mat-row:hover {\\n  background: azure;\\n  cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdWljay1xdW90YXRpb24tYWNjaWRlbnQvcXVpY2stcXVvdGF0aW9uLWFjY2lkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztFQUdFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9xdWljay1xdW90YXRpb24tYWNjaWRlbnQvcXVpY2stcXVvdGF0aW9uLWFjY2lkZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRkaXRpb25hbC1hY2NpZGVudC1kZXRhaWxzLFxuLmFjY2ktc3BhLFxuLmFjY2ktaGNiaSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LXJvdzpob3ZlciB7XG4gIGJhY2tncm91bmQ6IGF6dXJlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iXX0= */\";","import {\n  Component,\n  OnInit,\n  Input,\n  AfterViewChecked,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  AccidentListObject\n} from 'src/app/objects/LOV/accidentList';\nimport {\n  QuickQuoteService\n} from '../../services/quickquote.service';\nimport {\n  AccidentLOVServices\n} from '../../services/lov/accident.service'\nimport {\n  Accident\n} from 'src/app/objects/Accident';\n\nexport interface QuickQuoteResultDTO {\n  label: string;\n  premium: string;\n  product: number;\n  isHeader: boolean;\n  exclude: boolean;\n}\n\n@Component({\n  selector: 'app-quick-quotation-accident',\n  templateUrl: './quick-quotation-accident.component.html',\n  styleUrls: ['./quick-quotation-accident.component.css']\n})\n\nexport class QuickQuotationAccidentComponent implements OnInit, AfterViewChecked {\n  accidentDetails = new Accident();\n  LOV = new AccidentListObject();\n  quickQuoteForm: FormGroup;\n\n  showDetails: boolean = false;\n  showSPADetails: boolean = false;\n  showHCBIDetails: boolean = false;\n\n  displayedColumns: string[] = ['label', 'premium'];\n\n  accidentData: Array < QuickQuoteResultDTO > = [];\n  coverageData: Array < QuickQuoteResultDTO > = [];\n  coverageList: any[];\n\n  //flag to display product comparison\n  showProductComparison: boolean = false;\n  //flag to display product coverage\n  showProductCoverage: boolean = false;\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private qqs: QuickQuoteService,\n    private als: AccidentLOVServices,\n    private changeDetector: ChangeDetectorRef,\n    private bms: BsModalService\n  ) {\n    this.createQuickQuoteForm();\n    this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    var _this = this;\n    this.als.getSubline().then(res => {\n      _this.LOV.sublineLOV = res;\n    });\n\n    this.getAge();\n    this.getChildNumber();\n  }\n\n  createQuickQuoteForm() {\n    this.quickQuoteForm = this.fb.group({\n      subline: ['', Validators.required],\n      occupationalClass: ['', Validators.required],\n      disablementValue: ['', [Validators.required, Validators.max(2000000), Validators.min(10000)]],\n      primaryInsuredAge: ['', Validators.required],\n      cbSpouseAge: [null],\n      spouseAge: ['', Validators.required],\n      cbChildNumber: [null],\n      childNumber: ['', Validators.required]\n    });\n  }\n\n  setValidations() {\n    var _this = this;\n    var occupationalClass = this.quickQuoteForm.get('occupationalClass');\n    var disablementValue = this.quickQuoteForm.get('disablementValue');\n    var primaryInsuredAge = this.quickQuoteForm.get('primaryInsuredAge');\n    var spouseAge = this.quickQuoteForm.get('spouseAge');\n    var cbSpouseAge = this.quickQuoteForm.get('cbSpouseAge');\n    var childNumber = this.quickQuoteForm.get('childNumber');\n    var cbChildNumber = this.quickQuoteForm.get('cbChildNumber');\n\n    this.quickQuoteForm.get('subline').valueChanges.subscribe(subline => {\n      this.accidentDetails.subline = subline;\n      this.showDetails = false;\n      this.showSPADetails = false;\n      this.showHCBIDetails = false;\n\n      //removing required validation\n      Utility.updateValidator(occupationalClass, null);\n      Utility.updateValidator(disablementValue, null);\n      Utility.updateValidator(primaryInsuredAge, null);\n      Utility.updateValidator(spouseAge, null);\n      Utility.updateValidator(childNumber, null);\n\n      if (subline == 323) { //standard personal accident\n        this.showDetails = true;\n        this.showSPADetails = true;\n        Utility.updateValidator(occupationalClass, [Validators.required]);\n        Utility.updateValidator(disablementValue, [Validators.required, Validators.max(2000000), Validators.min(10000)]);\n        this.als.getOccupationalClass(this.accidentDetails).then(res => {\n          _this.LOV.occupationalClassLOV = res;\n        });\n      } else if (subline == 326) { //hospital cash benefit\n        this.showDetails = true;\n        this.showHCBIDetails = true;\n        Utility.updateValidator(primaryInsuredAge, [Validators.required]);\n        Utility.updateValidator(spouseAge, cbSpouseAge.value === true ? [Validators.required] : null);\n        Utility.updateValidator(childNumber, cbChildNumber.value === true ? [Validators.required] : null);\n      }\n    });\n\n    cbSpouseAge.valueChanges.subscribe(checked => {\n      this.accidentDetails.spouseAge = Utility.setNull(checked, this.accidentDetails.spouseAge);\n      Utility.updateValidator(spouseAge, checked === true ? [Validators.required] : null);\n    });\n\n    cbChildNumber.valueChanges.subscribe(checked => {\n      this.accidentDetails.childNumber = Utility.setNull(checked, this.accidentDetails.childNumber);\n      Utility.updateValidator(childNumber, checked === true ? [Validators.required] : null);\n    });\n  }\n\n  createQuickQuoteData(quickQuoteDetails: any[], productList: any[]) {\n    this.accidentData = [];\n    productList.forEach(a => {\n      quickQuoteDetails.forEach(b => {\n        if (a.numSimulacion === b.numSimulacion) {\n          var obj = {} as QuickQuoteResultDTO;\n          obj.label = a.nomSimulacion;\n          obj.premium = b.impRecibo;\n          obj.product = b.numSimulacion;\n          this.accidentData.push(obj);\n        }\n      });\n    });\n  }\n\n  getAge() {\n    this.LOV.ageLOV = [{\n      value: 20,\n      name: \"18-29\"\n    }, {\n      value: 32,\n      name: \"30-29\"\n    }, {\n      value: 42,\n      name: \"40-49\"\n    }, {\n      value: 52,\n      name: \"50-59\"\n    }, {\n      value: 62,\n      name: \"60-65\"\n    }];\n  }\n\n  getChildNumber() {\n    this.LOV.childNumberLOV = [{\n      value: 1,\n      name: \"1\"\n    }, {\n      value: 2,\n      name: \"2\"\n    }, {\n      value: 3,\n      name: \"3\"\n    }, {\n      value: 4,\n      name: \"4\"\n    }];\n  }\n\n  generateCoverage(row: QuickQuoteResultDTO) {\n    this.coverageData = [];\n    var headers = [340];\n    var exclude = [9998];\n    this.coverageList.forEach(coverage => {\n      var obj = {} as QuickQuoteResultDTO;\n      if (coverage.numSimulacion == row.product) {\n        var code = parseInt(coverage.codCob);\n        obj.isHeader = headers.indexOf(code) !== -1;\n        // bolder label if it is a header\n        obj.label = obj.isHeader ? '<strong>' + coverage.nomCob + '</strong>' : coverage.nomCob;\n        obj.premium = coverage.sumaAseg;\n        // excluded rows\n        if (exclude.indexOf(code) == -1) {\n          this.coverageData.push(obj);\n        }\n      }\n    });\n\n    // displaying product coverage\n    this.showProductCoverage = true;\n    setTimeout(() => {\n      Utility.scroll('productCoverage');\n    }, 500);\n  }\n\n  quickQuote(accidentDetails: Accident) {\n    this.qqs.quickQuoteAccident(accidentDetails).then(res => {\n      if (!Utility.isUndefined(res)) {\n        if (res.status) {\n          var quickQuoteDetails = res.obj[\"quickQuoteDetails\"];\n          var productList = res.obj[\"productList\"];\n          this.coverageList = res.obj[\"coverage\"];\n          // generates quick quote accident details\n          this.createQuickQuoteData(quickQuoteDetails, productList);\n          // hiding product coverage\n          this.showProductCoverage = false;\n          // displaying product comparison\n          this.showProductComparison = true;\n          setTimeout(() => {\n            Utility.scroll('productComparison');\n          });\n        } else {\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      }\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVpY2stcXVvdGF0aW9uLWNhci9xdWljay1xdW90YXRpb24tY2FyLmNvbXBvbmVudC5jc3MifQ== */\";","import {\n  Component,\n  OnInit,\n  AfterViewChecked,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  Car\n} from '../../objects/Car';\nimport {\n  CarListObject\n} from 'src/app/objects/LOV/carList';\nimport {\n  QuickQuoteService\n} from '../../services/quickquote.service';\nimport {\n  CarUtilityServices\n} from '../../services/car-utility.service';\nimport {\n  CarLOVServices\n} from '../../services/lov/car.service';\n\nexport interface QuickQuoteResultDTO {\n  label: string;\n  compre: string;\n  ctpl: string;\n  autoCompre: string;\n  autoComprePlus: string;\n  autoLiabilityRegular: string;\n  autoLiabilitySelect: string;\n  autoSelect: string;\n}\n\n@Component({\n  selector: 'app-quick-quotation-car',\n  templateUrl: './quick-quotation-car.component.html',\n  styleUrls: ['./quick-quotation-car.component.css']\n})\n\nexport class QuickQuotationCarComponent implements OnInit, AfterViewChecked {\n  carDetails = new Car();\n  LOV = new CarListObject();\n  quickQuoteForm: FormGroup;\n\n  showAutoSelect = true;\n\n  displayedColumns: string[] = [\n    'label',\n    'compre',\n    'ctpl',\n    'autoCompre',\n    'autoComprePlus',\n    'autoLiabilityRegular',\n    'autoLiabilitySelect',\n    'autoSelect'\n  ];\n\n  annualData: Array < QuickQuoteResultDTO > = [];\n  plan30Data: Array < QuickQuoteResultDTO > = [];\n  plan60Data: Array < QuickQuoteResultDTO > = [];\n  plan90Data: Array < QuickQuoteResultDTO > = [];\n  coveragelist: Array < QuickQuoteResultDTO > = [];\n  \n  vehicleValue: any;\n\n  //flag to display product comparison and coverage\n  showProductComparison: boolean = false;\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private cus: CarUtilityServices,\n    private qqs: QuickQuoteService,\n    private cls: CarLOVServices,\n    private changeDetector: ChangeDetectorRef,\n    private bms: BsModalService\n  ) {\n    this.createQuickQuoteForm();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    var _this = this;\n    this.cls.getMakeList().then(res => {\n      _this.LOV.makeLOV = res;\n    });\n  }\n\n  createQuickQuoteForm() {\n    this.quickQuoteForm = this.fb.group({\n      make: ['', Validators.required],\n      model: ['', Validators.required],\n      vehicleType: ['', Validators.required],\n      modelYear: ['', Validators.required],\n      subModel: ['', Validators.required],\n      typeOfUse: ['', Validators.required],\n      subline: ['', Validators.required],\n      vehicleValue: ['', Validators.required],\n    });\n  }\n\n  //getting the year difference between the current and selected model year\n  getDiff() {\n    var today = new Date();\n    var currentYear = today.getFullYear();\n    return currentYear - parseInt(this.carDetails.modelYear);\n  }\n\n  createObj(name: String, value: String, installment: String, product: number) {\n    var diff = this.getDiff();\n\n    //set value to 0 if conditions meets\n    if (product != 1 && name == '2') {\n      value = \"0\";\n    } else if ((name == '3' || name == '4') && diff > 8) {\n      value = \"0\";\n    } else if ((name == '1') && diff < 8) {\n      value = \"0\";\n    }\n\n    return {\n      'name': name,\n      'value': value,\n      'installment': installment,\n      'product': product\n    };\n  }\n\n  createQuickQuoteData(quickQuoteDetails: any[], products: any[], productList: any[]) {\n    this.annualData = [];\n    this.plan30Data = [];\n    this.plan60Data = [];\n    this.plan90Data = [];\n    var annual = [];\n    var plan30 = [];\n    var plan60 = [];\n    var plan90 = [];\n    productList.forEach(a => {\n      quickQuoteDetails.forEach(b => {\n        products.forEach(c => {\n          if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"1\" && b.numSimulacion === c.numSimulacion) {\n            annual.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 1));\n          } else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"30\" && b.numSimulacion === c.numSimulacion) {\n            if (b.numCuota === \"1\") {\n              plan30.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 30));\n            } else if (b.numCuota === \"2\") {\n              plan30.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 30));\n            }\n          } else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"60\" && b.numSimulacion === c.numSimulacion) {\n            if (b.numCuota === \"1\") {\n              plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));\n            } else if (b.numCuota === \"2\") {\n              plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));\n            } else if (b.numCuota === \"3\") {\n              plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));\n            }\n          } else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"90\" && b.numSimulacion === c.numSimulacion) {\n            if (b.numCuota === \"1\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            } else if (b.numCuota === \"2\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            } else if (b.numCuota === \"3\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            } else if (b.numCuota === \"4\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            }\n          }\n        });\n      });\n    });\n\n    this.annualData.push(this.createQQResultDTO(annual, '1', true));\n    this.annualData.push(this.getInstallmentTotal(plan30));\n\n    this.plan30Data.push(this.createQQResultDTO(plan30, '1'));\n    this.plan30Data.push(this.createQQResultDTO(plan30, '2'));\n\n    this.plan60Data.push(this.createQQResultDTO(plan60, '1'));\n    this.plan60Data.push(this.createQQResultDTO(plan60, '2'));\n    this.plan60Data.push(this.createQQResultDTO(plan60, '3'));\n\n    this.plan90Data.push(this.createQQResultDTO(plan90, '1'));\n    this.plan90Data.push(this.createQQResultDTO(plan90, '2'));\n    this.plan90Data.push(this.createQQResultDTO(plan90, '3'));\n    this.plan90Data.push(this.createQQResultDTO(plan90, '4'));\n  }\n\n  createQuickQuoteCoverage(coverage: any[], hasRoadAssist: boolean) {\n    var coverages = [];\n    var diff = this.getDiff();\n    coverage.forEach(cov => {\n      var coverageName = cov.nomCob;\n      var coverageCode = cov.codCob;\n      var product = cov.numSimulacion;\n      var isIncluded = \"N\";\n\n      if (\"S\" == cov.mcaOligatorio) {\n        isIncluded = ((product == 3 || product == 4) && diff > 8) || (product == 1 && diff < 8) ? \"N\" : \"S\";\n      } else if (\"N\" == cov.mcaOligatorio) {\n        if (((product == 3 || product == 4) && diff > 8) || (product == 1 && diff < 8)) {\n          isIncluded = \"N\";\n        } else {\n          if (hasRoadAssist && (coverageCode == \"1040\" || coverageCode == \"1027\" || coverageCode == \"1029\")) {\n            if (coverageCode == \"1040\" && (product != 2 && product != 5 && product != 6)) {\n              isIncluded = \"ODRA\"; //optional disabled ra with check\n            } else {\n              if ((coverageCode == \"1040\" || coverageCode == \"1027\" || coverageCode == \"1029\") &&\n                (product == 2 || product == 5 || product == 6)) {\n                isIncluded = \"ORA\"; //optional ra\n              } else {\n                isIncluded = \"ORA\"; //optional disabled ra without check\n              }\n            }\n          } else {\n            if (coverageCode == '1036' && product == 1) {\n              isIncluded = \"N\";\n            } else if ((coverageCode == \"1004\" || coverageCode == \"1005\") && product == \"1\") {\n              isIncluded = \"O\"; //optional\n            } else {\n              isIncluded = \"O\"; //optional\n            }\n          }\n        }\n      } else {\n        isIncluded = coverageCode == '1018' || coverageCode == '1037' || coverageCode == '1026' ? \"S\" : \"N\";\n      }\n\n      var icon = '';\n      if (isIncluded == \"S\" || isIncluded == \"ODRA\") {\n        icon = \"<i class='far fa-check-circle'></i>\"\n      } else if (isIncluded == \"N\") {\n        icon = \"<i class='far fa-times-circle'></i>\";\n      } else if (isIncluded == \"O\" || isIncluded == \"ORA\") {\n        icon = \"<i class='far fa-circle'></i>\";\n      }\n\n      if (!coverages.includes(coverageName)\n        && coverageName != \"UPPA - MR\"\n        && coverageName != \"ACCD\\'L DEATH/DISABL.\"\n        && coverageName != \"ALTERNATIVE TRANSPORT BENEFIT\") {\n        coverages.push(coverageName);\n        var obj = {} as QuickQuoteResultDTO;\n        obj.label = coverageName;\n        obj.compre = \"<i class='far fa-times-circle'></i>\";\n        obj.ctpl = \"<i class='far fa-times-circle'></i>\";\n        obj.autoCompre = \"<i class='far fa-times-circle'></i>\";\n        obj.autoComprePlus = \"<i class='far fa-times-circle'></i>\";\n        obj.autoLiabilityRegular = \"<i class='far fa-times-circle'></i>\";\n        obj.autoLiabilitySelect = \"<i class='far fa-times-circle'></i>\";\n        obj.autoSelect = \"<i class='far fa-times-circle'></i>\";\n        this.coveragelist.push(obj);\n      }\n\n      this.coveragelist.forEach(c => {\n        if (c.label == coverageName) {\n          if (product == 1) {\n            c.compre = icon;\n          } else if (product == 2) {\n            c.ctpl = icon;\n          } else if (product == 3) {\n            c.autoCompre = icon;\n          } else if (product == 4) {\n            c.autoComprePlus = icon;\n          } else if (product == 5) {\n            c.autoLiabilityRegular = icon;\n          } else if (product == 6) {\n            c.autoLiabilitySelect = icon;\n          } else if (product == 9) {\n            c.autoSelect = icon;\n          }\n        }\n      });\n    });\n  }\n\n  setTotalValue(product: any, value: any) {\n    if (product === undefined) {\n      return value;\n    } else {\n      var x = parseFloat(product);\n      var y = parseFloat(value);\n      return (x + y).toString();\n    }\n  }\n\n  getInstallmentTotal(arr: any[]) {\n    var obj = {} as QuickQuoteResultDTO;\n    // initial values for products\n    obj.compre = \"0\";\n    obj.ctpl = \"0\";\n    obj.autoCompre = \"0\";\n    obj.autoComprePlus = \"0\";\n    obj.autoLiabilityRegular = \"0\";\n    obj.autoLiabilitySelect = \"0\";\n    obj.autoSelect = \"0\";\n    obj.label = \"Installment\";\n\n    arr.forEach((a: any) => {\n      var product = a[\"name\"];\n      var value = a[\"value\"];\n      if (product == 1) {\n        obj.compre = this.setTotalValue(obj.compre, value);\n      } else if (product == 2) {\n        obj.ctpl = this.setTotalValue(obj.ctpl, value);\n      } else if (product == 3) {\n        obj.autoCompre = this.setTotalValue(obj.autoCompre, value);\n      } else if (product == 4) {\n        obj.autoComprePlus = this.setTotalValue(obj.autoComprePlus, value);\n      } else if (product == 5) {\n        obj.autoLiabilityRegular = this.setTotalValue(obj.autoLiabilityRegular, value);\n      } else if (product == 6) {\n        obj.autoLiabilitySelect = this.setTotalValue(obj.autoLiabilitySelect, value);\n      } else if (product == 9) {\n        obj.autoSelect = this.setTotalValue(obj.autoSelect, value);\n      }\n    });\n    return obj;\n  }\n\n  createQQResultDTO(arr: any[], installment: String, isAnnual ? : boolean) {\n    var obj = {} as QuickQuoteResultDTO;\n    // initiate values for products\n    obj.compre = \"0\";\n    obj.ctpl = \"0\";\n    obj.autoCompre = \"0\";\n    obj.autoComprePlus = \"0\";\n    obj.autoLiabilityRegular = \"0\";\n    obj.autoLiabilitySelect = \"0\";\n    obj.autoSelect = \"0\";\n\n    if (installment == '1') {\n      obj.label = isAnnual ? 'Annual' : '1st Installment';\n    } else if (installment == '2') {\n      obj.label = '2nd Installment';\n    } else if (installment == '3') {\n      obj.label = '3rd Installment';\n    } else if (installment == '4') {\n      obj.label = '4th Installment';\n    }\n\n    arr.forEach((a: any) => {\n      var price = a[\"value\"];\n      var product = a[\"name\"];\n      if (a[\"installment\"] == installment) {\n        if (product == 1) {\n          obj.compre = price;\n        } else if (product == 2) {\n          obj.ctpl = price;\n        } else if (product == 3) {\n          obj.autoCompre = price;\n        } else if (product == 4) {\n          obj.autoComprePlus = price;\n        } else if (product == 5) {\n          obj.autoLiabilityRegular = price;\n        } else if (product == 6) {\n          obj.autoLiabilitySelect = price;\n        } else if (product == 9) {\n          obj.autoSelect = price;\n        }\n      }\n    });\n    return obj;\n  }\n\n  clearRiskDetails(level: number, type ? : boolean) {\n    if (level <= 1) { //if user changes car make\n      this.LOV.modelLOV = [];\n      this.carDetails.model = undefined;\n      this.quickQuoteForm.get('model').reset();\n    }\n    if (level <= 2) { //if user changes car model\n      this.LOV.vehicleTypeLOV = [];\n      this.carDetails.vehicleType = undefined;\n      this.quickQuoteForm.get('vehicleType').reset();\n    }\n    if (level <= 3) { //if user changes vehicle type\n      this.LOV.modelYearLOV = [];\n      this.carDetails.modelYear = undefined;\n      this.quickQuoteForm.get('modelYear').reset();\n    }\n    if (level <= 4) { //if user changes car model year\n      this.LOV.subModelLOV = [];\n      this.LOV.typeOfUseLOV = [];\n      this.carDetails.subModel = undefined;\n      this.carDetails.typeOfUse = undefined;\n      this.quickQuoteForm.get('subModel').reset();\n      this.quickQuoteForm.get('typeOfUse').reset();\n    }\n    if (level <= 5) { //if user changes car sub model or type of use\n      if (level == 5) {\n        if (type) {\n          //if user changes type of use\n          this.LOV.sublineLOV = [];\n          this.carDetails.subline = undefined;\n          this.quickQuoteForm.get('subline').reset();\n        } else {\n          //if user changes sub model\n          this.carDetails.vehicleValue = undefined;\n          this.quickQuoteForm.get('vehicleValue').reset();\n        }\n      } else {\n        //if level is below 5, subline and vehicle value will reset\n        this.LOV.sublineLOV = [];\n        this.carDetails.subline = undefined;\n        this.carDetails.vehicleValue = undefined;\n        this.quickQuoteForm.get('subline').reset();\n        this.quickQuoteForm.get('vehicleValue').reset();\n      }\n    }\n  }\n\n  makeOnchange() {\n    this.clearRiskDetails(1);\n    var _this = this;\n    this.cls.getModelList(this.carDetails).then(res => {\n      _this.LOV.modelLOV = res;\n    });\n  }\n\n  modelOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(2);\n    this.carDetails.make = _carDetails.make;\n\n    var _this = this;\n    this.cls.getVehicleTypeList(this.carDetails).then(res => {\n      _this.LOV.vehicleTypeLOV = res;\n    });\n  }\n\n  vehicleTypeOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(3);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n\n    if (this.carDetails.vehicleType > 0) {\n      var _this = this;\n      this.cls.getModelYearList(this.carDetails).then(res => {\n        _this.LOV.modelYearLOV = res;\n      });\n    }\n  }\n\n  modelYearOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(4);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n    this.carDetails.vehicleType = _carDetails.vehicleType;\n\n    if (this.carDetails.modelYear != '') {\n      var _this = this;\n      this.cls.getSubModelList(this.carDetails).then(res => {\n        _this.LOV.subModelLOV = res;\n      });\n      this.cls.getTypeOfUseList(this.carDetails).then(res => {\n        _this.LOV.typeOfUseLOV = res;\n      });\n    }\n  }\n\n  subModelOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(5, false);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n    this.carDetails.vehicleType = _carDetails.vehicleType;\n    this.carDetails.modelYear = _carDetails.modelYear;\n    this.carDetails.subModel = _carDetails.subModel\n    this.carDetails.typeOfUse = _carDetails.typeOfUse;\n    this.carDetails.subline = _carDetails.subline;\n    this.getVehicleValue();\n  }\n\n  typeOfUseOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(5, true);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n    this.carDetails.vehicleType = _carDetails.vehicleType;\n    this.carDetails.modelYear = _carDetails.modelYear;\n    this.carDetails.subModel = _carDetails.subModel\n    this.carDetails.typeOfUse = _carDetails.typeOfUse;\n    this.carDetails.vehicleValue = _carDetails.vehicleValue;\n    this.getSubline();\n  }\n\n  getVehicleValue() {\n    const _this = this;\n    this.cus.getFMV(this.carDetails).then(res => {\n      _this.carDetails.vehicleValue = res.obj[\"fmv\"];\n    });\n  }\n\n  getSubline() {\n    const _this = this;\n    this.cus.getSubline(this.carDetails).then(res => {\n      _this.LOV.sublineLOV = res.obj[\"list\"];\n    });\n  }\n\n  sublineOnchange(event: any) {\n    var options = event.target.options;\n    if (options.length) {\n      //effectivity date is based on selected subline\n      var selectedIndex = event.target.options.selectedIndex;\n      var effectivityDate = event.target.options[selectedIndex].dataset.sublinedate;\n\n      //effectivity date change format\n      var d = moment(effectivityDate, 'DDMMYYYY').format('MMDDYYYY');\n      this.carDetails.sublineEffectivityDate = d.toString();\n    }\n  }\n\n  quickQuote(carDetails: Car) {\n    this.qqs.quickQuoteCar(carDetails).then(res => {\n      if (!Utility.isUndefined(res)) {\n        if (res.status) {\n\n          const currentYear = new Date().getFullYear();\n          let modelYear = 0;\n          try {\n            modelYear = parseInt(carDetails.modelYear);\n          } catch {\n            //do nothing\n          }\n\n          this.showAutoSelect = currentYear - modelYear < 10;\n\n          var quickQuoteDetails = res.obj[\"quickQuoteDetails\"];\n          var productList = res.obj[\"productList\"];\n          var products = res.obj[\"products\"];\n          var coverage = res.obj[\"coverage\"];\n          var hasRoadAssist = res.obj[\"hasRoadAssist\"];\n\n          this.createQuickQuoteData(quickQuoteDetails, productList, products);\n          this.createQuickQuoteCoverage(coverage, hasRoadAssist);\n          this.showProductComparison = true;\n\n          setTimeout(() => {\n            Utility.scroll('productComparison');\n          });\n        } else {\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      }\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVpY2stcXVvdGF0aW9uLWhvbWUvcXVpY2stcXVvdGF0aW9uLWhvbWUuY29tcG9uZW50LmNzcyJ9 */\";","import {\n  Component,\n  OnInit,\n  Input,\n  AfterViewChecked,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  Home\n} from '../../objects/Home';\nimport {\n  HomeListObject\n} from 'src/app/objects/LOV/homeList';\nimport {\n  QuickQuoteService\n} from '../../services/quickquote.service'\nimport {\n  HomeLOVServices\n} from '../../services/lov/home.service'\n\nexport interface QuickQuoteResultDTO {\n  label: string;\n  fire: string;\n  earth: string;\n  water: string;\n}\n\n@Component({\n  selector: 'app-quick-quotation-home',\n  templateUrl: './quick-quotation-home.component.html',\n  styleUrls: ['./quick-quotation-home.component.css']\n})\n\nexport class QuickQuotationHomeComponent implements OnInit, AfterViewChecked {\n  @Input() homeDetails = new Home();\n  LOV = new HomeListObject();\n  quickQuoteForm: FormGroup;\n\n  displayedColumns: string[] = ['label', 'fire', 'earth', 'water'];\n\n  annualData: Array < QuickQuoteResultDTO > = [];\n  plan30Data: Array < QuickQuoteResultDTO > = [];\n  plan60Data: Array < QuickQuoteResultDTO > = [];\n  plan90Data: Array < QuickQuoteResultDTO > = [];\n  coveragelist: Array < QuickQuoteResultDTO > = [];\n\n  //flag to display product comparison\n  showProductComparison: boolean = false;\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private hls: HomeLOVServices,\n    private changeDetector: ChangeDetectorRef,\n    private qqs: QuickQuoteService,\n    private bms: BsModalService\n  ) {\n    this.createQuickQuoteForm();\n    this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    var _this = this;\n    this.hls.getHomeBusinessLine().then(res => {\n      res.forEach(businessLine => {\n        //display Residential only\n        if (businessLine.COD_RAMO == \"200\" && businessLine.NOM_RAMO == \"RESIDENTIAL\") {\n          _this.LOV.sublineLOV = [businessLine];\n        }\n      });\n    });\n\n    // default to residential\n    this.homeDetails.subline = 200;\n  }\n\n  createQuickQuoteForm() {\n    this.quickQuoteForm = this.fb.group({\n      subline: ['', Validators.required],\n      cbBuilding: [null],\n      building: [null],\n      cbContent: [null],\n      content: [null],\n      cbImprovements: [null],\n      improvements: [null],\n      cbRelatedBuild: [null],\n      relatedBuild: [null],\n      cbRelatedContent: [null],\n      relatedContent: [null],\n    });\n  }\n\n  setValidations() {\n    const cbBuilding = this.quickQuoteForm.get('cbBuilding');\n    const cbContent = this.quickQuoteForm.get('cbContent');\n    const cbImprovements = this.quickQuoteForm.get('cbImprovements');\n    const cbRelatedBuild = this.quickQuoteForm.get('cbRelatedBuild');\n    const cbRelatedContent = this.quickQuoteForm.get('cbRelatedContent');\n\n    const improvements = this.quickQuoteForm.get('improvements');\n    const relatedBuild = this.quickQuoteForm.get('relatedBuild');\n    const relatedContent = this.quickQuoteForm.get('relatedContent');\n\n    cbBuilding.valueChanges.subscribe(checked => {\n      const building = this.quickQuoteForm.get('building');\n      this.homeDetails.building = Utility.setNull(checked, this.homeDetails.building);\n      Utility.updateValidator(building, checked ? [Validators.required] : null);\n\n      if (!checked && cbContent.value !== true) {\n        this.homeDetails.improvements = null;\n        this.homeDetails.relatedBuild = null;\n        this.homeDetails.relatedContent = null;\n        Utility.updateValidator(improvements, null);\n        Utility.updateValidator(relatedBuild, null);\n        Utility.updateValidator(relatedContent, null);\n      } else if (cbContent.value === true) {\n        Utility.updateValidator(improvements, cbImprovements.value === true ? [Validators.required] : null);\n        Utility.updateValidator(relatedBuild, cbRelatedBuild.value === true ? [Validators.required] : null);\n        Utility.updateValidator(relatedContent, cbRelatedContent.value === true ? [Validators.required] : null);\n      }\n    });\n\n    cbContent.valueChanges.subscribe(checked => {\n      const content = this.quickQuoteForm.get('content');\n      this.homeDetails.content = Utility.setNull(checked, this.homeDetails.content);\n      Utility.updateValidator(content, checked ? [Validators.required] : null);\n\n      if (!checked && cbBuilding.value !== true) {\n        this.homeDetails.improvements = null;\n        this.homeDetails.relatedBuild = null;\n        this.homeDetails.relatedContent = null;\n        Utility.updateValidator(improvements, null);\n        Utility.updateValidator(relatedBuild, null);\n        Utility.updateValidator(relatedContent, null);\n      } else if (cbBuilding.value === true) {\n        Utility.updateValidator(improvements, cbImprovements.value === true ? [Validators.required] : null);\n        Utility.updateValidator(relatedBuild, cbRelatedBuild.value === true ? [Validators.required] : null);\n        Utility.updateValidator(relatedContent, cbRelatedContent.value === true ? [Validators.required] : null);\n      }\n    });\n\n    cbImprovements.valueChanges.subscribe(checked => {\n      this.homeDetails.improvements = Utility.setNull(checked, this.homeDetails.improvements);\n      Utility.updateValidator(improvements, checked ? [Validators.required] : null);\n    });\n\n    cbRelatedBuild.valueChanges.subscribe(checked => {\n      this.homeDetails.relatedBuild = Utility.setNull(checked, this.homeDetails.relatedBuild);\n      Utility.updateValidator(relatedBuild, checked ? [Validators.required] : null);\n    });\n\n    cbRelatedContent.valueChanges.subscribe(checked => {\n      this.homeDetails.relatedContent = Utility.setNull(checked, this.homeDetails.relatedContent);\n      Utility.updateValidator(relatedContent, checked ? [Validators.required] : null);\n    });\n  }\n\n  createObj(name: String, value: String, installment: String, product: number) {\n    return {\n      'name': name,\n      'value': value,\n      'installment': installment,\n      'product': product\n    };\n  }\n\n  createQuickQuoteData(quickQuoteDetails: any[], products: any[], productList: any[]) {\n    this.annualData = [];\n    this.plan30Data = [];\n    this.plan60Data = [];\n    this.plan90Data = [];\n    var annual = [];\n    var plan30 = [];\n    var plan60 = [];\n    var plan90 = [];\n    productList.forEach(a => {\n      quickQuoteDetails.forEach(b => {\n        products.forEach(c => {\n          if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"1\" && b.numSimulacion === c.numSimulacion) {\n            annual.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 1));\n          } else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"30\" && b.numSimulacion === c.numSimulacion) {\n            if (b.numCuota === \"1\") {\n              plan30.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 30));\n            } else if (b.numCuota === \"2\") {\n              plan30.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 30));\n            }\n          } else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"60\" && b.numSimulacion === c.numSimulacion) {\n            if (b.numCuota === \"1\") {\n              plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));\n            } else if (b.numCuota === \"2\") {\n              plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));\n            } else if (b.numCuota === \"3\") {\n              plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));\n            }\n          } else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"90\" && b.numSimulacion === c.numSimulacion) {\n            if (b.numCuota === \"1\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            } else if (b.numCuota === \"2\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            } else if (b.numCuota === \"3\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            } else if (b.numCuota === \"4\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            }\n          }\n        });\n      });\n    });\n\n    this.annualData.push(this.createQQResultDTO(annual, '1', true));\n    this.annualData.push(this.getInstallmentTotal(plan30));\n\n    this.plan30Data.push(this.createQQResultDTO(plan30, '1'));\n    this.plan30Data.push(this.createQQResultDTO(plan30, '2'));\n\n    this.plan60Data.push(this.createQQResultDTO(plan60, '1'));\n    this.plan60Data.push(this.createQQResultDTO(plan60, '2'));\n    this.plan60Data.push(this.createQQResultDTO(plan60, '3'));\n\n    this.plan90Data.push(this.createQQResultDTO(plan90, '1'));\n    this.plan90Data.push(this.createQQResultDTO(plan90, '2'));\n    this.plan90Data.push(this.createQQResultDTO(plan90, '3'));\n    this.plan90Data.push(this.createQQResultDTO(plan90, '4'));\n  }\n\n  createQuickQuoteCoverage(coverage: any[]) {\n    var coverages = [];\n\n    coverage.forEach(cov => {\n      var coverageName = cov.nomCob;\n      var coverageCode = cov.codCob;\n      var product = cov.numSimulacion;\n      var isIncluded = cov.mcaOligatorio;\n\n      var icon = '';\n      if (isIncluded == \"S\") {\n        icon = \"<i class='far fa-check-circle'></i>\"\n      } else if (isIncluded == \"N\") {\n        icon = \"<i class='far fa-times-circle'></i>\";\n      }\n\n      if (!coverages.includes(coverageName) && (coverageCode <= '2110' && coverageCode >= '2101')) {\n        coverages.push(coverageName);\n        var obj = {} as QuickQuoteResultDTO;\n        obj.label = coverageName;\n        obj.fire = \"<i class='far fa-times-circle'></i>\";\n        obj.earth = \"<i class='far fa-times-circle'></i>\";\n        obj.water = \"<i class='far fa-times-circle'></i>\";\n        this.coveragelist.push(obj);\n      }\n\n      this.coveragelist.forEach(c => {\n        if (c.label == coverageName) {\n          if (product == 1) {\n            c.fire = icon;\n          } else if (product == 2) {\n            c.earth = icon;\n          } else if (product == 3) {\n            c.water = icon;\n          }\n        }\n      });\n    });\n  }\n\n  setTotalValue(product: any, value: any) {\n    if (product === undefined) {\n      return value;\n    } else {\n      var x = parseFloat(product);\n      var y = parseFloat(value);\n      return (x + y).toString();\n    }\n  }\n\n  getInstallmentTotal(arr: any[]) {\n    var obj = {} as QuickQuoteResultDTO;\n    obj.label = \"Installment\";\n    arr.forEach((a: any) => {\n      var product = a[\"name\"];\n      var value = a[\"value\"];\n      if (product == 1) {\n        obj.fire = this.setTotalValue(obj.fire, value);\n      } else if (product == 2) {\n        obj.earth = this.setTotalValue(obj.earth, value);\n      } else if (product == 3) {\n        obj.water = this.setTotalValue(obj.water, value);\n      }\n    });\n    return obj;\n  }\n\n  createQQResultDTO(arr: any[], installment: String, isAnnual ? : boolean) {\n    var obj = {} as QuickQuoteResultDTO;\n\n    if (installment == '1') {\n      obj.label = isAnnual ? 'Annual' : '1st Installment';\n    } else if (installment == '2') {\n      obj.label = '2nd Installment';\n    } else if (installment == '3') {\n      obj.label = '3rd Installment';\n    } else if (installment == '4') {\n      obj.label = '4th Installment';\n    }\n\n    arr.forEach((a: any) => {\n      var price = a[\"value\"];\n      var product = a[\"name\"];\n      if (a[\"installment\"] == installment) {\n        if (product == 1) {\n          obj.fire = price;\n        } else if (product == 2) {\n          obj.earth = price;\n        } else if (product == 3) {\n          obj.water = price;\n        }\n      }\n    });\n    return obj;\n  }\n\n  quickQuote(homeDetails: Home) {\n    this.qqs.quickQuoteHome(homeDetails).then(res => {\n      if (res.status) {\n        var quickQuoteDetails = res.obj[\"quickQuoteDetails\"];\n        var productList = res.obj[\"productList\"];\n        var products = res.obj[\"products\"];\n        var coverage = res.obj[\"coverage\"];\n\n        // generates quick quote home details\n        this.createQuickQuoteData(quickQuoteDetails, productList, products);\n        // generates product coverage\n        this.createQuickQuoteCoverage(coverage);\n        // displaying product comparison\n        this.showProductComparison = true;\n        setTimeout(() => {\n          Utility.scroll('productComparison');\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n}\n","export default \".mat-row:hover{\\n    background: azure;\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdWljay1xdW90YXRpb24tdHJhdmVsL3F1aWNrLXF1b3RhdGlvbi10cmF2ZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9xdWljay1xdW90YXRpb24tdHJhdmVsL3F1aWNrLXF1b3RhdGlvbi10cmF2ZWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtcm93OmhvdmVye1xuICAgIGJhY2tncm91bmQ6IGF6dXJlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  Input,\n  AfterViewChecked,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  Travel\n} from '../../objects/Travel';\nimport {\n  TravelListObject\n} from 'src/app/objects/LOV/travelList';\nimport {\n  QuickQuoteService\n} from '../../services/quickquote.service'\nimport {\n  TravelLOVServices\n} from '../../services/lov/travel.service'\n\nexport interface QuickQuoteResultDTO {\n  label: string;\n  complete: number;\n  personalAssistance: number;\n  assist: number;\n  currency: string;\n  code: number;\n  isHeader: boolean;\n}\n\n@Component({\n  selector: 'app-quick-quotation-travel',\n  templateUrl: './quick-quotation-travel.component.html',\n  styleUrls: ['./quick-quotation-travel.component.css']\n})\n\nexport class QuickQuotationTravelComponent implements OnInit, AfterViewChecked {\n  travelDetails = new Travel();\n  LOV = new TravelListObject();\n  quickQuoteForm: FormGroup;\n\n  displayedColumns: string[] = ['label', 'complete', 'personalAssistance', 'assist'];\n\n  travelData: Array < QuickQuoteResultDTO > = [];\n  coverageData: Array < QuickQuoteResultDTO > = [];\n  coverageList: [];\n\n  mindate: Date = new Date();\n  endDateMinDate: Date = moment().add(1, 'days').toDate();\n  enableEndDate: boolean = false;\n\n  //flag to display product comparison\n  showProductComparison: boolean = false;\n  //flag to display product coverage\n  showProductCoverage: boolean = false;\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private qqs: QuickQuoteService,\n    private tls: TravelLOVServices,\n    private changeDetector: ChangeDetectorRef,\n    private bms: BsModalService\n  ) {\n    this.createQuickQuoteForm();\n    this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    var _this = this;\n    this.tls.getCurrencyList().then(res => {\n      _this.LOV.currencyLOV = res;\n    });\n    this.tls.getTravelPackage().then(res => {\n      _this.LOV.packageLOV = res;\n    });\n    this.tls.getTypeOfCoverage().then(res => {\n      _this.LOV.coverageLOV = res;\n    });\n    this.tls.getAgeRange().then(res => {\n      var ageList = [];\n      res.forEach((age) => {\n        //removes ages 66 and above\n        if (age.AGE_RANGE < 3) {\n          ageList.push(age);\n        }\n      });\n      _this.LOV.ageRangeLOV = ageList;\n    });\n  }\n\n  createQuickQuoteForm() {\n    this.quickQuoteForm = this.fb.group({\n      currency: ['', Validators.required],\n      country: ['', Validators.required],\n      travelPackage: ['', Validators.required],\n      typeOfCoverage: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      noOfDays: ['', Validators.required],\n      ageRange: ['', Validators.required]\n    });\n  }\n\n  onItemSelect(item: any) {\n    console.log(item);\n  }\n  onSelectAll(items: any) {\n    console.log(items);\n  }\n\n  currencyOnchange() {\n    var _this = this;\n\n    //if currency is philippine peso\n    this.travelDetails.countries = this.travelDetails.currency === 1 ? [{\n        NOM_PAIS: \"PHILIPPINES\",\n        COD_PAIS: \"PHL\",\n        NOM_VERNACULO: \"PHILIPPINES\",\n        name: \"PHILIPPINES\",\n        value: \"PHL\",\n        type: \"PHILIPPINES\"\n      }] :\n      null;\n    this.travelDetails.travelPackage = this.travelDetails.currency === 1 ?\n      \"P\" :\n      null;\n\n    this.tls.getCountryList(this.travelDetails).then(res => {\n      res.forEach(country => {\n        country.name = country.NOM_PAIS;\n        country.value = country.COD_PAIS;\n        country.type = country.NOM_VERNACULO;\n      });\n      _this.LOV.countryLOV = res;\n    });\n  }\n\n  setValidations() {\n    this.quickQuoteForm.get('endDate').valueChanges.subscribe(date => {\n      var diff = moment(date).diff(moment(this.quickQuoteForm.get('startDate').value), 'days') + 1;\n      this.travelDetails.noOfDays = diff >= 2 ? diff : 0;\n    });\n\n    this.quickQuoteForm.get('startDate').valueChanges.subscribe(date => {\n      this.enableEndDate = date !== null && date !== undefined;\n      var diff = 0;\n      if (this.enableEndDate) {\n        var diff = moment(this.quickQuoteForm.get('endDate').value).diff(moment(date), 'days') + 1;\n        diff = diff === NaN ? 0 : diff;\n        this.endDateMinDate = moment(date).add(1, 'days').toDate();\n        if (diff < 1) {\n          this.travelDetails.endDate = null;\n        }\n      } else {\n        this.travelDetails.endDate = null;\n      }\n\n      this.travelDetails.noOfDays = diff >= 2 ? diff : 0;\n    });\n\n    this.quickQuoteForm.get('country').valueChanges.subscribe(countries => {\n      var packageList = [];\n      if (!Utility.isUndefined(countries)) {\n        countries.forEach(country => {\n          packageList.push(country.type);\n        });\n        if (packageList.indexOf(\"WORLD\") !== -1) {\n          this.travelDetails.travelPackage = \"W\";\n        } else if (packageList.indexOf(\"SCHENGEN\") !== -1) {\n          this.travelDetails.travelPackage = \"S\";\n        } else if (packageList.indexOf(\"ASIA\") !== -1) {\n          this.travelDetails.travelPackage = \"A\";\n        } else {\n          this.travelDetails.travelPackage = \"P\";\n        }\n      }\n    });\n  }\n\n  generateCoverage(row: QuickQuoteResultDTO) {\n    this.coverageData = [];\n    var c = this.coverageList[row.label];\n    //coverage headers\n    var headers = [300, 332, 330, 302, 316, 319, 324, 333];\n    c.forEach(coverage => {\n      var obj = {} as QuickQuoteResultDTO;\n      // bolder label if it is a header\n      obj.isHeader = headers.indexOf(coverage.code) !== -1;\n      obj.label = obj.isHeader ? '<strong>' + coverage.label + '</strong>' : coverage.label;\n      obj.complete = coverage.complete;\n      obj.personalAssistance = coverage.personalAssistance;\n      obj.assist = coverage.assistOnly;\n      obj.currency = coverage.currency;\n      obj.code = coverage.code;\n      this.coverageData.push(obj);\n    });\n    // display product coverage\n    this.showProductCoverage = true;\n    setTimeout(() => {\n      Utility.scroll('productCoverage');\n    }, 500);\n  }\n\n  quickQuote(travelDetails: Travel) {\n    this.qqs.quickQuoteTravel(travelDetails).then(res => {\n      if (res.status) {\n        this.travelData = [];\n        this.coverageData = [];\n        var quickQuoteDetails = res.obj[\"quickQuoteDetails\"];\n        this.coverageList = res.obj[\"coverages\"];\n        quickQuoteDetails.forEach(details => {\n          var obj = {} as QuickQuoteResultDTO;\n          obj.label = details.label;\n          obj.complete = details.complete;\n          obj.personalAssistance = details.personalAssistance;\n          obj.assist = details.assistOnly;\n          obj.currency = details.currency;\n          this.travelData.push(obj);\n        });\n\n        // hiding product coverage\n        this.showProductCoverage = false;\n        // displaying product comparison\n        this.showProductComparison = true;\n        setTimeout(() => {\n          Utility.scroll('productComparison');\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n}\n","export default \".additional-accident-details,\\n.acci-spa,\\n.acci-hcbi {\\n  width: 100%;\\n}\\n\\n.insured-card {\\n  margin-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdW90YXRpb24tYWNjaWRlbnQvcXVvdGF0aW9uLWFjY2lkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztFQUdFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVvdGF0aW9uLWFjY2lkZW50L3F1b3RhdGlvbi1hY2NpZGVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZGl0aW9uYWwtYWNjaWRlbnQtZGV0YWlscyxcbi5hY2NpLXNwYSxcbi5hY2NpLWhjYmkge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmluc3VyZWQtY2FyZCB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59Il19 */\";","import {\n  Component,\n  OnInit,\n  AfterViewChecked,\n  ChangeDetectorRef,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  distinctUntilChanged\n} from 'rxjs/operators';\nimport {\n  Accident\n} from '../../objects/Accident';\nimport {\n  GroupPolicy\n} from 'src/app/objects/GroupPolicy';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  page\n} from 'src/app/constants/page';\nimport {\n  AccidentListObject\n} from 'src/app/objects/LOV/accidentList';\nimport {\n  GroupPolicyListObject\n} from 'src/app/objects/LOV/groupPolicyList';\nimport {\n  AccidentLOVServices\n} from '../../services/lov/accident.service';\nimport {\n  ThirdPartyLOVServices\n} from 'src/app/services/lov/third-party-lov-service';\nimport {\n  Globals\n} from 'src/app/utils/global';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef\n} from '@angular/material';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  PaymentBreakdownModalComponent\n} from '../payment-breakdown-modal/payment-breakdown-modal.component';\nimport {\n  ReturnDTO\n} from 'src/app/objects/ReturnDTO';\nimport {\n  AccidentIssueServices\n} from 'src/app/services/accident-issue.service';\nimport {\n  TravelLOVServices\n} from 'src/app/services/lov/travel.service';\nimport {\n  InsuredDetails\n} from 'src/app/objects/InsuredDetails';\n\n@Component({\n  selector: 'app-quotation-accident',\n  templateUrl: './quotation-accident.component.html',\n  styleUrls: ['./quotation-accident.component.css']\n})\nexport class QuotationAccidentComponent implements OnInit, AfterViewChecked {\n  @ViewChild('proceedModal') proceedModal: TemplateRef < any > ;\n  @ViewChild('validationModal') validationModal: TemplateRef < any > ;\n\n  // currentUser = this.auths.currentUserValue;\n  isIssuance: boolean = Globals.getAppType() == \"I\";\n  isLoadQuotation: boolean = Globals.isLoadQuotation;\n  pageLabel: String = 'Quotation';\n  triggerCounter: number = 0;\n  triggerCoverage: number = 0;\n  triggerBreakdown: number = 0;\n  insuredHeadCount: number = 1;\n\n  accidentDetails = new Accident();\n  prevAccidentDetails: Accident = null;\n  changedValues: any[] = [];\n\n  invalidForms: any[] = [];\n\n  withTechControl = false;\n\n  groupPolicy = new GroupPolicy();\n  policyHolder = new PolicyHolder();\n  quoteForm: FormGroup;\n  minDate: Date = moment().subtract(65, 'years').toDate();\n  maxDate: Date = moment().subtract(18, 'years').toDate();\n\n  today: Date = new Date();\n  expiryDateMinDate: Date = moment().add(1, 'years').toDate();\n\n  showOtherOccupation = false;\n  showDetails: boolean = false;\n  showSPADetails: boolean = false;\n  showHCBIDetails: boolean = false;\n  showCoverage: boolean = false;\n  showPaymentBreakdown: boolean = false;\n\n  //for payment breakdown\n  paymentBreakdown: any[];\n  paymentReceipt: {};\n\n  //for coverage\n  coverageList: any[];\n\n  LOV = new AccidentListObject();\n  GPLOV = new GroupPolicyListObject();\n\n  //allow user to edit the form\n  editMode = true;\n\n  //flag to show generate btn\n  showGenerateBtn: boolean = true;\n  //flag to show issue btn\n  showIssueQuoteBtn: boolean = false;\n  //flag to show print quote/proceed to issuance\n  showProceedToIssuanceBtn: boolean = false;\n\n  //flat to show issuance generate btn\n  showIssuanceGenerateBtn = true;\n  //flag to show save btn\n  showSaveBtn: boolean = false;\n  //flag to show post btn\n  showPostBtn: boolean = false;\n  //flag to show print btn\n  showPrintBtn: boolean = false;\n  //flag to show new quote and new policy btn\n  showNewPolicyBtn: boolean = false;\n\n  //disable load button\n  disableLoadBtn: boolean = true;\n\n  //modal reference\n  modalRef: BsModalRef;\n  dialogRef: MatDialogRef < TemplateRef < any >> ;\n\n  codeName: String;\n\n  constructor(\n    private fb: FormBuilder,\n    // private auths: AuthenticationService,\n    private als: AccidentLOVServices,\n    private ais: AccidentIssueServices,\n    private tpls: ThirdPartyLOVServices,\n    private tls: TravelLOVServices,\n    private router: Router,\n    public dialog: MatDialog,\n    private bms: BsModalService,\n    private changeDetector: ChangeDetectorRef\n  ) {\n    this.createQuoteForm();\n    this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    this.loadInit();\n    if (this.isIssuance) {\n      this.pageLabel = 'Issuance';\n      if (this.isLoadQuotation) {\n        //if loaded from accident quotation\n        this.accidentDetails.quotationNumber = Globals.loadNumber;\n        this.loadQuotation();\n        Globals.setLoadNumber('');\n        Globals.setLoadQuotation(false);\n      }\n    }\n  }\n\n  createQuoteForm() {\n    this.quoteForm = this.fb.group({\n      quotationNumber: [null],\n      subline: ['', Validators.required],\n      //general information\n      effectivityDate: ['', Validators.required],\n      expiryDate: ['', Validators.required],\n      //insured details\n      insured: this.fb.array([this.newInsured(true)]),\n      //disablement value\n      disablementValue: [null],\n      //product data\n      product: ['', Validators.required],\n    });\n  }\n\n  loadQuotation() {\n    this.ais.loadQuotation(this.accidentDetails.quotationNumber).then(res => {\n      if (res.status) {\n        this.manageBtn(2);\n        const variableData = res.obj[\"variableData\"] as any[];\n        variableData.forEach(v => {\n          const code = v.codCampo;\n          const value: string = v.valCampo;\n          let valueInt: number = undefined;\n  \n          try {\n            valueInt = parseInt(value);\n          } catch (e) {\n            // do nothing\n          }\n  \n          switch (code) {\n            //general information details\n            //TODO\n            case \"COD_MODALIDAD\": {\n              this.accidentDetails.product = valueInt;\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n  \n        const generalInfo = res.obj[\"generalInfo\"];\n        this.accidentDetails.subline = generalInfo.codRamo;\n        // this.accidentDetails.effectivityDate = new Date(generalInfo.fecEfecPoliza);\n        this.quoteForm.get('effectivityDate').setValue(new Date(generalInfo.fecEfecPoliza), {emitEvent:false});\n        // this.accidentDetails.expiryDate = new Date(generalInfo.fecVctoPoliza);\n        this.quoteForm.get('expiryDate').setValue(new Date(generalInfo.fecVctoPoliza), {emitEvent:false});\n  \n        this.groupPolicy = new GroupPolicy;\n        this.groupPolicy.agentCode = generalInfo.codAgt;\n        if (!Utility.isUndefined(generalInfo.numPolizaGrupo)) {\n          this.groupPolicy.groupPolicy = parseInt(generalInfo.numPolizaGrupo);\n        }\n        if (!Utility.isUndefined(generalInfo.numContrato)) {\n          this.groupPolicy.contract = parseInt(generalInfo.numContrato);\n        }\n        if (!Utility.isUndefined(generalInfo.numSubcontrato)) {\n          this.groupPolicy.subContract = parseInt(generalInfo.numSubcontrato);\n        }\n        this.groupPolicy.commercialStructure = generalInfo.codNivel3;\n        this.accidentDetails.groupPolicy = this.groupPolicy;\n  \n        const docType = generalInfo.tipDocum;\n        const docCode = generalInfo.codDocum;\n        // preventing generic document type and code\n        if (\"MVO\" != docType && !docCode.startsWith(\"MAPFREXX\")) {\n          this.policyHolder.documentType = docType;\n          this.policyHolder.documentCode = docCode;\n          this.policyHolder.isExisting = true;\n        }\n\n        var tempInsured = [];\n        const insuredDetails = res.obj[\"insuredDetails\"] as any[];\n        insuredDetails.forEach(i => {\n          const code = i.codCampo;\n          const value: string = i.valCampo;\n          const occurence: number = i.numOcurrencia;\n\n          switch (code) {\n            //insured individual\n            case \"TXT_FIRST_NAME\": {\n              const obj = { firstName: value, occurence: occurence };\n              tempInsured.push(obj);\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n\n        var insureds = [];\n        tempInsured.forEach(t => {\n          const iObj = new InsuredDetails();\n          iObj.firstName = t.firstName;\n          insuredDetails.forEach(id => {\n            const code = id.codCampo;\n            const value: string = id.valCampo;\n            const text: string = id.txtCampo;\n            const occurence: number = id.numOcurrencia;\n            let valueInt: number = undefined;\n    \n            try {\n              valueInt = parseInt(value);\n            } catch (e) {\n              // do nothing\n            }\n\n            if (t.occurence == occurence) {\n              iObj.occurence = occurence.toString();\n              switch (code) {\n                case \"TXT_FIRST_NAME\": {\n                  iObj.firstName = value;\n                  break;\n                }\n                case \"TXT_LAST_NAME\": {\n                  iObj.lastName = value;\n                  break;\n                }\n                case \"TXT_MIDDLE_INITIAL\": {\n                  iObj.middleName = value;\n                  break;\n                }\n                case \"TXT_SUFFIX\": {\n                  iObj.suffix = valueInt;\n                  iObj.suffixLabel = text;\n                  break;\n                }\n                case \"MCA_SEXO_ASEG\": {\n                  iObj.gender = valueInt;\n                  break;\n                }\n                case \"RELATIONSHIP\": {\n                  iObj.relationship = value;\n                  iObj.relationshipLabel = text;\n                  break;\n                }\n                case \"BIRTHDATE\": {\n                  const date = Utility.convertStringDate(value);\n                  iObj.birthDate = date;\n                  break;\n                }\n                case \"TXT_HEALTH_DECLARA\": {\n                  iObj.cbWithHealthDeclaration = value == 'S';\n                  break;\n                }\n                case \"TXT_HEALTH_DECLARA_EXIST\": {\n                  iObj.preExistingIllness = value;\n                  break;\n                }\n                case \"COD_OCCUPATIONAL_CLASS\": {\n                  iObj.occupationalClass = value;\n                  iObj.occupationalClassLabel = text;\n                  break;\n                }\n                case \"TXT_OCCUPATION\": {\n                  iObj.occupation = value;\n                  iObj.occupationLabel = text;\n                  break;\n                }\n                case \"TXT_OCCUPATIONAL_CLAS_OTH\": {\n                  iObj.otherOccupation = value;\n                  break;\n                }\n                default: {\n                  // do nothing\n                }\n              }\n            }\n          });\n          insureds.push(iObj);\n        });\n\n        const occupationLists = res.obj[\"occupationLists\"] as any[];\n        \n        if (insureds.length) {\n          //removes all insured individual\n          this.removeAllInsured();\n          var temp: any[] = [];\n          insureds.forEach((ins: any) => {\n            temp.push({\n              insured: ins.firstName\n            });\n\n            const showOtherOccupation = !Utility.isUndefined(ins.otherOccupation);\n            this.insured().push(this.loadInsured(\n              ins.firstName,\n              ins.lastName,\n              ins.middleName,\n              ins.suffix,\n              ins.suffixLabel,\n              ins.gender,\n              ins.birthDate,\n              ins.relationship,\n              ins.relationshipLabel,\n              ins.cbWithHealthDeclaration,\n              ins.preExistingIllness,\n              ins.occupationalClass,\n              ins.occupationalClassLabel,\n              ins.occupation,\n              ins.occupationLabel,\n              ins.otherOccupation,\n              showOtherOccupation,\n              occupationLists[ins.occurence]));\n          });\n\n          var insuredForm = this.quoteForm.get('insured').value;\n          this.accidentDetails.insuredDetails = insuredForm;\n        } else {\n          this.accidentDetails.insuredDetails = [] as any; //TODO\n        }\n  \n        this.loadLOVs();\n  \n        const coverageList = res.obj[\"coverageList\"];\n        this.populateCoverage(coverageList);\n  \n        //breakdwon\n        const breakdown = res.obj[\"breakdown\"];\n        const receipt = res.obj[\"receipt\"];\n        this.populatePaymentBreakdown(breakdown, receipt);\n  \n        //cloning details from load quotation\n        const deepClone = JSON.parse(JSON.stringify(this.accidentDetails));\n        this.prevAccidentDetails = deepClone;\n\n        //prevent to post policy if quotation has technical control\n        const technicalControl = res.obj[\"technicalControl\"];\n        if (generalInfo.mcaProvisional == \"S\" && technicalControl.length > 0) {\n          this.withTechControl = true;\n          this.editMode = false;\n          this.modalRef = Utility.showError(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n        this.accidentDetails.quotationNumber = \"\";\n      }\n    }).finally(() => {\n      //trigger child component load quotation function\n      this.triggerCounter = this.triggerCounter + 1;\n    });\n  }\n\n  //loading of all LOV's for load quotation\n  loadLOVs() {\n    var _this = this;\n    this.als.getOccupationalClass(this.accidentDetails).then(res => {\n      _this.LOV.occupationalClassLOV = res;\n    });\n    this.als.getProduct(this.accidentDetails).then(res => {\n      _this.LOV.productListLOV = res;\n    });\n  }\n\n  setValidations() {\n    var quotationNumber = this.quoteForm.get('quotationNumber');\n    var effectivityDate = this.quoteForm.get('effectivityDate');\n\n    quotationNumber.valueChanges.subscribe(number => {\n      this.disableLoadBtn = Utility.isUndefined(number);\n    });\n\n    effectivityDate.valueChanges.pipe(distinctUntilChanged()).subscribe(date => {\n      this.accidentDetails.expiryDate = moment(date).add(1, 'years').toDate();\n      this.expiryDateMinDate = this.accidentDetails.expiryDate;\n    });\n  }\n\n  loadInit() {\n    var _this = this;\n    this.als.getSubline().then(res => {\n      _this.LOV.sublineLOV = res;\n    });\n    this.tpls.getSuffix().then(res => {\n      _this.LOV.suffixLOV = res;\n    });\n    this.tls.getRelationship().then(res => {\n      _this.LOV.relationshipLOV = res;\n      _this.LOV.relationshipLOV.forEach((r) => {\n        // disable primary\n        r.disabled = r.COD_VALOR == 'P';\n      });\n    });\n\n    this.setDefaultValue();\n  }\n\n  setDefaultValue() {\n    //setting default value\n    this.accidentDetails.sublineEffectivityDate = \"01012016\";\n    this.accidentDetails.effectivityDate = this.today; // current today\n  }\n\n  insured(): FormArray {\n    return this.quoteForm.get(\"insured\") as FormArray\n  }\n\n  newInsured(onLoad: boolean): FormGroup {\n    const occupationList = [];\n\n    return this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      middleName: [null],\n      suffix: [null],\n      suffixLabel: [''],\n      gender: ['', Validators.required],\n      birthDate: ['', Validators.required],\n      relationship: [onLoad ? 'P' : '', Validators.required],\n      relationshipLabel: [onLoad ? 'PRIMARY' : ''],\n      cbWithHealthDeclaration: [null],\n      preExistingIllness: [null],\n      occupationalClass: ['', Validators.required],\n      occupationalClassLabel: [''],\n      occupation: ['', Validators.required],\n      occupationLabel: [''],\n      otherOccupation: [null],\n      occupationList: [occupationList],\n      showOtherOccupation: [false],\n      bdaymindate: [this.minDate],\n      bdaymaxdate: [this.maxDate],\n    });\n  }\n\n  loadInsured(firstName: string,\n    lastName: string,\n    middleName: string,\n    suffix: string,\n    suffixLabel: string,\n    gender: string,\n    birthDate: Date,\n    relationship: string,\n    relationshipLabel: string,\n    cbWithHealthDeclaration: boolean,\n    preExistingIllness: string,\n    occupationalClass: string,\n    occupationalClassLabel: string,\n    occupation: string,\n    occupationLabel: string,\n    otherOccupation: string,\n    showOtherOccupation: boolean,\n    occupationList: []\n    ): FormGroup {\n\n    const isSPA = this.accidentDetails.subline == 323;\n    const minAgeLimit = isSPA ? 70 : 65;\n    const maxAgeLimit = isSPA ? 1 : 18;\n\n    const bdaymindate: Date = moment().subtract(relationship == 'C' ? 21 : minAgeLimit, 'years').toDate();\n    const bdaymaxdate: Date = moment().subtract(relationship == 'C' ? 1 : maxAgeLimit, 'years').toDate();\n\n    // this.als.getOccupation(this.accidentDetails, occupationalClass).then(res => {\n    //   occupationList = res; //TODO\n    // });\n\n    return this.fb.group({\n      firstName: [firstName, Validators.required],\n      lastName: [lastName, Validators.required],\n      middleName: [middleName],\n      suffix: [suffix],\n      suffixLabel: [suffixLabel],\n      gender: [gender, Validators.required],\n      birthDate: [birthDate, Validators.required],\n      relationship: [relationship, Validators.required],\n      relationshipLabel: [relationshipLabel],\n      cbWithHealthDeclaration: [cbWithHealthDeclaration],\n      preExistingIllness: [preExistingIllness],\n      occupationalClass: [occupationalClass, Validators.required],\n      occupationalClassLabel: [occupationalClassLabel],\n      occupation: [occupation, Validators.required],\n      occupationLabel: [occupationLabel],\n      otherOccupation: [otherOccupation],\n      occupationList: [occupationList],\n      showOtherOccupation: [showOtherOccupation],\n      bdaymindate: [bdaymindate],\n      bdaymaxdate: [bdaymaxdate],\n    });\n  }\n\n  addInsured(onLoad : boolean) {\n    this.insured().push(this.newInsured(onLoad));\n\n    //hides the add insured button if insured head count is more than 6\n    var insured = this.quoteForm.get('insured').value;\n    this.insuredHeadCount = insured.length;\n  }\n\n  removeInsured(index: number) {\n    this.insured().removeAt(index);\n\n    //shows the add insured button if insured head count is less than 6\n    var insured = this.quoteForm.get('insured').value;\n    this.insuredHeadCount = insured.length;\n  }\n\n  removeAllInsured() {\n    // removing all insured\n    var insured = this.quoteForm.get('insured').value;\n    if (insured.length > 0) {\n      // loop until all insured removed\n      this.insured().removeAt(0);\n      this.removeAllInsured();\n    }\n  }\n\n  sublineOnChange() {\n    var _this = this;\n    var disablementValue = this.quoteForm.get('disablementValue');\n    var val = this.quoteForm.controls['subline'].value;\n\n    this.showSPADetails = val == 323; //if standard personal accident is selected\n    this.showHCBIDetails = val == 326; //if hospital cash benefit is selected\n\n    Utility.updateValidator(disablementValue, this.showSPADetails ? [Validators.required, Validators.max(2000000), Validators.min(10000)] : null);\n\n    this.minDate = moment().subtract(this.showSPADetails ? 70 : 65, 'years').toDate();\n    this.maxDate = moment().subtract(this.showSPADetails ? 1 : 18, 'years').toDate();\n\n    //removes all insured inserted by the user\n    this.removeAllInsured();\n    //adds new form for insured individual with primary relationship\n    this.addInsured(true);\n\n    this.als.getOccupationalClass(this.accidentDetails).then(res => {\n      _this.LOV.occupationalClassLOV = res;\n    });\n    this.als.getProduct(this.accidentDetails).then(res => {\n      _this.LOV.productListLOV = res;\n    });\n  }\n\n  suffixOnChange(insured: FormGroup) {\n    var val = insured.controls['suffix'].value;\n    this.LOV.suffixLOV.forEach(r => {\n      if (r.TIPO_SUFIJO_NOMBRE == val) {\n        insured.controls['suffixLabel'].setValue(r.NOM_VALOR);\n      }\n    });\n  }\n\n  relationshipOnChange(insured: FormGroup) {\n    var val = insured.controls['relationship'].value;\n    var maxAge = (val == 'C') ? 23 : 65;\n    var minAge = (val == 'C') ? 1 : 18;\n\n    const bdaymindate: Date = moment().subtract(maxAge, 'years').toDate();\n    insured.controls['bdaymindate'].setValue(bdaymindate);\n\n    const bdaymaxdate: Date = moment().subtract(minAge, 'years').toDate();\n    insured.controls['bdaymaxdate'].setValue(bdaymaxdate);\n\n    insured.controls['birthDate'].setValue('');\n\n    this.LOV.relationshipLOV.forEach(r => {\n      if (r.COD_VALOR == val) {\n        insured.controls['relationshipLabel'].setValue(r.NOM_VALOR);\n      }\n    });\n  }\n\n  cbWithHealthDeclarationOnChange(insured: FormGroup) {\n    var withHD = insured.controls['cbWithHealthDeclaration'].value;\n    var preExistingIllness = insured.controls['preExistingIllness'];\n    if (withHD != undefined) {\n      Utility.updateValidator(preExistingIllness, withHD ? [Validators.required] : null);\n    }\n  }\n\n  occupationalClassOnchange(insured: FormGroup) {\n    var occupationList = insured.controls['occupationList'];\n    var occupationalClass = insured.get('occupationalClass').value;\n    this.showOtherOccupation = false;\n    var otherOccupation = insured.get('otherOccupation');\n    Utility.updateValidator(otherOccupation, null);\n\n    this.LOV.occupationalClassLOV.forEach(oc => {\n      if (oc.COD_VALOR == occupationalClass) {\n        insured.controls['occupationalClassLabel'].setValue(oc.NOM_VALOR);\n      }\n    });\n\n    this.als.getOccupation(this.accidentDetails, occupationalClass).then(res => {\n      occupationList.setValue(res);\n    });\n  }\n\n  occupationOnchange(insured: FormGroup) {\n    var showOtherOccupation = insured.get('showOtherOccupation');\n    var occupationalClass = insured.get('occupationalClass').value;\n    var occupation = insured.get('occupation').value;\n    const selectedOC: string = occupationalClass + '199';\n    showOtherOccupation.setValue(selectedOC == occupation);\n    var otherOccupation = insured.get('otherOccupation');\n    Utility.updateValidator(otherOccupation, showOtherOccupation.value ? [Validators.required] : null);\n\n    var occupationList = insured.controls['occupationList'].value;\n    occupationList.forEach(o => {\n      if (o.COD_VALOR == occupation) {\n        insured.controls['occupationLabel'].setValue(o.NOM_VALOR);\n      }\n    });\n  }\n\n  populateCoverage(coverageList: any[]) {\n    this.coverageList = coverageList;\n    this.showCoverage = true;\n    this.triggerCoverage = this.triggerCoverage + 1;\n  }\n\n  populatePaymentBreakdown(breakdown: any[], receipt: {}) {\n    this.paymentBreakdown = breakdown;\n    this.paymentReceipt = receipt;\n    this.showPaymentBreakdown = true;\n    this.triggerBreakdown = this.triggerBreakdown + 1;\n    Utility.scroll('paymentBreakdown');\n  }\n\n  proceed(type: number) {\n    //if user changes affecting values\n    const hasChanges = this.changedValues.length != 0;\n\n    const hasQuotationNumber = !Utility.isUndefined(this.accidentDetails.quotationNumber);\n    const isTemporaryQuotation = hasQuotationNumber && this.accidentDetails.quotationNumber.startsWith('999');\n    this.accidentDetails.affecting = !hasQuotationNumber ||\n      (hasQuotationNumber && isTemporaryQuotation) ||\n      (hasQuotationNumber && !isTemporaryQuotation && hasChanges);\n    if (hasChanges) {\n      this.openProceedModal(type);\n    } else {\n      switch (type) {\n        case 1: {\n          this.issueQuote('S');\n          break;\n        }\n        case 2: {\n          this.issueQuote('N');\n          break;\n        }\n        case 3: {\n          this.savePolicy();\n          break;\n        }\n        default: {\n          this.postPolicy();\n          break;\n        }\n      }\n    }\n  }\n\n  openProceedModal(type: number): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      generateBtn: type == 1 || type == 2 || type == 3,\n      saveBtn: type == 4\n    };\n\n    this.dialogRef = this.dialog.open(this.proceedModal, dialogConfig);\n  }\n\n  openValidationModal(q: FormGroup, g: FormGroup, c: FormGroup): void {\n    //clear arrays\n    let invalid = [];\n    this.invalidForms = [];\n\n    //list of incorrect label names\n    var formLabels = [{\n        cbOneTripOnly: 'oneTripOnly'\n      },\n      {\n        name: \"client'sName\"\n      }\n    ]\n\n    var quoteArr = Utility.findInvalidControls(q);\n    invalid.push(...quoteArr);\n\n    var groupPolicyArr = Utility.findInvalidControls(g);\n    invalid.push(...groupPolicyArr);\n\n    var policyHolderArr = Utility.findInvalidControls(c);\n    invalid.push(...policyHolderArr);\n\n    invalid.forEach((i) => {\n      formLabels.forEach(f => {\n        var correctLabel = f[i];\n        if (!Utility.isUndefined(correctLabel)) {\n          //replace label\n          i = correctLabel;\n        }\n      });\n\n      let label: string = i.replace(/([A-Z])/g, ' $1').trim();\n      this.invalidForms.push(label.toLowerCase());\n    });\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n\n    this.dialogRef = this.dialog.open(this.validationModal, dialogConfig);\n  }\n\n  openPaymentBreakdownModal(receipt: any, breakdown: any, isPostPolicy: boolean) {\n    const modalData = {\n      number: isPostPolicy ? this.accidentDetails.policyNumber : this.accidentDetails.quotationNumber,\n      product: this.codeName,\n      payment: \"ANNUAL\",\n      receipt: receipt,\n      breakdown: breakdown,\n      showExchangeRate: false,\n      isPostPolicy: isPostPolicy,\n      line: 'ACCIDENT'\n    };\n\n    this.dialog.open(PaymentBreakdownModalComponent, {\n      width: '1000px',\n      data: modalData\n    });\n  }\n\n  manageBtn(opt: number) {\n    if (opt == 1) {\n      //hides payment breakdown panel\n      this.showPaymentBreakdown = false;\n      this.editMode = true;\n    }\n\n    if (this.isIssuance) {\n      this.showIssuanceGenerateBtn = (opt == 1);\n      this.showSaveBtn = (opt == 2);\n      this.showPostBtn = (opt == 3);\n      this.showPrintBtn = (opt == 4);\n      this.showNewPolicyBtn = (opt == 5);\n    } else {\n      this.showGenerateBtn = (opt == 1);\n      this.showIssueQuoteBtn = (opt == 2);\n      this.showProceedToIssuanceBtn = (opt == 3);\n    }\n  }\n\n  newQuote() {\n    this.newPage(page.QUO.ACC);\n  }\n\n  newPolicy() {\n    this.newPage(page.ISS.ACC);\n  }\n\n  newPage(page: string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n\n  affecting(key: string, label: string) {\n    if (!Utility.isUndefined(this.accidentDetails.quotationNumber) && this.prevAccidentDetails != null) {\n      let prev = this.prevAccidentDetails[key] == undefined ? \"\" : this.prevAccidentDetails[key];\n      let curr = this.accidentDetails[key] == undefined ? \"\" : this.accidentDetails[key];\n      if (curr instanceof Date) {\n        curr = curr.getMonth() + \"/\" + curr.getDate() + \"/\" + curr.getFullYear();\n        if (!Utility.isUndefined(prev)) {\n          var prevDate = new Date(prev);\n          prev = prevDate.getMonth() + \"/\" + prevDate.getDate() + \"/\" + prevDate.getFullYear();\n        }\n      }\n\n      if (prev != curr) {\n        if (!this.changedValues.includes(label)) {\n          //if changedValues length is greater than 0, request is affecting\n          this.changedValues.push(label);\n        }\n      } else {\n        //remove all occurence\n        this.changedValues = this.changedValues.filter(v => v !== label);\n      }\n    }\n  }\n\n  printQuote() {\n    this.ais.printQuote(this.accidentDetails.quotationNumber);\n  }\n\n  printPolicy() {\n    this.ais.printPolicy(this.accidentDetails.policyNumber);\n  }\n\n  proceedToIssuance() {\n    this.ais.proceedToIssuance(this.accidentDetails.quotationNumber);\n  }\n\n  getProductCode() {\n    const _this = this;\n    this.codeName = null;\n    this.LOV.productListLOV.forEach(p => {\n      if (p.COD_MODALIDAD == this.accidentDetails.product) {\n        _this.codeName = p.NOM_MODALIDAD;\n      }\n    });\n  }\n\n  //getting error or warning items\n  getErrorItems(res: ReturnDTO, mcaTmpPptoMph: string, isIssuance: boolean) {\n    this.withTechControl = false;\n    const resErrorCode = res.obj[\"errorCode\"];\n    const resError = res.obj[\"error\"];\n\n    const isPostPolicy = Utility.isUndefined(resErrorCode);\n    let items: any[] = isPostPolicy ? [\"Error occured while posting policy. Please contact administration.\"] : [\"Error code is \" + resErrorCode + \" but does not return any error message. Please contact administration.\"];\n\n    if (!Utility.isUndefined(resError)) {\n      const errArr = resError.split(\"~\");\n      if (errArr.length) {\n        var arr = [];\n        errArr.forEach((err: string) => {\n          if (!Utility.isEmpty(err)) {\n            arr.push(err);\n          }\n        });\n\n        const resStatus = res.obj[\"status\"];\n        if (arr.length) {\n          if (!resStatus && isPostPolicy) {\n            //has error - can't proceed\n            items = [\"Failed to generate quotation number due to following reason/s:\"].concat(arr);\n          } else {\n            this.withTechControl = true;\n            // has warning - can proceed\n            if (isIssuance) {\n              items = [\"Quotation has technical control due to following reason/s:\"].concat(arr);\n            } else {\n              items = (\"N\" == mcaTmpPptoMph) ? [\"Routed for approval due to following reason/s:\"].concat(arr) : arr;\n            }\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  //generate and issue quote button\n  issueQuote(mcaTmpPptoMph: string) {\n    // S for generation and N for issue quotation\n    this.assembleData(mcaTmpPptoMph);\n\n    this.ais.issueQuote(this.accidentDetails).then(res => {\n      if (res.status) {\n        //clear affecting fields\n        this.changedValues = [];\n\n        const items = this.getErrorItems(res, mcaTmpPptoMph, false);\n        const status = res.obj[\"status\"];\n        if (status) {\n          //duplicating car details for comparison\n          const deepClone = JSON.parse(JSON.stringify(this.accidentDetails));\n          this.prevAccidentDetails = deepClone;\n\n          this.editMode = false;\n          const errorCode = res.obj[\"errorCode\"];\n          if (errorCode == \"S\") {\n            //if quotation has a warning\n            this.modalRef = Utility.showHTMLWarning(this.bms, items);\n          }\n\n          const policyNumber = res.obj[\"policyNumber\"];\n          this.accidentDetails.quotationNumber = policyNumber;\n\n          const breakdown = res.obj[\"breakdown\"];\n          const receipt = res.obj[\"receipt\"];\n\n          if (\"S\" == mcaTmpPptoMph) {\n            //for generation of quote\n            const message = \"You have successfully generated a quotation - \" + policyNumber;\n            this.modalRef = Utility.showInfo(this.bms, message);\n\n            const coverageList = res.obj[\"coverageList\"];\n            this.populateCoverage(coverageList);\n\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.manageBtn(2);\n          } else {\n            // for issuing the quote\n            this.openPaymentBreakdownModal(receipt, breakdown, false);\n            this.manageBtn(3);\n          }\n        } else {\n          this.modalRef = Utility.showHTMLError(this.bms, items);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  assembleData(mcaTmpPptoMph: string) {\n    this.accidentDetails.mcaTmpPptoMph = mcaTmpPptoMph;\n\n    // includes group policy to accident details DTO\n    this.accidentDetails.groupPolicy = this.groupPolicy;\n    // includes policy holder to accident details DTO\n    this.accidentDetails.policyHolder = this.policyHolder;\n\n    // includes insured individuals to accident details DTO\n    var insured = this.quoteForm.get('insured').value;\n    this.accidentDetails.insuredDetails = insured.length ? insured : [];\n\n    // get product code\n    this.getProductCode();\n\n     // to trigger changes when regenerating quotation\n     this.showCoverage = false;\n     this.showPaymentBreakdown = false;\n  }\n\n  //save policy button\n  savePolicy() {\n    this.assembleData(\"N\");\n\n    this.ais.savePolicy(this.accidentDetails).then(res => {\n      if (res.status) {\n        //clear affecting fields\n        this.changedValues = [];\n\n        var items = this.getErrorItems(res, this.accidentDetails.mcaTmpPptoMph, true);\n        const status = res.obj[\"status\"];\n        if (status) {\n          //duplicating accident details for comparison\n          const deepClone = JSON.parse(JSON.stringify(this.accidentDetails));\n          this.prevAccidentDetails = deepClone;\n\n          this.editMode = false;\n\n          const errorCode = res.obj[\"errorCode\"];\n          const policyNumber = res.obj[\"policyNumber\"];\n          this.accidentDetails.quotationNumber = policyNumber;\n\n          const message = \"You have successfully generated a new quotation: \" + policyNumber;\n          this.modalRef = Utility.showInfo(this.bms, message);\n\n          const breakdown = res.obj[\"breakdown\"];\n          const receipt = res.obj[\"receipt\"];\n          this.populatePaymentBreakdown(breakdown, receipt);\n\n          this.withTechControl = errorCode == 'S';\n          if (this.withTechControl) {\n            //if quotation has a warning\n            if (this.accidentDetails.affecting) {\n              items = [\"Updated quotation number is: \" + policyNumber].concat(items);\n            }\n            this.modalRef = Utility.showHTMLWarning(this.bms, items);\n          } else {\n            const message = \"Policy saved successfully.\";\n            this.modalRef = Utility.showInfo(this.bms, message);\n          }\n          this.editMode = false;\n          this.manageBtn(3);\n        } else {\n          this.modalRef = Utility.showHTMLError(this.bms, items);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  //post policy button\n  postPolicy() {\n    this.assembleData(\"N\");\n\n    if (this.withTechControl) {\n      this.modalRef = Utility.showWarning(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n    } else {\n      this.ais.postPolicy(this.accidentDetails).then(res => {\n        if (res.status) {\n          //clear affecting fields\n          this.changedValues = [];\n\n          var items = this.getErrorItems(res, this.accidentDetails.mcaTmpPptoMph, true);\n          const status = res.obj[\"status\"];\n          const policyNumber = res.obj[\"policyNumber\"];\n          if (status && !Utility.isUndefined(policyNumber)) {\n            this.editMode = false;\n            this.accidentDetails.policyNumber = policyNumber;\n\n            const breakdown = res.obj[\"breakdown\"];\n            const receipt = res.obj[\"receipt\"];\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.openPaymentBreakdownModal(receipt, breakdown, true);\n            this.manageBtn(4);\n          } else {\n            this.manageBtn(5);\n            this.modalRef = Utility.showHTMLError(this.bms, items);\n          }\n        } else {\n          this.manageBtn(5);\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      });\n    }\n  }\n\n}\n","export default \"#quickQouteDetails {\\n  margin-top: 10px;\\n}\\n\\n.accessory-card {\\n  margin-bottom: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdW90YXRpb24tY2FyL3F1b3RhdGlvbi1jYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVvdGF0aW9uLWNhci9xdW90YXRpb24tY2FyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcXVpY2tRb3V0ZURldGFpbHMge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4uYWNjZXNzb3J5LWNhcmQge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuIl19 */\";","import {\n  Component,\n  OnInit,\n  AfterViewChecked,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray,\n  AbstractControl\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  distinctUntilChanged\n} from 'rxjs/operators';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Car\n} from '../../objects/Car';\nimport {\n  GroupPolicy\n} from 'src/app/objects/GroupPolicy';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  CarLOVServices\n} from '../../services/lov/car.service';\nimport {\n  CarUtilityServices\n} from '../../services/car-utility.service';\nimport {\n  CarQuoteServices\n} from '../../services/car-quote.service';\nimport {\n  CarListObject\n} from 'src/app/objects/LOV/carList';\nimport {\n  GroupPolicyListObject\n} from 'src/app/objects/LOV/groupPolicyList';\nimport {\n  AuthenticationService\n} from '../../services/authentication.service';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig\n} from '@angular/material';\nimport {\n  PaymentBreakdownModalComponent\n} from '../payment-breakdown-modal/payment-breakdown-modal.component';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  page\n} from 'src/app/constants/page';\nimport {\n  Globals\n} from 'src/app/utils/global';\nimport {\n  CoverageVariableData\n} from 'src/app/objects/CoverageVariableData';\nimport {\n  CoveragesComponent\n} from '../coverages/coverages.component';\nimport {\n  ReturnDTO\n} from 'src/app/objects/ReturnDTO';\nimport {\n  Accessory\n} from 'src/app/objects/Accessory';\nimport {\n  LTOService\n} from 'src/app/services/lto.service';\nimport {\n  LTODetails\n} from 'src/app/objects/LTODetails';\n\n@Component({\n  selector: 'app-quotation-car',\n  templateUrl: './quotation-car.component.html',\n  styleUrls: ['./quotation-car.component.css']\n})\nexport class QuotationCarComponent implements OnInit, AfterViewChecked {\n  @ViewChild(CoveragesComponent) appCoverage: CoveragesComponent;\n  @ViewChild('proceedModal') proceedModal: TemplateRef < any > ;\n  @ViewChild('validationModal') validationModal: TemplateRef < any > ;\n\n  currentUser = this.auths.currentUserValue;\n  isIssuance: boolean = Globals.getAppType() == \"I\";\n  isLoadQuotation: boolean = Globals.isLoadQuotation;\n  pageLabel: String = 'Quotation';\n  triggerCounter: number = 0;\n  triggerCoverage: number = 0;\n  triggerBreakdown: number = 0;\n\n  carDetails = new Car();\n  prevCarDetails: Car = null;\n  changedValues: any[] = [];\n  changedAccessoryValues: any[] = [];\n\n  hasRoadAssist = false;\n\n  invalidForms: any[] = [];\n  withTechControl = false;\n\n  groupPolicy = new GroupPolicy();\n  policyHolder = new PolicyHolder();\n  secondaryPolicyHolder = new PolicyHolder();\n  assigneePolicyHolder = new PolicyHolder();\n  mortgageePolicyHolder = new PolicyHolder();\n  coverageVariableData = new CoverageVariableData();\n\n  quoteForm: FormGroup;\n  // cForm: FormGroup;\n\n  today: Date = new Date();\n  expiryDateMinDate: Date = moment().add(1, 'years').toDate();\n\n  LOV = new CarListObject();\n  GPLOV = new GroupPolicyListObject();\n\n  showAccessories: boolean = false;\n  showAdditionalInformation: boolean = false;\n  showSubAgent: boolean = false;\n  showCTPL: boolean = false;\n  showPaymentBreakdown: boolean = false;\n  showCoverage: boolean = false;\n  showAssignee: boolean = false;\n  showMortgagee: boolean = false;\n\n  //for payment breakdown\n  paymentBreakdown: any[];\n  paymentReceipt: {};\n\n  //for coverage\n  coverageList: any[];\n  amountList: any[];\n  premiumAmount: any[];\n  coverageAmount: any[];\n  coverageVariable: any[];\n\n  //allow user to edit the form\n  editMode = true;\n\n  //flag if coverage is modified\n  isModifiedCoverage = false;\n  //flag to include covergae\n  includeCoverage = false;\n\n  //flag to show generate btn\n  showGenerateBtnGrp: boolean = true;\n  //flag to show issue btn\n  showIssueQuoteBtnGrp: boolean = false;\n  //flag to show print quote/proceed to issuance\n  showProceedToIssuanceBtnGrp: boolean = false;\n\n  //flat to show issuance generate btn\n  showIssuanceGenerateBtn = true;\n  //flag to show save btn\n  showSaveBtn: boolean = false;\n  //flag to show post btn\n  showPostBtn: boolean = false;\n  //flag to show print btn\n  showPrintBtn: boolean = false;\n  //flag to show new quote and new policy btn\n  showNewPolicyBtn: boolean = false;\n\n  //disable load button\n  disableLoadBtn: boolean = true;\n\n  //modal reference\n  modalRef: BsModalRef;\n  dialogRef: MatDialogRef < TemplateRef < any >> ;\n\n  constructor(\n    private fb: FormBuilder,\n    private cus: CarUtilityServices,\n    private cls: CarLOVServices,\n    private ltos: LTOService,\n    private cqs: CarQuoteServices,\n    private changeDetector: ChangeDetectorRef,\n    private auths: AuthenticationService,\n    private bms: BsModalService,\n    private router: Router,\n    public dialog: MatDialog,\n  ) {\n    // this.createQuoteForm();\n    // this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    this.createQuoteForm();\n    this.setValidations();\n    this.loadInit();\n    if (this.isIssuance) {\n      this.pageLabel = 'Issuance';\n      if (this.isLoadQuotation) {\n        //if loaded from car quotation\n        this.carDetails.quotationNumber = Globals.loadNumber;\n        this.loadQuotation();\n        Globals.setLoadNumber('');\n        Globals.setLoadQuotation(false);\n      }\n    }\n  }\n\n  loadInit() {\n    var _this = this;\n    this.cls.getMakeList().then(res => {\n      _this.LOV.makeLOV = res;\n    });\n\n    this.cls.getColor().then(res => {\n      _this.LOV.colorLOV = res;\n    });\n\n    this.cls.getClassification().then(res => {\n      _this.LOV.classificationLOV = res;\n    });\n\n    this.cls.getCoverageArea().then(res => {\n      _this.LOV.coverageAreaLOV = res;\n    });\n\n    this.cls.getInspectionAssessment().then(res => {\n      _this.LOV.inspectionAssessmentLOV = res;\n    });\n\n    if (this.isIssuance) {\n      var list : any[] = [];\n      this.cus.getSubagents().then(res => {\n        var subAgents = res.obj[\"subAgents\"];\n        subAgents.forEach(subAgent => {\n          var obj = {\n            name: subAgent.nomCompleto + \"(\" + subAgent.tipDocum + \")\",\n            documentCode: subAgent.codDocum,\n            documentType: subAgent.tipDocum,\n            beneficiaryType: 20};\n          list.push(obj);\n        });\n        _this.LOV.subagentLOV = list;\n      });\n\n      this.cls.getMortgageClause().then(res => {\n        _this.LOV.mortgageClauseLOV = res;\n      });\n    }\n\n    this.setDefaultValue();\n  }\n\n  setDefaultValue() {\n    //setting default value\n    this.carDetails.color = 9999; // undeclared\n    this.carDetails.receivedBy = this.currentUser.userName; //TODO\n    //this.carDetails.purchaseDate = this.today; // current today\n    this.carDetails.receivedDate = this.today; // current today\n    this.carDetails.effectivityDate = this.today; // current today\n    this.carDetails.automaticAuth = \"N\";\n    //additional policy information\n    this.carDetails.cbPolicyOnlyDriver = true;\n    this.carDetails.cbPolicyOwner = true;\n  }\n\n  createQuoteForm() {\n    this.quoteForm = this.fb.group({\n      quotationNumber: [null],\n      //risk details\n      make: ['', Validators.required],\n      model: ['', Validators.required],\n      vehicleType: ['', Validators.required],\n      modelYear: ['', Validators.required],\n      subModel: ['', Validators.required],\n      typeOfUse: ['', Validators.required],\n      subline: ['', Validators.required],\n      vehicleValue: ['', Validators.required],\n      //vehicle information\n      color: ['', Validators.required],\n      areaOfUsage: ['', Validators.required],\n      conductionNumber: ['', Validators.required, this.validateConductionNumber.bind(this)],\n      plateNumber: ['', Validators.required, this.validatePlateNumber.bind(this)],\n      serialNumber: ['', Validators.required],\n      engineNumber: ['', Validators.required],\n      // mvFileNumber: this.isIssuance ? ['', Validators.required] : [null],\n      mvFileNumber: [null],\n      purchaseDate: [null],\n      receivedBy: ['', Validators.required],\n      receivedDate: ['', Validators.required],\n\n      //CTPL\n      automaticAuth: {\n        value: null,\n        disabled: true\n      },\n      registrationType: [null],\n      mvType: [null],\n      cocNumber: [null],\n      cbIsNotRequiredAuthNumber: [null],\n      authNumber: [null],\n\n      //accessories\n      accessories: this.fb.array([]),\n\n      effectivityDate: ['', Validators.required],\n      expiryDate: ['', Validators.required],\n      //additional policy information\n      customRiskName: [null],\n      seatingCapacity: [null],\n      weight: [null],\n      displacement: [null],\n      classification: [null],\n      coverageArea: [null],\n      assuredsCoinsuranceShare: ['', Validators.max(100)],\n      cbWaivedMinPremium: [null],\n      cbPrepaidPremium: [null],\n      cbGlassEtchingEntitled: [null],\n      glassEtchingAvailmentDate: [null],\n      existingDamages: [null],\n      inspectionAssessment: [null],\n      //additional policy information for issuance\n      cbPolicyOnlyDriver: [null],\n      cbPolicyOwner:  [null],\n      cbHasAssignee: [null],\n      cbVehicleMortgaged: [null],\n      mortgageClause: [null],\n\n      //product data\n      paymentMethod: ['', Validators.required],\n      product: ['', Validators.required],\n      //subagent\n      subAgents: [null],\n    });\n  }\n\n  async validateConductionNumber(control: AbstractControl) {\n    if (!Utility.isUndefined(control.value)) {\n      //trigger after 5 characters\n      if (control.value.length >= 5) {\n        this.carDetails.conductionNumber = control.value;\n        return this.cus.validateConductionNumberFormat(this.carDetails).then(res => {\n          return res.status && res.obj[\"valid\"] ? null : {\n            invalidConductionNumber: true\n          };\n        });\n      }\n    }\n  }\n\n  async validatePlateNumber(control: AbstractControl) {\n    if (!Utility.isUndefined(control.value)) {\n      //trigger after 5 characters\n      if (control.value.length >= 5) {\n        this.carDetails.plateNumber = control.value;\n        return this.cus.validatePlateNumberFormat(this.carDetails).then(res => {\n          return res.status && res.obj[\"valid\"] ? null : {\n            invalidPlateNumber: true\n          };\n        });\n      }\n    }\n  }\n\n  loadQuotation() {\n    this.cqs.loadQuotation(this.carDetails.quotationNumber).then(res => {\n      if (res.status) {\n        this.manageBtn(2);\n        const variableData = res.obj[\"variableData\"] as any[];\n        variableData.forEach(v => {\n          const code = v.codCampo;\n          const value: string = v.valCampo;\n          let valueInt: number = undefined;\n  \n          try {\n            valueInt = parseInt(value);\n          } catch (e) {\n            // do nothing\n          }\n  \n          switch (code) {\n            //risk details\n            case \"COD_MARCA\": {\n              this.carDetails.make = valueInt;\n              break;\n            }\n            case \"COD_MODELO\": {\n              this.carDetails.model = valueInt;\n              break;\n            }\n            case \"COD_TIP_VEHI\": {\n              this.carDetails.vehicleType = valueInt;\n              break;\n            }\n            case \"ANIO_SUB_MODELO\": {\n              this.carDetails.modelYear = value;\n              break;\n            }\n            case \"COD_SUB_MODELO\": {\n              this.carDetails.subModel = valueInt;\n              break;\n            }\n            case \"COD_USO_VEHI\": {\n              this.carDetails.typeOfUse = valueInt;\n              break;\n            }\n            case \"VAL_SUB_MODELO\": {\n              this.carDetails.vehicleValue = valueInt;\n              break;\n            }\n  \n            //vehicle information\n            case \"COD_COLOR\": {\n              this.carDetails.color = valueInt;\n              break;\n            }\n            case \"COD_AREA_USAGE\": {\n              this.carDetails.areaOfUsage = valueInt;\n              break;\n            }\n            case \"NUM_CONDUCTION\": {\n              this.carDetails.conductionNumber = value;\n              break;\n            }\n            case \"NUM_MATRICULA\": {\n              this.carDetails.plateNumber = value;\n              break;\n            }\n            case \"NUM_SERIAL\": {\n              this.carDetails.serialNumber = value;\n              break;\n            }\n            case \"NUM_MOTOR\": {\n              this.carDetails.engineNumber = value;\n              break;\n            }\n            case \"NUM_MV_FILE\": {\n              this.carDetails.mvFileNumber = value;\n              break;\n            }\n            case \"FEC_PURCHASE\": {\n              this.carDetails.purchaseDate = new Date(value);\n              this.quoteForm.get('purchaseDate').markAsDirty();\n              break;\n            }\n            case \"NOM_RECEIVED_BY\": {\n              this.carDetails.receivedBy = value;\n              break;\n            }\n            case \"FEC_RECEIVED\": {\n              this.carDetails.receivedDate = new Date(value);\n              this.quoteForm.get('receivedDate').markAsDirty();\n              break;\n            }\n            case \"NUM_PLAZAS\": {\n              this.carDetails.seatingCapacity = valueInt;\n              break;\n            }\n            case \"VAL_PESO\": {\n              this.carDetails.weight = value;\n              break;\n            }\n            case \"VAL_CC\": {\n              this.carDetails.displacement = value;\n              break;\n            }\n            case \"TIP_VEHI_PESO\": {\n              this.carDetails.classification = valueInt;\n              break;\n            }\n            case \"COD_AREA_COVER\": {\n              this.carDetails.coverageArea = valueInt;\n              break;\n            }\n            case \"PCT_CLI_COINS\": {\n              this.carDetails.assuredsCoinsuranceShare = value;\n              break;\n            }\n            case \"MCA_WAIVE_MIN_PREM\": {\n              this.carDetails.cbWaivedMinPremium = (value == 'S');\n              break;\n            }\n            case \"MCA_PREPAID_PREM\": {\n              this.carDetails.cbPrepaidPremium = (value == 'S');\n              break;\n            }\n            case \"MCA_GLASS_ETCHING\": {\n              this.carDetails.cbGlassEtchingEntitled = (value == 'S');\n              break;\n            }\n            case \"FEC_GLASS_ETCHING\": {\n              this.carDetails.glassEtchingAvailmentDate = new Date(value);\n              break;\n            }\n            case \"TXT_EXT_DAM_PARTS\": {\n              this.carDetails.existingDamages = value;\n              break;\n            }\n            case \"TIP_EXT_DAM_PARTS\": {\n              this.carDetails.inspectionAssessment = valueInt;\n              break;\n            }\n  \n            //additional policy information for issuance\n            case \"MCA_DRIVER\": {\n              this.carDetails.cbPolicyOnlyDriver = (value == 'S');\n              break;\n            }\n            case \"MCA_OWNER\": {\n              this.carDetails.cbPolicyOwner = (value == 'S');\n              break;\n            }\n            case \"MCA_ASSIGNEE\": {\n              this.carDetails.cbHasAssignee = (value == 'S');\n              break;\n            }\n            case \"MCA_MORTGAGED\": {\n              this.carDetails.cbVehicleMortgaged = (value == 'S');\n              break;\n            }\n            case \"TIP_MORT_CLAUSE\": {\n              this.carDetails.mortgageClause = valueInt;\n              break;\n            }\n\n            case \"MCA_AUTO_REGISTRO\": {\n              this.carDetails.automaticAuth = value;\n              break;\n            }\n            case \"TIP_COCAF_MV\": {\n              this.carDetails.mvType = value;\n              break;\n            }\n            case \"TIP_COCAF_REGISTRATION\": {\n              this.carDetails.registrationType = value;\n              break;\n            }\n            case \"NUM_COC\": {\n              this.carDetails.cocNumber = value;\n              break;\n            }\n            case \"NUM_COC_AUTH\": {\n              this.carDetails.authNumber = value;\n              break;\n            }\n  \n            case \"COD_MODALIDAD\": {\n              this.carDetails.productList = valueInt;\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n  \n        const alternative = res.obj[\"alternative\"] as any[];\n        alternative.forEach(a => {\n          const code = a.codCampo;\n          const value: string = a.valCampo;\n          const text: string = a.txtCampo;\n  \n          switch (code) {\n            //risk details\n            case \"TIP_ASEG_SEP_LOV\": {\n              this.carDetails.secondaryPolicyHolderSeparator = text;\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n  \n        const generalInfo = res.obj[\"generalInfo\"];\n        this.carDetails.subline = generalInfo.codRamo;\n        // this.carDetails.sublineEffectivityDate = Utility.formatDate(new Date(generalInfo.fecValidez), \"DDMMYYYY\");\n        this.carDetails.sublineEffectivityDate = res.obj[\"sublineEffectivityDate\"];\n  \n        this.groupPolicy = new GroupPolicy;\n        this.groupPolicy.agentCode = generalInfo.codAgt;\n        if (!Utility.isUndefined(generalInfo.numPolizaGrupo)) {\n          this.groupPolicy.groupPolicy = parseInt(generalInfo.numPolizaGrupo);\n        }\n        if (!Utility.isUndefined(generalInfo.numContrato)) {\n          this.groupPolicy.contract = parseInt(generalInfo.numContrato);\n        }\n        if (!Utility.isUndefined(generalInfo.numSubcontrato)) {\n          this.groupPolicy.subContract = parseInt(generalInfo.numSubcontrato);\n        }\n        this.groupPolicy.commercialStructure = generalInfo.codNivel3;\n        this.carDetails.groupPolicy = this.groupPolicy;\n  \n        // this.carDetails.effectivityDate = new Date(generalInfo.fecEfecPoliza);\n        this.quoteForm.get('effectivityDate').setValue(new Date(generalInfo.fecEfecPoliza), {emitEvent:false});\n        // this.carDetails.expiryDate = new Date(generalInfo.fecVctoPoliza);\n        this.quoteForm.get('expiryDate').setValue(new Date(generalInfo.fecVctoPoliza), {emitEvent:false});\n  \n        const docType = generalInfo.tipDocum;\n        const docCode = generalInfo.codDocum;\n        // preventing generic document type and code\n        if (\"MVO\" != docType && !docCode.startsWith(\"MAPFREXX\")) {\n          this.policyHolder.documentType = docType;\n          this.policyHolder.documentCode = docCode;\n          this.policyHolder.isExisting = true;\n        }\n  \n        this.carDetails.paymentMethod = generalInfo.codFraccPago;\n\n        const beneficiary = res.obj[\"beneficiary\"];\n        const subAgentList = res.obj[\"subAgentList\"];\n        var subAgents : any[] = [];\n        if (beneficiary.length) {\n          beneficiary.forEach((ben: any) => {\n            if (ben.tipBenef == 1) {\n              this.secondaryPolicyHolder.documentCode = ben.codDocum;\n              this.secondaryPolicyHolder.documentType = ben.tipDocum;\n              this.secondaryPolicyHolder.isExisting = true;\n            } else if (ben.tipBenef == 27) {\n              this.showAssignee = true;\n              this.assigneePolicyHolder.documentCode = ben.codDocum;\n              this.assigneePolicyHolder.documentType = ben.tipDocum;\n              this.assigneePolicyHolder.isExisting = true;\n            } else if (ben.tipBenef == 8) {\n              this.showMortgagee = true;\n              this.mortgageePolicyHolder.documentCode = ben.codDocum;\n              this.mortgageePolicyHolder.documentType = ben.tipDocum;\n              this.mortgageePolicyHolder.isExisting = true;\n            } else if (ben.tipBenef == 20) {\n              var name = \"\";\n              subAgentList.forEach(sa => {\n                if (sa.tipDocum == ben.tipDocum && sa.codDocum == ben.codDocum) {\n                  name = sa.nomCompleto + \"(\" + sa.tipDocum + \")\";\n                }\n              });\n\n              var obj = {name: name, documentCode: ben.codDocum, documentType: ben.tipDocum, beneficiaryType: 20};\n              subAgents.push(obj);\n            }\n          });\n\n          if (subAgents.length > 0) {\n            this.carDetails.subAgents = subAgents;\n          }\n        }\n  \n        this.loadLOVs();\n  \n        const accessories = res.obj[\"accessories\"];\n        if (accessories.length) {\n          //dispalys the accessory panel \n          this.showAccessories = true;\n          //removes all accessories\n          this.removeAccessories();\n          var temp: any[] = [];\n          accessories.forEach((acc: any) => {\n            temp.push({\n              accessory: acc.codAccesorio\n            });\n            this.accessory().push(this.loadAccessory(acc.codAccesorio, acc.nomAgrupAccesorio, acc.impAccesorio, acc.txtAccesorio));\n          });\n          const _this = this;\n          this.cls.getAccessoryList(this.carDetails).then(res => {\n            _this.LOV.accessoryListLOV = res;\n            this.disableAccessory(temp);\n          });\n  \n          var accessoriesForm = this.quoteForm.get('accessories').value;\n          this.carDetails.accessories = accessoriesForm;\n        } else {\n          const _this = this;\n          this.cls.getAccessoryList(this.carDetails).then(res => {\n            _this.LOV.accessoryListLOV = res;\n          });\n          this.carDetails.accessories = [];\n        }\n  \n        this.cqs.getCoverageByProduct(this.carDetails).then(res1 => {\n          const coverageList = res1.obj[\"coverageList\"];\n          const amountList = res1.obj[\"amountList\"];\n          const premiumAmount = res.obj[\"premiumAmount\"];\n          const coverageVariable = res.obj[\"coverageVariable\"];\n          const coverageAmount = res.obj[\"coverageAmount\"];\n  \n          this.populateCoverage(coverageList, amountList, premiumAmount, coverageAmount, coverageVariable);\n        });\n  \n        //breakdwon\n        const breakdown = res.obj[\"breakdown\"];\n        const receipt = res.obj[\"receipt\"];\n        this.populatePaymentBreakdown(breakdown, receipt);\n  \n        //cloning details from load quotation\n        const deepClone = JSON.parse(JSON.stringify(this.carDetails));\n        this.prevCarDetails = deepClone;\n\n        //prevent to post policy if quotation has technical control\n        const technicalControl = res.obj[\"technicalControl\"];\n        if (generalInfo.mcaProvisional == \"S\" && technicalControl.length > 0) {\n          this.withTechControl = true;\n          this.editMode = false;\n          this.modalRef = Utility.showError(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.obj['message']);\n        this.carDetails.quotationNumber = \"\";\n      }\n    }).finally(() => {\n      //trigger child component load quotation function\n      this.triggerCounter = this.triggerCounter + 1;\n    });\n  }\n\n  //loading of all LOV's for load quotation\n  loadLOVs() {\n    var _this = this;\n    //loading risk information\n    this.quoteForm.get('make').markAsDirty();\n    this.quoteForm.get('model').markAsDirty();\n    this.cls.getModelList(this.carDetails).then(res => {\n      _this.LOV.modelLOV = res;\n    });\n\n    this.quoteForm.get('vehicleType').markAsDirty();\n    this.cls.getVehicleTypeList(this.carDetails).then(res => {\n      _this.LOV.vehicleTypeLOV = res;\n    });\n\n    this.quoteForm.get('modelYear').markAsDirty();\n    this.cls.getModelYearList(this.carDetails).then(res => {\n      _this.LOV.modelYearLOV = res;\n    });\n\n    this.quoteForm.get('subModel').markAsDirty();\n    this.cls.getSubModelList(this.carDetails).then(res => {\n      _this.LOV.subModelLOV = res;\n    });\n\n    this.quoteForm.get('typeOfUse').markAsDirty();\n    this.cls.getTypeOfUseList(this.carDetails).then(res => {\n      _this.LOV.typeOfUseLOV = res;\n    });\n\n    this.quoteForm.get('subline').markAsDirty();\n    // var qqDetails = new QQCar;\n    // qqDetails.vehicleType = this.carDetails.vehicleType;\n    // qqDetails.typeOfUse = this.carDetails.typeOfUse;\n    // this.cus.getSubline(qqDetails).then(res => {\n    this.cus.getSubline(this.carDetails).then(res => {\n      _this.LOV.sublineLOV = res.obj[\"list\"];\n    });\n\n    //loading vehicle information\n    this.quoteForm.get('areaOfUsage').markAsDirty();\n    this.cls.getAreaOfUsage(this.carDetails).then(res => {\n      _this.LOV.areaOfUsageLOV = res;\n    });\n\n    this.cls.getRegistrationType().then(res => {\n      _this.LOV.registrationTypeLOV = res;\n    });\n\n    this.cls.getMVType().then(res => {\n      _this.LOV.mvTypeLOV = res;\n    });\n\n    this.quoteForm.get('paymentMethod').markAsDirty();\n    this.cls.getPaymentPlan(this.carDetails).then(res => {\n      _this.LOV.paymentMethodLOV = res;\n    });\n\n    this.quoteForm.get('product').markAsDirty();\n    this.cls.getProduct(this.carDetails).then(res => {\n      let avalidableProducts = [];\n      res.forEach((e) => {\n        //removing not MSO products\n        if (e.COD_MODALIDAD != 10011 && e.COD_MODALIDAD != 10010) {\n          avalidableProducts.push(e);\n        }\n      });\n      _this.LOV.productListLOV = avalidableProducts;\n    });\n  }\n\n  setValidations() {\n    var conductionNumber = this.quoteForm.get('conductionNumber');\n    var plateNumber = this.quoteForm.get('plateNumber');\n    var effectivityDate = this.quoteForm.get('effectivityDate');\n    var vehicleType = this.quoteForm.get('vehicleType');\n    var quotationNumber = this.quoteForm.get('quotationNumber');\n    var cbVehicleMortgaged = this.quoteForm.get('cbVehicleMortgaged');\n    var mortgageClause = this.quoteForm.get('mortgageClause');\n\n    // if vehicle type is trailer, remove plate number required validation\n    vehicleType.valueChanges.pipe(distinctUntilChanged()).subscribe(type => {\n      if (type == 30) {\n        Utility.updateValidator(plateNumber, null);\n      }\n    });\n\n    //if has conduction number, plate number is not required / if subline is motorcycle\n    conductionNumber.valueChanges.pipe(distinctUntilChanged()).subscribe(number => {\n      Utility.updateValidator(plateNumber, !Utility.isUndefined(number) ? null : vehicleType.value == 30 ? null : this.carDetails.subline === 120 ? null : Validators.required);\n    });\n\n    //if has plate number, conduction number is not required / if subline is motorcycle\n    plateNumber.valueChanges.pipe(distinctUntilChanged()).subscribe(number => {\n      Utility.updateValidator(conductionNumber, !Utility.isUndefined(number) ? null : this.carDetails.subline === 120 ? null : Validators.required);\n    });\n\n    effectivityDate.valueChanges.pipe(distinctUntilChanged()).subscribe(date => {\n      this.carDetails.expiryDate = moment(date).add(1, 'years').toDate();\n      this.expiryDateMinDate = this.carDetails.expiryDate;\n    });\n\n    quotationNumber.valueChanges.subscribe(number => {\n      this.disableLoadBtn = Utility.isUndefined(number);\n    });\n\n    cbVehicleMortgaged.valueChanges.subscribe(mortgaged => {\n      Utility.updateValidator(mortgageClause, mortgaged ? Validators.required : null);\n      this.carDetails.mortgageClause = mortgaged ? 1 : null;\n    });\n  }\n\n  accessory(): FormArray {\n    return this.quoteForm.get(\"accessories\") as FormArray;\n  }\n\n  newAccessory(): FormGroup {\n    return this.fb.group({\n      accessory: ['', Validators.required],\n      accessoryType: ['', Validators.required],\n      price: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n  }\n\n  loadAccessory(accessory: number, accessoryType: string, price: number, description: string): FormGroup {\n    return this.fb.group({\n      accessory: [accessory, Validators.required],\n      accessoryType: [accessoryType, Validators.required],\n      price: [price, Validators.required],\n      description: [description, Validators.required]\n    });\n  }\n\n  addAccessory() {\n    this.disableAccessory();\n    this.accessory().push(this.newAccessory());\n  }\n\n  removeAccessory(index: number) {\n    this.accessory().removeAt(index);\n    this.disableAccessory();\n  }\n\n  disableAccessory(acc ? : any[]) {\n    var accessories = Utility.isUndefined(acc) ? this.quoteForm.get('accessories').value : acc;\n    if (accessories.length > 0) {\n      var temp = [];\n      accessories.forEach(accessory => {\n        temp.push(accessory.accessory);\n      });\n      this.LOV.accessoryListLOV.forEach(accessory => {\n        accessory.disabled = temp.indexOf(accessory.COD_ACCESORIO) !== -1;\n      });\n    }\n  }\n\n  removeAccessories() {\n    // removing all accessories\n    var accessories = this.quoteForm.get('accessories').value;\n    if (accessories.length > 0) {\n      // loop until all accessories removed\n      this.accessory().removeAt(0);\n      this.removeAccessories();\n    }\n  }\n\n  clearRiskDetails(level: number, type ? : boolean) {\n    //if user changes car make\n    if (level <= 1) {\n      this.LOV.modelLOV = [];\n      this.carDetails.model = undefined;\n      this.quoteForm.get('model').reset();\n    }\n    //if user changes car model\n    if (level <= 2) {\n      this.LOV.vehicleTypeLOV = [];\n      this.carDetails.vehicleType = undefined;\n      this.quoteForm.get('vehicleType').reset();\n    }\n    //if user changes vehicle type\n    if (level <= 3) {\n      this.LOV.modelYearLOV = [];\n      this.carDetails.modelYear = undefined;\n      this.quoteForm.get('modelYear').reset();\n    }\n    //if user changes car model year\n    if (level <= 4) {\n      this.LOV.subModelLOV = [];\n      this.LOV.typeOfUseLOV = [];\n      this.carDetails.subModel = undefined;\n      this.carDetails.typeOfUse = undefined;\n      this.quoteForm.get('subModel').reset();\n      this.quoteForm.get('typeOfUse').reset();\n    }\n    //if user changes car sub model or type of use\n    if (level <= 5) {\n      this.removeAccessories();\n      if (level == 5) {\n        if (type) {\n          //if user changes type of use\n          this.LOV.sublineLOV = [];\n          this.carDetails.subline = undefined;\n          this.quoteForm.get('subline').reset();\n        } else {\n          //if user changes sub model\n          this.carDetails.vehicleValue = undefined;\n          this.quoteForm.get('vehicleValue').reset();\n        }\n      } else {\n        //if level is below 5, subline and vehicle value will reset\n        this.LOV.sublineLOV = [];\n        this.carDetails.subline = undefined;\n        this.carDetails.vehicleValue = undefined;\n        this.quoteForm.get('subline').reset();\n        this.quoteForm.get('vehicleValue').reset();\n      }\n    }\n  }\n\n  makeOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(1);\n    this.carDetails.make = _carDetails.make;\n\n    var _this = this;\n    this.cls.getModelList(this.carDetails).then(res => {\n      _this.LOV.modelLOV = res;\n    });\n  }\n\n  modelOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(2);\n    this.carDetails.make = _carDetails.make;\n\n    var _this = this;\n    this.cls.getVehicleTypeList(this.carDetails).then(res => {\n      _this.LOV.vehicleTypeLOV = res;\n    });\n  }\n\n  vehicleTypeOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(3);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n\n    if (this.carDetails.vehicleType > 0) {\n      var _this = this;\n      this.cls.getModelYearList(this.carDetails).then(res => {\n        _this.LOV.modelYearLOV = res;\n      });\n    }\n  }\n\n  modelYearOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(4);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n    this.carDetails.vehicleType = _carDetails.vehicleType;\n\n    if (this.carDetails.modelYear != '') {\n      var _this = this;\n      this.cls.getSubModelList(this.carDetails).then(res => {\n        _this.LOV.subModelLOV = res;\n      });\n      this.cls.getTypeOfUseList(this.carDetails).then(res => {\n        _this.LOV.typeOfUseLOV = res;\n      });\n    }\n  }\n\n  subModelOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(5, false);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n    this.carDetails.vehicleType = _carDetails.vehicleType;\n    this.carDetails.modelYear = _carDetails.modelYear;\n    this.carDetails.typeOfUse = _carDetails.typeOfUse;\n    this.carDetails.subline = _carDetails.subline;\n    this.getVehicleValue();\n  }\n\n  typeOfUseOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(5, true);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n    this.carDetails.vehicleType = _carDetails.vehicleType;\n    this.carDetails.modelYear = _carDetails.modelYear;\n    this.carDetails.subModel = _carDetails.subModel;\n    this.carDetails.vehicleValue = _carDetails.vehicleValue;\n    this.getSubline();\n  }\n\n  getVehicleValue() {\n    const _this = this;\n    // var qqDetails = new QQCar;\n    // qqDetails.make = this.carDetails.make;\n    // qqDetails.model = this.carDetails.model;\n    // qqDetails.subModel = this.carDetails.subModel;\n    // qqDetails.modelYear = this.carDetails.modelYear;\n    // this.cus.getFMV(qqDetails).then(res => {\n      this.cus.getFMV(this.carDetails).then(res => {\n      _this.carDetails.vehicleValue = res.obj[\"fmv\"];\n    });\n  }\n\n  getSubline() {\n    const _this = this;\n    // var qqDetails = new QQCar;\n    // qqDetails.vehicleType = this.carDetails.vehicleType;\n    // qqDetails.typeOfUse = this.carDetails.typeOfUse;\n    // this.cus.getSubline(qqDetails).then(res => {\n    this.cus.getSubline(this.carDetails).then(res => {\n      _this.LOV.sublineLOV = res.obj[\"list\"];\n    });\n  }\n\n  sublineOnchange(event: any) {\n    var options = event.target.options;\n    if (options.length) {\n      //effectivity date is based on selected subline\n      var selectedIndex = event.target.options.selectedIndex;\n      var effectivityDate = event.target.options[selectedIndex].dataset.sublinedate;\n\n      //effectivity date change format\n      var d = moment(effectivityDate, 'DDMMYYYY').format('MMDDYYYY');\n      this.carDetails.sublineEffectivityDate = d.toString();\n    }\n\n    const _this = this;\n    this.cls.getAreaOfUsage(this.carDetails).then(res => {\n      _this.LOV.areaOfUsageLOV = res;\n    });\n\n    this.cls.getAccessoryList(this.carDetails).then(res => {\n      _this.LOV.accessoryListLOV = res;\n    });\n    this.removeAccessories();\n\n    this.cls.getRegistrationType().then(res => {\n      _this.LOV.registrationTypeLOV = res;\n    });\n\n    this.cls.getMVType().then(res => {\n      _this.LOV.mvTypeLOV = res;\n    });\n\n    this.cls.getPaymentPlan(this.carDetails).then(res => {\n      _this.LOV.paymentMethodLOV = res;\n    });\n\n    this.cls.getProduct(this.carDetails).then(res => {\n      let avalidableProducts = [];\n      res.forEach((e) => {\n        //removing not MSO products\n        if (e.COD_MODALIDAD != 10011 && e.COD_MODALIDAD != 10010) {\n          avalidableProducts.push(e);\n        }\n      });\n      _this.LOV.productListLOV = avalidableProducts;\n    });\n\n    this.cus.getPreAdditionalInfo(this.carDetails).then(res => {\n      if (res.status) {\n        _this.carDetails.weight = res.obj[\"weight\"];\n        _this.carDetails.displacement = res.obj[\"displacement\"];\n        _this.carDetails.customRiskName = res.obj[\"customRiskName\"];\n      }\n    });\n\n    // plate number and conduction number not required if subline is motorcycle(120)\n    Utility.updateValidator(this.quoteForm.get('plateNumber'), this.carDetails.subline === 120 ? null : Validators.required);\n    Utility.updateValidator(this.quoteForm.get('conductionNumber'), this.carDetails.subline === 120 ? null : Validators.required);\n  }\n\n  accessoryOnchange(event: any, index: number) {\n    this.disableAccessory();\n    var options = event.target.options;\n    if (options.length) {\n      var selectedIndex = event.target.options.selectedIndex;\n      var price = event.target.options[selectedIndex].dataset.price;\n      var type = event.target.options[selectedIndex].dataset.type;\n\n      this.accessory().at(index).get('accessoryType').setValue(type == 'A' ? 'Additional' : type == 'B' ? 'Built-In' : 'Free');\n      this.accessory().at(index).get('price').setValue(price);\n    }\n  }\n\n  cbIsNotRequiredAuthNumberChange() {\n    var authNumber = this.quoteForm.get('authNumber');\n    Utility.updateValidator(authNumber, this.carDetails.cbIsNotRequiredAuthNumber ? null : Validators.required);\n  }\n\n  authCOCRegistration() {\n    const lto : LTODetails = new LTODetails; \n\n    var clientName = this.policyHolder.firstName + ' ' + this.policyHolder.lastName;\n    var tinNumber = '000-000-000-000';\n    if (this.policyHolder.documentType === 'TIN') {\n      tinNumber = this.policyHolder.documentCode;\n    }\n\n    lto.assuredName = clientName;\n    lto.assuredTin = tinNumber;\n\n    lto.engineNumber = this.carDetails.engineNumber;\n    lto.chassisNumber = this.carDetails.serialNumber;\n    lto.mvFileNumber = this.carDetails.mvFileNumber;\n    lto.plateNumber = this.carDetails.plateNumber;\n    lto.cocNumber = this.carDetails.cocNumber;\n    lto.inceptionDate = this.carDetails.effectivityDate;\n    lto.expiryDate = this.carDetails.expiryDate;\n    lto.regType = this.carDetails.registrationType;\n    lto.subline = this.carDetails.subline;\n    lto.vehicleType = this.carDetails.vehicleType;\n    lto.typeOfUse = this.carDetails.typeOfUse;\n    lto.mvType = this.carDetails.mvType;\n    lto.classification = this.carDetails.classification;\n\n    this.ltos.authenticateCOCRegistration(lto).then(res => {\n      if (res.status) {\n          var registrationMsg = res.obj['registrationMessage'];\n          var verificationMsg = res.obj['verificationMessage'];\n          \n          var authNumber = registrationMsg.authNo;\n          var registrationErrorMsg = registrationMsg.errorMessage;\n          var verificationErrorMsg = verificationMsg.errorMessage;\n\n          if (registrationErrorMsg !== null) {\n            this.modalRef = Utility.showError(this.bms, registrationErrorMsg);\n          } else {\n            if (authNumber !== null) {\n              this.carDetails.authNumber = registrationMsg.authNo;\n              if (verificationErrorMsg !== null) {\n                this.modalRef = Utility.showError(this.bms, verificationErrorMsg);\n              }\n            } else {\n              this.modalRef = Utility.showWarning(this.bms, \"Warning! No authentication number returned.\");\n            }\n          }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  populateCoverage(coverageList: any[], amountList: any[], premiumAmount: any[], coverageAmount: any[], coverageVariable: any[]) {\n    this.coverageList = coverageList;\n    this.amountList = amountList;\n    this.premiumAmount = premiumAmount;\n    this.coverageAmount = coverageAmount;\n    this.coverageVariable = coverageVariable;\n    this.showCoverage = true;\n    this.triggerCoverage = this.triggerCoverage + 1;\n    Utility.scroll('coverages');\n  }\n\n  populatePaymentBreakdown(breakdown: any[], receipt: {}) {\n    this.paymentBreakdown = breakdown;\n    this.paymentReceipt = receipt;\n    this.showPaymentBreakdown = true;\n    this.triggerBreakdown = this.triggerBreakdown + 1;\n  }\n\n  scrollTo(id: string) {\n    Utility.scroll(id);\n  }\n\n  test(q: FormGroup, g: FormGroup, c: FormGroup) {\n    let invalid = [];\n\n    invalid = this.findInvalidControls(invalid, q);\n    invalid = this.findInvalidControls(invalid, g);\n    invalid = this.findInvalidControls(invalid, c);\n    alert(invalid);\n  }\n\n  public findInvalidControls(invalid: any[], form: FormGroup) {\n    const controls = form.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n        invalid.push(name);\n      }\n      if (controls[name].pristine) {\n        invalid.push(name);\n      }\n    }\n    return invalid;\n  }\n\n  proceed(type: number) {\n    //if user changes affecting values\n    const hasAffectingAccessories = this.checkAffectingAccessories();\n    const hasChanges = this.changedValues.length != 0 || hasAffectingAccessories;\n    this.includeCoverage = !hasChanges;\n\n    const hasQuotationNumber = !Utility.isUndefined(this.carDetails.quotationNumber);\n    const isTemporaryQuotation = hasQuotationNumber && this.carDetails.quotationNumber.startsWith('999');\n    this.carDetails.affecting = !hasQuotationNumber ||\n      (hasQuotationNumber && isTemporaryQuotation) ||\n      (hasQuotationNumber && !isTemporaryQuotation && hasChanges);\n    if (hasChanges) {\n      this.openProceedModal(type);\n    } else {\n      switch (type) {\n        case 1: {\n          this.issueQuote('S');\n          break;\n        }\n        case 2: {\n          this.issueQuote('N');\n          break;\n        }\n        case 3: {\n          this.savePolicy();\n          break;\n        }\n        default: {\n          this.postPolicy();\n          break;\n        }\n      }\n    }\n  }\n\n  checkAffectingAccessories() {\n    let hasAccessoryChanges = false;\n\n    if (!Utility.isUndefined(this.prevCarDetails)) {\n      this.changedAccessoryValues = [];\n\n      var accessories = this.quoteForm.get('accessories').value;\n      const length = accessories.length;\n      let prevlength = 0;\n      if ('accessories' in this.prevCarDetails) {\n        const prevAccessories = this.prevCarDetails.accessories;\n        prevlength = prevAccessories.length;\n        if (prevlength != length) {\n          if (prevlength > length) {\n            var diff = prevlength - length;\n            var label = diff == 1 ? \" accessory\" : \" accessories\";\n            this.changedAccessoryValues.push(\n              \"Accessory: Deleted \" + diff + label);\n          } else {\n            var diff = length - prevlength;\n            var label = diff == 1 ? \" accessory\" : \" accessories\";\n            this.changedAccessoryValues.push(\n              \"Accessory: Added \" + diff + label);\n          }\n        }\n\n        prevAccessories.forEach((acc : Accessory) => {\n          let matched = false;\n          accessories.forEach((acc1: Accessory) => {\n            if (acc.accessory == acc1.accessory) {\n              matched = true;\n              if (acc.description != acc1.description) {\n                this.changedAccessoryValues.push(\n                  \"Accessory Description: Changed \" + acc.description + \" to \" + acc1.description);\n              }\n              if (acc.price != acc1.price) {\n                this.changedAccessoryValues.push(\n                  \"Accessory Price: Changed \" + acc.price + \" to \" + acc1.price);\n              }\n            }\n          });\n          if (!matched) {\n            this.changedAccessoryValues.push(\n              \"Accessory: Changed Accessory List\");\n          }\n        });\n      }\n      hasAccessoryChanges = this.changedAccessoryValues.length > 0;\n    }\n\n    return hasAccessoryChanges;\n  }\n\n  openProceedModal(type: number): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      generateBtn: type == 1 || type == 2 || type == 3,\n      saveBtn: type == 4\n    };\n\n    this.dialogRef = this.dialog.open(this.proceedModal, dialogConfig);\n  }\n\n  openValidationModal(q: FormGroup, g: FormGroup, c: FormGroup): void {\n    //clear arrays\n    let invalid = [];\n    this.invalidForms = [];\n\n    //list of incorrect label names\n    var formLabels = [{\n        cbOneTripOnly: 'oneTripOnly'\n      },\n      {\n        name: \"client'sName\"\n      }\n    ]\n\n    var quoteArr = Utility.findInvalidControls(q);\n    invalid.push(...quoteArr);\n\n    var groupPolicyArr = Utility.findInvalidControls(g);\n    invalid.push(...groupPolicyArr);\n\n    var policyHolderArr = Utility.findInvalidControls(c);\n    invalid.push(...policyHolderArr);\n\n    invalid.forEach((i) => {\n      formLabels.forEach(f => {\n        var correctLabel = f[i];\n        if (!Utility.isUndefined(correctLabel)) {\n          //replace label\n          i = correctLabel;\n        }\n      });\n\n      let label: string = i.replace(/([A-Z])/g, ' $1').trim();\n      this.invalidForms.push(label.toLowerCase());\n    });\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n\n    this.dialogRef = this.dialog.open(this.validationModal, dialogConfig);\n  }\n\n  openPaymentBreakdownModal(receipt: any, breakdown: any, isPostPolicy: boolean) {\n    let product = \"\";\n    this.LOV.productListLOV.forEach((p) => {\n      if (p.COD_MODALIDAD == this.carDetails.productList) {\n        product = p.NOM_MODALIDAD;\n      }\n    });\n\n    let payment = \"\";\n    this.LOV.paymentMethodLOV.forEach((p) => {\n      if (p.COD_FRACC_PAGO == this.carDetails.paymentMethod) {\n        payment = p.NOM_FRACC_PAGO;\n      }\n    });\n\n    const modalData = {\n      number: isPostPolicy ? this.carDetails.policyNumber : this.carDetails.quotationNumber,\n      product: product,\n      payment: payment,\n      receipt: receipt,\n      breakdown: breakdown,\n      showExchangeRate: false,\n      isPostPolicy: isPostPolicy,\n      line: 'CAR'\n    };\n\n    this.dialog.open(PaymentBreakdownModalComponent, {\n      width: '1000px',\n      data: modalData\n    });\n  }\n\n  manageBtn(opt: number, isModified ? : boolean) {\n    if (opt == 1) {\n      //hides payment breakdown panel\n      this.showPaymentBreakdown = false;\n\n      // flag to edit coverage\n      const modified = !Utility.isUndefined(isModified);\n\n      this.editMode = !modified;\n      this.showCoverage = modified;\n      this.isModifiedCoverage = modified;\n      if (modified) {\n        Utility.scroll('coverages');\n      }\n    }\n\n    if (this.isIssuance) {\n      this.showIssuanceGenerateBtn = (opt == 1);\n      this.showSaveBtn = (opt == 2);\n      this.showPostBtn = (opt == 3);\n      this.showPrintBtn = (opt == 4);\n      this.showNewPolicyBtn = (opt == 5);\n    } else {\n      this.showGenerateBtnGrp = (opt == 1);\n      this.showIssueQuoteBtnGrp = (opt == 2);\n      this.showProceedToIssuanceBtnGrp = (opt == 3);\n    }\n  }\n\n  newQuote() {\n    this.newPage(page.QUO.CAR);\n  }\n\n  newPolicy() {\n    this.newPage(page.ISS.CAR);\n  }\n\n  newPage(page : string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n\n  affecting(key: string, label: string) {\n    if (!Utility.isUndefined(this.carDetails.quotationNumber) && this.prevCarDetails != null) {\n      let prev = this.prevCarDetails[key] == undefined ? \"\" : this.prevCarDetails[key];\n      let curr = this.carDetails[key] == undefined ? \"\" : this.carDetails[key];\n      if (curr instanceof Date) {\n        curr = curr.getMonth() + \"/\" + curr.getDate() + \"/\" + curr.getFullYear();\n        if (!Utility.isUndefined(prev)) {\n          var prevDate = new Date(prev);\n          prev = prevDate.getMonth() + \"/\" + prevDate.getDate() + \"/\" + prevDate.getFullYear();\n        }\n      }\n\n      if (prev != curr) {\n        if (!this.changedValues.includes(label)) {\n          //if changedValues length is greater than 0, request is affecting\n          this.changedValues.push(label);\n        }\n      } else {\n        //remove all occurence\n        this.changedValues = this.changedValues.filter(v => v !== label);\n      }\n    }\n  }\n\n  printQuote() {\n    this.cqs.printQuote(this.carDetails.quotationNumber);\n  }\n\n  printPolicy() {\n    this.cqs.printPolicy(this.carDetails.policyNumber);\n  }\n\n  proceedToIssuance() {\n    this.cqs.proceedToIssuance(this.carDetails.quotationNumber);\n  }\n\n  populateAdditionalInfo(variableData: any[]) {\n    variableData.forEach(v => {\n      const code = v.codCampo;\n      const value: string = v.valCampo;\n      let valueInt: number = undefined;\n\n      try {\n        valueInt = parseInt(value);\n      } catch (e) {\n        // do nothing\n      }\n\n      switch (code) {\n        case \"NUM_PLAZAS\": {\n          this.carDetails.seatingCapacity = valueInt;\n          break;\n        }\n        case \"VAL_PESO\": {\n          this.carDetails.weight = value;\n          break;\n        }\n        case \"VAL_CC\": {\n          this.carDetails.displacement = value;\n          break;\n        }\n        case \"TIP_VEHI_PESO\": {\n          this.carDetails.classification = valueInt;\n          break;\n        }\n        case \"NUM_COC\": {\n          this.carDetails.cocNumber = value;\n          break;\n        }\n\n        default: {\n          // do nothing\n        }\n      }\n    });\n  }\n\n  //generate and issue quote button\n  issueQuote(mcaTmpPptoMph: string) {\n    // S for generation and N for issue quotation\n    this.carDetails.mcaTmpPptoMph = mcaTmpPptoMph;\n    this.carDetails.isModifiedCoverage = this.isModifiedCoverage;\n\n    // includes group policy to car details DTO\n    this.carDetails.groupPolicy = this.groupPolicy;\n    // includes policy holder to car details DTO\n    this.carDetails.policyHolder = this.policyHolder;\n    // includes coverage variable data to car details DTO\n    this.carDetails.coverageVariableData = this.coverageVariableData;\n\n    // includes accessories to car details DTO\n    var accessories = this.quoteForm.get('accessories').value;\n    this.carDetails.accessories = accessories.length ? accessories : [];\n\n    // includes coverages to car details DTO\n    this.carDetails.coverages = [];\n    if (!Utility.isUndefined(this.appCoverage) && (this.carDetails.isModifiedCoverage || this.includeCoverage)) {\n      var coverages = this.appCoverage.cForm.get('coverages').value;\n      this.carDetails.coverages = coverages.length ? coverages : [];\n    }\n\n    // to trigger changes when regenerating quotation\n    this.showPaymentBreakdown = false;\n    this.showCoverage = false;\n\n    this.cqs.getCoverageByProduct(this.carDetails).then(res => {\n      this.cqs.issueQuote(this.carDetails).then(res1 => {\n        if (res1.status) {\n          //clear affecting fields\n          this.changedValues = [];\n\n          const items = this.getErrorItems(res1, mcaTmpPptoMph, false);\n          const status = res1.obj[\"status\"];\n          const coverageAmount = res1.obj[\"coverageAmount\"];\n          if (status && coverageAmount.length) {\n            //duplicating car details for comparison\n            const deepClone = JSON.parse(JSON.stringify(this.carDetails));\n            this.prevCarDetails = deepClone;\n\n            this.editMode = false;\n            this.hasRoadAssist = res1.obj[\"hasRoadAssist\"];\n            const errorCode = res1.obj[\"errorCode\"];\n            if (errorCode == \"S\") {\n              //if quotation has a warning\n              this.modalRef = Utility.showHTMLWarning(this.bms, items);\n            }\n\n            const policyNumber = res1.obj[\"policyNumber\"];\n            this.carDetails.quotationNumber = policyNumber;\n\n            const breakdown = res1.obj[\"breakdown\"];\n            const receipt = res1.obj[\"receipt\"];\n\n            if (\"S\" == mcaTmpPptoMph) {\n              //for generation of quote\n              const message = \"You have successfully generated a quotation - \" + policyNumber;\n              this.modalRef = Utility.showInfo(this.bms, message);\n\n              const coverageList = res.obj[\"coverageList\"];\n              const amountList = res.obj[\"amountList\"];\n              const premiumAmount = res1.obj[\"premiumAmount\"];\n              const coverageVariable = res1.obj[\"coverageVariable\"];\n              const variableData = res1.obj['variableData'];\n\n              this.populateCoverage(coverageList, amountList, premiumAmount, coverageAmount, coverageVariable);\n              this.populateAdditionalInfo(variableData);\n\n              this.isModifiedCoverage = false;\n              this.populatePaymentBreakdown(breakdown, receipt);\n              this.manageBtn(2);\n            } else {\n              // for issuing the quote\n              this.openPaymentBreakdownModal(receipt, breakdown, false);\n              this.manageBtn(3);\n            }\n          } else {\n            this.modalRef = Utility.showHTMLError(this.bms, items);\n          }\n        } else {\n          this.modalRef = Utility.showError(this.bms, res1.message);\n        }\n      });\n    });\n  }\n\n  assembleIssuePolicyData() {\n    // always N for issue policy\n    this.carDetails.mcaTmpPptoMph = \"N\";\n    this.carDetails.isModifiedCoverage = this.isModifiedCoverage;\n\n    // includes group policy to car details DTO\n    this.carDetails.groupPolicy = this.groupPolicy;\n    // includes policy holder to car details DTO\n    this.carDetails.policyHolder = this.policyHolder;\n    // includes secondary policy holder to car details DTO\n    this.carDetails.secondaryPolicyHolder = this.secondaryPolicyHolder;\n    // includes assignee policy holder to car details DTO\n    this.carDetails.assigneePolicyHolder = this.assigneePolicyHolder;\n    // includes mortgagee policy holder to car details DTO\n    this.carDetails.mortgageePolicyHolder = this.mortgageePolicyHolder;\n    // includes coverage variable data to car details DTO\n    this.carDetails.coverageVariableData = this.coverageVariableData;\n\n    // includes accessories to car details DTO\n    var accessories = this.quoteForm.get('accessories').value;\n    this.carDetails.accessories = accessories.length ? accessories : [];\n\n    // includes coverages to car details DTO\n    this.carDetails.coverages = [];\n    if (!Utility.isUndefined(this.appCoverage) && (this.carDetails.isModifiedCoverage || this.includeCoverage)) {\n      var coverages = this.appCoverage.cForm.get('coverages').value;\n      this.carDetails.coverages = coverages.length ? coverages : [];\n    }\n  }\n\n  //getting error or warning items\n  getErrorItems(res1: ReturnDTO, mcaTmpPptoMph: string, isIssuance: boolean) {\n    this.withTechControl = false;\n    const resCoverageAmount = res1.obj[\"coverageAmount\"];\n    const resErrorCode = res1.obj[\"errorCode\"];\n    const resError = res1.obj[\"error\"];\n\n    const coverageAmountIsUndefined = Utility.isUndefined(resCoverageAmount);\n    const isPostPolicy = coverageAmountIsUndefined && Utility.isUndefined(resErrorCode);\n    let items: any[] = isPostPolicy ?\n      [\"Error occured while posting policy. Please contact administration.\"] :\n      [\"Error code is \" + resErrorCode + \" but does not return any error message. Please contact administration.\"];\n\n    if (!Utility.isUndefined(resError)) {\n      const errArr = resError.split(\"~\");\n      if (errArr.length) {\n        var arr = [];\n        errArr.forEach((err: string) => {\n          if (!Utility.isEmpty(err)) {\n            arr.push(err);\n          }\n        });\n\n        const resStatus = res1.obj[\"status\"];\n        if (arr.length) {\n          if (!resStatus && (isPostPolicy || (coverageAmountIsUndefined && !resCoverageAmount.length))) {\n            //has error - can't proceed\n            items = [\"Failed to generate quotation number due to following reason/s:\"].concat(arr);\n          } else {\n            this.withTechControl = true;\n            // has warning - can proceed\n            if (isIssuance) {\n              items = [\"Quotation has technical control due to following reason/s:\"].concat(arr);\n            } else {\n              items = (\"N\" == mcaTmpPptoMph) ? [\"Routed for approval due to following reason/s:\"].concat(arr) : arr;\n            }\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  //save policy button\n  savePolicy() {\n    this.assembleIssuePolicyData();\n\n    // to trigger changes when regenerating quotation\n    this.showCoverage = false;\n    this.showPaymentBreakdown = false;\n\n    this.cqs.getCoverageByProduct(this.carDetails).then(res => {\n      this.cqs.savePolicy(this.carDetails).then(res1 => {\n        if (res1.status) {\n          //clear affecting fields\n          this.changedValues = [];\n\n          var items = this.getErrorItems(res1, this.carDetails.mcaTmpPptoMph, true);\n          const status = res1.obj[\"status\"];\n          const coverageAmount = res1.obj[\"coverageAmount\"];\n          if (status && coverageAmount.length) {\n            //duplicating car details for comparison\n            const deepClone = JSON.parse(JSON.stringify(this.carDetails));\n            this.prevCarDetails = deepClone;\n\n            this.editMode = false;\n\n            this.hasRoadAssist = res1.obj[\"hasRoadAssist\"];\n\n            const errorCode = res1.obj[\"errorCode\"];\n            const policyNumber = res1.obj[\"policyNumber\"];\n            this.carDetails.quotationNumber = policyNumber;\n\n            const message = \"You have successfully generated a new quotation: \" + policyNumber;\n            this.modalRef = Utility.showInfo(this.bms, message);\n\n            const coverageList = res.obj[\"coverageList\"];\n            const amountList = res.obj[\"amountList\"];\n            const premiumAmount = res1.obj[\"premiumAmount\"];\n            const coverageVariable = res1.obj[\"coverageVariable\"];\n\n            this.populateCoverage(coverageList, amountList, premiumAmount, coverageAmount, coverageVariable);\n            this.isModifiedCoverage = false;\n\n            const breakdown = res1.obj[\"breakdown\"];\n            const receipt = res1.obj[\"receipt\"];\n            this.populatePaymentBreakdown(breakdown, receipt);\n\n            this.withTechControl = errorCode == 'S';\n            if (this.withTechControl) {\n              //if quotation has a warning\n              if (this.carDetails.affecting) {\n                items = [\"Updated quotation number is: \" + policyNumber].concat(items);\n              }\n              this.modalRef = Utility.showHTMLWarning(this.bms, items);\n            } else {\n              const message = \"Policy saved successfully.\";\n              this.modalRef = Utility.showInfo(this.bms, message);\n            }\n            this.editMode = false;\n            this.manageBtn(3);\n          } else {\n            this.modalRef = Utility.showHTMLError(this.bms, items);\n          }\n        } else {\n          this.modalRef = Utility.showError(this.bms, res1.message);\n        }\n      });\n    });\n  }\n\n  //post policy button\n  postPolicy() {\n    this.assembleIssuePolicyData();\n\n    // hides coverage and payment breakdown\n    this.showCoverage = false;\n    this.showPaymentBreakdown = false;\n\n    if (this.withTechControl) {\n      this.modalRef = Utility.showWarning(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n    } else {\n      this.cqs.postPolicy(this.carDetails).then(res1 => {\n        if (res1.status) {\n          //clear affecting fields\n          this.changedValues = [];\n\n          var items = this.getErrorItems(res1, this.carDetails.mcaTmpPptoMph, true);\n          const status = res1.obj[\"status\"];\n          const policyNumber = res1.obj[\"policyNumber\"];\n          if (status && !Utility.isUndefined(policyNumber)) {\n            this.editMode = false;\n            this.carDetails.policyNumber = policyNumber;\n\n            this.isModifiedCoverage = false;\n            const breakdown = res1.obj[\"breakdown\"];\n            const receipt = res1.obj[\"receipt\"];\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.openPaymentBreakdownModal(receipt, breakdown, true);\n            this.manageBtn(4);\n          } else {\n            this.manageBtn(5);\n            this.modalRef = Utility.showHTMLError(this.bms, items);\n          }\n        } else {\n          this.manageBtn(5);\n          this.modalRef = Utility.showError(this.bms, res1.message);\n        }\n      });\n    }\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVvdGF0aW9uLWhvbWUvcXVvdGF0aW9uLWhvbWUuY29tcG9uZW50LmNzcyJ9 */\";","import {\n  Component,\n  OnInit,\n  AfterViewChecked,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray\n} from '@angular/forms';\nimport {\n  distinctUntilChanged\n} from 'rxjs/operators';\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef\n} from '@angular/material';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport * as moment from 'moment';\nimport {\n  Home\n} from '../../objects/Home';\nimport {\n  GroupPolicy\n} from 'src/app/objects/GroupPolicy';\nimport {\n  HomeListObject\n} from 'src/app/objects/LOV/homeList';\nimport {\n  GroupPolicyListObject\n} from 'src/app/objects/LOV/groupPolicyList';\nimport {\n  HomeLOVServices\n} from '../../services/lov/home.service';\nimport {\n  HomeIssueServices\n} from '../../services/home-issue.service';\nimport {\n  Globals\n} from 'src/app/utils/global';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  page\n} from 'src/app/constants/page';\nimport {\n  ThirdPartyListObject\n} from 'src/app/objects/LOV/thirdPartyList';\nimport {\n  ThirdPartyLOVServices\n} from 'src/app/services/lov/third-party-lov-service';\nimport {\n  PaymentBreakdownModalComponent\n} from '../payment-breakdown-modal/payment-breakdown-modal.component';\nimport {\n  PrintingService\n} from 'src/app/services/printing.service';\nimport {\n  ReturnDTO\n} from 'src/app/objects/ReturnDTO';\nimport {\n  CarLOVServices\n} from 'src/app/services/lov/car.service';\n\n@Component({\n  selector: 'app-quotation-home',\n  templateUrl: './quotation-home.component.html',\n  styleUrls: ['./quotation-home.component.css']\n})\nexport class QuotationHomeComponent implements OnInit, AfterViewChecked {\n  @ViewChild('proceedModal') proceedModal: TemplateRef < any > ;\n  @ViewChild('validationModal') validationModal: TemplateRef < any > ;\n\n  // currentUser = this.auths.currentUserValue;\n  isIssuance: boolean = Globals.getAppType() == \"I\";\n  isLoadQuotation: boolean = Globals.isLoadQuotation;\n  pageLabel: String = 'Quotation';\n  triggerCounter: number = 0;\n  triggerCoverage: number = 0;\n  triggerBreakdown: number = 0;\n  // insuredHeadCount: number = 1;\n\n  homeDetails = new Home();\n  prevHomeDetails: Home = null;\n  changedValues: any[] = [];\n  hasRSChanges: boolean = false;\n  hasRCChanges: boolean = false;\n\n  invalidForms: any[] = [];\n\n  withTechControl = false;\n\n  groupPolicy = new GroupPolicy();\n  policyHolder = new PolicyHolder();\n  secondaryPolicyHolder = new PolicyHolder();\n  mortgageePolicyHolder = new PolicyHolder();\n  homeAddress = new PolicyHolder();\n  quoteForm: FormGroup;\n  minDate: Date = moment().subtract(65, 'years').toDate();\n  maxDate: Date = moment().subtract(18, 'years').toDate();\n\n  today: Date = new Date();\n  expiryDateMinDate: Date = moment().add(1, 'years').toDate();\n\n  showImprovement = false;\n  showRelatedStructure = false;\n  showRelatedContent = false;\n\n  showOtherOccupation = false;\n  showDetails: boolean = false;\n  showSPADetails: boolean = false;\n  showHCBIDetails: boolean = false;\n  showCoverage: boolean = false;\n  showPaymentBreakdown: boolean = false;\n  showMortgagee: boolean = false;\n\n  //for payment breakdown\n  paymentBreakdown: any[];\n  paymentReceipt: {};\n\n  //for coverage\n  coverageList: any[];\n\n  LOV = new HomeListObject();\n  GPLOV = new GroupPolicyListObject();\n  TPLOV = new ThirdPartyListObject();\n\n  //allow user to edit the form\n  editMode = true;\n\n  //flag to show generate btn\n  showGenerateBtn: boolean = true;\n  //flag to show issue btn\n  showIssueQuoteBtn: boolean = false;\n  //flag to show print quote/proceed to issuance\n  showProceedToIssuanceBtn: boolean = false;\n\n  //flat to show issuance generate btn\n  showIssuanceGenerateBtn = true;\n  //flag to show save btn\n  showSaveBtn: boolean = false;\n  //flag to show post btn\n  showPostBtn: boolean = false;\n  //flag to show print btn\n  showPrintBtn: boolean = false;\n  //flag to show new quote and new policy btn\n  showNewPolicyBtn: boolean = false;\n  //flag to show rate percentage panel\n  showRatePercentage: boolean = false;\n\n  //disable load button\n  disableLoadBtn: boolean = true;\n\n  //modal reference\n  modalRef: BsModalRef;\n  dialogRef: MatDialogRef < TemplateRef < any >> ;\n\n  constructor(\n    private fb: FormBuilder,\n    private hls: HomeLOVServices,\n    private changeDetector: ChangeDetectorRef,\n    private router: Router,\n    private tpls: ThirdPartyLOVServices,\n    private his: HomeIssueServices,\n    private ps: PrintingService,\n    private bms: BsModalService,\n    private cls: CarLOVServices,\n    public dialog: MatDialog,\n  ) {\n    this.createQuoteForm();\n    this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    this.loadInit();\n    if (this.isIssuance) {\n      this.pageLabel = 'Issuance';\n      this.editMode = false;\n      if (this.isLoadQuotation) {\n        //if loaded from home quotation\n        this.editMode = true;\n        this.homeDetails.quotationNumber = Globals.loadNumber;\n        this.loadQuotation();\n        Globals.setLoadNumber('');\n        Globals.setLoadQuotation(false);\n      }\n    }\n  }\n\n  createQuoteForm() {\n    this.quoteForm = this.fb.group({\n      quotationNumber: [null],\n      subline: ['', Validators.required],\n      currency: ['', Validators.required],\n\n      district: this.isIssuance ? ['', Validators.required] : [null],\n      blockNumber: this.isIssuance ? ['', Validators.required] : [null],\n      buildingNumber: [null],\n      subdivision: [null],\n      buildingName: [null],\n      streetName: [null],\n      barangay: [null],\n      region: ['', Validators.required],\n      province: ['', Validators.required],\n      city: ['', Validators.required],\n      \n      //building / content details\n      buildingCapital: ['', Validators.required],\n      contentValue: [null],\n      buildingContent: [null],\n\n      constructionOfBuilding: ['', Validators.required],\n      occupancyOfBuilding: ['', Validators.required],\n      front: ['', Validators.required],\n      right: ['', Validators.required],\n      left: ['', Validators.required],\n      rear: ['', Validators.required],\n      improvement: ['', Validators.min(1)],\n      relatedStructure: this.fb.array([]),\n      relatedContent: this.fb.array([]),\n\n      crestaZone: [null],\n      zipCode: this.isIssuance ? ['', Validators.required] : [null],\n      cbMortgagee: [null],\n\n      warrantedNoLoss: [null],\n\n      ratePercentage: this.isIssuance ? ['', Validators.required] : [null],\n\n      //general information\n      effectivityDate: ['', Validators.required],\n      expiryDate: ['', Validators.required],\n      //product data\n      paymentMethod: ['', Validators.required],\n      product: ['', Validators.required],\n    });\n  }\n\n  loadQuotation() {\n    this.his.loadQuotation(this.homeDetails.quotationNumber).then(res => {\n      if (res.status) {\n        this.showRatePercentage = true;\n        this.editMode = true;\n\n        this.manageBtn(2);\n        const variableData = res.obj[\"variableData\"] as any[];\n        variableData.forEach(v => {\n          const code = v.codCampo;\n          const value: string = v.valCampo;\n          let valueInt: number = undefined;\n          let valueFloat: number = undefined;\n  \n          try {\n            valueInt = parseInt(value);\n          } catch (e) {\n            // do nothing\n          }\n\n          try {\n            valueFloat = parseFloat(value);\n          } catch (e) {\n            // do nothing\n          }\n  \n          switch (code) {\n            case \"COD_DISTRICT\": {\n              this.homeDetails.district = value;\n              break;\n            }\n            case \"NUM_BLOCK_DISTRICT\": {\n              this.homeDetails.blockNumber = value;\n              break;\n            }\n            case \"NUM_HOUSE_LOCATION\": {\n              this.homeDetails.buildingNumber = value;\n              break;\n            }\n            case \"TXT_VILLAGE_SUBDIVISION\": {\n              this.homeDetails.subdivision = value;\n              break;\n            }\n            case \"TXT_BUILDING_NAME\": {\n              this.homeDetails.buildingName = value;\n              break;\n            }\n            case \"TXT_STREET_NAME\": {\n              this.homeDetails.streetName = value;\n              break;\n            }\n            case \"TXT_BARANGAY\": {\n              this.homeDetails.barangay = value;\n              break;\n            }\n            case \"COD_REGION\": {\n              this.homeDetails.region = valueInt;\n              break;\n            }\n            case \"COD_PROVINCE\": {\n              this.homeDetails.province = valueInt;\n              break;\n            }\n            case \"COD_MUNICIPALITY\": {\n              this.homeDetails.city = valueInt;\n              break;\n            }\n            case \"TXT_CONSTRUCTION_BUILDING\": {\n              this.homeDetails.constructionOfBuilding = value;\n              break;\n            }\n            case \"TXT_OCCUPANCY_BUILDING\": {\n              this.homeDetails.occupancyOfBuilding = value;\n              break;\n            }\n\n            case \"TXT_BOUNDARY_DESC1\": {\n              this.homeDetails.front = value;\n              break;\n            }\n            case \"TXT_BOUNDARY_DESC2\": {\n              this.homeDetails.right = value;\n              break;\n            }\n            case \"TXT_BOUNDARY_DESC3\": {\n              this.homeDetails.left = value;\n              break;\n            }\n            case \"TXT_BOUNDARY_DESC4\": {\n              this.homeDetails.rear = value;\n              break;\n            }\n\n            case \"DES_CONTENTS\": {\n              this.homeDetails.buildingContent = value;\n              break;\n            }\n\n            case \"COD_CRESTA_ZONE\": {\n              this.homeDetails.crestaZone = value;\n              break;\n            }\n            case \"NUM_ZIPCODE\": {\n              this.homeDetails.zipCode = valueInt;\n              break;\n            }\n\n            case \"PCT_RATE_MANUAL\": {\n              this.homeDetails.ratePercentage = valueFloat;\n              break;\n            }\n\n            case \"COD_MODALIDAD\": {\n              this.homeDetails.product = valueInt;\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n  \n        const generalInfo = res.obj[\"generalInfo\"];\n        this.homeDetails.subline = generalInfo.codRamo;\n\n        // this.homeDetails.effectivityDate = new Date(generalInfo.fecEfecPoliza);\n        this.quoteForm.get('effectivityDate').setValue(new Date(generalInfo.fecEfecPoliza), {emitEvent:false});\n        // this.homeDetails.expiryDate = new Date(generalInfo.fecVctoPoliza);\n        this.quoteForm.get('expiryDate').setValue(new Date(generalInfo.fecVctoPoliza), {emitEvent:false});\n        this.homeDetails.paymentMethod = generalInfo.codFraccPago;\n  \n        this.groupPolicy = new GroupPolicy;\n        this.groupPolicy.agentCode = generalInfo.codAgt;\n        if (!Utility.isUndefined(generalInfo.numPolizaGrupo)) {\n          this.groupPolicy.groupPolicy = parseInt(generalInfo.numPolizaGrupo);\n        }\n        if (!Utility.isUndefined(generalInfo.numContrato)) {\n          this.groupPolicy.contract = parseInt(generalInfo.numContrato);\n        }\n        if (!Utility.isUndefined(generalInfo.numSubcontrato)) {\n          this.groupPolicy.subContract = parseInt(generalInfo.numSubcontrato);\n        }\n        this.groupPolicy.commercialStructure = generalInfo.codNivel3;\n        this.homeDetails.groupPolicy = this.groupPolicy;\n  \n        const docType = generalInfo.tipDocum;\n        const docCode = generalInfo.codDocum;\n        // preventing generic document type and code\n        if (\"MVO\" != docType && !docCode.startsWith(\"MAPFREXX\")) {\n          this.policyHolder.documentType = docType;\n          this.policyHolder.documentCode = docCode;\n          this.policyHolder.isExisting = true;\n        }\n\n        var relatedStructure = [];\n        var relatedContent = [];\n        const relatedDetails = res.obj[\"relatedDetails\"] as any[];\n        relatedDetails.forEach(i => {\n          const code = i.codCampo;\n          const value: string = i.valCampo;\n          const occurence: number = i.numOcurrencia;\n\n          switch (code) {\n            //related structure\n            case \"VAL_RISK_2157\": {\n              const obj = { val: value, occ: occurence };\n              relatedStructure.push(obj);\n              break;\n            }\n\n            //related content\n            case \"VAL_RISK_2357\": {\n              const obj = { val: value, occ: occurence };\n              relatedContent.push(obj);\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n\n        const buildingCapital = res.obj[\"buildingCapital\"];\n        if (buildingCapital.length != 0) {\n          this.homeDetails.buildingCapital = buildingCapital[0].sumaAseg;\n        }\n\n        const contentValue = res.obj[\"contentValue\"];\n        if (contentValue.length != 0) {\n          this.homeDetails.contentValue = contentValue[0].sumaAseg;\n        }\n\n        const improvement = res.obj[\"improvement\"];\n        if (improvement.length != 0) {\n          this.homeDetails.improvement = improvement[0].sumaAseg;\n        }\n\n        this.relatedStructure().controls.forEach(element => {\n          relatedStructure.forEach(rs => {\n            const stringValue = rs.val;\n            const num = parseInt(stringValue);\n            if (element.value._code == rs.occ && num > 0) {\n              element.get(\"_value\").setValue(stringValue);\n            }\n          });\n        });\n\n        this.relatedContent().controls.forEach(element => {\n          relatedContent.forEach(rs => {\n            const stringValue = rs.val;\n            const num = parseInt(stringValue);\n            if (element.value._code == rs.occ && num > 0) {\n              element.get(\"_value\").setValue(stringValue);\n            }\n          });\n        });\n\n         // includes related structure to home details DTO\n        var rs = this.quoteForm.get('relatedStructure').value;\n        this.homeDetails.relatedStructureDetails = rs.length ? rs : [];\n\n        // includes related content to home details DTO\n        var rc = this.quoteForm.get('relatedContent').value;\n        this.homeDetails.relatedContentDetails = rc.length ? rc : []; \n\n        this.loadLOVs();\n  \n        const coverageList = res.obj[\"coverageList\"];\n        this.populateCoverage(coverageList);\n  \n        //breakdwon\n        const breakdown = res.obj[\"breakdown\"];\n        const receipt = res.obj[\"receipt\"];\n        this.populatePaymentBreakdown(breakdown, receipt);\n  \n        //cloning details from load quotation\n        const deepClone = JSON.parse(JSON.stringify(this.homeDetails));\n        this.prevHomeDetails = deepClone;\n\n        //prevent to post policy if quotation has technical control\n        const technicalControl = res.obj[\"technicalControl\"];\n        if (generalInfo.mcaProvisional == \"S\" && technicalControl.length > 0) {\n          this.withTechControl = true;\n          this.editMode = false;\n          this.modalRef = Utility.showError(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n        this.homeDetails.quotationNumber = \"\";\n      }\n    }).finally(() => {\n      //trigger child component load quotation function\n      this.triggerCounter = this.triggerCounter + 1;\n    });\n  }\n\n  loadLOVs() {\n    var _this = this;\n    this.homeAddress.state = this.homeDetails.region;\n    this.tpls.getProvince(this.homeAddress).then(res => {\n      _this.LOV.provinceLOV = res;\n    });\n\n    this.homeAddress.province = this.homeDetails.province;\n    this.tpls.getCity(this.homeAddress).then(res => {\n      _this.LOV.cityLOV = res;\n    });\n\n    this.homeAddress.city = this.homeDetails.city;\n    this.tpls.getZipCode(this.homeAddress).then(res => {\n      _this.LOV.zipCodeLOV = res;\n    });\n\n    if (!Utility.isUndefined(this.homeDetails.district)) {\n      this.getBlockNumber();\n    }\n  }\n\n  setValidations() {\n    var quotationNumber = this.quoteForm.get('quotationNumber');\n    var effectivityDate = this.quoteForm.get('effectivityDate');\n\n    quotationNumber.valueChanges.subscribe(number => {\n      this.disableLoadBtn = Utility.isUndefined(number);\n    });\n\n    effectivityDate.valueChanges.pipe(distinctUntilChanged()).subscribe(date => {\n      this.homeDetails.expiryDate = moment(date).add(1, 'years').toDate();\n      this.expiryDateMinDate = this.homeDetails.expiryDate;\n    });\n  }\n\n  loadInit() {\n    this.setDefaultValue();\n\n    var _this = this;\n    this.hls.getHomeBusinessLine().then(res => {\n      var temp = [];\n      res.forEach(subline => {\n        //residential only\n        if (subline.COD_RAMO === 200) {\n          temp.push(subline);\n        }\n      });\n      _this.LOV.sublineLOV = temp;\n    });\n\n    this.hls.getCurrency(this.homeDetails).then(res => {\n      _this.LOV.currencyLOV = res;\n    });\n    this.hls.getRelatedStructureProperty(this.homeDetails).then(res => {\n      res.forEach((rs: any) => {\n        this.relatedStructure().push(this.newRelatedDetails(rs.COD_VALOR, rs.NOM_VALOR));\n      });\n    });\n    this.hls.getRelatedContentProperty(this.homeDetails).then(res => {\n      res.forEach((rs: any) => {\n        this.relatedContent().push(this.newRelatedDetails(rs.COD_VALOR, rs.NOM_VALOR));\n      });\n    });\n    this.hls.getProduct(this.homeDetails).then(res => {\n      _this.LOV.productListLOV = res;\n    });\n    this.hls.getPaymentPlan(this.homeDetails).then(res => {\n      _this.LOV.paymentMethodLOV = res;\n    });\n\n    this.tpls.getState(this.homeAddress).then(res => {\n      _this.LOV.regionLOV = res;\n    });\n\n    this.hls.getDistrict().then(res => {\n      _this.LOV.districtLOV = res;\n    });\n  }\n\n  setDefaultValue() {\n    //setting default value\n    this.homeDetails.subline = 200; //residential\n    this.homeDetails.sublineEffectivityDate = \"15102014\";\n    this.homeDetails.effectivityDate = this.today; // current today\n    this.homeDetails.currency = 1; //Philippine peso\n\n    this.homeAddress.country = \"PHL\"; //Philippines\n  }\n\n  relatedStructure(): FormArray {\n    return this.quoteForm.get(\"relatedStructure\") as FormArray\n  }\n\n  relatedContent(): FormArray {\n    return this.quoteForm.get(\"relatedContent\") as FormArray\n  }\n\n  loadRelatedDetails(value: number, code: string, name: string): FormGroup {\n    return this.fb.group({\n      _value: ['', Validators.min(1)],\n      _code: [code],\n      _name: [name]\n    });\n  }\n\n  removeRelatedStructure() {\n    // removing all related structure details\n    var relatedStructure = this.quoteForm.get('relatedStructure').value;\n    if (relatedStructure.length > 0) {\n      // loop until all related structure details removed\n      this.relatedStructure().removeAt(0);\n      this.removeRelatedStructure();\n    }\n  }\n\n  removeRelatedContent() {\n    // removing all related content details\n    var relatedContent = this.quoteForm.get('relatedContent').value;\n    if (relatedContent.length > 0) {\n      // loop until all related structure content removed\n      this.relatedContent().removeAt(0);\n      this.removeRelatedContent();\n    }\n  }\n\n  newRelatedDetails(code: string, name: string): FormGroup {\n    return this.fb.group({\n      _value: ['', Validators.min(1)],\n      _code: [code],\n      _name: [name]\n    });\n  }\n\n  getBlockNumber() {\n    const _this = this;\n    this.hls.getBlockNumber(this.homeDetails.district).then(res => {\n      _this.LOV.blockNumberLOV = res;\n    });\n  }\n\n  getProvince() {\n    const _this = this;\n    this.homeAddress.state = this.homeDetails.region;\n    this.tpls.getProvince(this.homeAddress).then(res => {\n      _this.LOV.provinceLOV = res;\n      this.homeDetails.province = null;\n    });\n  }\n\n  getCity() {\n    const _this = this;\n    this.homeAddress.province = this.homeDetails.province;\n    this.tpls.getCity(this.homeAddress).then(res => {\n      _this.LOV.cityLOV = res;\n      this.homeDetails.city = null;\n    });\n  }\n\n  getZipCode() {\n    const _this = this;\n    this.homeAddress.city = this.homeDetails.city;\n    this.tpls.getZipCode(this.homeAddress).then(res => {\n      _this.LOV.zipCodeLOV = res;\n      this.homeDetails.zipCode = null;\n    });\n  }\n\n  populateCoverage(coverageList: any[]) {\n    this.coverageList = coverageList;\n    this.showCoverage = true;\n    this.triggerCoverage = this.triggerCoverage + 1;\n  }\n\n  populatePaymentBreakdown(breakdown: any[], receipt: {}) {\n    this.paymentBreakdown = breakdown;\n    this.paymentReceipt = receipt;\n    this.showPaymentBreakdown = true;\n    this.triggerBreakdown = this.triggerBreakdown + 1;\n    Utility.scroll('paymentBreakdown');\n  }\n\n  proceed(type: number) {\n    //checking the affecting related details\n    this.hasAffectingRelatedDetails();\n    //if user changes affecting values\n    const hasChanges = this.changedValues.length != 0 || this.hasRSChanges || this.hasRCChanges;\n\n    const hasQuotationNumber = !Utility.isUndefined(this.homeDetails.quotationNumber);\n    const isTemporaryQuotation = hasQuotationNumber && this.homeDetails.quotationNumber.startsWith('999');\n    this.homeDetails.affecting = !hasQuotationNumber ||\n      (hasQuotationNumber && isTemporaryQuotation) ||\n      (hasQuotationNumber && !isTemporaryQuotation && hasChanges);\n    if (hasChanges) {\n      this.openProceedModal(type);\n    } else {\n      switch (type) {\n        case 1: {\n          this.issueQuote('S');\n          break;\n        }\n        case 2: {\n          this.issueQuote('N');\n          break;\n        }\n        case 3: {\n          this.savePolicy();\n          break;\n        }\n        default: {\n          this.postPolicy();\n          break;\n        }\n      }\n    }\n  }\n\n  openProceedModal(type: number): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      generateBtn: type == 1 || type == 2 || type == 3,\n      saveBtn: type == 4\n    };\n\n    this.dialogRef = this.dialog.open(this.proceedModal, dialogConfig);\n  }\n\n  openValidationModal(q: FormGroup, g: FormGroup, c: FormGroup): void {\n    //clear arrays\n    let invalid = [];\n    this.invalidForms = [];\n\n    //list of incorrect label names\n    var formLabels = [{\n        cbOneTripOnly: 'oneTripOnly'\n      },\n      {\n        name: \"client'sName\"\n      }\n    ]\n\n    var quoteArr = Utility.findInvalidControls(q);\n    invalid.push(...quoteArr);\n\n    var groupPolicyArr = Utility.findInvalidControls(g);\n    invalid.push(...groupPolicyArr);\n\n    var policyHolderArr = Utility.findInvalidControls(c);\n    invalid.push(...policyHolderArr);\n\n    invalid.forEach((i) => {\n      formLabels.forEach(f => {\n        var correctLabel = f[i];\n        if (!Utility.isUndefined(correctLabel)) {\n          //replace label\n          i = correctLabel;\n        }\n      });\n\n      let label: string = i.replace(/([A-Z])/g, ' $1').trim();\n      this.invalidForms.push(label.toLowerCase());\n    });\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n\n    this.dialogRef = this.dialog.open(this.validationModal, dialogConfig);\n  }\n\n  openPaymentBreakdownModal(receipt: any, breakdown: any, isPostPolicy: boolean) {\n    let product = \"\";\n    this.LOV.productListLOV.forEach((p) => {\n      if (p.COD_MODALIDAD == this.homeDetails.product) {\n        product = p.NOM_MODALIDAD;\n      }\n    });\n\n    let payment = \"\";\n    this.LOV.paymentMethodLOV.forEach((p) => {\n      if (p.COD_FRACC_PAGO == this.homeDetails.paymentMethod) {\n        payment = p.NOM_FRACC_PAGO;\n      }\n    });\n\n    const modalData = {\n      number: isPostPolicy ? this.homeDetails.policyNumber : this.homeDetails.quotationNumber,\n      product: product,\n      payment: payment,\n      receipt: receipt,\n      breakdown: breakdown,\n      showExchangeRate: false,\n      isPostPolicy: isPostPolicy,\n      line: 'HOME' //TODO\n    };\n\n    this.dialog.open(PaymentBreakdownModalComponent, {\n      width: '1000px',\n      data: modalData\n    });\n  }\n\n  manageBtn(opt: number) {\n    if (opt == 1) {\n      //hides payment breakdown panel\n      this.showPaymentBreakdown = false;\n      this.editMode = true;\n    }\n\n    if (this.isIssuance) {\n      this.showIssuanceGenerateBtn = (opt == 1);\n      this.showSaveBtn = (opt == 2);\n      this.showPostBtn = (opt == 3);\n      this.showPrintBtn = (opt == 4);\n      this.showNewPolicyBtn = (opt == 5);\n    } else {\n      this.showGenerateBtn = (opt == 1);\n      this.showIssueQuoteBtn = (opt == 2);\n      this.showProceedToIssuanceBtn = (opt == 3);\n    }\n  }\n\n  newQuote() {\n    this.newPage(page.QUO.HOM);\n  }\n\n  newPolicy() {\n    this.newPage(page.ISS.HOM);\n  }\n\n  newPage(page: string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n\n  affecting(key: string, label: string) {\n    if (!Utility.isUndefined(this.homeDetails.quotationNumber) && this.prevHomeDetails != null) {\n      let prev = this.prevHomeDetails[key] == undefined ? \"\" : this.prevHomeDetails[key];\n      let curr = this.homeDetails[key] == undefined ? \"\" : this.homeDetails[key];\n      if (curr instanceof Date) {\n        curr = curr.getMonth() + \"/\" + curr.getDate() + \"/\" + curr.getFullYear();\n        if (!Utility.isUndefined(prev)) {\n          var prevDate = new Date(prev);\n          prev = prevDate.getMonth() + \"/\" + prevDate.getDate() + \"/\" + prevDate.getFullYear();\n        }\n      }\n\n      if (prev != curr) {\n        if (!this.changedValues.includes(label)) {\n          //if changedValues length is greater than 0, request is affecting\n          this.changedValues.push(label);\n        }\n      } else {\n        //remove all occurence\n        this.changedValues = this.changedValues.filter(v => v !== label);\n      }\n    }\n  }\n\n  hasAffectingRelatedDetails() {\n    var currentRSTotalAmount = 0;\n    var currentRCTotalAmount = 0;\n    var prevRSTotalAmount = 0;\n    var prevRCTotalAmount = 0;\n\n    var relatedStructure = this.quoteForm.get('relatedStructure').value;\n    const relatedStructureArray = relatedStructure.length ? relatedStructure : [];\n    currentRSTotalAmount = this.getTotal(relatedStructureArray);\n\n    var relatedContent = this.quoteForm.get('relatedContent').value;\n    const relatedContentArray = relatedContent.length ? relatedContent : [];\n    currentRCTotalAmount = this.getTotal(relatedContentArray);\n    \n    if (this.prevHomeDetails != null) {\n      if (!Utility.isUndefined(this.prevHomeDetails.relatedStructureDetails)) {\n        prevRSTotalAmount = this.getTotal(this.prevHomeDetails.relatedStructureDetails);\n      }\n      \n      if (!Utility.isUndefined(this.prevHomeDetails.relatedContentDetails)) {\n        prevRCTotalAmount = this.getTotal(this.prevHomeDetails.relatedContentDetails);\n      }\n  \n      this.hasRSChanges = currentRSTotalAmount != prevRSTotalAmount;\n      this.hasRCChanges = currentRCTotalAmount != prevRCTotalAmount;\n    }\n  }\n\n  getTotal(arr : any[]) {\n    var total = 0;\n    arr.forEach(relatedDetails => {\n      if(!Utility.isUndefined(relatedDetails._value) && relatedDetails._value != 0) {\n        var val = 0;\n        try {\n          val = parseInt(relatedDetails._value);\n        } catch (e) {\n          //do nothing\n        }\n\n        total = total + val;\n      }\n    });\n    return total;\n  }\n\n  printQuote() {\n    this.ps.printQuote(this.homeDetails.quotationNumber);\n  }\n\n  printPolicy() {\n    this.ps.printPolicy(this.homeDetails.policyNumber);\n  }\n\n  proceedToIssuance() {\n    this.ps.proceedToIssuance(this.homeDetails.quotationNumber, page.ISS.HOM);\n  }\n\n  //getting error or warning items\n  getErrorItems(res: ReturnDTO, mcaTmpPptoMph: string, isIssuance: boolean) {\n    this.withTechControl = false;\n    const resErrorCode = res.obj[\"errorCode\"];\n    const resError = res.obj[\"error\"];\n\n    const isPostPolicy = Utility.isUndefined(resErrorCode);\n    let items: any[] = isPostPolicy ?\n      [\"Error occured while posting policy. Please contact administration.\"] :\n      [\"Error code is \" + resErrorCode + \" but does not return any error message. Please contact administration.\"];\n\n    if (!Utility.isUndefined(resError)) {\n      const errArr = resError.split(\"~\");\n      if (errArr.length) {\n        var arr = [];\n        errArr.forEach((err: string) => {\n          if (!Utility.isEmpty(err)) {\n            arr.push(err);\n          }\n        });\n\n        const resStatus = res.obj[\"status\"];\n        if (arr.length) {\n          if (!resStatus && isPostPolicy) {\n            //has error - can't proceed\n            items = [\"Failed to generate quotation number due to following reason/s:\"].concat(arr);\n          } else {\n            this.withTechControl = true;\n            // has warning - can proceed\n            if (isIssuance) {\n              items = [\"Quotation has technical control due to following reason/s:\"].concat(arr);\n            } else {\n              items = (\"N\" == mcaTmpPptoMph) ? [\"Routed for approval due to following reason/s:\"].concat(arr) : arr;\n            }\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  getRatePercentage(variableData : any[]) {\n    // const variableData = res.obj[\"variableData\"] as any[];\n    variableData.forEach(v => {\n      const code = v.codCampo;\n      const value: string = v.valCampo;\n      let valueFloat: number = undefined;\n\n      try {\n        valueFloat = parseFloat(value);\n      } catch (e) {\n        // do nothing\n      }\n\n      switch (code) {\n        case \"PCT_RATE_MANUAL\": {\n          this.homeDetails.ratePercentage = valueFloat;\n          break;\n        }\n\n        default: {\n          // do nothing\n        }\n      }\n    });\n  }\n  \n  //generate and issue quote button\n  issueQuote(mcaTmpPptoMph: string) {\n    // S for generation and N for issue quotation\n    this.assembleData(mcaTmpPptoMph);\n\n    this.his.issueQuote(this.homeDetails).then(res => {\n      if (res.status) {\n        //clear affecting fields\n        this.changedValues = [];\n        this.hasRSChanges = false;\n        this.hasRCChanges = false;\n\n        const items = this.getErrorItems(res, mcaTmpPptoMph, false);\n        const status = res.obj[\"status\"];\n        if (status) {\n          this.showRatePercentage = true;\n\n          const variableData = res.obj[\"variableData\"];\n          this.getRatePercentage(variableData);\n\n          //duplicating car details for comparison\n          const deepClone = JSON.parse(JSON.stringify(this.homeDetails));\n          this.prevHomeDetails = deepClone;\n\n          this.editMode = false;\n          const errorCode = res.obj[\"errorCode\"];\n          if (errorCode == \"S\") {\n            //if quotation has a warning\n            this.modalRef = Utility.showHTMLWarning(this.bms, items);\n          }\n\n          const policyNumber = res.obj[\"policyNumber\"];\n          this.homeDetails.quotationNumber = policyNumber;\n\n          const breakdown = res.obj[\"breakdown\"];\n          const receipt = res.obj[\"receipt\"];\n\n          if (\"S\" == mcaTmpPptoMph) {\n            //for generation of quote\n            const message = \"You have successfully generated a quotation - \" + policyNumber;\n            this.modalRef = Utility.showInfo(this.bms, message);\n\n            const coverageList = res.obj[\"coverageList\"];\n            this.populateCoverage(coverageList);\n\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.manageBtn(2);\n          } else {\n            // for issuing the quote\n            this.openPaymentBreakdownModal(receipt, breakdown, false);\n            this.manageBtn(3);\n          }\n        } else {\n          this.modalRef = Utility.showHTMLError(this.bms, items);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  assembleData(mcaTmpPptoMph: string) {\n    this.homeDetails.mcaTmpPptoMph = mcaTmpPptoMph;\n\n    // includes group policy to home details DTO\n    this.homeDetails.groupPolicy = this.groupPolicy;\n    // includes policy holder to home details DTO\n    this.homeDetails.policyHolder = this.policyHolder;\n    // includes secondary policy holder to car details DTO\n    this.homeDetails.secondaryPolicyHolder = this.secondaryPolicyHolder;\n\n    if (!Utility.isUndefined(this.homeDetails.secondaryPolicyHolderSeparator)) {\n      const _this = this;\n      this.cls.getPHSeparator().then(res => {\n        res.forEach(sep => {\n          if (sep.NOM_VALOR == this.homeDetails.secondaryPolicyHolderSeparator) {\n            _this.homeDetails.secondaryPolicyHolderSeparatorCode = sep.TIP_ASEG_SEP_LOV;\n          }\n        });\n      });\n    }\n\n    // includes mortgagee policy holder to car details DTO\n    this.homeDetails.mortgageePolicyHolder = this.mortgageePolicyHolder;\n\n    // includes related structure to home details DTO\n    var relatedStructure = this.quoteForm.get('relatedStructure').value;\n    this.homeDetails.relatedStructureDetails = relatedStructure.length ? relatedStructure : [];\n\n    // includes related content to home details DTO\n    var relatedContent = this.quoteForm.get('relatedContent').value;\n    this.homeDetails.relatedContentDetails = relatedContent.length ? relatedContent : [];\n\n    // to trigger changes when regenerating quotation\n    this.showCoverage = false;\n    this.showPaymentBreakdown = false;\n  }\n\n  //save policy button\n  savePolicy() {\n    this.assembleData(\"N\");\n\n    this.his.savePolicy(this.homeDetails).then(res => {\n      if (res.status) {\n        //clear affecting fields\n        this.changedValues = [];\n        this.hasRSChanges = false;\n        this.hasRCChanges = false;\n\n        var items = this.getErrorItems(res, this.homeDetails.mcaTmpPptoMph, true);\n        const status = res.obj[\"status\"];\n        if (status) {\n          //duplicating home details for comparison\n          const deepClone = JSON.parse(JSON.stringify(this.homeDetails));\n          this.prevHomeDetails = deepClone;\n\n          this.editMode = false;\n\n          const errorCode = res.obj[\"errorCode\"];\n          const policyNumber = res.obj[\"policyNumber\"];\n          this.homeDetails.quotationNumber = policyNumber;\n\n          const message = \"You have successfully generated a new quotation: \" + policyNumber;\n          this.modalRef = Utility.showInfo(this.bms, message);\n\n          const breakdown = res.obj[\"breakdown\"];\n          const receipt = res.obj[\"receipt\"];\n          this.populatePaymentBreakdown(breakdown, receipt);\n\n          this.withTechControl = errorCode == 'S';\n          if (this.withTechControl) {\n            //if quotation has a warning\n            if (this.homeDetails.affecting) {\n              items = [\"Updated quotation number is: \" + policyNumber].concat(items);\n            }\n            this.modalRef = Utility.showHTMLWarning(this.bms, items);\n          } else {\n            const message = \"Policy saved successfully.\";\n            this.modalRef = Utility.showInfo(this.bms, message);\n          }\n          this.editMode = false;\n          this.manageBtn(3);\n        } else {\n          this.modalRef = Utility.showHTMLError(this.bms, items);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  //post policy button\n  postPolicy() {\n    this.assembleData(\"N\");\n\n    if (this.withTechControl) {\n      this.modalRef = Utility.showWarning(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n    } else {\n      this.his.postPolicy(this.homeDetails).then(res => {\n        this.editMode = false;\n        if (res.status) {\n          //clear affecting fields\n          this.changedValues = [];\n          this.hasRSChanges = false;\n          this.hasRCChanges = false;\n\n          var items = this.getErrorItems(res, this.homeDetails.mcaTmpPptoMph, true);\n          const status = res.obj[\"status\"];\n          const policyNumber = res.obj[\"policyNumber\"];\n          if (status && !Utility.isUndefined(policyNumber)) {\n            this.homeDetails.policyNumber = policyNumber;\n\n            const breakdown = res.obj[\"breakdown\"];\n            const receipt = res.obj[\"receipt\"];\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.openPaymentBreakdownModal(receipt, breakdown, true);\n            this.manageBtn(4);\n          } else {\n            this.manageBtn(5);\n            this.modalRef = Utility.showHTMLError(this.bms, items);\n          }\n        } else {\n          this.manageBtn(5);\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      });\n    }\n  }\n}\n","export default \".traveler-card {\\n    margin-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdW90YXRpb24tdHJhdmVsL3F1b3RhdGlvbi10cmF2ZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVvdGF0aW9uLXRyYXZlbC9xdW90YXRpb24tdHJhdmVsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudHJhdmVsZXItY2FyZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  Input,\n  AfterViewChecked,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  Travel\n} from '../../objects/Travel';\nimport {\n  GroupPolicy\n} from 'src/app/objects/GroupPolicy';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  TravelListObject\n} from 'src/app/objects/LOV/travelList';\nimport {\n  GroupPolicyListObject\n} from 'src/app/objects/LOV/groupPolicyList';\n// import {\n//   AuthenticationService\n// } from 'src/app/services/authentication.service';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  PaymentBreakdownModalComponent\n} from '../payment-breakdown-modal/payment-breakdown-modal.component';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig\n} from '@angular/material';\nimport {\n  Globals\n} from 'src/app/utils/global';\nimport {\n  page\n} from 'src/app/constants/page';\nimport {\n  CoveragesComponent\n} from '../coverages/coverages.component';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  TravelLOVServices\n} from '../../services/lov/travel.service'\nimport {\n  TravelUtilityServices\n} from 'src/app/services/travel-utility.service';\nimport {\n  TravelIssueServices\n} from 'src/app/services/travel-issue.service';\nimport {\n  validateItinerary\n} from 'src/app/validators/validate';\nimport {\n  ReturnDTO\n} from 'src/app/objects/ReturnDTO';\nimport {\n  Traveler\n} from 'src/app/objects/Traveler';\n\n@Component({\n  selector: 'app-quotation-travel',\n  templateUrl: './quotation-travel.component.html',\n  styleUrls: ['./quotation-travel.component.css']\n})\nexport class QuotationTravelComponent implements OnInit, AfterViewChecked {\n  @ViewChild(CoveragesComponent) appCoverage: CoveragesComponent;\n  @ViewChild('proceedModal') proceedModal: TemplateRef < any > ;\n  @ViewChild('validationModal') validationModal: TemplateRef < any > ;\n\n  // currentUser = this.auths.currentUserValue;\n  isIssuance: boolean = Globals.getAppType() == \"I\";\n  isLoadQuotation: boolean = Globals.isLoadQuotation;\n  pageLabel: String = 'Quotation';\n  triggerCounter: number = 0;\n  triggerCoverage: number = 0;\n  triggerBreakdown: number = 0;\n  travelerHeadCount: number = 1;\n\n  travelDetails = new Travel();\n  prevTravelDetails: Travel = null;\n  changedValues: any[] = [];\n  changedTravelerValues: any[] = [];\n\n  invalidForms: any[] = [];\n\n  withTechControl = false;\n\n  groupPolicy = new GroupPolicy();\n  policyHolder = new PolicyHolder();\n\n  quoteForm: FormGroup;\n\n  mindate: Date = new Date();\n  // bdaymindate: Date = moment().subtract(65, 'years').toDate();\n  expiryDateMinDate: Date = moment().add(1, 'years').toDate();\n  endDateMinDate: Date = moment().add(1, 'days').toDate();\n  enableEndDate: boolean = false;\n\n  LOV = new TravelListObject();\n  GPLOV = new GroupPolicyListObject();\n\n  showOthersDescription: boolean = false;\n  showAdditionalInformation: boolean = false;\n  showPaymentBreakdown: boolean = false;\n  showCoverage: boolean = false;\n\n  //for payment breakdown\n  paymentBreakdown: any[];\n  paymentReceipt: {};\n\n  //for coverage\n  coverageList: any[];\n\n  //allow user to edit the form\n  editMode = true;\n\n  //flag to show generate btn\n  showGenerateBtn: boolean = true;\n  //flag to show issue btn\n  showIssueQuoteBtn: boolean = false;\n  //flag to show print quote/proceed to issuance\n  showProceedToIssuanceBtn: boolean = false;\n\n  //flat to show issuance generate btn\n  showIssuanceGenerateBtn = true;\n  //flag to show save btn\n  showSaveBtn: boolean = false;\n  //flag to show post btn\n  showPostBtn: boolean = false;\n  //flag to show print btn\n  showPrintBtn: boolean = false;\n  //flag to show new quote and new policy btn\n  showNewPolicyBtn: boolean = false;\n\n  //disable load button\n  disableLoadBtn: boolean = true;\n\n  //modal reference\n  modalRef: BsModalRef;\n  dialogRef: MatDialogRef < TemplateRef < any >> ;\n\n  codeName: String;\n\n  constructor(\n    private fb: FormBuilder,\n    // private auths: AuthenticationService,\n    private bms: BsModalService,\n    private router: Router,\n    private tls: TravelLOVServices,\n    private tus: TravelUtilityServices,\n    private tis: TravelIssueServices,\n    public dialog: MatDialog,\n    private changeDetector: ChangeDetectorRef\n  ) {\n    this.createQuoteForm();\n    this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    this.loadInit();\n    if (this.isIssuance) {\n      this.pageLabel = 'Issuance';\n      if (this.isLoadQuotation) {\n        //if loaded from travel quotation\n        this.travelDetails.quotationNumber = Globals.loadNumber;\n        this.loadQuotation();\n        Globals.setLoadNumber('');\n        Globals.setLoadQuotation(false);\n      }\n    }\n  }\n\n  loadInit() {\n    var _this = this;\n    this.tls.getCurrencyList().then(res => {\n      _this.LOV.currencyLOV = res;\n    });\n    this.tls.getTravelPackage().then(res => {\n      _this.LOV.packageLOV = res;\n    });\n    this.tls.getTypeOfCoverage().then(res => {\n      _this.LOV.coverageLOV = res;\n    });\n    this.tls.getPurposeOfTrip().then(res => {\n      _this.LOV.purposeOfTripLOV = res;\n      _this.LOV.purposeOfTripLOV.forEach((p) => {\n        var businessLabel = p.NOM_BUSINESS as string;\n        p.COD_BUSINESS = businessLabel.toUpperCase();\n      });\n    });\n    this.tls.getInsuranceCoverage().then(res => {\n      _this.LOV.insuranceCoverageLOV = res;\n    });\n    this.tls.getCoverageOption().then(res => {\n      _this.LOV.coverageOptionLOV = res;\n    });\n    this.tls.getRelationship().then(res => {\n      _this.LOV.relationshipLOV = res;\n      _this.LOV.relationshipLOV.forEach((r) => {\n        // disable primary\n        r.disabled = r.COD_VALOR == 'P';\n      });\n    });\n\n    //setting defualt value\n    this.travelDetails.insuranceCoverage = \"I\"; //individual\n  }\n\n  createQuoteForm() {\n    this.quoteForm = this.fb.group({\n      quotationNumber: [null],\n      currency: ['', Validators.required],\n      countries: ['', Validators.required],\n      //general information\n      travelPackage: ['', Validators.required],\n      travelType: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      noOfDays: ['', Validators.required],\n      completeItinerary: ['', [Validators.required, validateItinerary]],\n      purposeOfTrip: ['', Validators.required],\n      cbOneTripOnly: ['', Validators.required],\n      cbWithCruise: [null],\n      othersDescription: [null],\n      //travelers\n      travelers: this.fb.array([this.newTraveler(true)]),\n      //additional policy information\n      cbSportsEquipment: [null],\n      sportsEquipment: [null],\n      cbHazardousSports: [null],\n      hazardousSports: [null],\n      //coverages\n      insuranceCoverage: ['', Validators.required],\n      coverageOption: ['', Validators.required],\n      medicalExpenses: ['', Validators.required],\n    });\n  }\n\n  currencyOnchange() {\n    var _this = this;\n\n    this.travelDetails.subline = 380;\n    this.travelDetails.startDate = null;\n    this.travelDetails.endDate = null;\n\n    //if currency is philippine peso\n    this.travelDetails.countries = this.travelDetails.currency === 1 ? [{\n        NOM_PAIS: \"PHILIPPINES\",\n        COD_PAIS: \"PHL\",\n        NOM_VERNACULO: \"PHILIPPINES\",\n        name: \"PHILIPPINES\",\n        value: \"PHL\",\n        type: \"PHILIPPINES\"\n      }] :\n      null;\n    this.travelDetails.travelPackage = this.travelDetails.currency === 1 ?\n      \"P\" :\n      null;\n\n    this.tls.getCountryList(this.travelDetails).then(res => {\n      res.forEach(country => {\n        country.name = country.NOM_PAIS;\n        country.value = country.COD_PAIS;\n        country.type = country.NOM_VERNACULO;\n      });\n      _this.LOV.countryLOV = res;\n    });\n\n    this.tls.getProduct(this.travelDetails).then(res => {\n      _this.LOV.productListLOV = res;\n    });\n  }\n\n  relationshipOnChange(traveler: FormGroup) {\n    var val = traveler.controls['relationship'].value;\n    var maxAge = (val == 'C') ? 21 : 65;\n    var minAge = (val == 'C') ? 0 : 18;\n\n    const bdaymindate: Date = moment().subtract(maxAge, 'years').toDate();\n    traveler.controls['bdaymindate'].setValue(bdaymindate);\n\n    const bdaymaxdate: Date = moment().subtract(minAge, 'years').toDate();\n    traveler.controls['bdaymaxdate'].setValue(bdaymaxdate);\n\n    traveler.controls['birthDate'].setValue('');\n\n    this.LOV.relationshipLOV.forEach(r => {\n      if (r.COD_VALOR == val) {\n        traveler.controls['relationshipLabel'].setValue(r.NOM_VALOR);\n      }\n    });\n  }\n\n  getOneTrip() {\n    if (this.travelDetails.endDate != null) {\n      this.tus.getOneTrip(this.travelDetails).then((res) => {\n        if (res.status) {\n          this.travelDetails.cbOneTripOnly = res.obj['oneTripOnly'] as boolean;\n        }\n      });\n    }\n  }\n\n  loadQuotation() {\n    this.tis.loadQuotation(this.travelDetails.quotationNumber).then(res => {\n      if (res.status) {\n        this.manageBtn(2);\n        const variableData = res.obj[\"variableData\"] as any[];\n        variableData.forEach(v => {\n          const code = v.codCampo;\n          const value: string = v.valCampo;\n          let valueInt: number = undefined;\n  \n          try {\n            valueInt = parseInt(value);\n          } catch (e) {\n            // do nothing\n          }\n  \n          switch (code) {\n            //general information details\n            case \"TRAVEL_PACK\": {\n              this.travelDetails.travelPackage = value;\n              break;\n            }\n            case \"TRAVEL_TYPE\": {\n              this.travelDetails.travelType = value;\n              break;\n            }\n            // case \"ARRIVAL_DATE\": {\n            //   const date = Utility.convertStringDate(value);\n            //   this.travelDetails.endDate = date;\n            //   break;\n            // }\n            // case \"DEPARTURE_DATE\": {\n            //   const date = Utility.convertStringDate(value);\n            //   this.travelDetails.startDate = date;\n            //   break;\n            // }\n            case \"VAL_NUM_DAYS_TRIP\": {\n              this.travelDetails.noOfDays = valueInt;\n              break;\n            }\n            case \"ITINERARY\": {\n              this.travelDetails.completeItinerary = value;\n              break;\n            }\n            case \"PURPOSE_TRIP\": {\n              this.travelDetails.purposeOfTrip = value;\n              break;\n            }\n            case \"TXT_OTHERS_DESCRIPTION\": {\n              this.travelDetails.othersDescription = value;\n              break;\n            } \n            case \"MCA_ONE_TRIP_ONLY\": {\n              this.travelDetails.cbOneTripOnly = value == \"Y\";\n              break;\n            }\n            case \"MCA_WITH_CRUISE\": {\n              this.travelDetails.cbWithCruise = value == \"S\";\n              break;\n            }\n\n            //additional policy information\n            case \"TXT_SPORTS_EQUIPMENT\": {\n              this.travelDetails.cbSportsEquipment = true;\n              this.travelDetails.sportsEquipment = value;\n              break;\n            }\n            case \"TXT_HAZARDOUS_SPORTS\": {\n              this.travelDetails.cbHazardousSports = true;\n              this.travelDetails.hazardousSports = value;\n              break;\n            }\n\n            //coverages\n            case \"INSURANCE_COVERAGE\": {\n              this.travelDetails.insuranceCoverage = value;\n              break;\n            }\n            case \"COVERAGE_OPTIONS\": {\n              this.travelDetails.coverageOption = value;\n              break;\n            }\n            case \"EXPENSES_COVERAGE\": {\n              this.travelDetails.medicalExpenses = value;\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n  \n        const country : any[] = [];\n        var tempTravaler = [];\n\n        const travelerDetails = res.obj[\"travelerDetails\"] as any[];\n        travelerDetails.forEach(t => {\n          const code = t.codCampo;\n          const value: string = t.valCampo;\n          const text: string = t.txtCampo;\n          const occurence: number = t.numOcurrencia;\n          // const index = occurence - 1;\n          let valueInt: number = undefined;\n  \n          try {\n            valueInt = parseInt(value);\n          } catch (e) {\n            // do nothing\n          }\n  \n          switch (code) {\n            //country\n            case \"TXT_COUNTRY_NAME\": {\n              const obj = { NOM_PAIS: text, COD_PAIS: value, name: text, value: value };\n              country.push(obj);\n              break;\n            }\n            case \"COMPLETE_NAME\": {\n              const obj = { completeName: value, occurence: occurence };\n              tempTravaler.push(obj);\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n\n        this.travelDetails.countries = country;\n\n        var travelers = [];\n        tempTravaler.forEach(t => {\n          const tObj = new Traveler();\n          tObj.completeName = t.completeName;\n          travelerDetails.forEach(td => {\n            const code = td.codCampo;\n            const value: string = td.valCampo;\n            const text: string = td.txtCampo;\n            const occurence: number = td.numOcurrencia;\n            let valueInt: number = undefined;\n    \n            try {\n              valueInt = parseInt(value);\n            } catch (e) {\n              // do nothing\n            }\n\n            if (t.occurence == occurence) {\n              switch (code) {\n                case \"RELATIONSHIP\": {\n                  tObj.relationship = value;\n                  tObj.relationshipLabel = text;\n                  break;\n                }\n                case \"BIRTHDATE\": {\n                  const date = Utility.convertStringDate(value);\n                  tObj.birthDate = date;\n                  break;\n                }\n                case \"PASSPORT_NUMBER\": {\n                  tObj.passportNumber = value;\n                  break;\n                }\n                case \"USUAL_PHYSICIAN\": {\n                  tObj.physicianName = value;\n                  break;\n                }\n                default: {\n                  // do nothing\n                }\n              }\n            }\n          });\n          travelers.push(tObj);\n        });\n\n        if (travelers.length) {\n          //removes all accessories\n          this.removeTravelers();\n          var temp: any[] = [];\n          travelers.forEach((tra: any) => {\n            temp.push({\n              traveler: tra.completeName\n            });\n            this.travelers().push(this.loadTraveler(tra.completeName, tra.birthDate, tra.relationship, tra.relationshipLabel, tra.passportNumber, tra.physicianName));\n          });\n  \n          var travelersForm = this.quoteForm.get('travelers').value;\n          this.travelDetails.travelers = travelersForm;\n        } else {\n          this.travelDetails.travelers = [];\n        }\n  \n        const generalInfo = res.obj[\"generalInfo\"];\n        this.travelDetails.subline = generalInfo.codRamo;\n        this.travelDetails.currency = generalInfo.codMon;\n        this.travelDetails.startDate = new Date(generalInfo.fecEfecPoliza);\n        this.travelDetails.endDate = new Date(generalInfo.fecVctoPoliza);\n        // this.travelDetails.sublineEffectivityDate = Utility.formatDate(new Date(generalInfo.fecValidez), \"DDMMYYYY\");\n  \n        this.groupPolicy = new GroupPolicy;\n        this.groupPolicy.agentCode = generalInfo.codAgt;\n        if (!Utility.isUndefined(generalInfo.numPolizaGrupo)) {\n          this.groupPolicy.groupPolicy = parseInt(generalInfo.numPolizaGrupo);\n        }\n        if (!Utility.isUndefined(generalInfo.numContrato)) {\n          this.groupPolicy.contract = parseInt(generalInfo.numContrato);\n        }\n        if (!Utility.isUndefined(generalInfo.numSubcontrato)) {\n          this.groupPolicy.subContract = parseInt(generalInfo.numSubcontrato);\n        }\n        this.groupPolicy.commercialStructure = generalInfo.codNivel3;\n        this.travelDetails.groupPolicy = this.groupPolicy;\n  \n        const docType = generalInfo.tipDocum;\n        const docCode = generalInfo.codDocum;\n        // preventing generic document type and code\n        if (\"MVO\" != docType && !docCode.startsWith(\"MAPFREXX\")) {\n          this.policyHolder.documentType = docType;\n          this.policyHolder.documentCode = docCode;\n          this.policyHolder.isExisting = true;\n        }\n  \n        this.loadLOVs();\n  \n        const coverageList = res.obj[\"coverageList\"];\n        this.populateCoverage(coverageList);\n  \n        //breakdwon\n        const breakdown = res.obj[\"breakdown\"];\n        const receipt = res.obj[\"receipt\"];\n        this.populatePaymentBreakdown(breakdown, receipt);\n  \n        //cloning details from load quotation\n        const deepClone = JSON.parse(JSON.stringify(this.travelDetails));\n        this.prevTravelDetails = deepClone;\n\n        //prevent to post policy if quotation has technical control\n        const technicalControl = res.obj[\"technicalControl\"];\n        if (generalInfo.mcaProvisional == \"S\" && technicalControl.length > 0) {\n          this.withTechControl = true;\n          this.editMode = false;\n          this.modalRef = Utility.showError(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n        this.travelDetails.quotationNumber = \"\";\n      }\n    }).finally(() => {\n      //trigger child component load quotation function\n      this.triggerCounter = this.triggerCounter + 1;\n    });\n  }\n\n  //loading of all LOV's for load quotation\n  loadLOVs() {\n    var _this = this;\n    this.tls.getCountryList(this.travelDetails).then(res => {\n      res.forEach(country => {\n        country.name = country.NOM_PAIS;\n        country.value = country.COD_PAIS;\n        country.type = country.NOM_VERNACULO;\n      });\n      _this.LOV.countryLOV = res;\n    });\n\n    this.tls.getProduct(this.travelDetails).then(res => {\n      _this.LOV.productListLOV = res;\n    });\n\n    this.tls.getExpensesCoverage(this.travelDetails).then((res) => {\n      _this.LOV.medicalExpensesLOV = res;\n    });\n  }\n\n  setValidations() {\n    var endDate = this.quoteForm.get('endDate');\n    var startDate = this.quoteForm.get('startDate');\n    var countries = this.quoteForm.get('countries');\n    var purposeOfTrip = this.quoteForm.get('purposeOfTrip');\n    var othersDescription = this.quoteForm.get('othersDescription');\n\n    var cbSportsEquipment = this.quoteForm.get('cbSportsEquipment');\n    var sportsEquipment = this.quoteForm.get('sportsEquipment');\n    var cbHazardousSports = this.quoteForm.get('cbHazardousSports');\n    var hazardousSports = this.quoteForm.get('hazardousSports');\n\n    var quotationNumber = this.quoteForm.get('quotationNumber');\n\n    endDate.valueChanges.subscribe(date => {\n      var diff = moment(date).diff(moment(startDate.value), 'days') + 1;\n      this.travelDetails.noOfDays = diff >= 2 ? diff : 0;\n    });\n\n    startDate.valueChanges.subscribe(date => {\n      this.enableEndDate = date !== null && date !== undefined;\n\n      var diff = 0;\n      if (this.enableEndDate) {\n        var diff = moment(endDate.value).diff(moment(date), 'days') + 1;\n        diff = diff === NaN ? 0 : diff;\n        this.endDateMinDate = moment(date).add(1, 'days').toDate();\n        if (diff < 1) {\n          this.travelDetails.endDate = null;\n        }\n      } else {\n        this.travelDetails.endDate = null;\n      }\n\n      this.travelDetails.noOfDays = diff >= 2 ? diff : 0;\n    });\n\n    countries.valueChanges.subscribe(countryList => {\n      var packageList = [];\n      if (!Utility.isUndefined(countryList)) {\n        countryList.forEach(country => {\n          packageList.push(country.type);\n        });\n        if (packageList.indexOf(\"WORLD\") !== -1) {\n          this.travelDetails.travelPackage = \"W\";\n          this.travelDetails.travelType = \"I\";\n        } else if (packageList.indexOf(\"SCHENGEN\") !== -1) {\n          this.travelDetails.travelPackage = \"S\";\n          this.travelDetails.travelType = \"I\";\n        } else if (packageList.indexOf(\"ASIA\") !== -1) {\n          this.travelDetails.travelPackage = \"A\";\n          this.travelDetails.travelType = \"I\";\n        } else if (packageList.indexOf(\"PHILIPPINES\") !== -1) {\n          this.travelDetails.travelPackage = \"P\";\n          this.travelDetails.travelType = \"D\";\n          this.travelDetails.cbWithCruise = false;\n        }\n\n        var _this = this;\n        this.tls.getExpensesCoverage(this.travelDetails).then((res) => {\n          _this.LOV.medicalExpensesLOV = res;\n        });\n      }\n    });\n\n    purposeOfTrip.valueChanges.subscribe(trip => {\n      //if purpose of trip is others, show the others desctiption input and make it required\n      this.showOthersDescription = (trip == 'OTHERS');\n      Utility.updateValidator(othersDescription, trip == 'OTHERS' ? [Validators.required] : null);\n    }); \n\n    cbSportsEquipment.valueChanges.subscribe(checked => {\n      this.travelDetails.sportsEquipment = Utility.setNull(checked, this.travelDetails.sportsEquipment);\n      Utility.updateValidator(sportsEquipment, checked ? [Validators.required] : null);\n    });\n\n    cbHazardousSports.valueChanges.subscribe(checked => {\n      this.travelDetails.hazardousSports = Utility.setNull(checked, this.travelDetails.hazardousSports);\n      Utility.updateValidator(hazardousSports, checked ? [Validators.required] : null);\n    });\n\n    quotationNumber.valueChanges.subscribe(number => {\n      this.disableLoadBtn = Utility.isUndefined(number);\n    });\n  }\n\n  travelers(): FormArray {\n    return this.quoteForm.get(\"travelers\") as FormArray\n  }\n\n  newTraveler(onLoad: boolean): FormGroup {\n    const bdaymindate: Date = moment().subtract(65, 'years').toDate();\n    var ageLimit = onLoad ? 18 : 0;\n    const bdaymaxdate: Date = moment().subtract(ageLimit, 'years').toDate();\n\n    return this.fb.group({\n      completeName: ['', Validators.required],\n      birthDate: ['', Validators.required],\n      relationship: [onLoad ? 'P' : '', Validators.required],\n      relationshipLabel: [onLoad ? 'PRIMARY' : ''],\n      passportNumber: ['', Validators.required],\n      physicianName: [null],\n      bdaymindate: [bdaymindate],\n      bdaymaxdate: [bdaymaxdate],\n    });\n  }\n\n  loadTraveler(completeName: string, birthDate: Date, relationship: string, relationshipLabel: string, passportNumber: string, physicianName: string): FormGroup {\n    const bdaymindate: Date = moment().subtract(relationship == 'C' ? 21 : 65, 'years').toDate();\n    const bdaymaxdate: Date = moment().subtract(relationship == 'C' ? 0 : 18, 'years').toDate();\n\n    return this.fb.group({\n      completeName: [completeName, Validators.required],\n      birthDate: [birthDate, Validators.required],\n      relationship: [relationship, Validators.required],\n      relationshipLabel: [relationshipLabel],\n      passportNumber: [passportNumber, Validators.required],\n      physicianName: [physicianName],\n      bdaymindate: [bdaymindate],\n      bdaymaxdate: [bdaymaxdate],\n    });\n  }\n\n  addTraveler() {\n    this.travelers().push(this.newTraveler(false));\n    //if traveler is more than 1\n    this.travelDetails.insuranceCoverage = \"F\"; //family\n\n    //hides the add travel button if traveler head count is more than 5\n    var travelers = this.quoteForm.get('travelers').value;\n    this.travelerHeadCount = travelers.length;\n  }\n\n  removeTraveler(index: number) {\n    this.travelers().removeAt(index);\n\n    //shows the add travel button if traveler head count is less than 5\n    var travelers = this.quoteForm.get('travelers').value;\n    this.travelerHeadCount = travelers.length;\n    if (travelers.length == 1) {\n      //if traveler is primary only\n      this.travelDetails.insuranceCoverage = \"I\"; //individual\n    }\n  }\n\n  removeTravelers() {\n    // removing all travelers\n    var travelers = this.quoteForm.get('travelers').value;\n    if (travelers.length > 0) {\n      // loop until all accessories removed\n      this.travelers().removeAt(0);\n      this.removeTravelers();\n    }\n  }\n\n  populateCoverage(coverageList: any[]) {\n    this.coverageList = coverageList;\n    this.showCoverage = true;\n    this.triggerCoverage = this.triggerCoverage + 1;\n  }\n\n  populatePaymentBreakdown(breakdown: any[], receipt: {}) {\n    this.paymentBreakdown = breakdown;\n    this.paymentReceipt = receipt;\n    this.showPaymentBreakdown = true;\n    this.triggerBreakdown = this.triggerBreakdown + 1;\n    Utility.scroll('paymentBreakdown');\n  }\n\n  proceed(type: number) {\n    //if user changes affecting values\n    const hasAffectingTraveler = this.checkAffectingTravelers();\n    const hasChanges = this.changedValues.length != 0 || hasAffectingTraveler;\n\n    const hasQuotationNumber = !Utility.isUndefined(this.travelDetails.quotationNumber);\n    const isTemporaryQuotation = hasQuotationNumber && this.travelDetails.quotationNumber.startsWith('999');\n    this.travelDetails.affecting = !hasQuotationNumber ||\n      (hasQuotationNumber && isTemporaryQuotation) ||\n      (hasQuotationNumber && !isTemporaryQuotation && hasChanges);\n    if (hasChanges) {\n      this.openProceedModal(type);\n    } else {\n      switch (type) {\n        case 1: {\n          this.issueQuote('S');\n          break;\n        }\n        case 2: {\n          this.issueQuote('N');\n          break;\n        }\n        case 3: {\n          this.savePolicy();\n          break;\n        }\n        default: {\n          this.postPolicy();\n          break;\n        }\n      }\n    }\n  }\n\n  openProceedModal(type: number): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      generateBtn: type == 1 || type == 2 || type == 3,\n      saveBtn: type == 4\n    };\n\n    this.dialogRef = this.dialog.open(this.proceedModal, dialogConfig);\n  }\n\n  openValidationModal(q: FormGroup, g: FormGroup, c: FormGroup): void {\n    //clear arrays\n    let invalid = [];\n    this.invalidForms = [];\n\n    //list of incorrect label names\n    var formLabels = [\n      {cbOneTripOnly : 'oneTripOnly'},\n      {name : \"client'sName\"}\n    ]\n\n    var quoteArr = Utility.findInvalidControls(q);\n    invalid.push(...quoteArr);\n\n    var groupPolicyArr = Utility.findInvalidControls(g);\n    invalid.push(...groupPolicyArr);\n\n    var policyHolderArr = Utility.findInvalidControls(c);\n    invalid.push(...policyHolderArr);\n    \n    invalid.forEach((i) => {\n      formLabels.forEach(f => {\n        var correctLabel = f[i];\n        if (!Utility.isUndefined(correctLabel)) {\n          //replace label\n          i = correctLabel;\n        }\n      });\n\n      let label : string = i.replace(/([A-Z])/g, ' $1').trim();\n      this.invalidForms.push(label.toLowerCase());\n    });\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n\n    this.dialogRef = this.dialog.open(this.validationModal, dialogConfig);\n  }\n\n  openPaymentBreakdownModal(receipt: any, breakdown: any, isPostPolicy: boolean) {\n    const modalData = {\n      number: isPostPolicy ? this.travelDetails.policyNumber : this.travelDetails.quotationNumber,\n      product: this.codeName,\n      payment: \"ANNUAL\",\n      receipt: receipt,\n      breakdown: breakdown,\n      showExchangeRate: true,\n      isPostPolicy: isPostPolicy,\n      line: 'TRAVEL'\n    };\n\n    this.dialog.open(PaymentBreakdownModalComponent, {\n      width: '1000px',\n      data: modalData\n    });\n  }\n\n  manageBtn(opt: number) {\n    if (opt == 1) {\n      //hides payment breakdown panel\n      this.showPaymentBreakdown = false;\n      this.editMode = true;\n    }\n\n    if (this.isIssuance) {\n      this.showIssuanceGenerateBtn = (opt == 1);\n      this.showSaveBtn = (opt == 2);\n      this.showPostBtn = (opt == 3);\n      this.showPrintBtn = (opt == 4);\n      this.showNewPolicyBtn = (opt == 5);\n    } else {\n      this.showGenerateBtn = (opt == 1);\n      this.showIssueQuoteBtn = (opt == 2);\n      this.showProceedToIssuanceBtn = (opt == 3);\n    }\n  }\n\n  newQuote() {\n    this.newPage(page.QUO.TRA);\n  }\n\n  newPolicy() {\n    this.newPage(page.ISS.TRA);\n  }\n\n  newPage(page : string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n\n  checkAffectingTravelers() {\n    let hasTravelerChanges = false;\n\n    if (!Utility.isUndefined(this.prevTravelDetails)) {\n      this.changedTravelerValues = [];\n\n      var travelers = this.quoteForm.get('travelers').value;\n      const length = travelers.length;\n      let prevlength = 0;\n      if ('travelers' in this.prevTravelDetails) {\n        const prevTravelers = this.prevTravelDetails.travelers;\n        prevlength = prevTravelers.length;\n        if (prevlength != length) {\n          if (prevlength > length) {\n            var diff = prevlength - length;\n            var label = diff == 1 ? \" traveler\" : \" travelers\";\n            this.changedTravelerValues.push(\n              \"Traveler: Deleted \" + diff + label);\n          } else {\n            var diff = length - prevlength;\n            var label = diff == 1 ? \" traveler\" : \" travelers\";\n            this.changedTravelerValues.push(\n              \"Traveler: Added \" + diff + label);\n          }\n        }\n\n        prevTravelers.forEach((tra : Traveler) => {\n          let matched = false;\n          travelers.forEach((tra1: Traveler) => {\n            if (tra.completeName == tra1.completeName) {\n              matched = true;\n              if (tra.relationship != tra1.relationship) {\n                this.changedTravelerValues.push(\n                  \"Traveler relationship: Changed \" + tra.relationshipLabel + \" to \" + tra1.relationshipLabel);\n              }\n              if (tra.passportNumber != tra1.passportNumber) {\n                this.changedTravelerValues.push(\n                  \"Traveler Passport Number: Changed \" + tra.passportNumber + \" to \" + tra1.passportNumber);\n              }\n\n              const prevDate = new Date(tra.birthDate);\n              const prevBdate = prevDate.getMonth() + \"/\" + prevDate.getDate() + \"/\" + prevDate.getFullYear();\n\n              const currDate = tra1.birthDate;\n              const currBdate = currDate.getMonth() + \"/\" + currDate.getDate() + \"/\" + currDate.getFullYear();\n              if (prevBdate != currBdate) {\n                this.changedTravelerValues.push(\n                  \"Traveler Birthdate: Changed \" + prevBdate + \" to \" + currBdate);\n              }\n            }\n          });\n          if (!matched) {\n            this.changedTravelerValues.push(\n              \"Traveler: Changed Traveler List\");\n          }\n        });\n      }\n      hasTravelerChanges = this.changedTravelerValues.length > 0;\n    }\n\n    return hasTravelerChanges;\n  }\n\n  affecting(key: string, label: string) {\n    if (!Utility.isUndefined(this.travelDetails.quotationNumber) && this.prevTravelDetails != null) {\n      let prev = this.prevTravelDetails[key] == undefined ? \"\" : this.prevTravelDetails[key];\n      let curr = this.travelDetails[key] == undefined ? \"\" : this.travelDetails[key];\n      if (curr instanceof Date) {\n        curr = curr.getMonth() + \"/\" + curr.getDate() + \"/\" + curr.getFullYear();\n        if (!Utility.isUndefined(prev)) {\n          var prevDate = new Date(prev);\n          prev = prevDate.getMonth() + \"/\" + prevDate.getDate() + \"/\" + prevDate.getFullYear();\n        }\n      }\n\n      if (prev != curr) {\n        if (!this.changedValues.includes(label)) {\n          //if changedValues length is greater than 0, request is affecting\n          this.changedValues.push(label);\n        }\n      } else {\n        //remove all occurence\n        this.changedValues = this.changedValues.filter(v => v !== label);\n      }\n    }\n  }\n\n  printQuote() {\n    this.tis.printQuote(this.travelDetails.quotationNumber);\n  }\n\n  printPolicy() {\n    this.tis.printPolicy(this.travelDetails.policyNumber);\n  }\n\n  proceedToIssuance() {\n    this.tis.proceedToIssuance(this.travelDetails.quotationNumber);\n  }\n\n  getProductCode() {\n    this.codeName = null;\n\n    let travelPack: string;\n    this.LOV.packageLOV.forEach(tp => {\n      if (tp.TRAVEL_PACK == this.travelDetails.travelPackage) {\n        travelPack = tp.NOM_VALOR;\n      }\n    });\n\n    let coverageOption: string;\n    this.LOV.coverageOptionLOV.forEach(co => {\n      if (co.COVERAGE_OPTIONS == this.travelDetails.coverageOption) {\n        coverageOption = co.NOM_VALOR == 'ASSISTANCE ONLY' ? 'ASSIST ONLY' : co.NOM_VALOR;\n      }\n    });\n\n    let medicalExpenses: string;\n    this.LOV.medicalExpensesLOV.forEach(me => {\n      if (me.VAL_CAMPO1 == this.travelDetails.medicalExpenses) {\n        const name: string = me.VAL_CAMPO2;\n        const value: string = me.VAL_CAMPO1;\n        medicalExpenses = name.includes(\"EUROS\") ? value.concat(\" euros\") : value;\n      }\n    });\n\n    this.codeName = this.travelDetails.travelPackage == 'D' ?\n      \"DOMESTIC \".concat(medicalExpenses) :\n      travelPack + \" \" + coverageOption + \" \" + medicalExpenses;\n\n    this.LOV.productListLOV.forEach(product => {\n      if (this.codeName == product.NOM_MODALIDAD) {\n        this.travelDetails.product = product.COD_MODALIDAD;\n      }\n    });\n  }\n\n  //getting error or warning items\n  getErrorItems(res: ReturnDTO, mcaTmpPptoMph: string, isIssuance: boolean) {\n    this.withTechControl = false;\n    const resErrorCode = res.obj[\"errorCode\"];\n    const resError = res.obj[\"error\"];\n\n    const isPostPolicy = Utility.isUndefined(resErrorCode);\n    let items: any[] = isPostPolicy \n      ? [\"Error occured while posting policy. Please contact administration.\"]\n      : [\"Error code is \" + resErrorCode + \" but does not return any error message. Please contact administration.\"];\n\n    if (!Utility.isUndefined(resError)) {\n      const errArr = resError.split(\"~\");\n      if (errArr.length) {\n        var arr = [];\n        errArr.forEach((err: string) => {\n          if (!Utility.isEmpty(err)) {\n            arr.push(err);\n          }\n        });\n\n        const resStatus = res.obj[\"status\"];\n        if (arr.length) {\n          if (!resStatus && isPostPolicy) {\n            //has error - can't proceed\n            items = [\"Failed to generate quotation number due to following reason/s:\"].concat(arr);\n          } else {\n            this.withTechControl = true;\n            // has warning - can proceed\n            if (isIssuance) {\n              items = [\"Quotation has technical control due to following reason/s:\"].concat(arr);\n            } else {\n              items = (\"N\" == mcaTmpPptoMph) ? [\"Routed for approval due to following reason/s:\"].concat(arr) : arr;\n            }\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  assembleData(mcaTmpPptoMph: string) {\n    // S for generation and N for issue quotation\n    this.travelDetails.mcaTmpPptoMph = mcaTmpPptoMph;\n\n    // includes group policy to travel details DTO\n    this.travelDetails.groupPolicy = this.groupPolicy;\n    // includes policy holder to travel details DTO\n    this.travelDetails.policyHolder = this.policyHolder;\n\n    // includes travelers to travel details DTO\n    var travelers = this.quoteForm.get('travelers').value;\n    this.travelDetails.travelers = travelers.length ? travelers : [];\n\n    // get product code\n    this.getProductCode();\n\n    // to trigger changes when regenerating quotation\n    this.showPaymentBreakdown = false;\n    this.showCoverage = false;\n  }\n\n  //generate and issue quote button\n  issueQuote(mcaTmpPptoMph: string) {\n    this.assembleData(mcaTmpPptoMph);\n\n    this.tis.issueQuote(this.travelDetails).then(res => {\n      if (res.status) {\n        //clear affecting fields\n        this.changedValues = [];\n\n        const items = this.getErrorItems(res, mcaTmpPptoMph, false);\n        const status = res.obj[\"status\"];\n        if (status) {\n          //duplicating car details for comparison\n          const deepClone = JSON.parse(JSON.stringify(this.travelDetails));\n          this.prevTravelDetails = deepClone;\n\n          this.editMode = false;\n          const errorCode = res.obj[\"errorCode\"];\n          if (errorCode == \"S\") {\n            //if quotation has a warning\n            this.modalRef = Utility.showHTMLWarning(this.bms, items);\n          }\n\n          const policyNumber = res.obj[\"policyNumber\"];\n          this.travelDetails.quotationNumber = policyNumber;\n\n          const breakdown = res.obj[\"breakdown\"];\n          const receipt = res.obj[\"receipt\"];\n\n          if (\"S\" == mcaTmpPptoMph) {\n            //for generation of quote\n            const message = \"You have successfully generated a quotation - \" + policyNumber;\n            this.modalRef = Utility.showInfo(this.bms, message);\n\n            const coverageList = res.obj[\"coverageList\"];\n            this.populateCoverage(coverageList);\n\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.manageBtn(2);\n          } else {\n            // for issuing the quote\n            this.openPaymentBreakdownModal(receipt, breakdown, false);\n            this.manageBtn(3);\n          }\n        } else {\n          this.modalRef = Utility.showHTMLError(this.bms, items);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  //save policy button\n  savePolicy() {\n    this.assembleData(\"N\");\n\n    this.tis.savePolicy(this.travelDetails).then(res => {\n      if (res.status) {\n        //clear affecting fields\n        this.changedValues = [];\n\n        var items = this.getErrorItems(res, this.travelDetails.mcaTmpPptoMph, true);\n        const status = res.obj[\"status\"];\n        if (status) {\n          //duplicating travel details for comparison\n          const deepClone = JSON.parse(JSON.stringify(this.travelDetails));\n          this.prevTravelDetails = deepClone;\n\n          this.editMode = false;\n\n          const errorCode = res.obj[\"errorCode\"];\n          const policyNumber = res.obj[\"policyNumber\"];\n          this.travelDetails.quotationNumber = policyNumber;\n\n          const message = \"You have successfully generated a new quotation: \" + policyNumber;\n          this.modalRef = Utility.showInfo(this.bms, message);\n\n          const breakdown = res.obj[\"breakdown\"];\n          const receipt = res.obj[\"receipt\"];\n          this.populatePaymentBreakdown(breakdown, receipt);\n\n          this.withTechControl = errorCode == 'S';\n          if (this.withTechControl) {\n            //if quotation has a warning\n            if (this.travelDetails.affecting) {\n              items = [\"Updated quotation number is: \" + policyNumber].concat(items);\n            }\n            this.modalRef = Utility.showHTMLWarning(this.bms, items);\n          } else {\n            const message = \"Policy saved successfully.\";\n            this.modalRef = Utility.showInfo(this.bms, message);\n          }\n          this.editMode = false;\n          this.manageBtn(3);\n        } else {\n          this.modalRef = Utility.showHTMLError(this.bms, items);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  //post policy button\n  postPolicy() {\n    this.assembleData(\"N\");\n\n    if (this.withTechControl) {\n      this.modalRef = Utility.showWarning(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n    } else {\n      this.tis.postPolicy(this.travelDetails).then(res => {\n        if (res.status) {\n          //clear affecting fields\n          this.changedValues = [];\n\n          var items = this.getErrorItems(res, this.travelDetails.mcaTmpPptoMph, true);\n          const status = res.obj[\"status\"];\n          const policyNumber = res.obj[\"policyNumber\"];\n          if (status && !Utility.isUndefined(policyNumber)) {\n            this.editMode = false;\n            this.travelDetails.policyNumber = policyNumber;\n\n            const breakdown = res.obj[\"breakdown\"];\n            const receipt = res.obj[\"receipt\"];\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.openPaymentBreakdownModal(receipt, breakdown, true);\n            this.manageBtn(4);\n          } else {\n            this.manageBtn(5);\n            this.modalRef = Utility.showHTMLError(this.bms, items);\n          }\n        } else {\n          this.manageBtn(5);\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      });\n    }\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVsb2FkL3JlbG9hZC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reload',\n  templateUrl: './reload.component.html',\n  styleUrls: ['./reload.component.css']\n})\nexport class ReloadComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    //reloading page\n    this.router.navigate(['/']);\n  }\n\n}\n","export default \"textarea {\\n    height: 208px;\\n}\\n\\nngx-dropzone {\\n    width: 100%;\\n}\\n\\nngx-dropzone-preview {\\n    width: 200px;\\n    height: 100px;\\n    padding: 10px;\\n    margin: 10px;\\n    border-radius: 10px;\\n    overflow: hidden;\\n    position: relative;\\n    display: block;\\n}\\n\\nngx-dropzone,\\n.custom-dropzone {\\n  margin: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXF1ZXN0LWNyZWF0ZS9yZXF1ZXN0LWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsYUFBYTtJQUNiLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixjQUFjO0FBQ2xCOztBQUVBOztFQUVFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVxdWVzdC1jcmVhdGUvcmVxdWVzdC1jcmVhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRleHRhcmVhIHtcbiAgICBoZWlnaHQ6IDIwOHB4O1xufVxuXG5uZ3gtZHJvcHpvbmUge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG5uZ3gtZHJvcHpvbmUtcHJldmlldyB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogMTAwcHg7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxubmd4LWRyb3B6b25lLFxuLmN1c3RvbS1kcm9wem9uZSB7XG4gIG1hcmdpbjogMjBweDtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  RequestDetails\n} from 'src/app/objects/RequestDetails';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  RequestService\n} from 'src/app/services/request.service';\n\n@Component({\n  selector: 'app-request-create',\n  templateUrl: './request-create.component.html',\n  styleUrls: ['./request-create.component.css']\n})\nexport class RequestCreateComponent implements OnInit {\n  requestDetails = new RequestDetails();\n  requestForm: FormGroup;\n\n  showPolicyDetails: boolean = false;\n  showDetails: boolean = false;\n\n  showEndorsementRT = false;\n  showRenewalRT = false;\n  showUnderwritingRT = false;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private rs: RequestService,\n    private bms: BsModalService) {\n    this.createForm();\n    this.setValidations();\n  }\n\n  ngOnInit(): void {}\n\n  files: File[] = [];\n\n  onSelect(event) {\n    const addedFiles = event.addedFiles;\n    const hasFiles = event.addedFiles.length\n    if (hasFiles) {\n      addedFiles.forEach(file => {\n        if (file.size <= 9000000) {\n          this.files.push(file);\n        } else {\n          const message = \"Can not upload file \" + file.name + \". Allowed file size is 9MB below only.\"\n          this.modalRef = Utility.showError(this.bms, message);\n        }\n      });\n    }\n  }\n\n  onRemove(event) {\n    console.log(event);\n    this.files.splice(this.files.indexOf(event), 1);\n  }\n\n  createForm() {\n    this.requestForm = this.fb.group({\n      type: ['', Validators.required],\n      requestType: ['', Validators.required],\n      issueType: ['', Validators.required],\n      policyNumber: ['', Validators.required],\n      reason: ['', Validators.required],\n      agentEmail: ['', [Validators.required, Validators.email]],\n      name: ['', Validators.required],\n\n      type1: ['', Validators.required],\n      type2: ['', Validators.required],\n      branch: ['', Validators.required],\n      line: ['', Validators.required],\n      subline: ['', Validators.required],\n      typeOfPolicy: ['', Validators.required],\n      clientName: ['', Validators.required],\n      clientGroup: ['', Validators.required],\n      copyNotify: ['', Validators.required],\n      comments: ['', Validators.required],\n    });\n  }\n\n  // test(q: FormGroup) {\n  //   let invalid = [];\n\n  //   invalid = this.findInvalidControls(invalid, q);\n  //   alert(invalid);\n  // }\n\n  // public findInvalidControls(invalid: any[], form: FormGroup) {\n  //   const controls = form.controls;\n  //   for (const name in controls) {\n  //     if (controls[name].invalid) {\n  //       invalid.push(name);\n  //     }\n  //     if (controls[name].pristine) {\n  //       invalid.push(name);\n  //     }\n  //   }\n  //   return invalid;\n  // }\n\n  setValidations() {\n    this.requestForm.get('type').valueChanges.subscribe(type => {\n      if (type !== undefined) {\n\n        this.showPolicyDetails = type == 'P';\n        this.showDetails = type !== 'P';\n\n        this.showEndorsementRT = type == 'E';\n        this.showRenewalRT = type == 'R';\n        this.showUnderwritingRT = type == 'U';\n\n        Utility.updateValidator(this.requestForm.get('type1'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('type2'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('branch'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('line'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('subline'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('typeOfPolicy'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('clientName'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('clientGroup'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('copyNotify'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('comments'), this.showPolicyDetails ? [Validators.required] : null);\n\n        Utility.updateValidator(this.requestForm.get('requestType'), this.showDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('policyNumber'), this.showDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('reason'), this.showDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('agentEmail'), this.showDetails ? [Validators.required, Validators.email] : null);\n        Utility.updateValidator(this.requestForm.get('name'), this.showDetails ? [Validators.required] : null);\n\n        Utility.updateValidator(this.requestForm.get('issueType'), this.showUnderwritingRT ? [Validators.required] : null);\n\n        // set default request type and issue type\n        if (type == 'E') { //endorsement\n          this.requestDetails.requestType = '1';\n        } else if (type == 'R') { //renewal\n          this.requestDetails.requestType = '5';\n        } else if (type == 'U') { //underwriting\n          this.requestDetails.requestType = 'S';\n          this.requestDetails.issueType = 'P';\n        }\n      }\n\n    });\n  }\n\n  request(requestDetails: RequestDetails) {\n    if (requestDetails.type == 'P') { // policy request\n      this.rs.policy(this.files, requestDetails).then((res) => {\n        if (res.status) {\n          this.modalRef = Utility.showInfo(this.bms, res.message);\n        } else {\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      });\n    } else {\n      this.rs.request(requestDetails, requestDetails.type).then((res) => {\n        if (res.status) {\n          this.modalRef = Utility.showInfo(this.bms, res.message);\n        } else {\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      });\n    }\n  }\n}","export default \".mat-dialog-title {\\n  background: #3a3a3a;\\n  color: #fff;\\n  text-align: center;\\n  padding: 10px 0;\\n}\\n\\ntextarea {\\n  height: 208px;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXF1ZXN0LWRldGFpbHMtbW9kYWwvcmVxdWVzdC1kZXRhaWxzLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9yZXF1ZXN0LWRldGFpbHMtbW9kYWwvcmVxdWVzdC1kZXRhaWxzLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWRpYWxvZy10aXRsZSB7XG4gIGJhY2tncm91bmQ6ICMzYTNhM2E7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cblxudGV4dGFyZWEge1xuICBoZWlnaHQ6IDIwOHB4O1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  Inject\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport {\n  MatDialogRef,\n  MatTableDataSource,\n  MAT_DIALOG_DATA\n} from '@angular/material';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  ReplyDetails\n} from 'src/app/objects/ReplyDetails';\nimport {\n  RequestDetails\n} from 'src/app/objects/RequestDetails';\nimport {\n  RequestDetailsList\n} from 'src/app/objects/RequestDetailsList';\nimport {\n  RequestDetailsMessageList\n} from 'src/app/objects/RequestDetailsMessageList';\nimport {\n  RequestService\n} from 'src/app/services/request.service';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Component({\n  selector: 'app-request-details-modal',\n  templateUrl: './request-details-modal.component.html',\n  styleUrls: ['./request-details-modal.component.css']\n})\nexport class RequestDetailsModalComponent implements OnInit {\n  displayedColumns: string[] = ['requestHandler', 'message', 'user', 'source', 'postDate'];\n  dataSource = new MatTableDataSource();\n\n  requestForm: FormGroup;\n  requestDetailsList: RequestDetailsList = new RequestDetailsList();\n  requestDetails: RequestDetails = new RequestDetails();\n  replyDetails = new ReplyDetails();\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(public dialogRef: MatDialogRef < RequestDetailsModalComponent > ,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private bms: BsModalService,\n    private rs: RequestService,\n  ) {}\n\n  ngOnInit(): void {\n    this.requestDetailsList = this.data;\n    this.createForm();\n    this.getList();\n  }\n\n  createForm() {\n    this.requestForm = this.fb.group({\n      requestId: [null],\n      requestHandler: [null],\n      requestType: [null],\n      policyNumber: [null],\n      status: [null],\n      message: [null],\n      replyMessage: ['', Validators.required],\n      agentEmail: ['', [Validators.email, Validators.required]],\n      name: ['', Validators.required],\n    });\n  }\n\n  getList() {\n    this.rs.getMessageList(this.requestDetailsList.requestId).then((res) => {\n      if (res.status) {\n        let data: RequestDetailsMessageList[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  reply(): void {\n    this.replyDetails.requestId = this.requestDetailsList.requestId;\n    this.replyDetails.requestType = this.requestDetailsList.requestType;\n\n    this.rs.reply(this.replyDetails).then((res) => {\n      if (res.status) {\n        this.modalRef = Utility.showInfo(this.bms, res.message);\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n      this.dialogRef.close();\n    });\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\n.mat-row:hover{\\n    background: azure;\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXF1ZXN0LWxpc3QvcmVxdWVzdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVxdWVzdC1saXN0L3JlcXVlc3QtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1yb3c6aG92ZXJ7XG4gICAgYmFja2dyb3VuZDogYXp1cmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\n\nimport {\n  RequestDetailsModalComponent\n} from '../request-details-modal/request-details-modal.component';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  RequestDetailsList\n} from 'src/app/objects/RequestDetailsList';\nimport {\n  RequestService\n} from 'src/app/services/request.service';\nimport {\n  PageFilter\n} from 'src/app/objects/PageFilter';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-request-list',\n  templateUrl: './request-list.component.html',\n  styleUrls: ['./request-list.component.css']\n})\nexport class RequestListComponent implements OnInit {\n\n  displayedColumns: string[] = ['requestType', 'requestId', 'policyNumber', 'status', 'requestHandler', 'user'];\n  dataSource = new MatTableDataSource();\n\n  requestTypeItems = [\"APPROVAL\", \"CANCELLATION\", \"RENEWAL\", \"GENERAL\"];\n  statusItems = [\"COMPLETED\", \"STOPPED\", \"OPEN\"];\n\n  pageFilter: PageFilter = new PageFilter();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'requestType';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private rs: RequestService,\n    private bms: BsModalService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      requestType: [null],\n      requestId: [null],\n      policyNumber: [null],\n      status: [null],\n      requestHandler: [null],\n      user: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.rs.getList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: RequestDetailsList[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'requestType';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: RequestDetailsList) {\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: RequestDetailsList) {\n    this.dialog.open(RequestDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('requestType').setValue('');\n    this.filterForm.get('requestId').setValue('');\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('status').setValue('');\n    this.filterForm.get('requestHandler').setValue('');\n    this.filterForm.get('user').setValue('');\n\n    this.getList();\n  }\n}","export default \".sidebar-brand img {\\n  max-width: 90%;\\n  max-height: 55px;\\n}\\n\\n#sticky #accordionSidebar {\\n  height: 100vh !important;\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  -ms-overflow-style: none;\\n  /* Internet Explorer 10+ */\\n  scrollbar-width: none;\\n  /* Firefox */\\n}\\n\\n#sticky #accordionSidebar::-webkit-scrollbar {\\n  display: none;\\n  /* Safari and Chrome */\\n}\\n\\n.navbar-nav {\\n  height: 100vh !important;\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zaWRlbmF2L3NpZGVuYXYuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQix3QkFBd0I7RUFDeEIsMEJBQTBCO0VBQzFCLHFCQUFxQjtFQUNyQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0Usd0JBQXdCO0VBQ3hCLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lkZW5hdi9zaWRlbmF2LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZWJhci1icmFuZCBpbWcge1xuICBtYXgtd2lkdGg6IDkwJTtcbiAgbWF4LWhlaWdodDogNTVweDtcbn1cblxuI3N0aWNreSAjYWNjb3JkaW9uU2lkZWJhciB7XG4gIGhlaWdodDogMTAwdmggIWltcG9ydGFudDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcbiAgLyogSW50ZXJuZXQgRXhwbG9yZXIgMTArICovXG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTtcbiAgLyogRmlyZWZveCAqL1xufVxuXG4jc3RpY2t5ICNhY2NvcmRpb25TaWRlYmFyOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIC8qIFNhZmFyaSBhbmQgQ2hyb21lICovXG59XG5cbi5uYXZiYXItbmF2IHtcbiAgaGVpZ2h0OiAxMDB2aCAhaW1wb3J0YW50O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59Il19 */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  Globals\n} from '../../utils/global';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  page\n} from '../../constants/page';\nimport {\n  MENU\n} from '../../constants/local.storage';\nimport {\n  AuthenticationService\n} from '../../services/authentication.service';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnInit {\n  currentUser = this.authenticationService.currentUserValue;\n  hasSelectedAgent = !Utility.isUndefined(this.currentUser.selectedAgent);\n  p = page; //constant pages\n  menu = JSON.parse(localStorage.getItem(MENU));\n  logo = \"mivo-logo/mivo-logo-light\";\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private router: Router) {}\n\n  ngOnInit() {\n    // this.logo = \"partners/aap\";\n  }\n\n  setPage(val: String) {\n    Globals.setPage(val);\n  }\n\n  setAppPage(val: String) {\n    Globals.setPage(val);\n    Globals.setLoadQuotation(false);\n    this.router.navigate(['/reload']);\n  }\n\n  get page() {\n    return Globals.page;\n  }\n\n  get appType() {\n    return Globals.getAppType();\n  }\n}\n","export default \".fe-rate {\\n    font-size: 20px;\\n}\\n\\n.fas.fa-dollar-sign {\\n    color: #4caf50;\\n}\\n\\n.fas.fa-euro-sign {\\n    color: #03a9f4;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZW1wbGF0ZS90ZW1wbGF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy90ZW1wbGF0ZS90ZW1wbGF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZlLXJhdGUge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmZhcy5mYS1kb2xsYXItc2lnbiB7XG4gICAgY29sb3I6ICM0Y2FmNTA7XG59XG5cbi5mYXMuZmEtZXVyby1zaWduIHtcbiAgICBjb2xvcjogIzAzYTlmNDtcbn0iXX0= */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  Globals\n} from '../../utils/global';\nimport {\n  page\n} from '../../constants/page';\nimport {\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  filter\n} from 'rxjs/operators';\nimport { PaymentService } from 'src/app/services/payment.service';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.css']\n})\nexport class TemplateComponent implements OnInit {\n  p = page; //constant pages\n  sideNavClass = \"\";\n\n  constructor(private route: ActivatedRoute, private paymentService: PaymentService) {}\n\n  ngOnInit() {\n    this.route.queryParams\n      .subscribe(params => {\n        if (params.invoiceNo) {\n          this.processPayment(params);\n        }\n      });\n    this.route.queryParams\n      .pipe(filter(params => params.successPage))\n      .subscribe(params => {\n        if (params.successPage) {\n          Globals.setPage(this.p.ACC.OUT);\n        }\n      });\n  }\n\n  get page() {\n    return Globals.page;\n  }\n\n  processPayment(params: any) {\n    this.paymentService.processPaymentViaGlobalPay(params).then(response => {\n      console.log('response: ', response);\n    });\n  }\n}\n","export default \".container {\\n  width: 100%;\\n  min-height: 100vh;\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 15px;\\n\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-size: cover;\\n  position: relative;\\n  z-index: 1;\\n}\\n\\n.container::before {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  z-index: -1;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.wrap {\\n  max-width: 1200px;\\n  height: 650px;\\n  width: 100%;\\n  border-radius: 5px;\\n  overflow: hidden;\\n  background: #fff;\\n}\\n\\n.brand-logo {\\n  cursor: pointer;\\n}\\n\\n.brand-logo img {\\n  width: 100%;\\n  margin: 35px 0 0;\\n  padding: 20px;\\n}\\n\\n.col-lg-4.menu {\\n  padding-left: 30px;\\n  background: #2a2a2a;\\n}\\n\\n.col-lg-8.details {\\n  padding: 30px 40px 0 30px;\\n  text-align: justify;\\n}\\n\\nul.terms-menu {\\n  display: block;\\n  margin: 10px;\\n  top: 90px;\\n  position: relative;\\n  list-style: none;\\n  padding: 0;\\n}\\n\\nul.terms-menu li {\\n  padding: 10px 5px;\\n  background-color: #5e5e5e;\\n  border: 1px solid #525252;\\n  margin: 20px 0;\\n  text-align: center;\\n  border-radius: 5px;\\n  color: #fbfbfb;\\n}\\n\\nul.terms-menu li:hover {\\n  background-color: #e8e8e8;\\n  border: 1px solid #2f2f2f;\\n  color: #252525;\\n  cursor: pointer;\\n  font-weight: 700;\\n}\\n\\n.scroll {\\n  overflow: scroll;\\n  height: 100%;\\n}\\n\\n.scroll-wrapper {\\n  height: 635px;\\n}\\n\\n.top-20 {\\n  padding-top: 20px;\\n}\\n\\nh5 {\\n  font-weight: bold;\\n}\\n\\nh2 {\\n  font-weight: bold;\\n  text-align: center;\\n  margin: 20px 0;\\n}\\n\\n#jurisdiction {\\n  padding-bottom: 600px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZXJtcy1hbmQtY29uZGl0aW9uL3Rlcm1zLWFuZC1jb25kaXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7RUFLakIsYUFBYTtFQUNiLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGFBQWE7O0VBRWIsNEJBQTRCO0VBQzVCLDJCQUEyQjtFQUMzQixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxXQUFXO0VBQ1gsWUFBWTtFQUNaLE1BQU07RUFDTixPQUFPO0FBQ1Q7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsYUFBYTtFQUNiLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsY0FBYztFQUNkLFlBQVk7RUFDWixTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIseUJBQXlCO0VBQ3pCLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2QsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Rlcm1zLWFuZC1jb25kaXRpb24vdGVybXMtYW5kLWNvbmRpdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiAxNXB4O1xuXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xufVxuXG4uY29udGFpbmVyOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAtMTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xufVxuXG4ud3JhcCB7XG4gIG1heC13aWR0aDogMTIwMHB4O1xuICBoZWlnaHQ6IDY1MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuXG4uYnJhbmQtbG9nbyB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmJyYW5kLWxvZ28gaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMzVweCAwIDA7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG5cbi5jb2wtbGctNC5tZW51IHtcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICBiYWNrZ3JvdW5kOiAjMmEyYTJhO1xufVxuXG4uY29sLWxnLTguZGV0YWlscyB7XG4gIHBhZGRpbmc6IDMwcHggNDBweCAwIDMwcHg7XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XG59XG5cbnVsLnRlcm1zLW1lbnUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAxMHB4O1xuICB0b3A6IDkwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxudWwudGVybXMtbWVudSBsaSB7XG4gIHBhZGRpbmc6IDEwcHggNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWU1ZTVlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjNTI1MjUyO1xuICBtYXJnaW46IDIwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGNvbG9yOiAjZmJmYmZiO1xufVxuXG51bC50ZXJtcy1tZW51IGxpOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U4ZThlODtcbiAgYm9yZGVyOiAxcHggc29saWQgIzJmMmYyZjtcbiAgY29sb3I6ICMyNTI1MjU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLnNjcm9sbCB7XG4gIG92ZXJmbG93OiBzY3JvbGw7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnNjcm9sbC13cmFwcGVyIHtcbiAgaGVpZ2h0OiA2MzVweDtcbn1cblxuLnRvcC0yMCB7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xufVxuXG5oNSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5oMiB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMjBweCAwO1xufVxuXG4janVyaXNkaWN0aW9uIHtcbiAgcGFkZGluZy1ib3R0b206IDYwMHB4O1xufSJdfQ== */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Component({\n  selector: 'app-terms-and-condition',\n  templateUrl: './terms-and-condition.component.html',\n  styleUrls: ['./terms-and-condition.component.css']\n})\nexport class TermsAndConditionComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  scrollTo(id: string) {\n    Utility.scroll(id);\n  }\n\n  redirect() {\n    window.location.href = \"/\";\n  }\n\n}\n","export default \".mat-dialog-title {\\n  background: #3a3a3a;\\n  color: #fff;\\n  text-align: center;\\n  padding: 10px 0;\\n}\\n\\nhr {\\n  margin-top: 1rem;\\n  margin-bottom: 1rem;\\n  border: 0;\\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\\n}\\n\\nh6 {\\n  font-weight: bold;\\n}\\n\\n.required-indicator {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy92aWV3LWRldGFpbHMtbW9kYWwvdmlldy1kZXRhaWxzLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixTQUFTO0VBQ1Qsd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsVUFBVTtBQUNaIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy92aWV3LWRldGFpbHMtbW9kYWwvdmlldy1kZXRhaWxzLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWRpYWxvZy10aXRsZSB7XG4gIGJhY2tncm91bmQ6ICMzYTNhM2E7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cblxuaHIge1xuICBtYXJnaW4tdG9wOiAxcmVtO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7XG59XG5cbmg2IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5yZXF1aXJlZC1pbmRpY2F0b3Ige1xuICBjb2xvcjogcmVkO1xufSJdfQ== */\";","import {\n  Component,\n  Inject,\n  OnInit\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  ListAccountCommissionsPaid\n} from 'src/app/objects/ListAccountCommissionsPaid';\nimport {\n  ListAccountEstimatedCommissions\n} from 'src/app/objects/ListAccountEstimatedCommissions';\nimport {\n  ListAccountOutstandingBills\n} from 'src/app/objects/ListAccountOutstandingBills';\nimport {\n  ListAccountPremiumCollection\n} from 'src/app/objects/ListAccountPremiumCollection';\nimport {\n  ListClaimDetails\n} from 'src/app/objects/ListClaimDetails';\nimport {\n  ListClientDetails\n} from 'src/app/objects/ListClientDetails';\nimport {\n  ListPolicyActive\n} from 'src/app/objects/ListPolicyActive';\nimport {\n  ListPolicyCancelled\n} from 'src/app/objects/ListPolicyCancelled';\nimport {\n  ListPolicyExpiring\n} from 'src/app/objects/ListPolicyExpiring';\nimport {\n  ListPolicyNotRenewed\n} from 'src/app/objects/ListPolicyNotRenewed';\nimport {\n  ListPolicyProvisional\n} from 'src/app/objects/ListPolicyProvisional';\nimport {\n  ListPolicyRenewed\n} from 'src/app/objects/ListPolicyRenewed';\nimport {\n  ListQuotationActive\n} from 'src/app/objects/ListQuotationActive';\nimport {\n  ListQuotationProvisional\n} from 'src/app/objects/ListQuotationProvisional';\nimport {\n  PaymentRequest\n} from 'src/app/objects/PaymentRequest';\nimport {\n  PaymentService\n} from 'src/app/services/payment.service';\nimport {\n  page\n} from '../../constants/page';\nimport {\n  UtilitiesQueryFilter\n} from '../../objects/UtilitiesQueryFilter';\nimport {\n  UtilityQueryService\n} from '../../services/utility-query.service';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  MIVO_LOGIN\n} from \"../../constants/local.storage\";\n\n@Component({\n  selector: 'app-view-details-modal',\n  templateUrl: './view-details-modal.component.html',\n  styleUrls: ['./view-details-modal.component.css']\n})\nexport class ViewDetailsModalComponent implements OnInit {\n\n  p = page;\n\n  isProceedToPayment = false;\n  title: string;\n  paymentForm: FormGroup;\n  paymentMethod: string = 'paynamics';\n\n  listClientDetails = new ListClientDetails();\n  listPolicyActive = new ListPolicyActive();\n  listPolicyCancelled = new ListPolicyCancelled();\n  listPolicyRenewed = new ListPolicyRenewed();\n  listPolicyNotRenewed = new ListPolicyNotRenewed();\n  listPolicyExpiring = new ListPolicyExpiring();\n  listPolicyProvisional = new ListPolicyProvisional();\n  listQuotationActive = new ListQuotationActive();\n  listQuotationProvisional = new ListQuotationProvisional();\n  listClaimDetails = new ListClaimDetails();\n  listAccountOutstandingBills = new ListAccountOutstandingBills();\n  listAccountCommissionsPaid = new ListAccountCommissionsPaid();\n  listAccountEstimatedCommissions = new ListAccountEstimatedCommissions();\n  listAccountPremiumCollection = new ListAccountPremiumCollection();\n  type: String;\n\n  //modal reference\n  modalRef: BsModalRef;\n  filter: UtilitiesQueryFilter = new UtilitiesQueryFilter();\n\n  constructor(\n    public dialogRef: MatDialogRef < ViewDetailsModalComponent > ,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private utilityQueryService: UtilityQueryService,\n    private bms: BsModalService,\n    private formBuilder: FormBuilder,\n    private paymentService: PaymentService,\n    ) {}\n\n  ngOnInit(): void {\n    this.initPaymentForm();\n    this.type = this.data.type;\n    switch (this.type) {\n      case page.CLI.CLI: {\n        this.listClientDetails = this.data;\n        break;\n      }\n      case page.CLI.ACT: {\n        this.listPolicyActive = this.data;\n        break;\n      }\n      case page.CLI.CAN: {\n        this.listPolicyCancelled = this.data;\n        break;\n      }\n      case page.CLI.REN: {\n        this.listPolicyRenewed = this.data;\n        break;\n      }\n      case page.CLI.NOT: {\n        this.listPolicyNotRenewed = this.data;\n        break;\n      }\n      case page.CLI.EXP: {\n        this.listPolicyExpiring = this.data;\n        break;\n      }\n      case page.CLI.PRO: {\n        this.listPolicyProvisional = this.data;\n        break;\n      }\n      case page.CLI.ACTQ: {\n        this.listQuotationActive = this.data;\n        break;\n      }\n      case page.CLI.PROQ: {\n        this.listQuotationProvisional = this.data;\n        break;\n      }\n      case page.CLI.CLA: {\n        this.listClaimDetails = this.data;\n        break;\n      }\n      case page.ACC.OUT: {\n        this.listAccountOutstandingBills = this.data;\n        break;\n      }\n      case page.ACC.COM: {\n        this.listAccountCommissionsPaid = this.data;\n        break;\n      }\n      case page.ACC.EST: {\n        this.listAccountEstimatedCommissions = this.data;\n        break;\n      }\n      case page.ACC.PRE: {\n        this.listAccountPremiumCollection = this.data;\n        break;\n      }\n      case page.ACC.SUC: {\n        this.title = 'Payment Transaction Result';\n        break;\n      }\n\n      default: {\n        // do nothing\n      }\n    }\n  }\n\n  initPaymentForm() {\n    this.paymentForm = this.formBuilder.group({\n      address1: ['', Validators.required],\n      address2: [''],\n      city: ['', Validators.required],\n      province: ['', Validators.required],\n      zip: [''],\n      email: ['', Validators.required],\n      phone: [''],\n      mobile: [''],\n      paymentMethod: ['paynamics'],\n    });\n  }\n\n  pay() {\n    this.isProceedToPayment = true;\n    this.title = 'Payment';\n  }\n\n  redirectToPayment(data: ListAccountOutstandingBills) {\n    if (this.paymentMethod ===  'paynamics') {\n      const splitName = data.policyHolder.split(',');\n      const splitNameFirstMiddle = splitName[1].split(' ');\n      const middleName = splitNameFirstMiddle.length > 1 ? splitNameFirstMiddle[splitNameFirstMiddle.length - 1] : '';\n      const paymentRequest: PaymentRequest = {\n        firstName: splitName[1].replace(middleName, ''),\n        middleName,\n        lastName: splitName[0],\n        address1: this.paymentForm.value.address1,\n        address2: this.paymentForm.value.address2,\n        city: this.paymentForm.value.city,\n        province: this.paymentForm.value.province,\n        zip: this.paymentForm.value.zip,\n        policyNumber: data.policyNumber,\n        invoiceNumber: data.invoiceNumber,\n        amount: Math.trunc(Number(data.amount)).toString() + '.00',\n        email: this.paymentForm.value.email,\n        phone: this.paymentForm.value.phone,\n        mobile: this.paymentForm.value.mobile,\n      };\n\n      this.paymentService.getPaymentUrl(paymentRequest).then((response) => {\n        var mapForm = document.createElement(\"form\");\n        mapForm.method = \"POST\"; // or \"post\" if appropriate\n        mapForm.action = response.url;\n        var mapInput = document.createElement(\"input\");\n        mapInput.type = \"hidden\";\n        mapInput.name = \"paymentRequest\";\n        mapInput.setAttribute(\"value\", response.value);\n        mapForm.appendChild(mapInput);\n        document.body.appendChild(mapForm);\n        mapForm.submit();\n      });\n    } else {\n      this.paymentService.getPaymentUrlViaGlobalPay(data.invoiceNumber).then((response) => {\n        window.location.href = response.url;\n      });\n    }\n\n  }\n\n  inquire(): void {\n    const userName = JSON.parse(localStorage.getItem(MIVO_LOGIN)).username\n\n    if (userName != null) {\n      this.filter.userName = userName\n      this.filter.param = this.type === 'client-active' ? this.data.policyNumber : this.data.claimNumber;\n      this.filter.inquiryType = this.type === 'client-active' ? 'GETPOLICYDETAILS' : 'GETCLAIMDETAILS';\n      this.filter.paramName = this.type === 'client-active' ? 'policyNo' : 'claimNo';\n\n      this.utilityQueryService.getSearchResult(this.filter).then((res) => {\n        if (res) {\n          const jsonData = JSON.parse(JSON.stringify(res));\n          window.open(jsonData.obj, '_blank');\n        }\n      });\n    } else {\n      this.modalRef = Utility.showError(this.bms, 'No login credentials found!');\n    }\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  changePaymentMethod(event) { \n    if (this.paymentMethod === event.target.value) {\n      return;\n    }\n    this.paymentMethod = event.target.value;\n  }\n}","import { environment } from '../../environments/environment';\n\n/*AUTH*/\n// export const TOKEN_AUTH_USERNAME = 'jwtmivoclientid';\n// export const TOKEN_AUTH_PASSWORD = 'jwtpa$$w0rd';\nexport const TOKEN_AUTH_USERNAME = 'testjwtclientid';\nexport const TOKEN_AUTH_PASSWORD = 'XY7kmzoNzl100';\nexport const TOKEN_NAME = 'access_token';\n\n//access authentication token\nexport const AUTH_TOKEN = environment.apiUrl + 'oauth/token';\n\n//access API URL\nexport const API_URL = environment.apiUrl + 'api';\n\n//deployment version\nexport const VER = 'v1.20210303';","export const MIVO_LOGIN = \"MIVO_login\";\nexport const MIVO_AUTH = \"MIVO_auth\";\nexport const CURRENT_USER = 'MIVO_currentUser';\nexport const MENU = 'MIVO_menu';\nexport const DASH_INFO = 'MIVO_dashInfo';\n","export const page = {\n  DAS: {\n    N: 'dashboard'\n  },\n  ACC: {\n    N: 'account',\n    OUT: 'account-outstanding-bills',\n    COM: 'account-commissions-paid',\n    EST: 'account-estimated-commissions',\n    PRE: 'account-premium-collection',\n    SUC: 'account-outstanding-bills-success',\n  },\n  CLI: {\n    N: 'client',\n    CLI: 'client-details',\n    ACT: 'client-active',\n    CAN: 'client-cancelled',\n    REN: 'client-renewed',\n    NOT: 'client-not-renewed',\n    EXP: 'client-expiring',\n    PRO: 'client-provisional',\n    ACTQ: 'client-active-quotation',\n    PROQ: 'client-provisional-quotation',\n    CLA: 'client-claims',\n  },\n  QUI: {\n    N: 'quick-quotation',\n    CAR: 'quick-quotation-car',\n    HOM: 'quick-quotation-home',\n    TRA: 'quick-quotation-travel',\n    ACC: 'quick-quotation-accident'\n  },\n  QUO: {\n    N: 'quotation',\n    CAR: 'quotation-car',\n    HOM: 'quotation-home',\n    TRA: 'quotation-travel',\n    ACC: 'quotation-accident'\n  },\n  ISS: {\n    N: 'issuance',\n    CAR: 'issuance-car',\n    HOM: 'issuance-home',\n    TRA: 'issuance-travel',\n    ACC: 'issuance-accident'\n  },\n  REQ: {\n    N: 'requests',\n    LIS: 'requestList',\n    CRE: 'requestCreate',\n  },\n  UTI: {\n    N: 'utilities',\n    QUE: 'utilities-query',\n    DOC: 'utilities-document-printing',\n    CHA: 'utilities-change-password'\n  },\n  NEW: {\n    N: 'news'\n  },\n  FAQ: {\n    N: 'faq'\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  Router,\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from '@angular/router';\nimport {\n  Utility\n} from '../utils/utility';\n\nimport {\n  AuthenticationService\n} from '../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const isAgentPage = route.routeConfig.path == 'agent';\n    const currentUser = this.authenticationService.currentUserValue;\n    \n    if (currentUser) {\n      const noAgentCode = Utility.isUndefined(currentUser.agentCode);\n      if (currentUser.role === 1 && isAgentPage) {\n        // user cannot choose agent\n        this.router.navigate(['']);\n      } else if (currentUser.role === 2 && !isAgentPage && noAgentCode) {\n        // user cannot navigate if no selected agent\n        this.router.navigate(['/agent']);\n      }\n      // authorised so return true\n      return true;\n    }\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n    return false;\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport {\n  Observable,\n  throwError\n} from 'rxjs';\nimport {\n  catchError\n} from 'rxjs/operators';\n\nimport {\n  AuthenticationService\n} from '../services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(request: HttpRequest < any > , next: HttpHandler): Observable < HttpEvent < any >> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        this.authenticationService.logout();\n        location.reload(true);\n      }\n\n      return throwError(err);\n    }))\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpResponse,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport {\n  Observable,\n  of ,\n  throwError\n} from 'rxjs';\nimport {\n  delay,\n  mergeMap,\n  materialize,\n  dematerialize\n} from 'rxjs/operators';\nimport {\n  User\n} from '../objects/User';\n\n// array in local storage for registered users\n// let users = JSON.parse(localStorage.getItem('users')) || [];\nconst users = [{\n  userId: 1,\n  role: 1,\n  userName: 'np',\n  password: 'np',\n  firstName: 'Nathalie',\n  lastName: 'Domingo',\n  fullName: 'Nathalie Domingo',\n  address: 'Sta. Rita, Olonggapo City, Zambales, Philippines',\n  commStructure: 4001,\n  expiryDay: 4,\n  token: 'faketoken'\n},{\n  userId: 2,\n  role: 2,\n  userName: 'jb',\n  password: 'jb',\n  firstName: 'Jethru',\n  lastName: 'Balarbar',\n  fullName: 'Jethru Balarbar',\n  address: 'Sagud Bahley, San Fabian, Pangasinan, Philippines',\n  commStructure: 4001,\n  expiryDay: 11,\n  token: 'faketoken'\n}]\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest < any > , next: HttpHandler): Observable < HttpEvent < any >> {\n    const {\n      url,\n      method,\n      headers,\n      body\n    } = request;\n\n    // wrap in delayed observable to simulate server api call\n    return of(null)\n      .pipe(mergeMap(handleRoute))\n      .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n      .pipe(delay(500))\n      .pipe(dematerialize());\n\n    function handleRoute() {\n      switch (true) {\n        case url.endsWith('/users/authenticate') && method === 'POST':\n          return authenticate();\n        case url.endsWith('/users/register') && method === 'POST':\n          return register();\n        case url.endsWith('/users') && method === 'GET':\n          return getUsers();\n        case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n          return deleteUser();\n        default:\n          // pass through any requests not handled above\n          return next.handle(request);\n      }\n    }\n\n    // route functions\n    function authenticate() {\n      const {\n        username,\n        password\n      } = body;\n      const user = users.find(x => x.userName === username && x.password === password);\n      if (!user) return error('Username or password is incorrect');\n      return ok(new User(user))\n    }\n\n    function register() {\n      const user = body\n\n      if (users.find(x => x.userName === user.username)) {\n        return error('Username \"' + user.username + '\" is already taken')\n      }\n\n      user.id = users.length ? Math.max(...users.map(x => x.userId)) + 1 : 1;\n      users.push(user);\n      localStorage.setItem('users', JSON.stringify(users));\n\n      return ok();\n    }\n\n    function getUsers() {\n      if (!isLoggedIn()) return unauthorized();\n      return ok(users);\n    }\n\n    function deleteUser() {\n      if (!isLoggedIn()) return unauthorized();\n\n      const userss = users.filter(x => x.userId !== idFromUrl());\n      localStorage.setItem('users', JSON.stringify(userss));\n      return ok();\n    }\n\n    // helper functions\n\n    function ok(body ? ) {\n      return of(new HttpResponse({\n        status: 200,\n        body\n      }))\n    }\n\n    function error(message) {\n      return throwError({\n        error: {\n          message\n        }\n      });\n    }\n\n    function unauthorized() {\n      return throwError({\n        status: 401,\n        error: {\n          message: 'Unauthorised'\n        }\n      });\n    }\n\n    function isLoggedIn() {\n      return headers.get('Authorization') === 'Bearer fake-jwt-token';\n    }\n\n    function idFromUrl() {\n      const urlParts = url.split('/');\n      return parseInt(urlParts[urlParts.length - 1]);\n    }\n  }\n}\n\nexport const fakeBackendProvider = {\n  // use fake backend in place of Http service for backend-less development\n  provide: HTTP_INTERCEPTORS,\n  useClass: FakeBackendInterceptor,\n  multi: true\n};","import {\n  Injectable\n} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport {\n  Observable\n} from 'rxjs';\nimport {\n  AuthenticationService\n} from '../services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(request: HttpRequest < any > , next: HttpHandler): Observable < HttpEvent < any >> {\n    // add authorization header with jwt token if available\n    let currentUser = this.authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `${currentUser.token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}","import {\n  PolicyHolder\n} from './PolicyHolder';\nimport {\n  GroupPolicy\n} from './GroupPolicy';\nimport {\n  InsuredDetails\n} from './InsuredDetails';\n\n// * - used in quick quotation\nexport class Accident {\n  mcaTmpPptoMph: string;\n  affecting: boolean;\n  primaryInsuredAge: number; // *\n  cbSpouseAge: boolean; // *\n  spouseAge: number; // *\n  cbChildNumber: boolean; // *\n  childNumber: number; // *\n  occupationalClass: string; // *\n\n  policyNumber: string\n  quotationNumber: string;\n\n  //risk details\n  subline: number; // *\n  sublineEffectivityDate: string; //*\n\n  //general information\n  effectivityDate: Date;\n  expiryDate: Date;\n\n  //group policy\n  groupPolicy: GroupPolicy;\n\n  //policy holder information\n  policyHolder: PolicyHolder;\n\n  //insured details\n  insuredDetails: [InsuredDetails];\n\n  //accident death and disablement value\n  disablementValue: number; // *\n\n  product: number;\n\n  constructor() {}\n}\n","import {\n  Accessory\n} from './Accessory';\nimport {\n  Beneficiary\n} from './Beneficiary';\nimport {\n  GroupPolicy\n} from './GroupPolicy';\nimport {\n  PolicyHolder\n} from './PolicyHolder';\nimport {\n  Coverage\n} from './Coverage';\nimport {\n  CoverageVariableData\n} from './CoverageVariableData';\n\n// * - used in quick quotation\nexport class Car {\n  affecting: boolean;\n  isModifiedCoverage: boolean;\n  mcaTmpPptoMph: string;\n  quotationNumber: string;\n  policyNumber: string;\n\n  //vehicle information\n  make: number; // *\n  model: number; // *\n  vehicleType: number; // *\n  modelYear: string; // *\n  subModel: number; // *\n  typeOfUse: number; // *\n  vehicleValue: number; // *\n  subline: number; // *\n  sublineEffectivityDate: string; // * change effectivityDate to sublineEffectivityDate\n  color: number;\n  areaOfUsage: number;\n  conductionNumber: string;\n  plateNumber: string;\n  serialNumber: string;\n  engineNumber: string;\n  mvFileNumber: string;\n  purchaseDate: Date;\n  receivedBy: string;\n  receivedDate: Date;\n\n  //CTPL\n  automaticAuth: string;\n  registrationType: string;\n  mvType: string;\n  cocNumber: string;\n  cbIsNotRequiredAuthNumber: boolean;\n  authNumber: string;\n\n  //accessories\n  accessories: Array < Accessory > = [];\n  //sub agents\n  subAgents: Array < Beneficiary > = [];\n\n  //policy holder information\n  clientName: string;\n  policyHolder: PolicyHolder;\n  secondaryPolicyHolderPrefix: number;\n  secondaryPolicyHolderSeparator: string;\n  secondaryPolicyHolder: PolicyHolder;\n  assigneePolicyHolder: PolicyHolder;\n  mortgageePolicyHolder: PolicyHolder;\n\n  //group policy\n  groupPolicy: GroupPolicy;\n\n  //general information\n  effectivityDate: Date;\n  expiryDate: Date;\n\n  //additional policy information\n  customRiskName: string; //NOM_RIESGO_CUSTOM\n  seatingCapacity: number; //NUM_PLAZAS\n  weight: string; //VAL_PESO\n  displacement: string; //VAL_CC\n  classification: number; //TIP_VEHI_PESO\n  coverageArea: number; //COD_AREA_COVER\n  assuredsCoinsuranceShare: string; //PCT_CLI_COINS\n  cbWaivedMinPremium: boolean; //MCA_WAIVE_MIN_PREM\n  cbPrepaidPremium: boolean; //MCA_PREPAID_PREM\n  cbGlassEtchingEntitled: boolean; //MCA_GLASS_ETCHING\n  glassEtchingAvailmentDate: Date; //FEC_GLASS_ETCHING\n  existingDamages: string; //TXT_EXT_DAM_PARTS\n  inspectionAssessment: number; //TXT_EXT_DAM_PARTS\n  \n  //additional policy information for issuance\n  cbPolicyOnlyDriver: boolean; //MCA_DRIVER\n  cbPolicyOwner: boolean; //MCA_OWNER\n  cbHasAssignee: boolean; //MCA_ASSIGNEE\n  cbVehicleMortgaged: boolean; //MCA_MORTGAGED\n  mortgageClause: number; //TIP_MORT_CLAUSE\n\n  //subagent and policy holder\n  beneficiaries: Array < Beneficiary > = [];\n\n  //products\n  paymentMethod: number;\n  productList: number;\n\n  //coverages\n  coverages: Array < Coverage > = [];\n\n  //coverage variable data\n  coverageVariableData: CoverageVariableData;\n\n  constructor(init ? : Partial < Car > ) {\n    Object.assign(this, init);\n  }\n}\n","import {\n  Utility\n} from '../utils/utility';\n\nexport class CoverageVariableData {\n  //1100\n  lossAndDamageType: number;\n  //TIP_LOSS_DAMAGE\n  finalRate: number;\n  //PCT_FINAL_RATE\n  adjustedCommissionRate: number;\n  //PCT_ADJ_COMM_RATE\n  lossRatioRate: number;\n  //PCT_LOSS_RATIO\n\n  //1002\n  ownDamageTowingLimit: number;\n  //NUM_OD_TOWING_LIMIT\n  ownDamageRepairLimit: number;\n  //NUM_OD_REPAIR_LIMIT\n  ownDamageSpecialDeductible: number;\n  //VAL_OD_SPECIAL_DEDUCTIBLE\n\n  //1003\n  theftTowingLimit: number;\n  //NUM_TH_TOWING_LIMIT\n  theftRepairLimit: number;\n  //NUM_TH_REPAIR_LIMIT\n  theftSpecialDeductible: number;\n  //VAL_TH_SPECIAL_DEDUCTIBLE\n\n  //1007\n  uppaDiscountType: number;\n  //TIP_UPPA_DISCOUNT\n  uppaDiscountAmount: number;\n  //IMP_UPPA_DISCOUNT\n  uppaCommissionAdjustment: number;\n  //PCT_UPPA_COMMN_ADJ\n  sumInsuredPerPassenger: number;\n  //VAL_ASEG_POR_PASAJERO\n\n  //1008\n  aonFinalRate: number;\n  //PCT_AON_FINAL_RATE\n  aonTowingLimit: number;\n  //NUM_AON_TOWING_LIMIT\n  aonRepairLimit: number;\n  //NUM_AON_REPAIR_LIMIT\n  aonSpecialDeductible: number;\n  //VAL_AON_SPECIAL_DEDUCTIBLE\n  aonCommissionAdjustment: number;\n  //PCT_AON_COMMN_ADJ\n\n  //1020\n  srccFinalRate: number;\n  //PCT_SRCC_FINAL_RATE\n  srccTowingLimit: number;\n  //NUM_SRCC_TOWING_LIMIT\n  srccRepairLimit: number;\n  //NUM_SRCC_REPAIR_LIMIT\n  srccSpecialDeductible: number;\n  //VAL_SRCC_SPECIAL_DEDUCTIBLE\n  srccCommissionAdjustment: number;\n  //PCT_SRCC_COMMN_ADJ\n\n  //1040\n  roadAssistDiscount: number;\n  //VAL_RA_DISC\n\n  //1029\n  ra100Discount: number;\n  //VAL_RA100_DISC\n\n  getDefaultValues(arr: any[], cvd ? : CoverageVariableData) {\n    const variableData = new CoverageVariableData();\n    const hasCVD = !Utility.isUndefined(cvd);\n\n    arr.forEach((a) => {\n      const value = !Utility.isUndefined(a.valCampo) ? parseFloat(a.valCampo) : null;\n\n      switch (a.codCampo) {\n        case \"TIP_LOSS_DAMAGE\": {\n          variableData.lossAndDamageType = value;\n          if (hasCVD) {\n            cvd.lossAndDamageType = value;\n          }\n          break;\n        }\n        case \"PCT_FINAL_RATE\": {\n          variableData.finalRate = value;\n          if (hasCVD) {\n            cvd.finalRate = value;\n          }\n          break;\n        }\n        case \"PCT_ADJ_COMM_RATE\": {\n          variableData.adjustedCommissionRate = value;\n          if (hasCVD) {\n            cvd.adjustedCommissionRate = value;\n          }\n          break;\n        }\n        case \"PCT_LOSS_RATIO\": {\n          variableData.lossRatioRate = value;\n          if (hasCVD) {\n            cvd.lossRatioRate = value;\n          }\n          break;\n        }\n\n        case \"NUM_OD_TOWING_LIMIT\": {\n          variableData.ownDamageTowingLimit = value;\n          if (hasCVD) {\n            cvd.ownDamageTowingLimit = value;\n          }\n          break;\n        }\n        case \"NUM_OD_REPAIR_LIMIT\": {\n          variableData.ownDamageRepairLimit = value;\n          if (hasCVD) {\n            cvd.ownDamageRepairLimit = value;\n          }\n          break;\n        }\n        case \"VAL_OD_SPECIAL_DEDUCTIBLE\": {\n          variableData.ownDamageSpecialDeductible = value;\n          if (hasCVD) {\n            cvd.ownDamageSpecialDeductible = value;\n          }\n          break;\n        }\n\n        case \"NUM_TH_TOWING_LIMIT\": {\n          variableData.theftTowingLimit = value;\n          if (hasCVD) {\n            cvd.theftTowingLimit = value;\n          }\n          break;\n        }\n        case \"NUM_TH_REPAIR_LIMIT\": {\n          variableData.theftRepairLimit = value;\n          if (hasCVD) {\n            cvd.theftRepairLimit = value;\n          }\n          break;\n        }\n        case \"VAL_TH_SPECIAL_DEDUCTIBLE\": {\n          variableData.theftSpecialDeductible = value;\n          if (hasCVD) {\n            cvd.theftSpecialDeductible = value;\n          }\n          break;\n        }\n\n        case \"TIP_UPPA_DISCOUNT\": {\n          variableData.uppaDiscountType = value;\n          if (hasCVD) {\n            cvd.uppaDiscountType = value;\n          }\n          break;\n        }\n        case \"IMP_UPPA_DISCOUNT\": {\n          variableData.uppaDiscountAmount = value;\n          if (hasCVD) {\n            cvd.uppaDiscountAmount = value;\n          }\n          break;\n        }\n        case \"PCT_UPPA_COMMN_ADJ\": {\n          variableData.uppaCommissionAdjustment = value;\n          if (hasCVD) {\n            cvd.uppaCommissionAdjustment = value;\n          }\n          break;\n        }\n        case \"VAL_ASEG_POR_PASAJERO\": {\n          variableData.sumInsuredPerPassenger = value;\n          if (hasCVD) {\n            cvd.sumInsuredPerPassenger = value;\n          }\n          break;\n        }\n\n        case \"PCT_AON_FINAL_RATE\": {\n          variableData.aonFinalRate = value;\n          if (hasCVD) {\n            cvd.aonFinalRate = value;\n          }\n          break;\n        }\n        case \"NUM_AON_TOWING_LIMIT\": {\n          variableData.aonTowingLimit = value;\n          if (hasCVD) {\n            cvd.aonTowingLimit = value;\n          }\n          break;\n        }\n        case \"NUM_AON_REPAIR_LIMIT\": {\n          variableData.aonRepairLimit = value;\n          if (hasCVD) {\n            cvd.aonRepairLimit = value;\n          }\n          break;\n        }\n        case \"VAL_AON_SPECIAL_DEDUCTIBLE\": {\n          variableData.aonSpecialDeductible = value;\n          if (hasCVD) {\n            cvd.aonSpecialDeductible = value;\n          }\n          break;\n        }\n        case \"PCT_AON_COMMN_ADJ\": {\n          variableData.aonCommissionAdjustment = value;\n          if (hasCVD) {\n            cvd.aonCommissionAdjustment = value;\n          }\n          break;\n        }\n\n        case \"PCT_SRCC_FINAL_RATE\": {\n          variableData.srccFinalRate = value;\n          if (hasCVD) {\n            cvd.srccFinalRate = value;\n          }\n          break;\n        }\n        case \"NUM_SRCC_TOWING_LIMIT\": {\n          variableData.srccTowingLimit = value;\n          if (hasCVD) {\n            cvd.srccTowingLimit = value;\n          }\n          break;\n        }\n        case \"NUM_SRCC_REPAIR_LIMIT\": {\n          variableData.srccRepairLimit = value;\n          if (hasCVD) {\n            cvd.srccRepairLimit = value;\n          }\n          break;\n        }\n        case \"VAL_SRCC_SPECIAL_DEDUCTIBLE\": {\n          variableData.srccSpecialDeductible = value;\n          if (hasCVD) {\n            cvd.srccSpecialDeductible = value;\n          }\n          break;\n        }\n        case \"PCT_SRCC_COMMN_ADJ\": {\n          variableData.srccCommissionAdjustment = value;\n          if (hasCVD) {\n            cvd.srccCommissionAdjustment = value;\n          }\n          break;\n        }\n\n        case \"VAL_RA_DISC\": {\n          variableData.roadAssistDiscount = value;\n          if (hasCVD) {\n            cvd.roadAssistDiscount = value;\n          }\n          break;\n        }\n\n        case \"VAL_RA100_DISC\": {\n          variableData.ra100Discount = value;\n          if (hasCVD) {\n            cvd.ra100Discount = value;\n          }\n          break;\n        }\n\n        default: {\n          //statements; \n          break;\n        }\n      }\n    });\n\n    return variableData;\n  }\n\n  validateValues(cvddv: CoverageVariableData, cvd: CoverageVariableData) {\n    if (Utility.isUndefined(cvd.lossAndDamageType)) {\n      cvd.lossAndDamageType = cvddv.lossAndDamageType;\n    }\n\n    if (cvd.finalRate > 100) {\n      cvd.finalRate = 100;\n    } else if (Utility.isUndefined(cvd.finalRate)) {\n      cvd.finalRate = cvddv.finalRate;\n    }\n\n    if (cvd.adjustedCommissionRate > 100) {\n      cvd.adjustedCommissionRate = 100;\n    } else if (Utility.isUndefined(cvd.adjustedCommissionRate)) {\n      cvd.adjustedCommissionRate = cvddv.adjustedCommissionRate;\n    }\n\n    if (cvd.lossRatioRate > 100) {\n      cvd.lossRatioRate = 100;\n    } else if (Utility.isUndefined(cvd.lossRatioRate)) {\n      cvd.lossRatioRate = cvddv.lossRatioRate;\n    }\n\n    if (Utility.isUndefined(cvd.ownDamageTowingLimit)) {\n      cvd.ownDamageTowingLimit = cvddv.ownDamageTowingLimit;\n    }\n\n    if (Utility.isUndefined(cvd.ownDamageRepairLimit)) {\n      cvd.ownDamageRepairLimit = cvddv.ownDamageRepairLimit;\n    }\n\n    if (Utility.isUndefined(cvd.ownDamageSpecialDeductible)) {\n      cvd.ownDamageSpecialDeductible = cvddv.ownDamageSpecialDeductible;\n    }\n\n    if (Utility.isUndefined(cvd.theftTowingLimit)) {\n      cvd.theftTowingLimit = cvddv.theftTowingLimit;\n    }\n\n    if (Utility.isUndefined(cvd.theftRepairLimit)) {\n      cvd.theftRepairLimit = cvddv.theftRepairLimit;\n    }\n\n    if (Utility.isUndefined(cvd.theftSpecialDeductible)) {\n      cvd.theftSpecialDeductible = cvddv.theftSpecialDeductible;\n    }\n\n    if (Utility.isUndefined(cvd.uppaDiscountType)) {\n      cvd.uppaDiscountType = cvddv.uppaDiscountType;\n    }\n\n    if (Utility.isUndefined(cvd.uppaDiscountAmount)) {\n      cvd.uppaDiscountAmount = cvddv.uppaDiscountAmount;\n    }\n\n    if (cvd.uppaCommissionAdjustment > 100) {\n      cvd.uppaCommissionAdjustment = 100;\n    } else if (Utility.isUndefined(cvd.uppaCommissionAdjustment)) {\n      cvd.uppaCommissionAdjustment = cvddv.uppaCommissionAdjustment;\n    }\n\n    if (Utility.isUndefined(cvd.sumInsuredPerPassenger)) {\n      cvd.sumInsuredPerPassenger = cvddv.sumInsuredPerPassenger;\n    }\n\n    if (cvd.aonFinalRate > 100) {\n      cvd.aonFinalRate = 100;\n    } else if (Utility.isUndefined(cvd.aonFinalRate)) {\n      cvd.aonFinalRate = cvddv.aonFinalRate;\n    }\n\n    if (Utility.isUndefined(cvd.aonTowingLimit)) {\n      cvd.aonTowingLimit = cvddv.aonTowingLimit;\n    }\n\n    if (Utility.isUndefined(cvd.aonRepairLimit)) {\n      cvd.aonRepairLimit = cvddv.aonRepairLimit;\n    }\n\n    if (Utility.isUndefined(cvd.aonSpecialDeductible)) {\n      cvd.aonSpecialDeductible = cvddv.aonSpecialDeductible;\n    }\n\n    if (cvd.aonCommissionAdjustment > 100) {\n      cvd.aonCommissionAdjustment = 100;\n    } else if (Utility.isUndefined(cvd.aonCommissionAdjustment)) {\n      cvd.aonCommissionAdjustment = cvddv.aonCommissionAdjustment;\n    }\n\n    if (cvd.srccFinalRate > 100) {\n      cvd.srccFinalRate = 100;\n    } else if (Utility.isUndefined(cvd.srccFinalRate)) {\n      cvd.srccFinalRate = cvddv.srccFinalRate;\n    }\n\n    if (Utility.isUndefined(cvd.srccTowingLimit)) {\n      cvd.srccTowingLimit = cvddv.srccTowingLimit;\n    }\n\n    if (Utility.isUndefined(cvd.srccRepairLimit)) {\n      cvd.srccRepairLimit = cvddv.srccRepairLimit;\n    }\n\n    if (Utility.isUndefined(cvd.srccSpecialDeductible)) {\n      cvd.srccSpecialDeductible = cvddv.srccSpecialDeductible;\n    }\n\n    if (cvd.srccCommissionAdjustment > 100) {\n      cvd.srccCommissionAdjustment = 100;\n    } else if (Utility.isUndefined(cvd.srccCommissionAdjustment)) {\n      cvd.srccCommissionAdjustment = cvddv.srccCommissionAdjustment;\n    }\n\n    if (Utility.isUndefined(cvd.roadAssistDiscount)) {\n      cvd.roadAssistDiscount = cvddv.roadAssistDiscount;\n    }\n\n    if (Utility.isUndefined(cvd.ra100Discount)) {\n      cvd.ra100Discount = cvddv.ra100Discount;\n    }\n  }\n\n  constructor(init ? : Partial < CoverageVariableData > ) {\n    Object.assign(this, init);\n  }\n}\n","export class DocumentPrinting {\n  documentType: String;\n\tpolicyNumber: String;\n\tendorsementNumber: String;\n  policyPPRF: boolean;\n  policyPAC: boolean;\n  policyPV: boolean;\n  quotationNumber: String;\n  csProcessDate: String;\n  csPass: String;\n  soaProcessDate: String;\n  soaPass: String;\n  \n  constructor(init?: Partial<DocumentPrinting>) {\n    Object.assign(this, init);\n  }\n}\n","export class GroupPolicy {\n  groupPolicy: number;\n  contract: number;\n  subContract: number;\n  commercialStructure: number;\n  agentCode: number;\n  cbIsRenewal: boolean;\n  expiringPolicyNumber: string;\n  \n  constructor() {\n  }\n}\n","import {\n  GroupPolicy\n} from './GroupPolicy';\nimport {\n  PolicyHolder\n} from './PolicyHolder';\n\n// * - used in quick quotation\nexport class Home {\n  mcaTmpPptoMph: string;\n  affecting: boolean;\n\n  subline: number; // *\n  sublineEffectivityDate: string;\n\n  cbBuilding: boolean; // *\n  building: number = 0; // *\n  cbContent: boolean; // *\n  content: number = 0; // *\n  cbImprovements: boolean; // *\n  improvements: number = 0; // *\n  cbRelatedBuild: boolean; // *\n  relatedBuild: number = 0; // *\n  cbRelatedContent: boolean; // *\n  relatedContent: number = 0; // *\n\n  policyNumber: string\n  quotationNumber: string;\n\n  currency: number;\n\n  //location of risk\n  district: string;\n  blockNumber: string;\n\n  buildingNumber: string;\n  subdivision: string;\n  buildingName: string;\n  streetName: string;\n  barangay: string;\n  region: number;\n  province: number;\n  city: number;\n\n  //building/content details\n  buildingCapital: number;\n  contentValue: number;\n  buildingContent: string;\n\n  //rate percentage\n  ratePercentage: number;\n\n  constructionOfBuilding: string;\n  occupancyOfBuilding: string;\n\n  front: string;\n  right: string;\n  left: string;\n  rear: string;\n\n  improvement: number;\n  relatedStructureDetails: any[];\n  relatedContentDetails: any[];\n\n  //general information\n  effectivityDate: Date;\n  expiryDate: Date;\n\n  //group policy\n  groupPolicy: GroupPolicy;\n\n  //policy holder information\n  policyHolder: PolicyHolder;\n  //alternative policy holder information\n  secondaryPolicyHolderPrefix: number;\n  secondaryPolicyHolderSeparator: string;\n  secondaryPolicyHolderSeparatorCode: number;\n  secondaryPolicyHolder: PolicyHolder;\n  //mortgagee policy holder information\n  mortgageePolicyHolder: PolicyHolder;\n\n  crestaZone: string;\n  zipCode: number;\n  cbMortgagee: boolean;\n\n  warrantedNoLoss: string;\n\n  //product\n  paymentMethod: number;\n  product: number;\n\n  constructor() {}\n}\n","export class InsuredDetails {\n  //insured details\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  suffix: number;\n  suffixLabel: string;\n  gender: number;\n  relationship: string;\n  relationshipLabel: string;\n  birthDate: Date;\n  cbWithHealthDeclaration: boolean;\n  preExistingIllness: string;\n  occupationalClass: string;\n  occupationalClassLabel: string;\n  occupation: string;\n  occupationLabel: string;\n  otherOccupation: string;\n  occurence: string;\n\n  constructor() {}\n}\n","export class LOV {\n  tableName: string;\n  version: string;\n  params: string;\n  constructor(tableName: string, version: string, params: string) {\n    this.tableName = tableName;\n    this.version = version;\n    this.params = params;\n  }\n}\n","export class AccidentListObject {\n  //quick quote and quote\n  sublineLOV: any[];\n  occupationalClassLOV: any[];\n  disablementValueLOV: any[];\n\n  //quote\n  suffixLOV: any[];\n  genderLOV: any[];\n  relationshipLOV: any[];\n  occupationLOV: any[];\n  productListLOV: any[];\n\n  //quick quote\n  ageLOV: any[];\n  childNumberLOV: any[];\n  constructor() {\n  }\n}\n","export class CarListObject {\n  //quick quote and quote\n  makeLOV: any[];\n  modelLOV: any[];\n  vehicleTypeLOV: any[];\n  modelYearLOV: any[];\n  subModelLOV: any[];\n  typeOfUseLOV: any[];\n  sublineLOV: any[];\n\n  //quote\n  colorLOV: any[];\n  areaOfUsageLOV: any[];\n  accessoryListLOV: any[];\n  subagentLOV: any[];\n\n  //additional policy information\n  classificationLOV: any[];\n  coverageAreaLOV: any[];\n  inspectionAssessmentLOV: any[];\n  mortgageClauseLOV: any[];\n\n  //ctpl\n  registrationTypeLOV: any[];\n  mvTypeLOV: any[];\n\n  paymentMethodLOV: any[];\n  productListLOV: any[];\n  constructor() {\n  }\n}\n","export class GroupPolicyListObject {\n  groupPolicyLOV: any[];\n  contractLOV: any[];\n  subContractLOV: any[];\n  commercialStructureLOV: any[];\n  constructor() {\n  }\n}\n","export class HomeListObject {\n  //quick quote and quote\n  sublineLOV: any[];\n\n  //quote\n  currencyLOV: any[];\n\n  districtLOV: any[];\n  blockNumberLOV: any[];\n\n  regionLOV: any[];\n  provinceLOV: any[];\n  cityLOV: any[];\n  zipCodeLOV: any[];\n\n  relatedStructureLOV: any[];\n  relatedContentLOV: any[];\n\n  paymentMethodLOV: any[];\n  productListLOV: any[];\n\n  constructor() {\n  }\n}\n","export class ThirdPartyListObject {\n  documentTypeLOV: any[];\n  prefixLOV: any[];\n  suffixLOV: any[];\n  correspondenceTypeLOV: any[];\n  countryLOV: any[];\n  stateLOV: any[];\n  provinceLOV: any[];\n  cityLOV: any[];\n  zipcodeLOV: any[];\n  nationalityLOV: any[];\n  orgPostLOV: any[];\n  orgTypeOfBusinessLOV: any[];\n  personMaritalStatusLOV: any[];\n  personProfessionLOV: any[];\n  personOccupationLOV: any[];\n  personTypeLOV: any[];\n  personLanguageLOV: any[];\n\n  constructor() {}\n}\n","export class TravelListObject {\n  //quick quote and quote\n  currencyLOV: any[];\n  countryLOV: any[];\n\n  //quick quote\n  packageLOV: any[];\n  coverageLOV: any[];\n  ageRangeLOV: any[];\n\n  //quote\n  travelTypeLOV: any[];\n  purposeOfTripLOV: any[];\n  oneTripOnlyLOV: any[];\n  relationshipLOV: any[];\n  insuranceCoverageLOV: any[];\n  coverageOptionLOV: any[];\n  medicalExpensesLOV: any[];\n  productListLOV: any[];\n  constructor() {}\n}\n","export class LTODetails {\n  assuredName: string;\n  engineNumber: string;\n  chassisNumber: string;\n  mvFileNumber: string;\n  plateNumber: string;\n  assuredTin: string;\n  cocNumber: string;\n  inceptionDate: Date;\n  expiryDate: Date;\n  regType: string;\n  subline: number;\n  vehicleType: number;\n  typeOfUse: number;\n  mvType: string;\n  classification: number;\n\n  constructor() {}\n}\n","export class ListAccountCommissionsPaid {\n  policyNumber: String;\n  policyHolder: String;\n  currency: String;\n  invoiceNumber: String;\n  receiptAmount: String;\n  commissionAmount: String;\n  withholdingTaxAmount: String;\n  source: String;\n  type: String;\n\n  constructor(init ? : Partial < ListAccountCommissionsPaid > ) {\n    Object.assign(this, init);\n  }\n}\n","export class ListAccountEstimatedCommissions {\n  policyNumber: String;\n  policyHolder: String;\n  currency: String;\n  invoiceNumber: String;\n  movementDate: String;\n  receiptAmount: String;\n  estimatedCommission: String;\n  source: String;\n  type: String;\n\n  constructor(init ? : Partial < ListAccountEstimatedCommissions > ) {\n    Object.assign(this, init);\n  }\n}\n","export class ListAccountOutstandingBills {\n  policyNumber: String;\n  policyHolder: String;\n  prn: String;\n  invoiceNumber: String;\n  currency: String;\n  effectivityDate: String;\n  expiryDate: String;\n  paymentDateExpiry: String;\n  age: String;\n  amount: String;\n  paymentStatus: String;\n  source: String;\n  subline: String;\n  type: String;\n\n  constructor(init ? : Partial < ListAccountOutstandingBills > ) {\n    Object.assign(this, init);\n  }\n}\n","export class ListAccountPremiumCollection {\n  policyNumber: String;\n  currency: String;\n  subline: String;\n  invoiceNumber: String;\n  effectivityDate: String;\n  expiryDate: String;\n  collectedDate: String;\n  collectionType: String;\n  receiptAmount: String;\n  netPremium: String;\n  surcharge: String;\n  tax: String;\n  interest: String;\n  source: String;\n  type: String;\n\n  constructor(init ? : Partial < ListAccountPremiumCollection > ) {\n    Object.assign(this, init);\n  }\n}\n","export class ListClaimDetails {\n  claimNumber: String;\n  fileNumber: String;\n  fileName: String;\n  lossDate: String;\n  notificationDate: String;\n  reserveAmount: String;\n  source: String;\n  type: String;\n  \n  constructor(init?: Partial<ListClaimDetails>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListClientDetails {\n  name: String;\n  documentType: String;\n  documentCode: String;\n  address: String;\n  homeTelNumber: String;\n  businessTelNumber: String;\n  mobileNumber: String;\n  email: String;\n  type: String;\n  \n  constructor(init?: Partial<ListClientDetails>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListPolicyActive {\n  policyNumber: String;\n  policyEffectivityDate: String;\n  policyDueDate: String;\n  line: String;\n  policyHolder: String;\n  documentType: String;\n  documentCode: String;\n  source: String;\n  type: String;\n  \n  constructor(init?: Partial<ListPolicyActive>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListPolicyCancelled {\n  policyNumber: String;\n  policyEffectivityDate: String;\n  line: String;\n  policyHolder: String;\n  source: String;\n  type: String;\n  \n  constructor(init?: Partial<ListPolicyCancelled>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListPolicyExpiring {\n  policyNumber: String;\n  policyEffectivityDate: String;\n  policyExpiryDate: String;\n  policyHolder: String;\n  email: String;\n  telephoneNumber: String;\n  type: String;\n  \n  constructor(init?: Partial<ListPolicyExpiring>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListPolicyNotRenewed {\n  policyNumber: String;\n  policyEffectivityDate: String;\n  policyDueDate: String;\n  line: String;\n  policyHolder: String;\n  source: String;\n  type: String;\n\n  constructor(init ? : Partial < ListPolicyNotRenewed > ) {\n    Object.assign(this, init);\n  }\n}\n","export class ListPolicyProvisional {\n  policyNumber: String;\n  policyEffectivityDate: String;\n  policyDueDate: String;\n  line: String;\n  policyHolder: String;\n  source: String;\n  type: String;\n  \n  constructor(init?: Partial<ListPolicyProvisional>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListPolicyRenewed {\n  policyNumber: String;\n  policyEffectivityDate: String;\n  policyDueDate: String;\n  policyHolder: String;\n  documentType: String;\n  documentCode: String;\n  type: String;\n  \n  constructor(init?: Partial<ListPolicyRenewed>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListQuotationActive {\n  quotationNumber: String;\n  policyEffectivityDate: String;\n  policyDueDate: String;\n  line: String;\n  policyHolder: String;\n  source: String;\n  type: String;\n  \n  constructor(init?: Partial<ListQuotationActive>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListQuotationProvisional {\n  quotationNumber: String;\n  policyEffectivityDate: String;\n  policyDueDate: String;\n  line: String;\n  policyHolder: String;\n  source: String;\n  type: String;\n  \n  constructor(init?: Partial<ListQuotationProvisional>) {\n    Object.assign(this, init);\n  }\n}\n","export class OptionList {\n  language: string;\n  columnName: string;\n  param: string;\n  constructor(language: string, columnName: string, param: string) {\n    this.language = language;\n    this.columnName = columnName;\n    this.param = param;\n  }\n}\n","export class Page {\n  // dash: boolean= false;\n\n  account: boolean= false;\n  outstanding: boolean= false;\n  commissionsPaid: boolean= false;\n  estimatedCommissions: boolean= false;\n  premiumCollection: boolean= false;\n\n  client: boolean= false;\n  clientDetails: boolean= false;\n  active: boolean= false;\n  cancelled: boolean= false;\n  renewed: boolean= false;\n  notRenewed: boolean= false;\n  expiring: boolean= false;\n  provisional: boolean= false;\n  activeQuotation: boolean= false;\n  provisionalQuotation: boolean= false;\n  claims: boolean= false;\n\n  quick: boolean= false;\n  quickCar: boolean= false;\n  quickHome: boolean= false;\n  quickTravel: boolean= false;\n  quickAccident: boolean= false;\n\n  quotation: boolean= false;\n  quotationCar: boolean= false;\n  quotationHome: boolean= false;\n  quotationTravel: boolean= false;\n  quotationAccident: boolean= false;\n\n  issuance: boolean= false;\n  issuanceCar: boolean= false;\n  issuanceHome: boolean= false;\n  issuanceTravel: boolean= false;\n  issuanceAccident: boolean= false;\n\n  requests: boolean= false;\n  requestList: boolean= false;\n  requestCreate: boolean= false;\n\n  utilities: boolean= false;\n  query: boolean= false;\n  documentPrinting: boolean= false;\n  changePassword: boolean= false;\n\n  news: boolean= false;\n\n  faq: boolean= true;\n};","export class PageFilter {\n  currentPage: number;\n  pageSize: number;\n  sortBy: String;\n  sortOrder: String;\n\n  // for request list\n  requestType: String = \"\";\n  requestId: String = \"\";\n  policyNumber: String = \"\";\n  status: String = \"\";\n  requestHandler: String = \"\";\n  user: String = \"\";\n\n  constructor(init ? : Partial < PageFilter > ) {\n    Object.assign(this, init);\n  }\n}\n","export class PageFilterAccount {\n  currentPage: number;\n  pageSize: number;\n  sortBy: String;\n  sortOrder: String;\n\n  // common\n  policyNumber: String = \"\";\n  policyHolder: String = \"\";\n  currency: String = \"\";\n  source: String = \"\";\n  invoiceNumber: String = \"\";\n  receiptAmount: String = \"\";\n  effectivityDate: String = \"\";\n  expiryDate: String = \"\";\n  subline: String = \"\";\n\n  // for outstanding bills list\n  prn: String = \"\";\n  paymentDateExpiry: String = \"\";\n  amount: String = \"\";\n  paymentStatus: String = \"\";\n\n  // for commissions paid list\n  commissionAmount: String = \"\";\n  withholdingTaxAmount: String = \"\";\n\n  // for estimated commissions list\n  movementDate: String = \"\";\n  estimatedCommission: String = \"\";\n\n  // for premium collection list\n  collectedDate: String = \"\";\n  collectionType: String = \"\";\n  netPremium: String = \"\";\n  surcharge: String = \"\";\n  tax: String = \"\";\n  interest: String = \"\";\n\n  constructor(init ? : Partial < PageFilterAccount > ) {\n    Object.assign(this, init);\n  }\n}\n","export class PageFilterClient {\n  currentPage: number;\n  pageSize: number;\n  sortBy: String;\n  sortOrder: String;\n\n  // common\n  policyNumber: String = \"\";\n  quotationNumber: String = \"\";\n  documentType: String = \"\";\n  documentCode: String = \"\";\n  effectivityDate: String = \"\";\n  dueDate: String = \"\";\n  email: String = \"\";\n  line: String = \"\";\n  policyHolder: String = \"\";\n  source: String = \"\";\n\n  // for client details list\n  name: String = \"\";\n  address: String = \"\";\n  homeTelNumber: String = \"\";\n  businessTelNumber: String = \"\";\n  mobileNumber: String = \"\";\n\n  // for policy active list\n\n  // for policy cancelled list\n\n  // for policy renewed list\n\n  // for policy not renewed list\n\n  // for policy expiring list\n  expiryDate: String = \"\";\n  telephoneNumber: String = \"\";\n\n  // for policy provisional list\n\n  // for quotation active list\n\n  // for quotation provisional list\n\n  // for claims list\n  claimNumber: String = \"\";\n  fileNumber: String = \"\";\n  fileName: String = \"\";\n  lossDate: String = \"\";\n  notificationDate: String = \"\";\n\n  constructor(init ? : Partial < PageFilterClient > ) {\n    Object.assign(this, init);\n  }\n}\n","export class PolicyHolder {\n  isPerson: boolean; //mcaFisico\n  isExisting: boolean;\n  documentType: string; //tipDocum\n  documentCode: string; //codDocum\n  policyHolderType: string;\n  prefix: number; //tipPrefijoNombre\n  suffix: number; //tipSufijoNombre\n  firstName: string; //nomTercero\n  middleName: string; //nom2Tercero\n  lastName: string; //ape2Tercero\n  gender: number; //mcaSexo\n  birthDate: Date; //fecNacimiento\n  mobileNumber: string; //tlfMovil\n  correspondenceType: number; //tipEtiqueta\n  country: string; //codPais\n  state: number; //codEstado\n  province: number; //codProv\n  city: number; //codLocalidad\n  address: string; //nomDomicilio1\n  zipcode: number; //codPostal\n  email: string; //email\n  orgDocumentType: string; //tipDocumContacto\n  orgDocumentCode: string; //codDocumContacto\n  orgNationality: string; //codNacionalidadContacto\n  orgFirstName: string; //nomContacto\n  orgLastName: string; //ape2Tercero\n  orgPost: number; //tipCargo\n  orgTypeOfBusiness: number; //tipActEconomica\n  personMaritalStatus: string; //codEstCivil\n  personProfession: number; //codProfesion\n  personOccupation: number; //codOcupacion\n  personNationality: string; //codNacionalidad\n  personType: number; //tipNacionalidad\n  personLanguage: string; //codIdioma\n  \n  constructor(init?: Partial<PolicyHolder>) {\n    Object.assign(this, init);\n  }\n}","export class ReplyDetails {\n  requestType: String;\n  requestId: String;\n  message: String;\n  agentEmail: String;\n  name: String;\n  \n  constructor(init?: Partial<ReplyDetails>) {\n    Object.assign(this, init);\n  }\n}\n","export class RequestDetails {\n  type: String;\n  requestType: String;\n  issueType: String;\n  policyNumber: String;\n  reason: String;\n  agentEmail: String;\n  name: String;\n\n  requestor: String;\n  noOfItems: number;\n  previousPolicyNumber: String;\n\n  type1: String;\n  type2: String;\n  type3: String;\n\n  branch: String;\n  line: String;\n  subline: String;\n  typeOfPolicy: String;\n  clientName: String;\n  clientGroup: String;\n  copyNotify: String;\n  comments: String;\n  \n  constructor(init?: Partial<RequestDetails>) {\n    Object.assign(this, init);\n  }\n}\n","export class RequestDetailsList {\n  requestType: String;\n  requestId: String;\n  policyNumber: String;\n  status: String;\n  requestHandler: String;\n  user: String;\n  message: String;\n  \n  constructor(init?: Partial<RequestDetailsList>) {\n    Object.assign(this, init);\n  }\n}\n","export class SelectedAgent {\n  agentCode: number;\n  agentName: string;\n  documentCode: string;\n  documentType: string;\n  documentName: string;\n  agentType: number;\n  agentTypeName: string;\n  agentAddress: string;\n  commStructure: number;\n\n  token: string;\n  constructor(init ? : Partial < SelectedAgent > ) {\n    Object.assign(this, init);\n  }\n}\n","import {\n  PolicyHolder\n} from './PolicyHolder';\nimport {\n  GroupPolicy\n} from './GroupPolicy';\n\n// * - used in quick quotation\nexport class Travel {\n  affecting: boolean;\n  mcaTmpPptoMph: string;\n  policyNumber: string;\n  quotationNumber: string;\n  subline: number;\n\n  //travel itinerary\n  currency: number; // *\n  countries: any[]; // *\n  travelPackage: string; // *\n  typeOfCoverage: string; // *\n  travelType: string;\n  startDate: Date; // *\n  endDate: Date; // *\n  noOfDays: number; // *\n  completeItinerary: string;\n  purposeOfTrip: string;\n  cbOneTripOnly: boolean;\n  cbWithCruise: boolean;\n  ageRange: string; // *\n  othersDescription: string;\n\n  //group policy\n  groupPolicy: GroupPolicy;\n\n  //policy holder information\n  policyHolder: PolicyHolder;\n\n  //travelers\n  travelers: any[];\n\n  //additional policy information\n  cbSportsEquipment: boolean;\n  sportsEquipment: string;\n  cbHazardousSports: boolean;\n  hazardousSports: string;\n\n  //coverages\n  insuranceCoverage: string;\n  coverageOption: string;\n  medicalExpenses: string;\n  product: number;\n\n  constructor(init ? : Partial < Travel > ) {\n    Object.assign(this, init);\n  }\n}\n","export class Traveler {\n  completeName: string;\n  birthDate: Date;\n  relationship: string;\n  relationshipLabel: string;\n  passportNumber: string;\n  physicianName: string;\n  constructor() {\n  }\n}\n","import { SelectedAgent } from './SelectedAgent';\n\nexport class User {\n  companyCode: number;\n  role: number;\n  agentCode: number;\n  userName: string;\n  firstName: string;\n  lastName: string;\n  fullName: string;\n  address: string;\n  expiryDay: number;\n  commercialStructure: number;\n  selectedAgent: SelectedAgent;\n\n  token: string;\n  constructor(init ? : Partial < User > ) {\n    Object.assign(this, init);\n  }\n}\n","export class UtilitiesQueryFilter {\n    userName: string;\n    param: string\n    inquiryType: string\n    paramName: string\n\n  constructor(init ? : Partial < UtilitiesQueryFilter > ) {\n    Object.assign(this, init);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  DocumentPrinting\n} from '../objects/DocumentPrinting';\nimport {\n  UtilityService\n} from './utility.service';\nimport {\n  Globals\n} from '../utils/global';\nimport {\n  Utility\n} from '../utils/utility';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  page\n} from '../constants/page';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  Accident\n} from '../objects/Accident';\n\n@Injectable()\nexport class AccidentIssueServices {\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(private app: AppService,\n    private us: UtilityService,\n    public bms: BsModalService,\n    private router: Router\n  ) {}\n\n  async issueQuote(accidenDetails: Accident): Promise < ReturnDTO > {\n    return this.app.post(accidenDetails, '/accident/issue/issueQuote').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async savePolicy(accidenDetails: Accident): Promise < ReturnDTO > {\n    return this.app.post(accidenDetails, '/accident/issue/savePolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async postPolicy(accidenDetails: Accident): Promise < ReturnDTO > {\n    return this.app.post(accidenDetails, '/accident/issue/postPolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async loadQuotation(quotationNumber: string): Promise < ReturnDTO > {\n    return this.app.post({\n      quotationNumber\n    }, '/accident/issue/loadQuotation').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  printQuote(quotationNumber: string) {\n    this.printDoc(quotationNumber, \"Q\");\n  }\n\n  printPolicy(policyNumber: string) {\n    this.printDoc(policyNumber, \"P\");\n  }\n\n  printDoc(number: string, type: string) {\n    const documentPrintingDetails = new DocumentPrinting();\n    if (type == \"P\") {\n      documentPrintingDetails.policyNumber = number;\n    } else {\n      documentPrintingDetails.quotationNumber = number;\n    }\n\n    documentPrintingDetails.documentType = type;\n\n    this.us.validatePrinting(documentPrintingDetails).then((res) => {\n      if (res.status) {\n        var ext = res.obj;\n        this.us.printDocument(ext.toString()).subscribe(data => {\n          if (data != null) {\n            window.open(URL.createObjectURL(data));\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  proceedToIssuance(quotationNumber: string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page.ISS.ACC);\n      Globals.setLoadNumber(quotationNumber);\n      Globals.setLoadQuotation(true);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  PageFilterAccount\n} from '../objects/PageFilterAccount';\n\n@Injectable()\nexport class AccountService {\n\n  constructor(private app: AppService) {}\n\n  async getOutstandingBillsList(pageFilter: PageFilterAccount): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/account/outstandingBills').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getCommissionsPaidList(pageFilter: PageFilterAccount): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/account/commissionsPaid').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getEstimatedCommissionsList(pageFilter: PageFilterAccount): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/account/estimatedCommissions').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPremiumCollectionList(pageFilter: PageFilterAccount): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/account/premiumCollection').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  Utility\n} from '../utils/utility';\n\n@Injectable()\nexport class AgentService {\n  constructor(private app: AppService) {}\n\n  async getCommercialStructure(): Promise < any[] > {\n    return Utility.parseIntArray(await this.app.get('/agent/getCommercialStructure').then(objArr => objArr as any[]), 'codNivel3');\n  }\n\n  async getAgentList(commercialStructure: number): Promise < any[] > {\n    return Utility.parseIntArray(await this.app.post(commercialStructure, '/agent/getAgentList').then(objArr => objArr as any[]), 'codAgt')\n  }\n\n  async getEAAgentList(agentCode: number): Promise < any[] > {\n    return this.app.post(agentCode, '/agent/getEAAgentList').then(objArr => objArr as any[]);\n  }\n\n  async getProductionAgentProfile(param: String): Promise < ReturnDTO > {\n    return this.app.post(param, '/agent/getProductionAgentProfile').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders\n} from '@angular/common/http';\nimport {\n  API_URL\n} from '../constants/app.constant';\n\nexport const InterceptorSkipHeader = 'X-Skip-Interceptor';\n\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from '../utils/utility';\n\n@Injectable()\nexport class AppService {\n  modalRef: BsModalRef;\n  constructor(\n    private http: HttpClient,\n    private modalService: BsModalService) {}\n\n    // httpOptions = {\n    //   headers: new HttpHeaders({ \n    //     'Access-Control-Allow-Origin':'*',\n    //     'Access-Control-Allow-Method':'*',\n    //     'Access-Control-Allow-Headers' : \"Access-Control-Allow-Headers', 'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers,X-Access-Token,XKey,Authorization\",\n    //     'Accept': '*/*',\n    //     'Content-Type' : 'application/json'\n    //   })\n    // };\n\n  async post(param: any, endpoint: string): Promise < any > {\n    return this.http.post(API_URL + endpoint, param)\n      .toPromise()\n      .then(response => response)\n      // .catch(err => console.log(err));\n      .catch(err => this.modalRef = Utility.showError(this.modalService, err.message));\n  }\n\n  async get(endpoint: string): Promise < any > {\n    return this.http.get(API_URL + endpoint)\n      .toPromise()\n      .then(response => response)\n      // .catch(err => console.log(err));\n      .catch(err => this.modalRef = Utility.showError(this.modalService, err.message));\n  }\n}\n","import {\n  Injectable\n} from \"@angular/core\";\nimport {\n  HttpClient\n} from \"@angular/common/http\";\nimport {\n  BehaviorSubject,\n  Observable\n} from \"rxjs\";\nimport {\n  map\n} from \"rxjs/operators\";\nimport {\n  User\n} from \"../objects/User\";\nimport {\n  CURRENT_USER,\n  MENU, \n  MIVO_AUTH,\n  DASH_INFO\n} from \"../constants/local.storage\";\nimport {\n  Page\n} from \"../objects/Page\";\nimport {\n  API_URL\n} from '../constants/app.constant';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject < User > ;\n  public currentUser: Observable < User > ;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject < User > (\n      JSON.parse(localStorage.getItem(CURRENT_USER))\n    );\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  // login(username: String, password: String) {\n  //   return this.http\n  //     .post < any > (`${API_URL}/users/authenticate`, {\n  //       username,\n  //       password,\n  //     })\n  //     .pipe(\n  //       map((user) => {\n  //         // store user details and jwt token in local storage to keep user logged in between page refreshes\n  //         delete user.password;\n  //         localStorage.setItem(CURRENT_USER, JSON.stringify(user));\n  //         this.currentUserSubject.next(user);\n  //         this.getPages(['account', 'outstanding']);\n  //         return user;\n  //       })\n  //     );\n  // }\n\n  login(username: String, password: String) {\n    return this.http.post(API_URL + '/auth/login', { username, password }).pipe(map((res) => {\n      if (res[\"status\"]) {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        const user = new User(res[\"user\"]);\n        const pages = res[\"pages\"];\n        const token = res[\"token\"];\n        user.token = 'Bearer ' + token;\n\n        localStorage.setItem(CURRENT_USER, JSON.stringify(user));\n        this.currentUserSubject.next(user);\n\n        this.getPages(pages);\n        return user;\n      } else {\n        return null;\n      }\n    }));\n  }\n\n  getPages(pages: any[]) {\n    const page = new Page();\n    for (let p in page) {\n      //includes all available pages for user\n      if (pages.includes(p)) {\n        page[p] = true;\n      }\n    }\n    localStorage.setItem(MENU, JSON.stringify(page));\n  }\n\n  logout() {\n    // remove user from local storage and set current user to null\n    localStorage.removeItem(CURRENT_USER);\n    localStorage.removeItem(MENU);\n    localStorage.removeItem(MIVO_AUTH);\n    localStorage.removeItem(DASH_INFO);\n    this.currentUserSubject.next(null);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  Car\n} from '../objects/Car';\nimport {\n  DocumentPrinting\n} from '../objects/DocumentPrinting';\nimport {\n  UtilityService\n} from './utility.service';\nimport {\n  Globals\n} from '../utils/global';\nimport {\n  Utility\n} from '../utils/utility';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  page\n} from '../constants/page';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  FormGroup,\n  Validators\n} from '@angular/forms';\n\n@Injectable()\nexport class CarQuoteServices {\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(private app: AppService,\n    private us: UtilityService,\n    public bms: BsModalService,\n    private router: Router\n  ) {}\n\n  async checkRoadAssist(subline: number, vehicelType: number, modelYear: string, productList: number, coverageCode: number): Promise < ReturnDTO > {\n    return this.app.post({subline, vehicelType, modelYear, productList, coverageCode}, '/quote/checkRoadAssist').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getCoverageByProduct(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/quote/getCoverageByProduct').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async issueQuote(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/quote/issueQuote').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async savePolicy(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/quote/savePolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async postPolicy(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/quote/postPolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async loadQuotation(quotationNumber: string): Promise < ReturnDTO > {\n    return this.app.post({quotationNumber}, '/quote/loadQuotation').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  printQuote(quotationNumber: string) {\n    const documentPrintingDetails = new DocumentPrinting();\n    documentPrintingDetails.quotationNumber = quotationNumber;\n    documentPrintingDetails.documentType = \"Q\";\n\n    this.us.validatePrinting(documentPrintingDetails).then((res) => {\n      if (res.status) {\n        var ext = res.obj;\n        this.us.printDocument(ext.toString()).subscribe(data => {\n          if (data != null) {\n            window.open(URL.createObjectURL(data));\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  printPolicy(policyNumber: string) {\n    const documentPrintingDetails = new DocumentPrinting();\n    documentPrintingDetails.policyNumber = policyNumber;\n    documentPrintingDetails.documentType = \"P\";\n\n    this.us.validatePrinting(documentPrintingDetails).then((res) => {\n      if (res.status) {\n        var ext = res.obj;\n        this.us.printDocument(ext.toString()).subscribe(data => {\n          if (data != null) {\n            window.open(URL.createObjectURL(data));\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  // printQuote(quotationNumber: string) {\n  //   this.printDoc(quotationNumber, \"Q\");\n  // }\n\n  // printPolicy(policyNumber: string) {\n  //   this.printDoc(policyNumber, \"P\");\n  // }\n\n  // printDoc(number: string, type: string) {\n  //   const documentPrintingDetails = new DocumentPrinting();\n  //   if (type == \"P\") {\n  //     documentPrintingDetails.policyNumber = number;\n  //   } else {\n  //     documentPrintingDetails.quotationNumber = number;\n  //   }\n    \n  //   documentPrintingDetails.documentType = type;\n\n  //   this.us.validatePrinting(documentPrintingDetails).then((res) => {\n  //     if (res.status) {\n  //       var ext = res.obj;\n  //       this.us.printDocument(ext.toString()).subscribe(data => {\n  //         if (data != null) {\n  //           window.open(URL.createObjectURL(data));\n  //         }\n  //       });\n  //     } else {\n  //       this.modalRef = Utility.showError(this.bms, res.message);\n  //     }\n  //   });\n  // }\n\n  proceedToIssuance(quotationNumber: string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page.ISS.CAR);\n      Globals.setLoadNumber(quotationNumber);\n      Globals.setLoadQuotation(true);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n\n  activateCTPL(form: FormGroup, carDetails: Car, selectedCoverage ? : boolean) {\n    //if selected product is CTPL\n    const isCTPL = carDetails.productList == 10002 || selectedCoverage;\n    var registrationType = form.get('registrationType');\n    var cocNumber = form.get('cocNumber');\n    var authNumber = form.get('authNumber');\n    var isNotRequired = form.get('cbIsNotRequiredAuthNumber').value;\n    \n    const inr = isNotRequired != null ? isNotRequired : false;\n\n    Utility.updateValidator(registrationType, isCTPL ? Validators.required : null);\n    Utility.updateValidator(cocNumber, isCTPL ? Validators.required : null);\n    Utility.updateValidator(authNumber, isCTPL && !inr ? Validators.required : null);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from '../services/app.service';\nimport {\n  Car\n} from '../objects/Car';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\n\n@Injectable()\nexport class CarUtilityServices {\n  constructor(private app: AppService) {}\n\n  async getFMV(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/car/getFMV').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getSubline(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/car/getSubline').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async validatePlateNumberFormat(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/car/validatePlateNumberFormat').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async validateConductionNumberFormat(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/car/validateConductionNumberFormat').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getSubagents(): Promise < ReturnDTO > {\n    return this.app.get('/car/getSubagents').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPreAdditionalInfo(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/car/getPreAdditionalInfo').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  PageFilterClient\n} from '../objects/PageFilterClient';\n\n@Injectable()\nexport class ClientService {\n\n  constructor(private app: AppService) {}\n\n  async getClientDetailsList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/clientDetails').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPolicyActiveList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/policy/active').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPolicyCancelledList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/policy/cancelled').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPolicyRenewedList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/policy/renewed').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPolicyNotRenewedList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/policy/notRenewed').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPolicyExpiringList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/policy/expiring').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPolicyProvisionalList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/policy/provisional').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getQuotationActiveList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/quotation/active').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getQuotationProvisionalList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/quotation/provisional').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getClaimsList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/claims').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\n\n@Injectable()\nexport class DashboardService {\n  constructor(private app: AppService) {}\n\n  async getForeignExchange(): Promise < ReturnDTO > {\n    return this.app.get('/dashboard/getForeignExchange').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getDashboardInfo(): Promise < ReturnDTO > {\n    return this.app.get('/dashboard/getDashboardInfo').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  Home\n} from '../objects/Home';\n\n@Injectable()\nexport class HomeIssueServices {\n\n  constructor(private app: AppService,\n  ) {}\n\n  url = \"/home/issue/\";\n\n  async issueQuote(homeDetails: Home): Promise < ReturnDTO > {\n    return this.app.post(homeDetails, this.url + 'issueQuote').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async savePolicy(homeDetails: Home): Promise < ReturnDTO > {\n    return this.app.post(homeDetails, this.url + 'savePolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async postPolicy(homeDetails: Home): Promise < ReturnDTO > {\n    return this.app.post(homeDetails, this.url + 'postPolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async loadQuotation(quotationNumber: string): Promise < ReturnDTO > {\n    return this.app.post({\n      quotationNumber\n    }, this.url + 'loadQuotation').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from '../services/app.service';\nimport {\n  LOV\n} from '../objects/LOV';\nimport {\n  OptionList\n} from '../objects/OptionList';\nimport {\n  Utility\n} from '../utils/utility';\nimport { ReturnDTO } from '../objects/ReturnDTO';\n\n@Injectable()\nexport class LovService {\n  constructor(private app: AppService) {}\n\n  async getLOV(dto: LOV): Promise < any[] > {\n    return this.app.post(dto, '/getLOV').then(objArr => objArr as any[]);\n  }\n\n  async getIntLOV(dto: LOV, param: string): Promise < any[] > {\n    return Utility.parseIntArray(await this.app.post(dto, '/getLOV').then(objArr => objArr as any[]), param);\n  }\n\n  async getOptionList(dto: OptionList): Promise < any[] > {\n    return this.app.post(dto, '/getOptionList').then(objArr => objArr as any[]);\n  }\n\n  async getIntOptionList(dto: OptionList, param: string): Promise < any[] > {\n    return Utility.parseIntArray(await this.app.post(dto, '/getOptionList').then(objArr => objArr as any[]), param);\n  }\n\n  async getConfigList(): Promise < ReturnDTO > {\n    return this.app.get('/getConfigList').then(objArr => objArr as ReturnDTO);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  LovService\n} from '.././lov.service';\nimport {\n  LOV\n} from '../../objects/LOV';\nimport {\n  Accident\n} from 'src/app/objects/Accident';\n\n@Injectable()\nexport class AccidentLOVServices {\n  constructor(private lov: LovService) {}\n\n  async getSubline(): Promise < any[] > {\n    const dto = new LOV('A1001800', '93', '');\n    return this.lov.getIntLOV(dto, 'COD_RAMO').then(lovs => lovs as any[]);\n  }\n\n  async getOccupationalClass(accidentDetails: Accident): Promise < any[] > {\n    const dto = new LOV(\n      'G2990006',\n      '1',\n      '|cod_ramo~' + accidentDetails.subline +\n      '|cod_modalidad~99999' +\n      '|cod_campo~COD_OCCUPATIONAL_CLASS' +\n      '|fec_validez~01012016');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[] );\n  }\n\n  async getOccupation(accidentDetails: Accident, occupationalClass: String): Promise < any > {\n    const dto = new LOV(\n      'G2990006',\n      '13',\n      '|cod_ramo~' + accidentDetails.subline +\n      '|cod_campo~TXT_OCCUPATION' +\n      '|fec_validez~01012016' +\n      '|DVCOD_OCCUPATIONAL_CLASS~' + occupationalClass +\n      '|cod_idioma~EN');\n    return this.lov.getLOV(dto).then(lovs => lovs as any);\n  }\n\n  async getPaymentPlan(accidentDetails: Accident): Promise < any[] > {\n    const dto = new LOV(\n      'A1001402',\n      '6',\n      '|COD_CIA~1' +\n      '|cod_ramo~' + accidentDetails.subline +\n      '|cod_mon~1' +\n      '|fec_validez~' + accidentDetails.sublineEffectivityDate +\n      '|cod_nivel1~|cod_nivel2~|cod_nivel3~|tip_docum~|cod_docum~');\n    return this.lov.getIntLOV(dto, 'COD_FRACC_PAGO').then(lovs => lovs as any[]);\n  }\n\n  async getProduct(accidentDetails: Accident): Promise < any[] > {\n    const dto = new LOV(\n      'G2990004',\n      '16',\n      '|cod_cia~1' +\n      '|cod_ramo~' + accidentDetails.subline);\n    return this.lov.getIntLOV(dto, 'COD_MODALIDAD').then(lovs => lovs as any[]);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  LovService\n} from '.././lov.service';\n\nimport {\n  LOV\n} from '../../objects/LOV';\nimport {\n  OptionList\n} from '../../objects/OptionList';\n\n@Injectable()\nexport class CarLOVServices {\n  constructor(private lov: LovService) {}\n\n  async getMakeList(): Promise < any[] > {\n    const dto = new LOV('A2100400', '3', 'COD_CIA~1');\n    return this.lov.getIntLOV(dto, 'COD_MARCA').then(lovs => lovs as any[]);\n  }\n\n  async getModelList(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A2100410',\n      '4',\n      '|COD_MARCA~' + carDetails.make +\n      '|NUM_COTIZACION~1|COD_CIA~1');\n    return this.lov.getIntLOV(dto, 'COD_MODELO').then(lovs => lovs as any[]);\n  }\n\n  async getVehicleTypeList(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A2100100',\n      '2',\n      '|COD_MARCA~' + carDetails.make +\n      '|COD_MODELO~' + carDetails.model +\n      '|NUM_COTIZACION~1|COD_CIA~1');\n    return this.lov.getIntLOV(dto, 'COD_TIP_VEHI').then(lovs => lovs as any[]);\n  }\n\n  async getModelYearList(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A2100430',\n      '4',\n      '|COD_MARCA~' + carDetails.make +\n      '|COD_MODELO~' + carDetails.model +\n      '|COD_TIP_VEHI~' + carDetails.vehicleType +\n      '|NUM_COTIZACION~1|COD_CIA~1');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getSubModelList(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A2100420',\n      '4',\n      '|COD_MARCA~' + carDetails.make +\n      '|COD_MODELO~' + carDetails.model +\n      '|COD_TIP_VEHI~' + carDetails.vehicleType +\n      '|ANIO_SUB_MODELO~' + carDetails.modelYear +\n      '|NUM_COTIZACION~1|COD_CIA~1');\n    return this.lov.getIntLOV(dto, 'COD_SUB_MODELO').then(lovs => lovs as any[]);\n  }\n\n  async getTypeOfUseList(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A2100200',\n      '4',\n      '|COD_MARCA~' + carDetails.make +\n      '|COD_MODELO~' + carDetails.model +\n      '|COD_TIP_VEHI~' + carDetails.vehicleType +\n      '|ANIO_SUB_MODELO~' + carDetails.modelYear +\n      '|NUM_COTIZACION~1|COD_CIA~1');\n    return this.lov.getIntLOV(dto, 'COD_USO_VEHI').then(lovs => lovs as any[]);\n  }\n\n  async getColor(): Promise < any[] > {\n    const dto = new LOV('A2100800', '1', '');\n    return this.lov.getIntLOV(dto, 'COD_COLOR').then(lovs => lovs as any[]);\n  }\n\n  async getAreaOfUsage(carDetails: any): Promise < any[] > {\n    const dto = new LOV('G2990006', '4', 'COD_RAMO~' + carDetails.subline);\n    return this.lov.getIntLOV(dto, 'COD_VALOR').then(lovs => lovs as any[]);\n  }\n\n  async getAccessoryList(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A2100601',\n      '2',\n      '|COD_CIA~1' +\n      '|cod_tip_vehi~' + carDetails.vehicleType +\n      '|fec_validez~' + carDetails.sublineEffectivityDate);\n    return this.lov.getIntLOV(dto, 'COD_ACCESORIO').then(lovs => lovs as any[]);\n  }\n\n  async getClassification(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_VEHI_PESO',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIP_VEHI_PESO').then(lovs => lovs as any[]);\n  }\n\n  async getCoverageArea(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'COD_AREA_COVER',\n      '999');\n    return this.lov.getIntOptionList(dto, 'COD_AREA_COVER').then(lovs => lovs as any[]);\n  }\n\n  async getMortgageClause(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_MORT_CLAUSE',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIP_MORT_CLAUSE').then(lovs => lovs as any[]);\n  }\n\n  async getInspectionAssessment(): Promise < any[] > {\n    const dto = new LOV(\n      'G1010031',\n      '46',\n      '|cod_idioma~EN');\n    return this.lov.getIntLOV(dto, 'COD_VALOR').then(lovs => lovs as any[]);\n  }\n\n  async getPaymentPlan(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A1001402',\n      '6',\n      '|COD_CIA~1' +\n      '|cod_ramo~' + carDetails.subline +\n      '|cod_mon~1' +\n      '|fec_validez~' + carDetails.sublineEffectivityDate +\n      '|cod_nivel1~|cod_nivel2~|cod_nivel3~|tip_docum~|cod_docum~');\n    return this.lov.getIntLOV(dto, 'COD_FRACC_PAGO').then(lovs => lovs as any[]);\n  }\n\n  async getProduct(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'G2990004',\n      '12', // 18 if client 12 if not\n      '|COD_CIA~1' +\n      '|COD_RAMO~' + carDetails.subline);\n    return this.lov.getIntLOV(dto, 'COD_MODALIDAD').then(lovs => lovs as any[]);\n  }\n\n  async getSumInsuredPerPassenger(subline: number): Promise < any[] > {\n    const dto = new LOV(\n      'G2990006',\n      '3',\n      '|COD_RAMO~' + subline);\n    return this.lov.getIntLOV(dto, 'COD_VALOR').then(lovs => lovs as any[]);\n  }\n\n  async getRegistrationType(): Promise < any[] > {\n    const dto = new LOV(\n      'G1010031',\n      '58',\n      '');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getMVType(): Promise < any[] > {\n    const dto = new LOV(\n      'G1010031',\n      '59',\n      '');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  //get policy holder prefix\n  async getPHPrefix(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_ASEG_PREF',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIP_ASEG_PREF').then(lovs => lovs as any[]);\n  }\n  \n  //get policy holder separator\n  async getPHSeparator(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_ASEG_SEP_LOV',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIP_ASEG_SEP_LOV').then(lovs => lovs as any[]);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  LovService\n} from '.././lov.service';\n\nimport {\n  LOV\n} from '../../objects/LOV';\nimport {\n  GroupPolicy\n} from '../../objects/GroupPolicy';\nimport { Utility } from 'src/app/utils/utility';\n\n@Injectable()\nexport class GroupPolicyLOVServices {\n\n  constructor(private lov: LovService) {}\n\n  async getCommercialStructure(): Promise < any[] > {\n    const dto = new LOV(\n      'A1000710',\n      '2',\n      'COD_CIA~' + Utility.getStoredDetails().companyCode +\n      '|COD_AGT~' + Utility.getStoredDetails().agentCode);\n    return this.lov.getIntLOV(dto, 'COD_NIVEL3').then(lovs => lovs as any[]);\n  }\n\n  async getGroupPolicy(subline: number): Promise < any[] > {\n    const dto = new LOV(\n      'A2000010',\n      '4',\n      'COD_CIA~' + Utility.getStoredDetails().companyCode +\n      '|COD_AGT~' + Utility.getStoredDetails().agentCode +\n      '|COD_RAMO~' + subline);\n    return this.lov.getIntLOV(dto, 'NUM_POLIZA').then(lovs => lovs as any[]);\n  }\n\n  async getContract(subline: number, groupPolicy: GroupPolicy): Promise < any[] > {\n    const dto = new LOV(\n      'G2990001',\n      '7',\n      'COD_CIA~' + Utility.getStoredDetails().companyCode +\n      '|COD_AGT~' + Utility.getStoredDetails().agentCode +\n      '|COD_RAMO~' + subline +\n      '|NUM_POLIZA_GRUPO~' + groupPolicy.groupPolicy);\n    return this.lov.getIntLOV(dto, 'NUM_CONTRATO').then(lovs => lovs as any[]);\n  }\n\n  async getSubContract(subline: number, groupPolicy: GroupPolicy): Promise < any[] > {\n    const dto = new LOV(\n      'G2990022',\n      '2',\n      'COD_CIA~' + Utility.getStoredDetails().companyCode +\n      '|COD_AGT~' + Utility.getStoredDetails().agentCode +\n      '|COD_RAMO~' + subline +\n      '|NUM_CONTRATO~' + groupPolicy.contract);\n    return this.lov.getIntLOV(dto, 'NUM_SUBCONTRATO').then(lovs => lovs as any[]);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  LovService\n} from '.././lov.service';\nimport {\n  LOV\n} from '../../objects/LOV';\nimport {\n  Home\n} from 'src/app/objects/Home';\n\n@Injectable()\nexport class HomeLOVServices {\n  constructor(private lov: LovService) {}\n\n  async getHomeBusinessLine(): Promise < any[] > {\n    const dto = new LOV('A1001800', '92', 'cod_cia~1|cod_sector~2');\n    return this.lov.getIntLOV(dto, \"COD_RAMO\").then(lovs => lovs as any[]);\n  }\n\n  async getPaymentPlan(home: Home): Promise < any[] > {\n    const dto = new LOV('A1001402',\n      '6', '|cod_ramo~' + home.subline +\n      '|cod_mon~' + home.currency +\n      '|fec_validez~' + home.sublineEffectivityDate +\n      '|cod_nivel1~|cod_nivel2~|cod_nivel3~|tip_docum~|cod_docum~|COD_CIA~1');\n    return this.lov.getIntLOV(dto, \"COD_FRACC_PAGO\").then(lovs => lovs as any[]);\n  }\n\n  async getDistrict(): Promise < any[] > {\n    const dto = new LOV('A2009101_MPH', '1', '');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getBlockNumber(district : string): Promise < any[] > {\n    const dto = new LOV('A2009101_MPH', '3', 'COD_CIA~1|DVCOD_DISTRICT~' + district);\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getCurrency(home: Home): Promise < any[] > {\n    const dto = new LOV('G2990005', '1', 'cod_cia~1|cod_ramo~' + home.subline +\n      '|fec_validez~' + home.sublineEffectivityDate);\n    return this.lov.getIntLOV(dto, \"COD_MON\").then(lovs => lovs as any[]);\n  }\n\n  async getRelatedStructureProperty(home: Home): Promise < any[] > {\n    const dto = new LOV('G2990006', '5', 'cod_campo~TXT_DESCRIPTION_PROPERTY_2156' +\n      '|cod_cia~1|cod_ramo~' + home.subline +\n      '|fec_validez~' + home.sublineEffectivityDate +\n      '|DVCOD_MODALIDAD~20001');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getRelatedContentProperty(home: Home): Promise < any[] > {\n    const dto = new LOV('G2990006', '5', 'cod_campo~TXT_DESCRIPTION_PROPERTY_2356' +\n      '|cod_cia~1|cod_ramo~' + home.subline +\n      '|fec_validez~' + home.sublineEffectivityDate +\n      '|DVCOD_MODALIDAD~20001');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getProduct(home: Home): Promise < any[] > {\n    const dto = new LOV('G2990004', '10', 'cod_cia~1|cod_ramo~' + home.subline);\n    return this.lov.getIntLOV(dto, \"COD_MODALIDAD\").then(lovs => lovs as any[]);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  LovService\n} from '../lov.service';\nimport {\n  LOV\n} from '../../objects/LOV';\nimport {\n  OptionList\n} from 'src/app/objects/OptionList';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Injectable()\nexport class ThirdPartyLOVServices {\n  constructor(private lov: LovService) {}\n\n  async getDocumentType(): Promise < any[] > {\n    const dto = new LOV(\n      'A1002300',\n      '3',\n      '|COD_CIA~' + Utility.getStoredDetails().companyCode);\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getPrefix(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_PREFIJO_NOMBRE',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIP_PREFIJO_NOMBRE').then(lovs => lovs as any[]);\n  }\n\n  async getSuffix(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIPO_SUFIJO_NOMBRE',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIPO_SUFIJO_NOMBRE').then(lovs => lovs as any[]);\n  }\n\n  async getCorrespondenceType(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_ETIQUETA',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIP_ETIQUETA').then(lovs => lovs as any[]);\n  }\n\n  async getCountry(): Promise < any[] > {\n    const dto = new LOV(\n      'A1000101',\n      '1',\n      '');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getState(thirdParty: PolicyHolder): Promise < any[] > {\n    const dto = new LOV(\n      'A1000104',\n      '5',\n      'COD_PAIS~' + thirdParty.country);\n    return this.lov.getIntLOV(dto, 'COD_ESTADO').then(lovs => lovs as any[]);\n  }\n\n  async getProvince(thirdParty: PolicyHolder): Promise < any[] > {\n    const dto = new LOV(\n      'A1000100',\n      '6',\n      'COD_PAIS~' + thirdParty.country +\n      '|COD_ESTADO~' + thirdParty.state);\n    return this.lov.getIntLOV(dto, 'COD_PROV').then(lovs => lovs as any[]);\n  }\n\n  async getCity(thirdParty: PolicyHolder): Promise < any[] > {\n    const dto = new LOV(\n      'A1000102',\n      '3',\n      'COD_PAIS~' + thirdParty.country +\n      '|COD_PROV~' + thirdParty.province);\n    return this.lov.getIntLOV(dto, 'COD_LOCALIDAD').then(lovs => lovs as any[]);\n  }\n\n  async getZipCode(thirdParty: PolicyHolder): Promise < any[] > {\n    const dto = new LOV(\n      'A1000103',\n      '3',\n      'COD_PAIS~' + thirdParty.country +\n      '|COD_ESTADO~' + thirdParty.state +\n      '|COD_PROV~' + thirdParty.province +\n      '|COD_LOCALIDAD~' + thirdParty.city);\n    return this.lov.getIntLOV(dto, 'COD_POSTAL').then(lovs => lovs as any[]);\n  }\n\n  async getNationality(): Promise < any[] > {\n    const dto = new LOV(\n      'A1000101',\n      '1',\n      '');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getPost(): Promise < any[] > {\n    const dto = new LOV(\n      'G2990022',\n      '2',\n      'COD_CIA~' + Utility.getStoredDetails().companyCode +\n      '|COD_AGT~' + Utility.getStoredDetails().agentCode);\n    return this.lov.getIntLOV(dto, 'NUM_SUBCONTRATO').then(lovs => lovs as any[]);\n  }\n\n  async getTypeOfBusiness(): Promise < any[] > {\n    const dto = new LOV(\n      'G2990022',\n      '2',\n      'COD_CIA~' + Utility.getStoredDetails().companyCode +\n      '|COD_AGT~' + Utility.getStoredDetails().agentCode);\n    return this.lov.getIntLOV(dto, 'NUM_SUBCONTRATO').then(lovs => lovs as any[]);\n  }\n\n  async getMaritalStatus(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'COD_EST_CIVIL',\n      '999');\n    return this.lov.getOptionList(dto).then(lovs => lovs as any[]);\n  }\n\n  //same with occupation\n  async getProfession(): Promise < any[] > {\n    const dto = new LOV(\n      'G1000100',\n      '2',\n      '');\n    return this.lov.getIntLOV(dto, 'COD_PROFESION').then(lovs => lovs as any[]);\n  }\n\n  async getType(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_NACIONALIDAD',\n      '999');\n    return this.lov.getIntOptionList(dto, 'COD_PAIS').then(lovs => lovs as any[]);\n  }\n\n  async getLanguage(): Promise < any[] > {\n    const dto = new LOV(\n      'G1010010',\n      '1',\n      '');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  LovService\n} from '.././lov.service';\nimport {\n  LOV\n} from '../../objects/LOV';\nimport {\n  OptionList\n} from '../../objects/OptionList';\nimport { Travel } from 'src/app/objects/Travel';\n\n@Injectable()\nexport class TravelLOVServices {\n  constructor(private lov: LovService) {}\n\n  async getCurrencyList(): Promise < any[] > {\n    const dto = new LOV(\n      'G2990005',\n      '1',\n      'cod_cia~1|cod_ramo~380|fec_validez~01012020');\n    return this.lov.getIntLOV(dto, 'COD_MON').then(lovs => lovs as any[]);\n  }\n\n  async getCountryList(travelDetails: Travel): Promise < any[] > {\n    const dto = new LOV(\n      'A1000101',\n      '3',\n      '|cod_mon~' + travelDetails.currency +\n      '|cod_idioma~EN|COD_CIA~1');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getTravelPackage(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TRAVEL_PACK',\n      '999');\n    return this.lov.getOptionList(dto).then(lovs => lovs as any[]);\n  }\n\n  async getTypeOfCoverage(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'INSURANCE_COVERAGE',\n      '999');\n    return this.lov.getOptionList(dto).then(lovs => lovs as any[]);\n  }\n\n  async getPurposeOfTrip(): Promise < any[] > {\n    const dto = new LOV(\n      'TAVIA001',\n      '1',\n      '|cod_cia~1' +\n      '|cod_mon~1' +\n      '|cod_ramo~380' +\n      '|cod_campo~PURPOSE_TRIP');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getAgeRange(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'AGE_RANGE',\n      '999');\n    return this.lov.getOptionList(dto).then(lovs => lovs as any[]);\n  }\n\n  async getRelationship(): Promise < any[] > {\n    const dto = new LOV(\n      'G1010031',\n      '82',\n      '|cod_campo~RELATIONSHIP' +\n      '|cod_idioma~EN' +\n      '|cod_ramo~380');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getCoverageOption(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'COVERAGE_OPTIONS',\n      '999');\n    return this.lov.getOptionList(dto).then(lovs => lovs as any[]);\n  }\n\n  async getInsuranceCoverage(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'INSURANCE_COVERAGE',\n      '999');\n    return this.lov.getOptionList(dto).then(lovs => lovs as any[]);\n  }\n\n  async getExpensesCoverage(travelDetails: Travel): Promise < any[] > {\n    const dto = new LOV(\n      'TAGEN001',\n      '2',\n      '|cod_cia~1' +\n      '|cod_mon~' + travelDetails.currency +\n      '|cod_ramo~380' + \n      '|DVTRAVEL_PACK~' + travelDetails.travelPackage);\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getProduct(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'G2990004',\n      '16',\n      '|COD_CIA~1' +\n      '|COD_RAMO~' + carDetails.subline);\n    return this.lov.getIntLOV(dto, 'COD_MODALIDAD').then(lovs => lovs as any[]);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {\n  AppService\n} from './app.service'\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  LTODetails\n} from '../objects/LTODetails';\n\n@Injectable()\nexport class LTOService {\n  constructor(\n    private app: AppService) {}\n\n  async authenticateCOCRegistration(ltoDetails: LTODetails): Promise < ReturnDTO > {\n    return this.app.post(ltoDetails, '/lto/authenticateCOCRegistration').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {\n  PaymentRequest\n} from '../objects/PaymentRequest';\nimport {\n  AppService\n} from './app.service'\n\n@Injectable()\nexport class PaymentService {\n  constructor(\n    private app: AppService) {}\n\n  getPaymentUrl(paymentRequest: PaymentRequest) {\n    return this.app.post({\n      ...paymentRequest,\n      responseUrl: 'http://localhost:4200?successPage=true'\n    }, '/payment/getPaymentRequest').then(response => response);\n  }\n\n  getPaymentUrlViaGlobalPay(invoiceNo: String) {\n    return this.app.post({\n      invoiceNo,\n      responseUrl: 'https://localhost:4200?successPage=true',\n      againUrl: 'https://localhost:4200?successPage=true',\n    }, '/payment/getPaymentRequest/globalpay').then(response => response);\n  }\n\n  processPaymentViaGlobalPay(params: any) {\n    return this.app.post(params, '/payment/paymentNotification/globalpay').then(response => response);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  DocumentPrinting\n} from '../objects/DocumentPrinting';\nimport {\n  UtilityService\n} from './utility.service';\nimport {\n  Globals\n} from '../utils/global';\nimport {\n  Utility\n} from '../utils/utility';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Router\n} from '@angular/router';\n\n@Injectable()\nexport class PrintingService {\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(private us: UtilityService,\n    public bms: BsModalService,\n    private router: Router\n  ) {}\n\n  printQuote(quotationNumber: string) {\n    this.printDoc(quotationNumber, \"Q\");\n  }\n\n  printPolicy(policyNumber: string) {\n    this.printDoc(policyNumber, \"P\");\n  }\n\n  printDoc(number: string, type: string) {\n    const documentPrintingDetails = new DocumentPrinting();\n    if (type == \"P\") {\n      documentPrintingDetails.policyNumber = number;\n    } else {\n      documentPrintingDetails.quotationNumber = number;\n    }\n\n    documentPrintingDetails.documentType = type;\n\n    this.us.validatePrinting(documentPrintingDetails).then((res) => {\n      if (res.status) {\n        var ext = res.obj;\n        this.us.printDocument(ext.toString()).subscribe(data => {\n          if (data != null) {\n            window.open(URL.createObjectURL(data));\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  proceedToIssuance(quotationNumber: string, page: string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      // Globals.setPage(page.ISS.ACC);\n      Globals.setPage(page);\n      Globals.setLoadNumber(quotationNumber);\n      Globals.setLoadQuotation(true);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  Car\n} from '../objects/Car';\nimport {\n  Home\n} from '../objects/Home';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  Travel\n} from '../objects/Travel';\nimport {\n  Accident\n} from '../objects/Accident';\n\n@Injectable()\nexport class QuickQuoteService {\n  constructor(private app: AppService) {}\n\n  async checkRoadAssist(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/quickquote/checkRoadAssist').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async quickQuoteCar(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/quickquote/car').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async quickQuoteHome(homeDetails: Home): Promise < ReturnDTO > {\n    return this.app.post(homeDetails, '/quickquote/home').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async quickQuoteTravel(travelDetails: Travel): Promise < ReturnDTO > {\n    return this.app.post(travelDetails, '/quickquote/travel').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async quickQuoteAccident(accidentDetails: Accident): Promise < ReturnDTO > {\n    return this.app.post(accidentDetails, '/quickquote/accident').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  RequestDetails\n} from '../objects/RequestDetails';\nimport {\n  PageFilter\n} from '../objects/PageFilter';\nimport {\n  ReplyDetails\n} from '../objects/ReplyDetails';\n\n@Injectable()\nexport class RequestService {\n\n  constructor(private app: AppService) {}\n\n  async request(requestDetails: RequestDetails, type: String): Promise < ReturnDTO > {\n    let url = '/request/endorsement';\n    if (type == 'R') {\n      url = '/request/renewal';\n    } else if (type == 'U') {\n      url = '/request/underwriting';\n    }\n\n    return this.app.post(requestDetails, url).then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async policy(files: File[], requestDetails: RequestDetails): Promise < ReturnDTO > {\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append(\"files\", file);\n    });\n\n    formData.append(\"request\", requestDetails.toString());\n\n    for (let entry in requestDetails) {\n      if (requestDetails[entry] != undefined) {\n        formData.append(entry, requestDetails[entry]);\n      }\n    }\n\n    return this.app.post(formData, '/request/policy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getList(pageFilter: PageFilter): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/request/list').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getMessageList(requestId: String): Promise < ReturnDTO > {\n    return this.app.post({\n      requestId\n    }, '/request/messageList').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async reply(replyDetails: ReplyDetails): Promise < ReturnDTO > {\n    return this.app.post(replyDetails, '/request/reply').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}","import {\n  NgModule\n} from '@angular/core';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  TranslateService\n} from '@ngx-translate/core';\n\n/* Services */\nimport {\n  AppService\n} from './app.service';\nimport {\n  AuthenticationService\n} from './authentication.service';\nimport {\n  QuickQuoteService\n} from './quickquote.service';\nimport {\n  CarUtilityServices\n} from './car-utility.service';\nimport {\n  CarQuoteServices\n} from './car-quote.service';\nimport {\n  TravelUtilityServices\n} from './travel-utility.service';\nimport {\n  TravelIssueServices\n} from './travel-issue.service';\nimport {\n  AccidentIssueServices\n} from './accident-issue.service';\nimport {\n  HomeIssueServices\n} from './home-issue.service';\nimport {\n  AgentService\n} from './agent.service';\nimport {\n  DashboardService\n} from './dashboard.service';\nimport {\n  UtilityService\n} from './utility.service';\nimport {\n  PrintingService\n} from './printing.service';\nimport {\n  ThirdPartyService\n} from './third-party.service';\nimport {\n  LTOService\n} from './lto.service';\nimport {\n  RequestService\n} from './request.service';\nimport {\n  ClientService\n} from './client.service';\nimport {\n  AccountService\n} from './account.service';\n\n/* LOV Services */\nimport {\n  LovService\n} from './lov.service';\nimport {\n  GroupPolicyLOVServices\n} from './lov/group-policy.service';\nimport {\n  CarLOVServices\n} from './lov/car.service';\nimport {\n  HomeLOVServices\n} from './lov/home.service';\nimport {\n  TravelLOVServices\n} from './lov/travel.service';\nimport {\n  AccidentLOVServices\n} from './lov/accident.service';\nimport {\n  ThirdPartyLOVServices\n} from './lov/third-party-lov-service';\nimport { PaymentService } from './payment.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  exports: [],\n  providers: [\n    BsModalRef, //bmr\n    TranslateService, //ts\n    AppService, //apps\n    AuthenticationService, //auths\n    QuickQuoteService, //qqs\n    CarUtilityServices, //cus\n    CarQuoteServices, //cqs\n    TravelUtilityServices, //tus\n    TravelIssueServices, //tis\n    AccidentIssueServices, //ais\n    HomeIssueServices, //his\n    AgentService, //as\n    DashboardService, //ds\n    UtilityService, //us\n    PrintingService, //ps\n    ThirdPartyService, //tps\n    LTOService, //ltos\n    RequestService, //rs\n    ClientService, //cs\n    AccountService, //accs\n\n    LovService, //ls\n    GroupPolicyLOVServices, //gpls\n    CarLOVServices, //cls\n    HomeLOVServices, //hls\n    TravelLOVServices, //tls\n    AccidentLOVServices, //als\n    ThirdPartyLOVServices, //tpls\n    PaymentService,\n  ]\n})\nexport class ServiceModule {}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\n\n@Injectable()\nexport class ThirdPartyService {\n  constructor(private app: AppService) {}\n\n  async getThirdPartyList(activity: number, firstName: string, lastName: string): Promise < ReturnDTO > {\n    return this.app.post({\n      activity,\n      firstName,\n      lastName\n    }, '/thirdParty/getThirdPartyList').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getThirdPartyDetails(documentType: string, documentCode: string): Promise < ReturnDTO > {\n    return this.app.post({\n      documentType,\n      documentCode\n    }, '/thirdParty/getThirdPartyDetails').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  DocumentPrinting\n} from '../objects/DocumentPrinting';\nimport {\n  UtilityService\n} from './utility.service';\nimport {\n  Globals\n} from '../utils/global';\nimport {\n  Utility\n} from '../utils/utility';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  page\n} from '../constants/page';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  Travel\n} from '../objects/Travel';\n\n@Injectable()\nexport class TravelIssueServices {\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(private app: AppService,\n    private us: UtilityService,\n    public bms: BsModalService,\n    private router: Router\n  ) {}\n\n  async issueQuote(travelDetails: Travel): Promise < ReturnDTO > {\n    return this.app.post(travelDetails, '/travel/issue/issueQuote').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async savePolicy(travelDetails: Travel): Promise < ReturnDTO > {\n    return this.app.post(travelDetails, '/travel/issue/savePolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async postPolicy(travelDetails: Travel): Promise < ReturnDTO > {\n    return this.app.post(travelDetails, '/travel/issue/postPolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async loadQuotation(quotationNumber: string): Promise < ReturnDTO > {\n    return this.app.post({quotationNumber}, '/travel/issue/loadQuotation').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  printQuote(quotationNumber: string) {\n    this.printDoc(quotationNumber, \"Q\");\n  }\n\n  printPolicy(policyNumber: string) {\n    this.printDoc(policyNumber, \"P\");\n  }\n\n  printDoc(number: string, type: string) {\n    const documentPrintingDetails = new DocumentPrinting();\n    if (type == \"P\") {\n      documentPrintingDetails.policyNumber = number;\n    } else {\n      documentPrintingDetails.quotationNumber = number;\n    }\n\n    documentPrintingDetails.documentType = type;\n\n    this.us.validatePrinting(documentPrintingDetails).then((res) => {\n      if (res.status) {\n        var ext = res.obj;\n        this.us.printDocument(ext.toString()).subscribe(data => {\n          if (data != null) {\n            window.open(URL.createObjectURL(data));\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  proceedToIssuance(quotationNumber: string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page.ISS.TRA);\n      Globals.setLoadNumber(quotationNumber);\n      Globals.setLoadQuotation(true);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  Travel\n} from '../objects/Travel';\n\n@Injectable()\nexport class TravelUtilityServices {\n  constructor(private app: AppService) {}\n\n  async getOneTrip(travelDetails: Travel): Promise < ReturnDTO > {\n    return this.app.post(travelDetails, '/travel/getOneTrip').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppService } from './app.service';\nimport { UtilitiesQueryFilter } from '../../app/objects/UtilitiesQueryFilter';\nimport { ReturnDTO } from '../../app/objects/ReturnDTO';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UtilityQueryService {\n\n  constructor(private app: AppService) { }\n\n  async getSearchResult(filter: UtilitiesQueryFilter): Promise <ReturnDTO> {\n    return this.app.post(filter, '/InquiryController/EncryptParam').then( data => data as ReturnDTO);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  API_URL\n} from '../constants/app.constant';\nimport {\n  DocumentPrinting\n} from '../objects/DocumentPrinting';\nimport {\n  AppService\n} from '../services/app.service'\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\n\n@Injectable()\nexport class UtilityService {\n  constructor(\n    private app: AppService,\n    private http: HttpClient) {}\n\n  printDocument(extension: String) {\n    return this.http.post(\n      API_URL + '/utility/downloadFile',\n      extension, {\n        responseType: 'blob'\n      }).map((res: Blob) => {\n      return new Blob([res], {\n        type: 'application/pdf'\n      });\n    });\n  }\n\n  async validatePrinting(documentPritingDetails: DocumentPrinting): Promise < ReturnDTO > {\n    return this.app.post(documentPritingDetails, '/utility/validatePrinting').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getDateRecord(): Promise < ReturnDTO > {\n    return this.app.get('/utility/getDateRecord').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getEndorsementNumber(documentPritingDetails: DocumentPrinting): Promise < ReturnDTO > {\n    return this.app.post(documentPritingDetails, '/utility/getEndorsementNumber').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  group,\n} from '@angular/animations';\n\nexport const SlideInOutAnimation = [\n  trigger('slideInOut', [\n    state('in', style({\n      'max-height': '500px',\n      'opacity': '1',\n      'visibility': 'visible'\n    })),\n    state('out', style({\n      'max-height': '0px',\n      'opacity': '0',\n      'visibility': 'hidden'\n    })),\n    transition('in => out', [group([\n      animate('400ms ease-in-out', style({\n        'opacity': '0'\n      })),\n      animate('600ms ease-in-out', style({\n        'max-height': '0px'\n      })),\n      animate('700ms ease-in-out', style({\n        'visibility': 'hidden'\n      }))\n    ])]),\n    transition('out => in', [group([\n      animate('1ms ease-in-out', style({\n        'visibility': 'visible'\n      })),\n      animate('600ms ease-in-out', style({\n        'max-height': '500px'\n      })),\n      animate('800ms ease-in-out', style({\n        'opacity': '1'\n      }))\n    ])])\n  ]),\n]\n","import {\n  page as p\n} from '../constants/page';\n\nexport class Globals {\n  public static page: String = 'dashboard';\n  public static loadNumber: string = '';\n  public static isLoadQuotation: boolean = false;\n\n  static setPage(val: String) {\n    this.page = val;\n  }\n\n  static setLoadNumber(val: string) {\n    this.loadNumber = val;\n  }\n\n  static setLoadQuotation(val: boolean) {\n    this.isLoadQuotation = val;\n  }\n\n  static getAppType() {\n    if (Globals.page == p.QUO.CAR || Globals.page == p.QUO.ACC || Globals.page == p.QUO.TRA || Globals.page == p.QUO.HOM) {\n      return \"Q\";\n    } else if (Globals.page == p.ISS.CAR || Globals.page == p.ISS.ACC || Globals.page == p.ISS.TRA || Globals.page == p.ISS.HOM) {\n      return \"I\";\n    }\n    return \"\";\n  }\n}","import {\n  AbstractControl,\n  FormGroup\n} from '@angular/forms';\nimport {\n  ModalComponent\n} from '../components/modal/modal.component';\nimport {\n  CURRENT_USER\n} from \"../constants/local.storage\";\nimport * as moment from 'moment';\nimport { User } from '../objects/User';\n\nexport class Utility {\n\n  static updateValidator(input: AbstractControl, validator: any) {\n    input.setValidators(validator);\n    input.updateValueAndValidity();\n  }\n\n  static setNull(checked: boolean, value: any) {\n    return !checked ? null : value;\n  }\n\n  static isEmpty(value: any) {\n    return value === null || value === '';\n  }\n\n  static isUndefined(value: any) {\n    return value === undefined || value === null || value === '';\n  }\n\n  static showError(modalService: any, message: String) {\n    return this.modal(modalService, message, \"Error\");\n  }\n\n  static showWarning(modalService: any, message: String) {\n    return this.modal(modalService, message, \"Warning\");\n  }\n\n  static showInfo(modalService: any, message: String) {\n    return this.modal(modalService, message, \"Info\");\n  }\n\n  static modal(modalService: any, message: String, title: String) {\n    const initialState = {\n      message: message,\n      className: \"modal-\" + title.toLowerCase(),\n      title: title,\n      isClose: true,\n      isHtml: false\n    };\n    return modalService.show(ModalComponent, {\n      initialState\n    });\n  }\n\n  static showHTMLError(modalService: any, items: String[]) {\n    return this.modalHTML(modalService, items, \"Error\");\n  }\n\n  static showHTMLWarning(modalService: any, items: String[]) {\n    return this.modalHTML(modalService, items, \"Warning\");\n  }\n\n  static showHTMLInfo(modalService: any, items: String[]) {\n    return this.modalHTML(modalService, items, \"Info\");\n  }\n\n  static modalHTML(modalService: any, items: String[], title: String) {\n    const initialState = {\n      items: items,\n      className: \"modal-\" + title.toLowerCase(),\n      title: title,\n      isClose: true,\n      isHtml: true\n    };\n    return modalService.show(ModalComponent, {\n      initialState\n    });\n  }\n\n  copyToClipboard(item: string) {\n    document.addEventListener('copy', (e: ClipboardEvent) => {\n      e.clipboardData.setData('text/plain', (item));\n      e.preventDefault();\n      document.removeEventListener('copy', null);\n    });\n    document.execCommand('copy');\n  }\n\n  //smooth scroll to preferred html element\n  static scroll(id: string) {\n    //buffer if id is hidden\n    setTimeout(() => {\n      var el = document.getElementById(id);\n      if (!this.isUndefined(el)) {\n        el.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }, 500);\n  }\n\n  //converts string value to integer\n  static parseIntArray(arr: any[], param: string) {\n    arr.forEach(a => {\n      a[param] = parseInt(a[param]);\n    });\n    return arr;\n  }\n\n  //format date string\n  static formatDate(d: Date, f ? : string) {\n    const format = !this.isUndefined(f) ? f : \"MM/DD/YYYY\";\n    return moment(d).format(format);\n  }\n\n  static convertStringDate(d: string, f ? : string) {\n    const format = !this.isUndefined(f) ? f : \"DDMMYYYY\";\n    return moment(d, format).toDate();\n  }\n\n  //find all invalid control to given FormGroup\n  static findInvalidControls(f: FormGroup) {\n    const invalid = [];\n    const controls = f.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n        invalid.push(name);\n      }\n    }\n    return invalid;\n  }\n\n  static convertDatePickerDate(val: String) {\n    if (val != null && val != undefined && val !== '' ) {\n      const date = val.toString();\n      var d = new Date(date);\n      return moment(d).format(\"MM/DD/YYYY\");\n    }\n    return \"\";\n  }\n\n  static getStoredDetails() {\n    const storedDetails = localStorage.getItem(CURRENT_USER);\n\n    let u = new User();\n\n    if (storedDetails != null) {\n      const user = JSON.parse(storedDetails);\n      u = new User(user);\n    }\n    \n    return u;\n  }\n}\n","import {\n  AbstractControl,\n  Validators\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  Utility\n} from '../utils/utility';\nimport {\n  GroupPolicy\n} from '../objects/GroupPolicy';\n\nexport function validateUrl(control: AbstractControl) {\n  if (!control.value.startsWith('https') || !control.value.includes('.io')) {\n    return {\n      validUrl: true\n    };\n  }\n  return null;\n}\n\nexport function validateItinerary(control: AbstractControl) {\n  if (!Utility.isUndefined(control.value)) {\n    const smallcaps = control.value.toLowerCase();\n\n    var arr = smallcaps.split('-');\n    var firstItinerary = arr[0].trim();\n    var lastItinarary = arr[arr.length - 1].trim();\n\n    var hasEmptyItem = false;\n    arr.forEach(a => {\n      if (a.trim() == '') {\n        hasEmptyItem = true;\n      }\n    });\n\n    //invalid if first and last itinerary is not the same, has empty item and itinerary is only 1\n    if (firstItinerary != lastItinarary || hasEmptyItem || arr.length < 3) {\n      return {\n        invalidItinerary: true\n      };\n    }\n  }\n  return null;\n}\n\nexport class Validate {\n  static setGroupPolicyValidations(form: any, gp: GroupPolicy) {\n    var groupPolicy = form.get('groupPolicy');\n    var contract = form.get('contract');\n    var subContract = form.get('subContract');\n\n    var cbIsRenewal = form.get('cbIsRenewal');\n    var expiringPolicyNumber = form.get('expiringPolicyNumber');\n\n    groupPolicy.valueChanges.subscribe(policy => {\n      Utility.updateValidator(contract, Utility.isUndefined(policy) ? null : Validators.required);\n      Utility.updateValidator(subContract, Utility.isUndefined(policy) ? null : Validators.required);\n      gp.contract = Utility.setNull(!Utility.isUndefined(policy), gp.contract);\n      gp.subContract = Utility.setNull(!Utility.isUndefined(policy), gp.subContract);\n    });\n\n    cbIsRenewal.valueChanges.subscribe(isRenewal => {\n      if (!Utility.isUndefined(isRenewal)) {\n        gp.expiringPolicyNumber = Utility.setNull(isRenewal, gp.expiringPolicyNumber);\n        Utility.updateValidator(expiringPolicyNumber, isRenewal ? Validators.required : null);\n      }\n    });\n  }\n}\n","export const environment = {\n  production: false,\n  imgUrl: '/mivo2',\n  apiUrl: 'https://prd2.mapfreinsurance.com.ph/tronws/',\n};\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}