{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.html","./src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.html","./src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.html","./src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.html","./src/app/components/account-premium-collection-list/account-premium-collection-list.component.html","./src/app/components/choose-agent/choose-agent.component.html","./src/app/components/client-claims-list/client-claims-list.component.html","./src/app/components/client-details-list/client-details-list.component.html","./src/app/components/client-policy-active-list/client-policy-active-list.component.html","./src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.html","./src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.html","./src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.html","./src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.html","./src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.html","./src/app/components/client-quotation-active-list/client-quotation-active-list.component.html","./src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.html","./src/app/components/coverage-variable-data/coverage-variable-data.component.html","./src/app/components/coverages/coverages.component.html","./src/app/components/create-third-party/create-third-party.component.html","./src/app/components/dashboard/dashboard.component.html","./src/app/components/document-printing/document-printing.component.html","./src/app/components/faq/faq.component.html","./src/app/components/fixed-coverages/fixed-coverages.component.html","./src/app/components/footer/footer.component.html","./src/app/components/group-policy/group-policy.component.html","./src/app/components/header/header.component.html","./src/app/components/health-check/health-check.component.html","./src/app/components/individual-policy/individual-policy.component.html","./src/app/components/login/login.component.html","./src/app/components/missing-page/missing-page.component.html","./src/app/components/modal/modal.component.html","./src/app/components/outstanding-bills/outstanding-bills.component.html","./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.html","./src/app/components/payment-breakdown/payment-breakdown.component.html","./src/app/components/policy-holder/policy-holder.component.html","./src/app/components/profile/profile.component.html","./src/app/components/query/query.component.html","./src/app/components/quick-quotation-accident/quick-quotation-accident.component.html","./src/app/components/quick-quotation-car/quick-quotation-car.component.html","./src/app/components/quick-quotation-home/quick-quotation-home.component.html","./src/app/components/quick-quotation-travel/quick-quotation-travel.component.html","./src/app/components/quotation-accident/quotation-accident.component.html","./src/app/components/quotation-car/quotation-car.component.html","./src/app/components/quotation-home/quotation-home.component.html","./src/app/components/quotation-travel/quotation-travel.component.html","./src/app/components/reload/reload.component.html","./src/app/components/request-create/request-create.component.html","./src/app/components/request-details-modal/request-details-modal.component.html","./src/app/components/request-list/request-list.component.html","./src/app/components/sidenav/sidenav.component.html","./src/app/components/template/template.component.html","./src/app/components/terms-and-condition/terms-and-condition.component.html","./src/app/components/view-details-modal/view-details-modal.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.css","./src/app/components/account-commissions-paid-list/account-commissions-paid-list.component.ts","./src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.css","./src/app/components/account-estimated-commissions-list/account-estimated-commissions-list.component.ts","./src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.css","./src/app/components/account-outstanding-bills-list/account-outstanding-bills-list.component.ts","./src/app/components/account-premium-collection-list/account-premium-collection-list.component.css","./src/app/components/account-premium-collection-list/account-premium-collection-list.component.ts","./src/app/components/choose-agent/choose-agent.component.css","./src/app/components/choose-agent/choose-agent.component.ts","./src/app/components/client-claims-list/client-claims-list.component.css","./src/app/components/client-claims-list/client-claims-list.component.ts","./src/app/components/client-details-list/client-details-list.component.css","./src/app/components/client-details-list/client-details-list.component.ts","./src/app/components/client-policy-active-list/client-policy-active-list.component.css","./src/app/components/client-policy-active-list/client-policy-active-list.component.ts","./src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.css","./src/app/components/client-policy-cancelled-list/client-policy-cancelled-list.component.ts","./src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.css","./src/app/components/client-policy-expiring-list/client-policy-expiring-list.component.ts","./src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.css","./src/app/components/client-policy-not-renewed-list/client-policy-not-renewed-list.component.ts","./src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.css","./src/app/components/client-policy-provisional-list/client-policy-provisional-list.component.ts","./src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.css","./src/app/components/client-policy-renewed-list/client-policy-renewed-list.component.ts","./src/app/components/client-quotation-active-list/client-quotation-active-list.component.css","./src/app/components/client-quotation-active-list/client-quotation-active-list.component.ts","./src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.css","./src/app/components/client-quotation-provisional-list/client-quotation-provisional-list.component.ts","./src/app/components/coverage-variable-data/coverage-variable-data.component.css","./src/app/components/coverage-variable-data/coverage-variable-data.component.ts","./src/app/components/coverages/coverages.component.css","./src/app/components/coverages/coverages.component.ts","./src/app/components/create-third-party/create-third-party.component.css","./src/app/components/create-third-party/create-third-party.component.ts","./src/app/components/dashboard/dashboard.component.css","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/document-printing/document-printing.component.css","./src/app/components/document-printing/document-printing.component.ts","./src/app/components/faq/faq.component.css","./src/app/components/faq/faq.component.ts","./src/app/components/fixed-coverages/fixed-coverages.component.css","./src/app/components/fixed-coverages/fixed-coverages.component.ts","./src/app/components/footer/footer.component.css","./src/app/components/footer/footer.component.ts","./src/app/components/group-policy/group-policy.component.css","./src/app/components/group-policy/group-policy.component.ts","./src/app/components/header/header.component.css","./src/app/components/header/header.component.ts","./src/app/components/health-check/health-check.component.css","./src/app/components/health-check/health-check.component.ts","./src/app/components/individual-policy/individual-policy.component.css","./src/app/components/individual-policy/individual-policy.component.ts","./src/app/components/login/login.component.css","./src/app/components/login/login.component.ts","./src/app/components/missing-page/missing-page.component.css","./src/app/components/missing-page/missing-page.component.ts","./src/app/components/modal/modal.component.css","./src/app/components/modal/modal.component.ts","./src/app/components/outstanding-bills/outstanding-bills.component.css","./src/app/components/outstanding-bills/outstanding-bills.component.ts","./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.css","./src/app/components/payment-breakdown-modal/payment-breakdown-modal.component.ts","./src/app/components/payment-breakdown/payment-breakdown.component.css","./src/app/components/payment-breakdown/payment-breakdown.component.ts","./src/app/components/policy-holder/policy-holder.component.css","./src/app/components/policy-holder/policy-holder.component.ts","./src/app/components/profile/profile.component.css","./src/app/components/profile/profile.component.ts","./src/app/components/query/query.component.css","./src/app/components/query/query.component.ts","./src/app/components/quick-quotation-accident/quick-quotation-accident.component.css","./src/app/components/quick-quotation-accident/quick-quotation-accident.component.ts","./src/app/components/quick-quotation-car/quick-quotation-car.component.css","./src/app/components/quick-quotation-car/quick-quotation-car.component.ts","./src/app/components/quick-quotation-home/quick-quotation-home.component.css","./src/app/components/quick-quotation-home/quick-quotation-home.component.ts","./src/app/components/quick-quotation-travel/quick-quotation-travel.component.css","./src/app/components/quick-quotation-travel/quick-quotation-travel.component.ts","./src/app/components/quotation-accident/quotation-accident.component.css","./src/app/components/quotation-accident/quotation-accident.component.ts","./src/app/components/quotation-car/quotation-car.component.css","./src/app/components/quotation-car/quotation-car.component.ts","./src/app/components/quotation-home/quotation-home.component.css","./src/app/components/quotation-home/quotation-home.component.ts","./src/app/components/quotation-travel/quotation-travel.component.css","./src/app/components/quotation-travel/quotation-travel.component.ts","./src/app/components/reload/reload.component.css","./src/app/components/reload/reload.component.ts","./src/app/components/request-create/request-create.component.css","./src/app/components/request-create/request-create.component.ts","./src/app/components/request-details-modal/request-details-modal.component.css","./src/app/components/request-details-modal/request-details-modal.component.ts","./src/app/components/request-list/request-list.component.css","./src/app/components/request-list/request-list.component.ts","./src/app/components/sidenav/sidenav.component.css","./src/app/components/sidenav/sidenav.component.ts","./src/app/components/template/template.component.css","./src/app/components/template/template.component.ts","./src/app/components/terms-and-condition/terms-and-condition.component.css","./src/app/components/terms-and-condition/terms-and-condition.component.ts","./src/app/components/view-details-modal/view-details-modal.component.css","./src/app/components/view-details-modal/view-details-modal.component.ts","./src/app/constants/app.constant.ts","./src/app/constants/local.storage.ts","./src/app/constants/page.ts","./src/app/helpers/auth.guard.ts","./src/app/helpers/error.interceptor.ts","./src/app/helpers/fake-backend.ts","./src/app/helpers/jwt.interceptor.ts","./src/app/objects/Accident.ts","./src/app/objects/Car.ts","./src/app/objects/CoverageVariableData.ts","./src/app/objects/DocumentPrinting.ts","./src/app/objects/GroupPolicy.ts","./src/app/objects/Home.ts","./src/app/objects/InsuredDetails.ts","./src/app/objects/LOV.ts","./src/app/objects/LOV/accidentList.ts","./src/app/objects/LOV/carList.ts","./src/app/objects/LOV/groupPolicyList.ts","./src/app/objects/LOV/homeList.ts","./src/app/objects/LOV/thirdPartyList.ts","./src/app/objects/LOV/travelList.ts","./src/app/objects/LTODetails.ts","./src/app/objects/ListAccountCommissionsPaid.ts","./src/app/objects/ListAccountEstimatedCommissions.ts","./src/app/objects/ListAccountOutstandingBills.ts","./src/app/objects/ListAccountPremiumCollection.ts","./src/app/objects/ListClaimDetails.ts","./src/app/objects/ListClientDetails.ts","./src/app/objects/ListPolicyActive.ts","./src/app/objects/ListPolicyCancelled.ts","./src/app/objects/ListPolicyExpiring.ts","./src/app/objects/ListPolicyNotRenewed.ts","./src/app/objects/ListPolicyProvisional.ts","./src/app/objects/ListPolicyRenewed.ts","./src/app/objects/ListQuotationActive.ts","./src/app/objects/ListQuotationProvisional.ts","./src/app/objects/OptionList.ts","./src/app/objects/Page.ts","./src/app/objects/PageFilter.ts","./src/app/objects/PageFilterAccount.ts","./src/app/objects/PageFilterClient.ts","./src/app/objects/PolicyHolder.ts","./src/app/objects/ReplyDetails.ts","./src/app/objects/RequestDetails.ts","./src/app/objects/RequestDetailsList.ts","./src/app/objects/SelectedAgent.ts","./src/app/objects/Travel.ts","./src/app/objects/Traveler.ts","./src/app/objects/User.ts","./src/app/objects/UtilitiesQueryFilter.ts","./src/app/services/accident-issue.service.ts","./src/app/services/account.service.ts","./src/app/services/agent.service.ts","./src/app/services/app.service.ts","./src/app/services/authentication.service.ts","./src/app/services/car-quote.service.ts","./src/app/services/car-utility.service.ts","./src/app/services/client.service.ts","./src/app/services/dashboard.service.ts","./src/app/services/home-issue.service.ts","./src/app/services/lov.service.ts","./src/app/services/lov/accident.service.ts","./src/app/services/lov/car.service.ts","./src/app/services/lov/group-policy.service.ts","./src/app/services/lov/home.service.ts","./src/app/services/lov/third-party-lov-service.ts","./src/app/services/lov/travel.service.ts","./src/app/services/lto.service.ts","./src/app/services/payment.service.ts","./src/app/services/printing.service.ts","./src/app/services/quickquote.service.ts","./src/app/services/request.service.ts","./src/app/services/service.module.ts","./src/app/services/third-party.service.ts","./src/app/services/travel-issue.service.ts","./src/app/services/travel-utility.service.ts","./src/app/services/utility-query.service.ts","./src/app/services/utility.service.ts","./src/app/utils/animation.ts","./src/app/utils/global.ts","./src/app/utils/utility.ts","./src/app/validators/validate.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<ng-http-loader\\n    [debounceDelay]=\\\"1000\\\"\\n    [minDuration]=\\\"1000\\\"\\n    [opacity]=\\\".6\\\"\\n    [spinner]=\\\"spinnerStyle.skThreeBounce\\\"\\n    [filteredUrlPatterns]=\\\"['getDashboardInfo']\\\"\\n    ></ng-http-loader>\\n<router-outlet></router-outlet>\\n\";","export default \"<div class=\\\"row\\\" id=\\\"commissionsPaidList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Commissions Paid List</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"currency\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Currency</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"currency\\\" id=\\\"currency\\\"\\n                        [(ngModel)]=\\\"pageFilter.currency\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of currencyItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"invoiceNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Invoice Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"invoiceNumber\\\" id=\\\"invoiceNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.invoiceNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"receiptAmount\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Receipt Amount</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"receiptAmount\\\" id=\\\"receiptAmount\\\"\\n                        [(ngModel)]=\\\"pageFilter.receiptAmount\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"commissionAmount\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Commission Amount</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"commissionAmount\\\" id=\\\"commissionAmount\\\"\\n                        [(ngModel)]=\\\"pageFilter.commissionAmount\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"withholdingTaxAmount\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Withholding Tax\\n                      Amount</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"withholdingTaxAmount\\\"\\n                        id=\\\"withholdingTaxAmount\\\" [(ngModel)]=\\\"pageFilter.withholdingTaxAmount\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <!-- .card-body -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"currency\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.currency}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"invoiceNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Invoice Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"receiptAmount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Receipt Amount </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.receiptAmount | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"commissionAmount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Commission Amount </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.commissionAmount | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"withholdingTaxAmount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Withholding Tax Amount </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.withholdingTaxAmount | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #commissionsPaidList -->\";","export default \"<div class=\\\"row\\\" id=\\\"estimatedCommissionsList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Estimated Commissions List</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"currency\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Currency</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"currency\\\" id=\\\"currency\\\"\\n                        [(ngModel)]=\\\"pageFilter.currency\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of currencyItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"invoiceNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Invoice Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"invoiceNumber\\\" id=\\\"invoiceNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.invoiceNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"movementDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Movement Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"movementDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.movementDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"receiptAmount\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Receipt Amount</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"receiptAmount\\\" id=\\\"receiptAmount\\\"\\n                        [(ngModel)]=\\\"pageFilter.receiptAmount\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"estimatedCommission\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Estimated\\n                      Commission</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"estimatedCommission\\\"\\n                        id=\\\"estimatedCommission\\\" [(ngModel)]=\\\"pageFilter.estimatedCommission\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <!-- .card-body -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"currency\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.currency}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"invoiceNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Invoice Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"movementDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Movement Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.movementDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"receiptAmount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Receipt Amount </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.receiptAmount | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"estimatedCommission\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Estimated/Remaining Commission </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.estimatedCommission | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #estimatedCommissionsList -->\";","export default \"<div class=\\\"row\\\" id=\\\"outstandingBillsList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Outstanding Bills List</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"prn\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">PRN</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"prn\\\" id=\\\"prn\\\"\\n                        [(ngModel)]=\\\"pageFilter.prn\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"invoiceNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Invoice Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"invoiceNumber\\\" id=\\\"invoiceNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.invoiceNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"currency\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Currency</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"currency\\\" id=\\\"currency\\\"\\n                        [(ngModel)]=\\\"pageFilter.currency\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of currencyItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"effectivityDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"expiryDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Expiry Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"expiryDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.expiryDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"paymentDateExpiry\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Payment Date Expiry</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\"\\n                        formControlName=\\\"paymentDateExpiry\\\" [(ngModel)]=\\\"pageFilter.paymentDateExpiry\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"amount\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Amount</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"amount\\\" id=\\\"amount\\\"\\n                        [(ngModel)]=\\\"pageFilter.amount\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"paymentStatus\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Payment Status</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"paymentStatus\\\"\\n                        [(ngModel)]=\\\"pageFilter.paymentStatus\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of paymentStatusItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"subline\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Subline</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"subline\\\" id=\\\"subline\\\"\\n                        [(ngModel)]=\\\"pageFilter.subline\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <!-- .card-body -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"prn\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> PRN </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.prn}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"invoiceNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Invoice Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"currency\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.currency}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"effectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.effectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"expiryDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Expiry Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.expiryDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"paymentDateExpiry\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Payment Date Expiry </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.paymentDateExpiry}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"age\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Age </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.age}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"amount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Amount (PHP) </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.amount | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"paymentStatus\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Payment Status </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.paymentStatus}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"subline\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Subline </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.subline}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #outstandingBillsList -->\\n<ng-template #paymentResult let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-lg-6\\\">\\n        <img src=\\\"./assets/images/mivo-logo/mi_logo.png\\\" alt=\\\"brand-logo\\\" />\\n      </div>\\n      <div class=\\\"col-lg-6\\\">\\n        <img src=\\\"./assets/images/payment/paynamics-logo.png\\\" alt=\\\"brand-logo\\\" class=\\\"paynamics-logo\\\" />\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content class=\\\"payment-result-content\\\">\\n    <br>\\n\\n    <div *ngIf=\\\"data.status\\\">\\n      <span class=\\\"fa-stack fa-md payment-icon success\\\">\\n        <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n        <i class=\\\"fa fa-check fa-stack-1x fa-inverse\\\"></i>\\n      </span>\\n      <br>\\n      <br>\\n      <h3>Successful Payment</h3>\\n      <h6>Your payment has been completed succefully.</h6>\\n    </div>\\n\\n    <div *ngIf=\\\"!data.status\\\">\\n      <span class=\\\"fa-stack fa-md payment-icon failed\\\">\\n        <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n        <i class=\\\"fa fa-times fa-stack-1x fa-inverse\\\"></i>\\n      </span>\\n      <br>\\n      <br>\\n      <h3>Unsuccessful Payment</h3>\\n      <h6>{{data.errorMessage}}</h6>\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n      Okay\\n    </button>\\n\\n  </mat-dialog-content>\\n  <div mat-dialog-actions class=\\\"footer\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <p> <i class=\\\"fa fa-lock\\\"></i> Payment transaction secured by <strong>Paynamics</strong></p>\\n    </div>\\n  </div>\\n</ng-template>\";","export default \"<div class=\\\"row\\\" id=\\\"premiumCollectionList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Premium Collection List</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"currency\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Currency</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"currency\\\" id=\\\"currency\\\"\\n                        [(ngModel)]=\\\"pageFilter.currency\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of currencyItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"subline\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Subline</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"subline\\\" id=\\\"subline\\\"\\n                        [(ngModel)]=\\\"pageFilter.subline\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"invoiceNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Invoice Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"invoiceNumber\\\" id=\\\"invoiceNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.invoiceNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"effectivityDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"expiryDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Expiry Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"expiryDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.expiryDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"collectedDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Collected Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"collectedDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.collectedDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"collectionType\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Collection Type</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"collectionType\\\" id=\\\"collectionType\\\"\\n                        [(ngModel)]=\\\"pageFilter.collectionType\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"receiptAmount\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Receipt Amount</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"receiptAmount\\\" id=\\\"receiptAmount\\\"\\n                        [(ngModel)]=\\\"pageFilter.receiptAmount\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"netPremium\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Net Premium</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"netPremium\\\" id=\\\"netPremium\\\"\\n                        [(ngModel)]=\\\"pageFilter.netPremium\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"surcharge\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Surcharge</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"surcharge\\\" id=\\\"surcharge\\\"\\n                        [(ngModel)]=\\\"pageFilter.surcharge\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"tax\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Tax</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"tax\\\" id=\\\"tax\\\"\\n                        [(ngModel)]=\\\"pageFilter.tax\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"interest\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Interest</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"interest\\\" id=\\\"interest\\\"\\n                        [(ngModel)]=\\\"pageFilter.interest\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <!-- .card-body -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"currency\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.currency}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"subline\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Subline </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.subline}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"invoiceNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Invoice Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"effectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.effectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"expiryDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Expiry Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.expiryDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"collectedDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Collected Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.collectedDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"collectionType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Collection Type </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.collectionType}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"receiptAmount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Receipt Amount </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.receiptAmount | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"netPremium\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Net Premium </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.netPremium | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"surcharge\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Surcharge </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.surcharge | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"tax\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Tax </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.tax | currency:'PHP': 'symbol-narrow'}}\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"interest\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Interest </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\"> {{element.interest | currency:'PHP': 'symbol-narrow'}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #premiumCollectionList -->\";","export default \"<div id=\\\"chooseAgent\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"form-panel\\\">\\n\\n          <div class=\\\"container\\\">\\n            <div class=\\\"wrap\\\">\\n              <h2>\\n                Choose Agent\\n              </h2>\\n              <form class=\\\"choose-agent-form\\\" [formGroup]=\\\"chooseAgentForm\\\">\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': chooseAgentForm.controls['commercialStructure'].invalid \\n                && (chooseAgentForm.controls['commercialStructure'].dirty \\n                || chooseAgentForm.controls['commercialStructure'].touched)}\\\">\\n                  <label for=\\\"commercialStructure\\\">Commercial Structure</label>\\n                  <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"commercialStructure\\\"\\n                    (change)=\\\"comStructureChange()\\\">\\n                    <option selected></option>\\n                    <option *ngFor=\\\"let commerialStructure of commercialStructureLOV\\\"\\n                      [ngValue]=\\\"commerialStructure.codNivel3\\\">{{ commerialStructure.nomNivel3 }}</option>\\n                  </select>\\n                  <p class=\\\"form-error\\\" *ngIf=\\\"chooseAgentForm.controls['commercialStructure'].errors?.required\\\">\\n                    * commercial structure is required\\n                  </p>\\n                </div>\\n\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': chooseAgentForm.controls['agent'].invalid \\n                && (chooseAgentForm.controls['agent'].dirty \\n                || chooseAgentForm.controls['agent'].touched)}\\\">\\n                  <label for=\\\"agent\\\">Agent</label>\\n                  <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"agent\\\">\\n                    <option selected></option>\\n                    <option *ngFor=\\\"let agentDetail of agentLOV\\\" [ngValue]=\\\"agentDetail.codAgt\\\">\\n                      {{ agentDetail.nomCompleto }}</option>\\n                  </select>\\n                  <p class=\\\"form-error\\\" *ngIf=\\\"chooseAgentForm.controls['agent'].errors?.required\\\">\\n                    * agent is required\\n                  </p>\\n                </div>\\n\\n                <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                  <button *ngIf=\\\"showCancelBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"next()\\\">Cancel</button>\\n                  <button [disabled]=\\\"(chooseAgentForm.pristine || chooseAgentForm.invalid)\\\" type=\\\"button\\\"\\n                    class=\\\"btn btn-primary\\\" (click)=\\\"next()\\\">Next</button>\\n                </div>\\n                <!-- .btn-group -->\\n              </form>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n  </div>\\n</div>\";","export default \"<div class=\\\"row\\\" id=\\\"claimsList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Claims</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"claimNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Claim Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"claimNumber\\\" id=\\\"claimNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.claimNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"fileNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">File Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"fileNumber\\\" id=\\\"fileNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.fileNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"fileName\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">File Name</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"fileName\\\" id=\\\"fileName\\\"\\n                        [(ngModel)]=\\\"pageFilter.fileName\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"lossDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Loss Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"lossDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.lossDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"notificationDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Notification Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\"\\n                        formControlName=\\\"notificationDate\\\" [(ngModel)]=\\\"pageFilter.notificationDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"claimNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Claim Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.claimNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"fileNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> File Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fileNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"fileName\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> File Name </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fileName}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"lossDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Loss Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lossDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"notificationDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Notification Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.notificationDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"reserveAmount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Reserve Amount </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.reserveAmount | currency:'PHP': 'symbol-narrow'}}\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #claimsList -->\";","export default \"<div class=\\\"row\\\" id=\\\"clientDetailsList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Client List</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"name\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Name</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\"\\n                        [(ngModel)]=\\\"pageFilter.name\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"documentType\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Document Type</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"documentType\\\" id=\\\"documentType\\\"\\n                        [(ngModel)]=\\\"pageFilter.documentType\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of documentTypeItems\\\" [ngValue]=\\\"item.TIP_DOCUM\\\">{{ item.NOM_DOCUM }}\\n                        </option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"documentCode\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Document Code</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"documentCode\\\" id=\\\"documentCode\\\"\\n                        [(ngModel)]=\\\"pageFilter.documentCode\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"address\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Address</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" id=\\\"address\\\"\\n                        [(ngModel)]=\\\"pageFilter.address\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"homeTelNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Home Tel. No.</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"homeTelNumber\\\" id=\\\"homeTelNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.homeTelNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"businessTelNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Business Tel. No.</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"businessTelNumber\\\" id=\\\"businessTelNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.businessTelNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"mobileNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Mobile No.</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNumber\\\" id=\\\"mobileNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.mobileNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"email\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Email</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" id=\\\"email\\\"\\n                        [(ngModel)]=\\\"pageFilter.email\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"name\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Name </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"documentType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Document Type </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.documentType}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"documentCode\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-150\\\"> Document Code </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.documentCode}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"address\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-250\\\"> Address </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.address}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"homeTelNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Home Tel. No. </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.homeTelNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"businessTelNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Business Tel. No. </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.businessTelNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"mobileNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-120\\\"> Mobile No. </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.mobileNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"email\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #clientDetailsList -->\";","export default \"<div class=\\\"row\\\" id=\\\"policyActiveList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Active Policies</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"dueDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Due Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"dueDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.dueDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"line\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Line</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"line\\\" id=\\\"line\\\"\\n                        [(ngModel)]=\\\"pageFilter.line\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"documentType\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Document Type</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"documentType\\\" id=\\\"documentType\\\"\\n                        [(ngModel)]=\\\"pageFilter.documentType\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of documentTypeItems\\\" [ngValue]=\\\"item.TIP_DOCUM\\\">{{ item.NOM_DOCUM }}\\n                        </option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"documentCode\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Document Code</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"documentCode\\\" id=\\\"documentCode\\\"\\n                        [(ngModel)]=\\\"pageFilter.documentCode\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyDueDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Due Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyDueDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"line\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.line}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"documentType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Document Type </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.documentType}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"documentCode\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-150\\\"> Document Code </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.documentCode}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #policyActiveList -->\";","export default \"<div class=\\\"row\\\" id=\\\"policyCancelledList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Cancelled Policies</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"line\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Line</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"line\\\" id=\\\"line\\\"\\n                        [(ngModel)]=\\\"pageFilter.line\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"line\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.line}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #policyCancelledList -->\";","export default \"<div class=\\\"row\\\" id=\\\"policyExpiring\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Expiring Policies</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"expiryDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Expiry Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"expiryDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.expiryDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"email\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Email</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" id=\\\"email\\\"\\n                        [(ngModel)]=\\\"pageFilter.email\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"telephoneNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Telephone Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"telephoneNumber\\\" id=\\\"telephoneNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.telephoneNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyExpiryDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Expiry Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyExpiryDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"email\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"telephoneNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Telehone Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.telephoneNumber}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #policyExpiring -->\";","export default \"<div class=\\\"row\\\" id=\\\"policyNotRenewed\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Not Renewed Policies</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"dueDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Due Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"dueDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.dueDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"line\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Line</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"line\\\" id=\\\"line\\\"\\n                        [(ngModel)]=\\\"pageFilter.line\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyDueDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Due Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyDueDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"line\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.line}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #policyNotRenewed -->\";","export default \"<div class=\\\"row\\\" id=\\\"policyProvisional\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Provisional Policies</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"dueDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Due Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"dueDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.dueDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"line\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Line</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"line\\\" id=\\\"line\\\"\\n                        [(ngModel)]=\\\"pageFilter.line\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyDueDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Due Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyDueDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"line\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.line}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #policyProvisional -->\";","export default \"<div class=\\\"row\\\" id=\\\"policyRenewed\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Renewed Policies</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"dueDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Due Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"dueDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.dueDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"documentType\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Document Type</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"documentType\\\" id=\\\"documentType\\\"\\n                        [(ngModel)]=\\\"pageFilter.documentType\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of documentTypeItems\\\" [ngValue]=\\\"item.TIP_DOCUM\\\">{{ item.NOM_DOCUM }}\\n                        </option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"documentCode\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Document Code</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"documentCode\\\" id=\\\"documentCode\\\"\\n                        [(ngModel)]=\\\"pageFilter.documentCode\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-heade class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyDueDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Due Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyDueDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"documentType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Document Type </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.documentType}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"documentCode\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-150\\\"> Document Code </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.documentCode}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #policyRenewed -->\";","export default \"<div class=\\\"row\\\" id=\\\"quotationActive\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Active Quotations</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"quotationNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Quotation Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"quotationNumber\\\" id=\\\"quotationNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.quotationNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"dueDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Due Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"dueDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.dueDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"line\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Line</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"line\\\" id=\\\"line\\\"\\n                        [(ngModel)]=\\\"pageFilter.line\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"quotationNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Quotation Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.quotationNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyDueDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Due Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyDueDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"line\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.line}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #quotationActive -->\";","export default \"<div class=\\\"row\\\" id=\\\"quotationProvisional\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Provisional Quotations</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"quotationNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Quotation Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"quotationNumber\\\" id=\\\"quotationNumber\\\"\\n                        [(ngModel)]=\\\"pageFilter.quotationNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"effectivityDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Effectivity Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                        formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"pageFilter.effectivityDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"dueDate\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Due Date</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" formControlName=\\\"dueDate\\\"\\n                        [(ngModel)]=\\\"pageFilter.dueDate\\\" bsDatepicker>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"line\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Line</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"line\\\" id=\\\"line\\\"\\n                        [(ngModel)]=\\\"pageFilter.line\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyHolder\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyHolder\\\" id=\\\"policyHolder\\\"\\n                        [(ngModel)]=\\\"pageFilter.policyHolder\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"source\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"source\\\" id=\\\"source\\\"\\n                        [(ngModel)]=\\\"pageFilter.source\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of sourceItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </form>\\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"quotationNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Quotation Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.quotationNumber}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyEffectivityDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Effectivity Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyEffectivityDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyDueDate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-100\\\"> Due Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyDueDate}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"line\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Line </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.line}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"policyHolder\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"expand-column-220\\\"> Policy Holder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .col-lg-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #quotationProvisional -->\";","export default \"<form [formGroup]=\\\"variableForm\\\">\\n  <div mat-dialog-content>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"header row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <h4>{{coverage}}</h4>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div *ngIf=\\\"code == '1100'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"lossAndDamageType\\\">Loss and Damage Type</label>\\n              <input type=\\\"number\\\" formControlName=\\\"lossAndDamageType\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.lossAndDamageType\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"finalRate\\\">Final Rate (%)</label>\\n              <input type=\\\"number\\\" formControlName=\\\"finalRate\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"data.cvd.finalRate\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"adjustedCommissionRate\\\">Adjusted Commission Rate (%)</label>\\n              <input type=\\\"number\\\" formControlName=\\\"adjustedCommissionRate\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.adjustedCommissionRate\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"lossRatioRate\\\">Loss Ratio Rate (%)</label>\\n              <input type=\\\"number\\\" formControlName=\\\"lossRatioRate\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.lossRatioRate\\\">\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1002'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"ownDamageTowingLimit\\\">Own Damage Towing Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"ownDamageTowingLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.ownDamageTowingLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"ownDamageRepairLimit\\\">Own Damage Repair Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"ownDamageRepairLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.ownDamageRepairLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"ownDamageSpecialDeductible\\\">Own Damage Special Deductible</label>\\n              <input type=\\\"number\\\" formControlName=\\\"ownDamageSpecialDeductible\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.ownDamageSpecialDeductible\\\">\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1003'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"theftTowingLimit\\\">Theft Towing Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"theftTowingLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.theftTowingLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"theftRepairLimit\\\">Theft Repair Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"theftRepairLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.theftRepairLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"theftSpecialDeductible\\\">Theft Special Deductible</label>\\n              <input type=\\\"number\\\" formControlName=\\\"theftSpecialDeductible\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.theftSpecialDeductible\\\">\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1007'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"uppaDiscountType\\\">UPPA Discount Type</label>\\n              <input type=\\\"number\\\" formControlName=\\\"uppaDiscountType\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.uppaDiscountType\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"uppaDiscountAmount\\\">UPPA Discount Amount</label>\\n              <input type=\\\"number\\\" formControlName=\\\"uppaDiscountAmount\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.uppaDiscountAmount\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"uppaCommissionAdjustment\\\">UPPA Commission Adjustment (%)</label>\\n              <input type=\\\"number\\\" formControlName=\\\"uppaCommissionAdjustment\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.uppaCommissionAdjustment\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"sumInsuredPerPassenger\\\">Sum Insured per Passenger</label>\\n              <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"sumInsuredPerPassenger\\\"\\n                [(ngModel)]=\\\"data.cvd.sumInsuredPerPassenger\\\">\\n                <option></option>\\n                <option *ngFor=\\\"let sumInsured of sumInsuredPerPassengerLOV\\\" [ngValue]=\\\"sumInsured.COD_VALOR\\\">\\n                  {{ sumInsured.COD_VALOR }}</option>\\n              </select>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1008'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"aonFinalRate\\\">AON Final Rate</label>\\n              <input type=\\\"number\\\" formControlName=\\\"aonFinalRate\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.aonFinalRate\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"aonTowingLimit\\\">AON Towing Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"aonTowingLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.aonTowingLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"aonRepairLimit\\\">AON Repair Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"aonRepairLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.aonRepairLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"aonSpecialDeductible\\\">AON Special Deductible</label>\\n              <input type=\\\"number\\\" formControlName=\\\"aonSpecialDeductible\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.aonSpecialDeductible\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"aonCommissionAdjustment\\\">AON Commission Adjustment (%)</label>\\n              <input type=\\\"number\\\" formControlName=\\\"aonCommissionAdjustment\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.aonCommissionAdjustment\\\">\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1020'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"srccFinalRate\\\">SRCC Final Rate</label>\\n              <input type=\\\"number\\\" formControlName=\\\"srccFinalRate\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.srccFinalRate\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"srccTowingLimit\\\">SRCC Towing Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"srccTowingLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.srccTowingLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"srccRepairLimit\\\">SRCC Repair Limit</label>\\n              <input type=\\\"number\\\" formControlName=\\\"srccRepairLimit\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.srccRepairLimit\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"srccSpecialDeductible\\\">SRCC Special Deductible</label>\\n              <input type=\\\"number\\\" formControlName=\\\"srccSpecialDeductible\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.srccSpecialDeductible\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"srccCommissionAdjustment\\\">SRCC Commission Adjustment (%)</label>\\n              <input type=\\\"number\\\" formControlName=\\\"srccCommissionAdjustment\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.srccCommissionAdjustment\\\">\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1040'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"roadAssistDiscount\\\">Road Assist Discount</label>\\n              <input type=\\\"number\\\" formControlName=\\\"roadAssistDiscount\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.roadAssistDiscount\\\">\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"code == '1029'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"ra100Discount\\\">RA 100 Discount</label>\\n              <input type=\\\"number\\\" formControlName=\\\"ra100Discount\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"data.cvd.ra100Discount\\\">\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\">\\n        Cancel\\n      </button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"update()\\\">\\n        Update\\n      </button>\\n    </div>\\n  </div>\\n</form>\\n\";","export default \"<div id=\\\"coverages\\\" class=\\\"card shadow mb-3\\\">\\n  <div class=\\\"card-header\\\">\\n    <strong>Coverages</strong>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n\\n    <div class=\\\"flexitable\\\">\\n\\n      <form [formGroup]=\\\"cForm\\\">\\n        <mat-table formArrayName=\\\"coverages\\\" [dataSource]=\\\"dataSource\\\">\\n          <ng-container matColumnDef=\\\"included\\\">\\n            <mat-header-cell *matHeaderCellDef> Included </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row let rowIndex = index\\\" [formGroupName]=\\\"rowIndex\\\">\\n              <div class=\\\"form-check\\\">\\n                <input (change)=\\\"updateRow(row)\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.disabled]=\\\"!isModifiedCoverage || row.isMandatory ? '' : null\\\"\\n                  formControlName=\\\"included\\\" id=\\\"chk{{rowIndex}}\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"chk{{rowIndex}}\\\">\\n                  {{row.isMandatory ? 'Included' : 'Optional'}}\\n                </label>\\n              </div>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"coverage\\\">\\n            <mat-header-cell *matHeaderCellDef> Coverage </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row let rowIndex = index\\\" [formGroupName]=\\\"rowIndex\\\">\\n              {{row.coverage}}\\n            </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"sumInsured\\\">\\n            <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'amount-header'\\\"> Sum Insured </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row let rowIndex = index\\\" [formGroupName]=\\\"rowIndex\\\" [ngClass]=\\\"'amount'\\\">\\n              <span *ngIf=\\\"!row.isSelect\\\">{{row.sumInsured | currency: 'PHP' : 'symbol-narrow'}}</span>\\n              <select *ngIf=\\\"row.isSelect\\\" class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"sumInsured\\\"\\n                [(ngModel)]=\\\"row.sumInsured\\\"\\n                [attr.disabled]=\\\"isModifiedCoverage && row.included ? null : ''\\\" >\\n                <option *ngFor=\\\"let opt of row.options\\\" [ngValue]=\\\"opt.value\\\">{{ opt.value }}</option>\\n              </select>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"netPremium\\\">\\n            <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'amount-header'\\\"> Net Premium </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row let rowIndex = index\\\" [formGroupName]=\\\"rowIndex\\\" [ngClass]=\\\"'amount'\\\">\\n              <span>{{row.netPremium | currency: 'PHP' : 'symbol-narrow'}}</span>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"action\\\">\\n            <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\" [ngClass]=\\\"'amount'\\\">\\n              <i *ngIf=\\\"isModifiedCoverage && row.included && row.hasVariableData\\\" class=\\\"fa fa-edit\\\" (click)=\\\"editCoverage(row)\\\"></i>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [ngClass]=\\\"row.included ? 'included' : ''\\\"></mat-row>\\n\\n        </mat-table>\\n      </form>\\n    </div>\\n\\n  </div>\\n</div>\";","export default \"<form [formGroup]=\\\"tpForm\\\">\\n  <h2 mat-dialog-title>{{title}}</h2>\\n  <div mat-dialog-content>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <h5>Main Details</h5>\\n        </div>\\n\\n        <div class=\\\"col-md-4 col-sm-12\\\">\\n          <div class=\\\"form-group input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Create a</label>\\n            </div>\\n\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"policyHolderType\\\"\\n              [(ngModel)]=\\\"thirdParty.policyHolderType\\\">\\n              <option value=\\\"P\\\" selected>Person</option>\\n              <option value=\\\"C\\\">Company/Organization</option>\\n            </select>\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['documentType'].invalid \\n            && (tpForm.controls['documentType'].dirty \\n            || tpForm.controls['documentType'].touched)}\\\">\\n            <label for=\\\"documentType\\\">Document Type</label>\\n            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"documentType\\\"\\n              [(ngModel)]=\\\"thirdParty.documentType\\\">\\n              <option *ngFor=\\\"let type of TPLOV.documentTypeLOV\\\" [ngValue]=\\\"type.TIP_DOCUM\\\">{{ type.NOM_DOCUM }}\\n              </option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['documentType'].errors?.required\\\">\\n              * document type is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['documentCode'].invalid \\n            && (tpForm.controls['documentCode'].dirty \\n            || tpForm.controls['documentCode'].touched)}\\\">\\n            <label for=\\\"documentCode\\\">Document Code</label>\\n            <input type=\\\"text\\\" formControlName=\\\"documentCode\\\" class=\\\"form-control required\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n              [(ngModel)]=\\\"thirdParty.documentCode\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['documentCode'].errors?.required\\\">\\n              * document code is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"prefix\\\">Prefix</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"prefix\\\" [(ngModel)]=\\\"thirdParty.prefix\\\">\\n              <option *ngFor=\\\"let pre of TPLOV.prefixLOV\\\" [ngValue]=\\\"pre.TIP_PREFIJO_NOMBRE\\\">{{ pre.NOM_VALOR }}</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"suffix\\\">Suffix</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"suffix\\\" [(ngModel)]=\\\"thirdParty.suffix\\\">\\n              <option *ngFor=\\\"let suff of TPLOV.suffixLOV\\\" [ngValue]=\\\"suff.TIPO_SUFIJO_NOMBRE\\\">{{ suff.NOM_VALOR }}</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['firstName'].invalid \\n                && (tpForm.controls['firstName'].dirty \\n                || tpForm.controls['firstName'].touched)}\\\">\\n            <label for=\\\"suffix\\\">{{firstNameLabel}}</label>\\n            <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control required\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"thirdParty.firstName\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['firstName'].errors?.required\\\">\\n              * {{firstNameError}} is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"suffix\\\">Middle Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"middleName\\\" class=\\\"form-control\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"thirdParty.middleName\\\">\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['lastName'].invalid \\n                && (tpForm.controls['lastName'].dirty \\n                || tpForm.controls['lastName'].touched)}\\\">\\n            <label for=\\\"suffix\\\">Last Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control required\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"thirdParty.lastName\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['lastName'].errors?.required\\\">\\n              * last name is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['gender'].invalid \\n              && (tpForm.controls['gender'].dirty \\n              || tpForm.controls['gender'].touched)}\\\">\\n            <label for=\\\"gender\\\">Gender</label>\\n            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"gender\\\" [(ngModel)]=\\\"thirdParty.gender\\\" convert-to-number> \\n              <option></option>\\n              <option [ngValue]=\\\"1\\\">MALE</option>\\n              <option [ngValue]=\\\"0\\\">FEMALE</option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['gender'].errors?.required\\\">\\n              * gender is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"purchaseDate\\\">Birth Date</label>\\n            <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n              formControlName=\\\"birthDate\\\" [(ngModel)]=\\\"thirdParty.birthDate\\\" bsDatepicker>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['mobileNumber'].invalid \\n            && (tpForm.controls['mobileNumber'].dirty \\n            || tpForm.controls['mobileNumber'].touched)}\\\">\\n            <label for=\\\"suffix\\\">Mobile Number</label>\\n            <input type=\\\"text\\\" formControlName=\\\"mobileNumber\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"thirdParty.mobileNumber\\\"\\n              maxlength=\\\"12\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['mobileNumber'].errors?.required\\\">\\n              * mobile number is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-12\\\">\\n          <h5>Address</h5>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['correspondenceType'].invalid \\n                && (tpForm.controls['correspondenceType'].dirty \\n                || tpForm.controls['correspondenceType'].touched)}\\\">\\n            <label for=\\\"correspondenceType\\\">Correspondence Type</label>\\n            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"correspondenceType\\\"\\n              [(ngModel)]=\\\"thirdParty.correspondenceType\\\">\\n              <option *ngFor=\\\"let correspondenceType of TPLOV.correspondenceTypeLOV\\\"\\n                [ngValue]=\\\"correspondenceType.TIP_ETIQUETA\\\">{{ correspondenceType.NOM_VALOR }}</option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['correspondenceType'].errors?.required\\\">\\n              * correspondence type is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"gender\\\">Country</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"country\\\" [(ngModel)]=\\\"thirdParty.country\\\"\\n                (change)=\\\"getState()\\\">\\n              <option selected></option>\\n              <option *ngFor=\\\"let country of TPLOV.countryLOV\\\" [ngValue]=\\\"country.COD_PAIS\\\">{{ country.NOM_PAIS }}\\n              </option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"gender\\\">State</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"state\\\" [(ngModel)]=\\\"thirdParty.state\\\"\\n                (change)=\\\"getProvince()\\\">\\n              <option selected></option>\\n              <option *ngFor=\\\"let state of TPLOV.stateLOV\\\" [ngValue]=\\\"state.COD_ESTADO\\\">{{ state.NOM_ESTADO }}\\n              </option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"province\\\">Province</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"province\\\" [(ngModel)]=\\\"thirdParty.province\\\"\\n                (change)=\\\"getCity()\\\">\\n              <option selected></option>\\n              <option *ngFor=\\\"let province of TPLOV.provinceLOV\\\" [ngValue]=\\\"province.COD_PROV\\\">\\n                {{ province.NOM_PROV }}\\n              </option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"gender\\\">Town/City</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"city\\\" [(ngModel)]=\\\"thirdParty.city\\\"\\n                (change)=\\\"getZipCode()\\\">\\n              <option selected></option>\\n              <option *ngFor=\\\"let city of TPLOV.cityLOV\\\" [ngValue]=\\\"city.COD_LOCALIDAD\\\">\\n                {{ city.NOM_LOCALIDAD }}\\n              </option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['address'].invalid \\n            && (tpForm.controls['address'].dirty \\n            || tpForm.controls['address'].touched)}\\\">\\n            <label for=\\\"address\\\">Address</label>\\n            <textarea type=\\\"text\\\" formControlName=\\\"address\\\" class=\\\"form-control required\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" \\n              [(ngModel)]=\\\"thirdParty.address\\\"></textarea>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['address'].errors?.required\\\">\\n              * address required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"gender\\\">Zipcode</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"zipcode\\\" [(ngModel)]=\\\"thirdParty.zipcode\\\">\\n              <option *ngFor=\\\"let zipcode of TPLOV.zipcodeLOV\\\" [ngValue]=\\\"zipcode.COD_POSTAL\\\">\\n                {{ zipcode.COD_POSTAL }}\\n              </option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-8\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['email'].invalid \\n              && (tpForm.controls['email'].dirty \\n              || tpForm.controls['email'].touched)}\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control required\\\" [(ngModel)]=\\\"thirdParty.email\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['email'].errors?.required\\\">\\n              * email is required\\n            </p>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['email'].errors?.email\\\">\\n              * invalid email format\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showOrgDetails\\\" class=\\\"col-xl-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <h5>Company/Organization Data <small>(Optional)</small></h5>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgDocumentType\\\">Contact Document Type</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"orgDocumentType\\\"\\n                  [(ngModel)]=\\\"thirdParty.orgDocumentType\\\">\\n                  <option></option>\\n                  <option *ngFor=\\\"let documentType of TPLOV.documentTypeLOV\\\" [ngValue]=\\\"documentType.COD_DOCUM\\\">\\n                    {{ documentType.NOM_DOCUM }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgDocumentCode\\\">Contact Document Code</label>\\n                <input type=\\\"text\\\" formControlName=\\\"orgDocumentCode\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"thirdParty.orgDocumentCode\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgNationality\\\">Nationality</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"orgNationality\\\"\\n                  [(ngModel)]=\\\"thirdParty.orgNationality\\\">\\n                  <option></option>\\n                  <option *ngFor=\\\"let nationality of TPLOV.nationalityLOV\\\" [ngValue]=\\\"nationality.COD_PAIS\\\">\\n                    {{ nationality.NOM_PAIS }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgFirstName\\\">Contact First Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"orgFirstName\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"thirdParty.orgFirstName\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgLastName\\\">Contact Last Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"orgLastName\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"thirdParty.orgLastName\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgPost\\\">Post</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"orgPost\\\" [(ngModel)]=\\\"thirdParty.orgPost\\\">\\n                  <option></option>\\n                  <option *ngFor=\\\"let orgPost of TPLOV.orgPostLOV\\\" [ngValue]=\\\"orgPost.COD_MARCA\\\">\\n                    {{ orgPost.NOM_MARCA }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"orgTypeOfBusiness\\\">Type of Business</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"orgTypeOfBusiness\\\"\\n                  [(ngModel)]=\\\"thirdParty.orgTypeOfBusiness\\\">\\n                  <option></option>\\n                  <option *ngFor=\\\"let orgTypeOfBusiness of TPLOV.orgTypeOfBusinessLOV\\\"\\n                    [ngValue]=\\\"orgTypeOfBusiness.COD_MARCA\\\">\\n                    {{ orgTypeOfBusiness.NOM_MARCA }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showPersonDetails\\\" class=\\\"col-xl-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <h5>Natural Person Data <small>(Optional)</small></h5>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"personMaritalStatus\\\">Marital Status</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"personMaritalStatus\\\"\\n                  [(ngModel)]=\\\"thirdParty.personMaritalStatus\\\">\\n                  <option *ngFor=\\\"let personMaritalStatus of TPLOV.personMaritalStatusLOV\\\"\\n                    [ngValue]=\\\"personMaritalStatus.COD_EST_CIVIL\\\">\\n                    {{ personMaritalStatus.NOM_VALOR }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"personProfession\\\">Profession</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"personProfession\\\"\\n                  [(ngModel)]=\\\"thirdParty.personProfession\\\">\\n                  <option *ngFor=\\\"let personProfession of TPLOV.personProfessionLOV\\\"\\n                    [ngValue]=\\\"personProfession.COD_PROFESION\\\">\\n                    {{ personProfession.NOM_PROFESION }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"personOccupation\\\">Occupation</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"personOccupation\\\"\\n                  [(ngModel)]=\\\"thirdParty.personOccupation\\\">\\n                  <option *ngFor=\\\"let personOccupation of TPLOV.personOccupationLOV\\\"\\n                    [ngValue]=\\\"personOccupation.COD_PROFESION\\\">\\n                    {{ personOccupation.NOM_PROFESION }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"personNationality\\\">Nationality</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"personNationality\\\"\\n                  [(ngModel)]=\\\"thirdParty.personNationality\\\">\\n                  <option *ngFor=\\\"let nationality of TPLOV.nationalityLOV\\\" [ngValue]=\\\"nationality.COD_PAIS\\\">\\n                    {{ nationality.NOM_PAIS }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"personType\\\">Type</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"personType\\\" [(ngModel)]=\\\"thirdParty.personType\\\">\\n                  <option *ngFor=\\\"let personType of TPLOV.personTypeLOV\\\" [ngValue]=\\\"personType.TIP_NACIONALIDAD\\\">\\n                    {{ personType.NOM_VALOR }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': tpForm.controls['personLanguage'].invalid \\n                      && (tpForm.controls['personLanguage'].dirty \\n                      || tpForm.controls['personLanguage'].touched)}\\\">\\n                <label for=\\\"personLanguage\\\">Language</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"personLanguage\\\"\\n                  [(ngModel)]=\\\"thirdParty.personLanguage\\\">\\n                  <option *ngFor=\\\"let personLanguage of TPLOV.personLanguageLOV\\\" [ngValue]=\\\"personLanguage.COD_IDIOMA\\\">\\n                    {{ personLanguage.NOM_IDIOMA }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"tpForm.controls['personLanguage'].errors?.required\\\">\\n                  * language is required\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\">\\n        Cancel\\n      </button>\\n      <button [disabled]=\\\"tpForm.pristine || tpForm.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"create()\\\">\\n        Create\\n      </button>\\n    </div>\\n  </div>\\n</form>\";","export default \"<!-- Content Row -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-12 img-container d-none d-lg-block\\\">\\n    <img src=\\\"./assets/images/digital_payment.png\\\" width=\\\"100%\\\" alt=\\\"digital_payment\\\">\\n  </div>\\n\\n  <!-- Forex Exchange -->\\n  <div class=\\\"col-xl-4 col-md-12 mb-4\\\">\\n    <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row no-gutters align-items-center\\\">\\n          <div class=\\\"col mr-2\\\">\\n            <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Forex Exchange</div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\">\\n                <h5 class=\\\"all-caps\\\">\\n                  <span class=\\\"fa-stack fa-md\\\">\\n                    <i class=\\\"fa fa-circle fa-stack-2x dollar\\\"></i>\\n                    <i class=\\\"fa fa-dollar-sign fa-stack-1x fa-inverse\\\"></i>\\n                  </span>\\n                  {{forex.dollar | currency:'PHP': 'symbol-narrow'}}\\n                </h5>\\n              </div>\\n              <div class=\\\"col-6\\\">\\n                <h5 class=\\\"all-caps\\\">\\n                  <span class=\\\"fa-stack fa-md\\\">\\n                    <i class=\\\"fa fa-circle fa-stack-2x euro\\\"></i>\\n                    <i class=\\\"fa fa-euro-sign fa-stack-1x fa-inverse\\\"></i>\\n                  </span>\\n                  {{forex.euro | currency:'PHP': 'symbol-narrow'}}\\n                </h5>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row no-gutters align-items-center\\\">\\n          <div class=\\\"col mr-2\\\">\\n            <div class=\\\"text-xs font-weight-bold text-success text-uppercase mb-1\\\">Total Collected Premium\\n            </div>\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">\\n              <i *ngIf=\\\"!showData\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n              <h3 *ngIf=\\\"showData\\\">{{dashboardInfo.total | currency:'PHP': 'symbol-narrow'}}</h3>\\n            </div>\\n          </div>\\n          <div class=\\\"col-auto\\\">\\n            <i class=\\\"fas fa-coins fa-2x text-gray-300\\\"></i>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card border-left-info shadow h-100 py-2\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row no-gutters align-items-center\\\">\\n          <div class=\\\"col mr-2\\\">\\n            <div class=\\\"text-xs font-weight-bold text-info text-uppercase mb-1\\\">Active Policies</div>\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">\\n              <i *ngIf=\\\"!showData\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n              <h3 *ngIf=\\\"showData\\\">{{dashboardInfo.active}}</h3>\\n            </div>\\n          </div>\\n          <div class=\\\"col-auto\\\">\\n            <i class=\\\"fas fa-clipboard-list fa-2x text-gray-300\\\"></i>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-xl-8\\\">\\n    <div class=\\\"card shadow mb-4\\\">\\n      <div class=\\\"card-header py-3 d-flex flex-row align-items-center justify-content-between\\\">\\n        <h6 class=\\\"m-0 font-weight-bold text-primary\\\">Agent Production</h6>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <i *ngIf=\\\"!showData\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        <div *ngIf=\\\"showData\\\" style=\\\"display: block;\\\">\\n          <canvas baseChart\\n            [datasets]=\\\"barChartData\\\"\\n            [labels]=\\\"barChartLabels\\\" \\n            [options]=\\\"chartOptions\\\"\\n            [plugins]=\\\"barChartPlugins\\\"\\n            [legend]=\\\"chartLegend\\\"\\n            [chartType]=\\\"barChartType\\\"\\n            [colors]=\\\"barChartColors\\\">\\n          </canvas>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\" id=\\\"documentPrinting\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-print fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Document Printing\\n      </h4>\\n\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <form [formGroup]=\\\"documentPrintingForm\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-5 col-md-5 col-sm-12\\\">\\n              <div class=\\\"form-group input-group mb-3\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['documentType'].invalid \\n                && (documentPrintingForm.controls['documentType'].dirty \\n                || documentPrintingForm.controls['documentType'].touched)}\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Document Type</label>\\n                </div>\\n\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"documentType\\\"\\n                  [(ngModel)]=\\\"documentPrintingDetails.documentType\\\">\\n                  <option selected>\\n                    <p *ngIf=\\\"documentPrintingForm.controls['documentType'].errors?.required\\\">\\n                      Select Document Type\\n                    </p>\\n                  </option>\\n                  <option value=\\\"P\\\">Policy</option>\\n                  <option value=\\\"Q\\\">Quotation</option>\\n                  <option value=\\\"C\\\">Commission Statement</option>\\n                  <option value=\\\"S\\\">Statement of Account</option>\\n                </select>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-7 col-sm-6\\\" *ngIf=\\\"showPolicyDetails\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['policyNumber'].invalid \\n                    && (documentPrintingForm.controls['policyNumber'].dirty \\n                    || documentPrintingForm.controls['policyNumber'].touched)}\\\">\\n                <label for=\\\"policyNumber\\\">Policy Number</label>\\n                <input type=\\\"text\\\" formControlName=\\\"policyNumber\\\" class=\\\"form-control required\\\"\\n                  (change)=\\\"policyNumberOnChange()\\\"\\n                  [(ngModel)]=\\\"documentPrintingDetails.policyNumber\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['policyNumber'].errors?.required\\\">\\n                  * policy number is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-7 col-sm-6\\\" *ngIf=\\\"showQuotationDetails\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['quotationNumber'].invalid \\n                    && (documentPrintingForm.controls['quotationNumber'].dirty \\n                    || documentPrintingForm.controls['quotationNumber'].touched)}\\\">\\n                <label for=\\\"quotationNumber\\\">Quotation Number</label>\\n                <input type=\\\"text\\\" formControlName=\\\"quotationNumber\\\" class=\\\"form-control required\\\"\\n                  [(ngModel)]=\\\"documentPrintingDetails.quotationNumber\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['quotationNumber'].errors?.required\\\">\\n                  * quotation number is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-7 col-sm-6\\\" *ngIf=\\\"showCommissionStatementDetails\\\">\\n              <div *ngIf=\\\"!showCsDate\\\" class=\\\"alert alert-info note\\\">\\n                <p>No generated COMMISSION STATEMENT for the past 3 months\\n                </p>\\n              </div>\\n              <div *ngIf=\\\"showCsDate\\\" class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"alert alert-info note\\\">\\n                    <p>Print your COMMISSION STATEMENT for the past 3 months</p>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-6 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['csProcessDate'].invalid \\n                    && (documentPrintingForm.controls['csProcessDate'].dirty \\n                    || documentPrintingForm.controls['csProcessDate'].touched)}\\\">\\n                    <label for=\\\"csProcessDate\\\">Select Date</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"csProcessDate\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.csProcessDate\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let csProcessDate of csProcessDateLOV\\\" [ngValue]=\\\"csProcessDate.value\\\">\\n                        {{ csProcessDate.date }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['csProcessDate'].errors?.required\\\">\\n                      * please select a date\\n                    </p>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-6 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['csPass'].invalid \\n                    && (documentPrintingForm.controls['csPass'].dirty \\n                    || documentPrintingForm.controls['csPass'].touched)}\\\">\\n                    <label for=\\\"csPass\\\">Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"csPass\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.csPass\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['csPass'].errors?.required\\\">\\n                      * password is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-7 col-sm-6\\\" *ngIf=\\\"showSOADetails\\\">\\n              <div class=\\\"alert alert-info note\\\">\\n                <p>Print your STATEMENT OF ACCOUNT for the past 3 months</p>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['soaProcessDate'].invalid \\n                      && (documentPrintingForm.controls['soaProcessDate'].dirty \\n                      || documentPrintingForm.controls['soaProcessDate'].touched)}\\\">\\n                    <label for=\\\"soaProcessDate\\\">Select Date</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"soaProcessDate\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.soaProcessDate\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let soaProcessDate of soaProcessDateLOV\\\" [ngValue]=\\\"soaProcessDate.value\\\">\\n                        {{ soaProcessDate.name }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['soaProcessDate'].errors?.required\\\">\\n                      * please select a date\\n                    </p>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-6 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['soaPass'].invalid \\n                      && (documentPrintingForm.controls['soaPass'].dirty \\n                      || documentPrintingForm.controls['soaPass'].touched)}\\\">\\n                    <label for=\\\"soaPass\\\">Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"soaPass\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.soaPass\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['soaPass'].errors?.required\\\">\\n                      * password is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"clearfix\\\"></div>\\n\\n            <div class=\\\"dp-policy col-lg-12\\\" *ngIf=\\\"showPolicyDetails\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Policy Details</h6>\\n                </div>\\n\\n                <div class=\\\"col-md-3 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': documentPrintingForm.controls['endorsementNumber'].invalid \\n                    && (documentPrintingForm.controls['endorsementNumber'].dirty \\n                    || documentPrintingForm.controls['endorsementNumber'].touched)}\\\">\\n                    <label for=\\\"endorsementNumber\\\">Endorsement Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"endorsementNumber\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.endorsementNumber\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"documentPrintingForm.controls['endorsementNumber'].errors?.required\\\">\\n                      * endorsement number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3 col-sm-6\\\">\\n                  <div class=\\\"form-check\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"policyPPRF\\\" formControlName=\\\"policyPPRF\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.policyPPRF\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"policyPPRF\\\">\\n                      Print Policy Receipt Form (North Luzon Policy)\\n                    </label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3 col-sm-6\\\">\\n                  <div class=\\\"form-check\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"policyPAC\\\" formControlName=\\\"policyPAC\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.policyPAC\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"policyPAC\\\">\\n                      Print Agent's Copy\\n                    </label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3 col-sm-6\\\">\\n                  <div class=\\\"form-check\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"policyPV\\\" formControlName=\\\"policyPV\\\"\\n                      [(ngModel)]=\\\"documentPrintingDetails.policyPV\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"policyPV\\\">\\n                      Print Voucher\\n                    </label>\\n                  </div>\\n                </div>\\n\\n              </div>\\n              <!-- .row -->\\n            </div>\\n            <!-- dp-policy col-lg-12 -->\\n\\n          </div>\\n          <!-- .row -->\\n\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button [disabled]=\\\"documentPrintingForm.pristine || documentPrintingForm.invalid\\\" type=\\\"button\\\"\\n              class=\\\"btn btn-primary\\\" (click)=\\\"print(documentPrintingDetails)\\\">Print</button>\\n          </div>\\n          <!-- .btn-group -->\\n\\n        </form>\\n\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #documentPrinting -->\";","export default \"<div class=\\\"row\\\" id=\\\"faq\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-question fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Frequently Asked Questions\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"col-md-12\\\">\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;How do I fill-out my Official Receipt based on the\\n                  disbursement statement?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;Sample Disbursement Statement - TWB</h5>\\n                <img src=\\\"./assets/images/faq/sample-ds.png\\\" alt=\\\"disbursement-statement TWB\\\" />\\n                <br />\\n                <br />\\n                <h5>Sample Disbursement Statement - NIIS</h5>\\n                <img src=\\\"./assets/images/faq/sample-cpr.png\\\" alt=\\\"disbursement-statement NIIS\\\" />\\n                <br />\\n                <br />\\n                <h5>Sample BIR Official Receipt</h5>\\n                <img src=\\\"./assets/images/faq/sample-or.png\\\" alt=\\\"disbursement-statement BIR-OR\\\" />\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;How would I know if my Official Receipt is valid?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;Validity period of Official Receipt is <strong>five (5)\\n                    years</strong> only. e.g. If the Official\\n                  Receipt is printed\\n                  on July 12, 2019, Official Receipt is still acceptable until July 11, 2024.</p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;Where can I submit my Official Receipts?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;You may submit your Official Receipts to <strong>any\\n                    MAPFRE Insurance Sales Office</strong> near you.\\n                </p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;What are the cut-offs and schedules I need to remember?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <span class=\\\"qa-label\\\">A.</span>\\n                <ol>\\n                  <li>All Official Receipts in exchange of commission received from previous month shall be\\n                    submitted to Head Office c/o Commission personnel on or before 1st Monday of the following month.\\n                  </li>\\n                  <li>In the event that Official Receipt was not submitted during the 1st week, agent should\\n                    submit the pending Official Receipt before Monday of the following week.</li>\\n                  <li>Transfer of Commission to agent's ATM account is every Wednesday and Thursday</li>\\n                  <li>Disbursement Statement will be sent to agent's registered email every Wednesday and Friday\\n                    by senders noreply@mapfreinsurance.com.ph; treasuryho@mapfreinsurance.com.ph</li>\\n                  <li>Commission to be released is based on the premiums posted as fully paid in the system from\\n                    Tuesday (prior week) up to Monday (current week).</li>\\n                </ol>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;How will I be able to receive my commissions for my paid\\n                  accounts?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;Commissions for licensed individuals shall only be paid\\n                  via transfer to their registered BPI account\\n                  number.</p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;What if I don't have BPI account? Are there other banks\\n                  available?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;<strong>None</strong>, but MAPFRE can endorse you to open\\n                  a BPI account without maintaining balance\\n                  provided you have regular\\n                  commission being credited to your account. If after six months and no amount has been credited, the\\n                  bank\\n                  shall\\n                  change it to regular account with required ADB. Other terms and conditions are indicated in the BPI\\n                  endorsement form.</p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;If I have existing BPI account, can I use it?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;<strong>Yes</strong>, all BPI accounts (current or\\n                  savings) except for BPI Family Savings</p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;What are the requirements in order to receive my commissions\\n                  regularly?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;Aside from having a valid license and duly submitted MOA\\n                  (Memorandum of Agreement), you must submit\\n                  your\\n                  <strong>valid BIR Official Receipts (OR)</strong> on or before the due date which is indicated in the\\n                  email advice sent by\\n                  MAPFRE to your registered email address. You may issue Official Receipt based on the statement\\n                  received\\n                  weekly\\n                  or for the total amount received in a month provided that issue date is within the month commission\\n                  was\\n                  released. Ensure that you sign the OR on the space provided for signature every time you issue the OR.\\n                </p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;Where can I send my queries or concerns with regards to my\\n                  commission?</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;You may email your concerns or queries to\\n                  <strong>DCU@mapfreinsurance.com.ph</strong>\\n                  or <strong>mrbdagsa@mapfreinsurance.com.ph</strong></p>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"question-panel\\\">\\n            <div class=\\\"question-container\\\">\\n              <div class=\\\"question-section col-xs-11\\\">\\n                <h5><span class=\\\"qa-label\\\">Q.</span>&nbsp;What are the possible causes of a negative amount reflected on\\n                  my disbursement statement</h5>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            <div class=\\\"answer-container\\\">\\n              <div class=\\\"answer-section col-xs-11\\\">\\n                <p><span class=\\\"qa-label\\\">A.</span>&nbsp;&nbsp;Aside from the the deductions found in the column\\n                  <strong>advance disbursement</strong>, which\\n                  represent the\\n                  discounts/commission given to clients by the agent. There will be a negative effect on your\\n                  commission if there is:</p>\\n                <ul>\\n                  <li>returned check/bounced check</li>\\n                  <li>cancellation endorsement</li>\\n                </ul>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n          </div>\\n\\n        </div>\\n        <!-- .col-md-12 -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #faq -->\\n\";","export default \"<div id=\\\"coverageBreakdown\\\" class=\\\"card shadow mb-3\\\">\\n  <div class=\\\"card-header\\\">\\n    <strong>Coverage Breakdown</strong>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"flexitable\\\">\\n          <table mat-table [dataSource]=\\\"coverageData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n            <ng-container matColumnDef=\\\"label\\\">\\n              <th mat-header-cell *matHeaderCellDef>Coverage</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.label\\\"></td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"sumInsured\\\">\\n              <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Sum Insured</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                {{element.showDetails ? element.details : element.sumInsured | currency: element.currency: 'symbol-narrow'}}\\n              </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n          </table>\\n        </div>\\n      </div>\\n      <!-- .col-xl-12 -->\\n    </div>\\n    <!-- .row -->\\n  </div>\\n  <!-- .card-body -->\\n</div>\\n<!-- #coverageBreakdown -->\";","export default \"<footer class=\\\"sticky-footer\\\">\\n  <div class=\\\"my-auto\\\">\\n    <div class=\\\"copyright my-auto\\\">\\n      <div class=\\\"col-lg-12 footer-wrapper\\\">\\n        <img class=\\\"footer-logo\\\" src=\\\"./assets/images/mivo-logo/mi_logo.png\\\">\\n        <p><strong>MAPFRE Insurance Corporation</strong></p>\\n        <p>MAPFRE Insurance Corporate Center</p>\\n        <p>Acacia Ave., Madrigal Business Park, Ayala Alabang, Muntinlupa City</p>\\n        <p>VAT REG TIN 000-491-771-00000</p>\\n        <p>Tel: (632) 8876-4444 ; Fax: (632) 8876-4344</p>\\n        <p><a>www.mapfre.com.ph</a></p>\\n        <p>{{version}}</p>\\n      </div>\\n    </div>\\n  </div>\\n</footer>\\n\";","export default \"<div class=\\\"card shadow mb-3\\\">\\n  <div class=\\\"card-header\\\">\\n    <strong>Group Policy Information</strong>\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"gpForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n          <h6>Group Policy</h6>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': gpForm.controls['groupPolicy'].invalid \\n            && (gpForm.controls['groupPolicy'].dirty \\n            || gpForm.controls['groupPolicy'].touched)}\\\">\\n            <label for=\\\"groupPolicy\\\">Group Policy</label>\\n            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"groupPolicy\\\"\\n              [attr.disabled]=\\\"editMode && GPLOV.groupPolicyLOV?.length ? null : true\\\" [(ngModel)]=\\\"groupPolicy.groupPolicy\\\"\\n              (change)=\\\"groupPolicyOnChange(); affecting('groupPolicy', 'Group Policy')\\\">\\n              <option></option>\\n              <option *ngFor=\\\"let groupPolicy of GPLOV.groupPolicyLOV\\\" [ngValue]=\\\"groupPolicy.NUM_POLIZA\\\">\\n                {{ groupPolicy.NOM_POLIZA }}</option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"gpForm.controls['groupPolicy'].errors?.required\\\">\\n              * group policy is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': gpForm.controls['contract'].invalid \\n            && (gpForm.controls['contract'].dirty \\n            || gpForm.controls['contract'].touched)}\\\">\\n            <label for=\\\"contract\\\">Contract</label>\\n            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"contract\\\"\\n              (change)=\\\"contractOnChange(); affecting('contract', 'Contract')\\\"\\n              [(ngModel)]=\\\"groupPolicy.contract\\\"\\n              [attr.disabled]=\\\"editMode && groupPolicy.groupPolicy ? null : true\\\">\\n              <option></option>\\n              <option *ngFor=\\\"let contract of GPLOV.contractLOV\\\" [ngValue]=\\\"contract.NUM_CONTRATO\\\">\\n                {{ contract.NOM_CONTRATO }}\\n              </option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"gpForm.controls['contract'].errors?.required\\\">\\n              * contract is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': gpForm.controls['subContract'].invalid \\n            && (gpForm.controls['subContract'].dirty \\n            || gpForm.controls['subContract'].touched)}\\\">\\n            <label for=\\\"subContract\\\">Sub Contract</label>\\n            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subContract\\\"\\n              (change)=\\\"affecting('subContract', 'Sub Contract')\\\"\\n              [(ngModel)]=\\\"groupPolicy.subContract\\\"\\n              [attr.disabled]=\\\"editMode && groupPolicy.groupPolicy && groupPolicy.contract ? null : true\\\">\\n              <option></option>\\n              <option *ngFor=\\\"let subContract of GPLOV.subContractLOV\\\" [ngValue]=\\\"subContract.NUM_SUBCONTRATO\\\">\\n                {{ subContract.NOM_SUBCONTRATO }}</option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"gpForm.controls['subContract'].errors?.required\\\">\\n              * sub contract is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': gpForm.controls['commercialStructure'].invalid \\n            && (gpForm.controls['commercialStructure'].dirty \\n            || gpForm.controls['commercialStructure'].touched)}\\\">\\n            <label for=\\\"commercialStructure\\\">Commercial Structure</label>\\n            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"commercialStructure\\\"\\n              [(ngModel)]=\\\"groupPolicy.commercialStructure\\\"\\n              [attr.disabled]=\\\"editMode && GPLOV.commercialStructureLOV?.length ? null : true\\\">\\n              <option></option>\\n              <option *ngFor=\\\"let commercialStructure of GPLOV.commercialStructureLOV\\\"\\n                [ngValue]=\\\"commercialStructure.COD_NIVEL3\\\">{{ commercialStructure.NOM_NIVEL3 }}</option>\\n            </select>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"gpForm.controls['commercialStructure'].errors?.required\\\">\\n              * commercial structure is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': gpForm.controls['agentCode'].invalid \\n            && (gpForm.controls['agentCode'].dirty \\n            || gpForm.controls['agentCode'].touched)}\\\">\\n            <label for=\\\"agentCode\\\">Agent Code</label>\\n            <input type=\\\"number\\\" formControlName=\\\"agentCode\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"groupPolicy.agentCode\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"gpForm.controls['agentCode'].errors?.required\\\">\\n              * agent code is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showExpiring\\\" class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': gpForm.controls['expiringPolicyNumber'].invalid \\n            && (gpForm.controls['expiringPolicyNumber'].dirty \\n            || gpForm.controls['expiringPolicyNumber'].touched)}\\\">\\n            <div class=\\\"form-check\\\">\\n              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbIsRenewal\\\" formControlName=\\\"cbIsRenewal\\\"\\n                [(ngModel)]=\\\"groupPolicy.cbIsRenewal\\\"\\n                [attr.disabled]=\\\"editMode ? null : true\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"cbIsRenewal\\\">\\n                Renewal\\n              </label>\\n            </div>\\n            <label class=\\\"form-check-label\\\" for=\\\"cbIsRenewal\\\">\\n              Expiring Policy Number\\n            </label>\\n            <input type=\\\"text\\\" formControlName=\\\"expiringPolicyNumber\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"groupPolicy.expiringPolicyNumber\\\"\\n              [attr.disabled]=\\\"editMode && groupPolicy.cbIsRenewal ? null : ''\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"gpForm.controls['expiringPolicyNumber'].errors?.required\\\">\\n              * expiring policy number is required\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\";","export default \"<nav class=\\\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\\\">\\n\\n  <!-- Sidebar Toggle (Topbar) -->\\n  <button id=\\\"sidebarToggleTop\\\" class=\\\"btn btn-link d-md-none rounded-circle mr-3\\\">\\n    <i class=\\\"fa fa-bars\\\"></i>\\n  </button>\\n\\n  <div class=\\\"header-name\\\">\\n    <i class=\\\"text-muted\\\">\\n      Bienvenida,\\n    </i>\\n    <h5 class=\\\"all-caps\\\">\\n      {{currentUser.fullName}}\\n    </h5>\\n  </div>\\n\\n  <!-- Topbar Navbar -->\\n  <ul class=\\\"navbar-nav ml-auto\\\">\\n\\n    <!-- Nav Item - Search Dropdown (Visible Only XS) d-sm-none -->\\n    <div class=\\\"topbar-divider d-none d-sm-block\\\"></div>\\n\\n    <!-- Nav Item - User Information -->\\n    <li class=\\\"nav-item dropdown no-arrow\\\">\\n      <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"userDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\"\\n        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        <!-- <span class=\\\"mr-2 d-none d-lg-inline text-gray-600 all-caps\\\">{{currentUser.fullName}}</span> -->\\n        <i class=\\\"fas fa-user-circle fa-2x fa-fw mr-2 text-gray-400\\\"></i>\\n      </a>\\n      <!-- Dropdown - User Information -->\\n      <div class=\\\"dropdown-menu dropdown-menu-right shadow animated--grow-in\\\" aria-labelledby=\\\"userDropdown\\\">\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"setPage(p.UTI.CHA)\\\">\\n          <i class=\\\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\\\"></i>\\n          Profile\\n        </a>\\n        <div *ngIf=\\\"canChooseAgent\\\" class=\\\"dropdown-divider\\\"></div>\\n        <a *ngIf=\\\"canChooseAgent\\\" class=\\\"dropdown-item\\\" (click)=\\\"chooseAgent()\\\">\\n          <i class=\\\"fas fa-user-circle fa-sm fa-fw mr-2 text-gray-400\\\"></i>\\n          Choose agent\\n        </a>\\n        <div class=\\\"dropdown-divider\\\"></div>\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\" data-toggle=\\\"modal\\\" data-target=\\\"#logoutModal\\\">\\n          <i class=\\\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\\\"></i>\\n          Logout\\n        </a>\\n      </div>\\n    </li>\\n\\n  </ul>\\n\\n</nav>\";","export default \"<div id=\\\"termsAndCondition\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"wrap\\\">\\n            <div class=\\\"row\\\">\\n\\n              <div class=\\\"col-lg-4 menu\\\">\\n                <a class=\\\"brand-logo\\\" (click)=\\\"redirect()\\\">\\n                  <img src=\\\"./assets/images/mivo-logo/mivo-logo-light.png\\\" alt=\\\"brand-logo\\\" />\\n                </a>\\n\\n                <ul class=\\\"health-menu\\\">\\n                  <li class=\\\"{{backendConfigList.database ? 'live' : ''}}\\\">\\n                    DATABASE\\n                  </li>\\n                  <li>\\n                    PRINTING\\n                  </li>\\n                </ul>\\n              </div>\\n              <!-- .col-lg-4 -->\\n\\n              <div class=\\\"col-lg-8 details\\\">\\n\\n                <div class=\\\"scroll\\\">\\n                  <div class=\\\"scroll-wrapper\\\">\\n                    <h2>\\n                      CONFIGURATIONS\\n                    </h2>\\n\\n                    <div class=\\\"top-20\\\">\\n                      <h5>\\n                        FRONT END\\n                      </h5>\\n                      <div>\\n                        <ul>\\n                          <li>\\n                            Build Number: <strong>{{version}}</strong>\\n                          </li>\\n                          <li>\\n                            API URL: <strong>{{apiUrl}}</strong>\\n                          </li>\\n                          <li>\\n                            Image URL: <strong>{{imgUrl}}</strong>\\n                          </li>\\n                          <li>\\n                            Production: <strong>{{production}}</strong>\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"top-20\\\">\\n                      <h5>\\n                        BACKEND\\n                      </h5>\\n                      <div>\\n                        <ul>\\n                          <li>\\n                            Version: <strong>{{backendConfigList.version}}</strong>\\n                          </li>\\n                          <li>\\n                            Database URL: <strong>{{backendConfigList.dbUrl}}</strong>\\n                          </li>\\n                          <li>\\n                            COCAF Register URL: <strong>{{backendConfigList.cocafRegisterUrl}}</strong>\\n                          </li>\\n                          <li>\\n                            COCAF Verify URL: <strong>{{backendConfigList.cocafVerifyUrl}}</strong>\\n                          </li>\\n                          <li>\\n                            BPM Policy Central URL: <strong>{{backendConfigList.policyCentralUrl}}</strong>\\n                          </li>\\n                          <li>\\n                            BPM Tech Control URL: <strong>{{backendConfigList.techControlUrl}}</strong>\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n                <!-- .scroll -->\\n\\n              </div>\\n              <!-- .col-lg-8 -->\\n\\n            </div>\\n            <!-- .row -->\\n          </div>\\n          <!-- .wrap -->\\n        </div>\\n        <!-- .container -->\\n      </div>\\n      <!-- .col-lg-12 -->\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n    <!-- .row -->\\n  </div>\\n  <!-- .container-fluid -->\\n</div>\\n<!-- #termsAndCondition -->\";","export default \"<div class=\\\"card shadow mb-3\\\">\\n  <div class=\\\"card-header\\\">\\n    <strong>Individual Policy</strong>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    \\n    <form [formGroup]=\\\"loadForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Quotation Number</label>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Quotation Number here..\\\"\\n            formControlName=\\\"quotationNumber\\\" [(ngModel)]=\\\"details.quotationNumber\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button [disabled]=\\\"disableLoadBtn\\\" class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\">Load</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </form>\\n\\n  </div>\\n</div>\\n\";","export default \"<div id=\\\"login\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-8 d-none d-lg-block login-panel left-container\\\">\\n        <div class=\\\"wrap-banner\\\"></div>\\n      </div>\\n      <div class=\\\"col-lg-4 login-panel right-container\\\">\\n        <div class=\\\"wrap-login\\\">\\n\\n          <img class=\\\"login-logo\\\" src=\\\"./assets/images/mivo-logo/mivo-logo.png\\\" alt=\\\"mivo-logo\\\">\\n\\n          <form class=\\\"login-form\\\" [formGroup]=\\\"loginForm\\\">\\n            <span class=\\\"login-form-title\\\">\\n              <strong class=\\\"d-none d-lg-block\\\">LOGIN</strong>\\n              <strong class=\\\"d-block d-lg-none\\\">MIVO LOGIN</strong>\\n            </span>\\n            <span class=\\\"login-version text-muted\\\">{{version}}</span>\\n\\n            <div *ngIf=\\\"alert\\\" class=\\\"alert alert-danger\\\">{{message}}</div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': loginForm.controls['username'].invalid \\n            && (loginForm.controls['username'].dirty \\n            || loginForm.controls['username'].touched)}\\\">\\n              <input class=\\\"form-control\\\" formControlName=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\">\\n              <p class=\\\"form-error\\\" *ngIf=\\\"loginForm.controls['username'].errors?.required\\\">\\n                * username is required\\n              </p>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': loginForm.controls['password'].invalid \\n            && (loginForm.controls['password'].dirty \\n            || loginForm.controls['password'].touched)}\\\">\\n              <input class=\\\"form-control\\\" formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\"\\n                placeholder=\\\"Password\\\">\\n              <p class=\\\"form-error\\\" *ngIf=\\\"loginForm.controls['password'].errors?.required\\\">\\n                * password is required\\n              </p>\\n            </div>\\n\\n            <div class=\\\"container-login-form-btn\\\">\\n              <button [disabled]=\\\"(loginForm.pristine || loginForm.invalid)\\\"\\n                class=\\\"login-btn btn btn-primary form-control\\\" (click)=\\\"onSubmit()\\\">\\n                Login\\n              </button>\\n            </div>\\n\\n            <br />\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6 col-sm-6\\\">\\n                <div class=\\\"contact-form-checkbox\\\">\\n                  <input type=\\\"checkbox\\\" id=\\\"rememberMe\\\" class=\\\"input-checkbox\\\" formControlName=\\\"rememberMe\\\"\\n                    name=\\\"rememberMe\\\">\\n                  <label class=\\\"label-checkbox\\\" for=\\\"rememberMe\\\">\\n                    Remember me\\n                  </label>\\n                </div>\\n              </div>\\n              <div class=\\\"col-6 col-sm-6\\\">\\n                <!-- <div class=\\\"text-right\\\">\\n                  <a class=\\\"f-password\\\" href=\\\"#\\\">\\n                    Forgot Password?\\n                  </a>\\n                </div> -->\\n              </div>\\n            </div>\\n          </form>\\n\\n        </div>\\n        <div class=\\\"login-footer\\\">\\n          <ul>\\n            <!-- <li>About</li>\\n            <li>Privacy</li>\\n            <li><a href=\\\"/terms-and-condition\\\">Terms and Condition</a></li> -->\\n          </ul>\\n        </div>\\n      </div>\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"container-fluid\\\">\\n\\n  <!-- 404 Error Text -->\\n  <div class=\\\"text-center\\\">\\n    <div class=\\\"error mx-auto\\\" data-text=\\\"404\\\">404</div>\\n    <p class=\\\"lead text-gray-800 mb-5\\\">Page Not Found</p>\\n    <p class=\\\"text-gray-500 mb-0\\\">It looks like you found a glitch in the matrix...</p>\\n    <a href=\\\"/\\\">&larr; Back to Dashboard</a>\\n  </div>\\n\\n</div>\\n\";","export default \"<div class=\\\"modal-header {{className}}\\\">\\n  <h4 class=\\\"all-caps\\\">\\n    <span class=\\\"fa-stack fa-md\\\">\\n      <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n      <i class=\\\"fa {{icon}} fa-stack-1x fa-inverse\\\"></i>\\n    </span>\\n    {{title}} \\n  </h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n  <div class=\\\"row\\\">\\n    <div *ngIf=\\\"!isHtml\\\" class=\\\"col-12\\\">\\n      {{message}}\\n    </div>\\n    <div *ngIf=\\\"isHtml\\\" class=\\\"col-12\\\">\\n      <p *ngFor=\\\"let item of items\\\">\\n        {{item}}\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <div *ngIf=\\\"isConfirm\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"confirm()\\\">Confirm</button>\\n  </div>\\n\\n  <div *ngIf=\\\"isOkay\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"okay()\\\">Okay</button>\\n  </div>\\n\\n  <div *ngIf=\\\"isClose\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-{{btnClass}}\\\" (click)=\\\"close()\\\">Close</button>\\n  </div>\\n\\n  <div *ngIf=\\\"isCancel\\\">\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\" id=\\\"outstandingBills\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Outstanding Bills</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n            <div class=\\\"card-body row\\\">\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Holder</label>\\n                  <div class=\\\"col-md-12 col-lg-8\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                  <div class=\\\"col-md-12 col-lg-8\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Currency</label>\\n                  <div class=\\\"col-md-12 col-lg-8\\\">\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" id=\\\"inlineFormCustomSelect\\\">\\n                      <option selected></option>\\n                      <option value=\\\"1\\\">One</option>\\n                    </select>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Invoice Number</label>\\n                  <div class=\\\"col-md-12 col-lg-8\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Receipt Amount</label>\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"from\\\">\\n                  </div>\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"to\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Commission Amount</label>\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"from\\\">\\n                  </div>\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"to\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Withholding Tax</label>\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"from\\\">\\n                  </div>\\n                  <div class=\\\"col-md-12 col-lg-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"to\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                  <label for=\\\"inputEmail3\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Source</label>\\n                  <div class=\\\"col-md-12 col-lg-8\\\">\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" id=\\\"inlineFormCustomSelect\\\">\\n                      <option selected></option>\\n                      <option value=\\\"1\\\">One</option>\\n                    </select>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"btn-group\\\">\\n                  <button class=\\\"btn btn-primary\\\">Apply</button>\\n                  <button class=\\\"btn btn-info\\\">Reset</button>\\n                </div>\\n              </div>\\n\\n        </div>\\n\\n        <div class=\\\"divider\\\"></div>\\n\\n        <div class=\\\"flexitable\\\">\\n\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n            <!-- Position Column -->\\n            <ng-container matColumnDef=\\\"policyHolder\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Holder </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyHolder}} </td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"policyNumber\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n            </ng-container>\\n\\n            <!-- Weight Column -->\\n            <ng-container matColumnDef=\\\"currency\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.currency}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"invoiceNumber\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Invoice Number </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceNumber}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"receiptAmount\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Receipt Amount </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.receiptAmount}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"commissionAmount\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Commission Amount </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.commissionAmount}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"withholdingTax\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Withholding Tax </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.withholdingTax}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"source\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n          </table>\\n        </div>\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n\\n        <div class=\\\"btn-group-table\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">View Details</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Pay</button>\\n        </div>\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #outstandingBills -->\\n\";","export default \"<div mat-dialog-content>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <h6>{{isPostPolicy ? 'Policy' : 'Quotation'}} Number</h6>\\n        <h4>{{number}}</h4>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <h6>Product</h6>\\n        <h4>{{product}}</h4>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <h6>Payment Plan</h6>\\n        <h4>{{payment}}</h4>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div id=\\\"paymentBreakdown\\\" *ngFor=\\\"let payment of payments; let i = index\\\">\\n    <div class=\\\"flexitable\\\">\\n      <table mat-table [dataSource]=\\\"payment.dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"effectivityDate\\\">\\n          <th mat-header-cell *matHeaderCellDef> Receipt Effectivity Date </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.effectivityDate}} </td>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"dueDate\\\">\\n          <th mat-header-cell *matHeaderCellDef> Receipt Due Date </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dueDate}} </td>\\n        </ng-container>\\n\\n        <!-- Weight Column -->\\n        <ng-container matColumnDef=\\\"premium\\\">\\n          <th mat-header-cell *matHeaderCellDef> Premium </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.premium | currency: payment.currencyCode : 'symbol-narrow'}} </td>\\n        </ng-container>\\n\\n        <!-- Symbol Column -->\\n        <ng-container matColumnDef=\\\"netPremium\\\">\\n          <th mat-header-cell *matHeaderCellDef> Net Premium </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.netPremium | currency: payment.currencyCode : 'symbol-narrow'}}\\n          </td>\\n        </ng-container>\\n\\n        <!-- Symbol Column -->\\n        <ng-container matColumnDef=\\\"tax\\\">\\n          <th mat-header-cell *matHeaderCellDef> Tax </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.tax | currency: payment.currencyCode : 'symbol-narrow'}} </td>\\n        </ng-container>\\n\\n        <!-- Symbol Column -->\\n        <ng-container matColumnDef=\\\"commission\\\">\\n          <th mat-header-cell *matHeaderCellDef> Commission </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.commission | currency: payment.currencyCode : 'symbol-narrow'}}\\n          </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"payment.displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: payment.displayedColumns;\\\"></tr>\\n      </table>\\n    </div>\\n\\n    <label class=\\\"show-more\\\" (click)=\\\"toggle(i)\\\">\\n      {{payment.toggleLabel}} <i\\n        [ngClass]=\\\"payment.animationState=='out' ? 'fa fa-angle-double-down' : 'fa fa-angle-double-up'\\\"></i>\\n    </label>\\n\\n    <div [@slideInOut]=\\\"payment.animationState\\\" class=\\\"container-fluid breakdown\\\">\\n\\n      <div *ngIf=\\\"payment.showExchangeRate\\\" class=\\\"alert alert-info note\\\">\\n        Exchange rate: <strong>PHP to {{payment.currencyCode}} is\\n          {{payment.exchangeRate | currency: 'PHP' : 'symbol-narrow'}}</strong>\\n      </div>\\n\\n      <div *ngFor=\\\"let item of payment.paymentBreakdown;\\\" class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-4{{item.abrEco == 'TOTLP' ? ' emphasize' : ''}}\\\">\\n          {{item.nomEco}}\\n        </div>\\n        <div class=\\\"col-4 right{{item.abrEco == 'TOTLP' ? ' emphasize' : ''}}\\\">\\n          {{item.impEco | currency: payment.currencyCode : 'symbol-narrow'}}\\n        </div>\\n        <div class=\\\"clearfix divider\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\\n<div mat-dialog-actions align=\\\"end\\\">\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"close(false)\\\">\\n      Close\\n    </button>\\n    <button *ngIf=\\\"isPostPolicy\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"printPolicy()\\\">\\n      Print Policy\\n    </button>\\n    <button *ngIf=\\\"!isPostPolicy\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"printQuote()\\\">\\n      Print Quote\\n    </button>\\n    <button *ngIf=\\\"!isPostPolicy\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceedToIssuance(line)\\\">\\n      Proceed to Issuance\\n    </button>\\n  </div>\\n</div>\";","export default \"<div id=\\\"paymentBreakdown\\\" class=\\\"card shadow mb-3\\\">\\n  <div class=\\\"card-header\\\">\\n    <strong>Payment Breakdown</strong>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div *ngFor=\\\"let payment of payments; let i = index\\\">\\n      <div class=\\\"flexitable\\\">\\n        <table mat-table [dataSource]=\\\"payment.dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n          <!-- Position Column -->\\n          <ng-container matColumnDef=\\\"effectivityDate\\\">\\n            <th mat-header-cell *matHeaderCellDef> Receipt Effectivity Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.effectivityDate}} </td>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"dueDate\\\">\\n            <th mat-header-cell *matHeaderCellDef> Receipt Due Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dueDate}} </td>\\n          </ng-container>\\n\\n          <!-- Weight Column -->\\n          <ng-container matColumnDef=\\\"premium\\\">\\n            <th mat-header-cell *matHeaderCellDef> Premium </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.premium | currency: payment.currencyCode : 'symbol-narrow'}} </td>\\n          </ng-container>\\n\\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"netPremium\\\">\\n            <th mat-header-cell *matHeaderCellDef> Net Premium </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.netPremium | currency: payment.currencyCode : 'symbol-narrow'}}\\n            </td>\\n          </ng-container>\\n\\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"tax\\\">\\n            <th mat-header-cell *matHeaderCellDef> Tax </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.tax | currency: payment.currencyCode : 'symbol-narrow'}} </td>\\n          </ng-container>\\n\\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"commission\\\">\\n            <th mat-header-cell *matHeaderCellDef> Commission </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.commission | currency: payment.currencyCode : 'symbol-narrow'}}\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"payment.displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: payment.displayedColumns;\\\"></tr>\\n        </table>\\n      </div>\\n\\n      <label class=\\\"show-more\\\" (click)=\\\"toggle(i)\\\">\\n        {{payment.toggleLabel}} <i [ngClass]=\\\"payment.animationState=='out' ? 'fa fa-angle-double-down' : 'fa fa-angle-double-up'\\\"></i>\\n      </label>\\n\\n      <div [@slideInOut]=\\\"payment.animationState\\\" class=\\\"container-fluid breakdown\\\">\\n\\n        <div *ngIf=\\\"payment.showExchangeRate\\\" class=\\\"alert alert-info note\\\">\\n          Exchange rate: <strong>PHP to {{payment.currencyCode}} is\\n            {{payment.exchangeRate | currency: 'PHP' : 'symbol-narrow'}}</strong>\\n        </div>\\n\\n        <div *ngFor=\\\"let item of payment.paymentBreakdown;\\\" class=\\\"row justify-content-center\\\">\\n          <div class=\\\"col-4{{item.abrEco == 'TOTLP' ? ' emphasize' : ''}}\\\">\\n            {{item.nomEco}}\\n          </div>\\n          <div class=\\\"col-4 right{{item.abrEco == 'TOTLP' ? ' emphasize' : ''}}\\\">\\n            {{item.impEco | currency: payment.currencyCode : 'symbol-narrow'}}\\n          </div>\\n          <div class=\\\"clearfix divider\\\"></div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\";","export default \"<div class=\\\"card shadow mb-3\\\" id=\\\"{{type}}_panel\\\">\\n  <div *ngIf=\\\"!optional\\\" class=\\\"card-header\\\">\\n    <strong>{{title}}</strong>\\n  </div>\\n  <div *ngIf=\\\"optional\\\" class=\\\"card-header d-flex justify-content-between optional\\\" (click)=\\\"showContent = !showContent\\\"\\n    matTooltip=\\\"click to show/hide alternative policy holder\\\">\\n    <strong>{{title}}</strong>\\n    <div class=\\\"dropdown no-arrow\\\">\\n      <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n    </div>\\n  </div>\\n  <div class=\\\"card-body\\\" *ngIf=\\\"showContent\\\">\\n    <form [formGroup]=\\\"phForm\\\">\\n      <!-- for quotation -->\\n      <div class=\\\"row\\\" *ngIf=\\\"!isIssuance\\\">\\n        <div class=\\\"col-xl-12\\\">\\n          <h6>Policy Holder</h6>\\n        </div>\\n\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': phForm.controls['name'].invalid \\n                  && (phForm.controls['name'].dirty \\n                  || phForm.controls['name'].touched)}\\\">\\n            <label for=\\\"name\\\">Client's Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control required\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"policyHolder.firstName\\\"\\n              [attr.disabled]=\\\"editMode ? null : true\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"phForm.controls['name'].errors?.required\\\">\\n              * client's name is required\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- for issuance -->\\n      <div class=\\\"row\\\" *ngIf=\\\"isIssuance\\\">\\n        <div class=\\\"col-xl-12\\\">\\n          <h6>Policy Holder</h6>\\n        </div>\\n\\n        <div class=\\\"col-xl-12\\\">\\n          <div class=\\\"alert alert-info note\\\">\\n            <p><strong>Important Reminder:</strong> Click <strong>create</strong> button to create a new policy holder\\n              or click <strong>browse</strong> button to\\n              search an existing policy holder. Document code and type will be automatically filled once you select or\\n              create a policy holder.\\n            </p>\\n          </div>\\n          <!-- .note -->\\n        </div>\\n\\n        <div *ngIf=\\\"optional\\\" class=\\\"col-xl-12\\\">\\n          <div class=\\\"row\\\">\\n            <div *ngIf=\\\"showPrefix\\\" class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"secondaryPolicyHolderPrefix\\\">Prefix (Optional)</label>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"secondaryPolicyHolderPrefix\\\"\\n                  [(ngModel)]=\\\"details.secondaryPolicyHolderPrefix\\\"\\n                  [attr.disabled]=\\\"editMode ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let prefix of prefixLOV\\\" [ngValue]=\\\"prefix.TIP_ASEG_PREF\\\">{{ prefix.NOM_VALOR }}</option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"secondaryPolicyHolderSeparator\\\">Separator</label>\\n                <select class=\\\"custom-select mr-sm-2 {{policyHolder.documentType != undefined && policyHolder.documentType != '' ? 'required' : ''}}\\\"\\n                  formControlName=\\\"secondaryPolicyHolderSeparator\\\"\\n                  [(ngModel)]=\\\"details.secondaryPolicyHolderSeparator\\\"\\n                  [attr.disabled]=\\\"editMode ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let separator of separatorLOV\\\" [ngValue]=\\\"separator.NOM_VALOR\\\">{{ separator.NOM_VALOR }}</option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': phForm.controls['documentType'].invalid \\n                  && (phForm.controls['documentType'].dirty \\n                  || phForm.controls['documentType'].touched)}\\\">\\n            <label for=\\\"documentType\\\">Document Type</label>\\n            <input type=\\\"text\\\" formControlName=\\\"documentType\\\" class=\\\"form-control required {{optional ? '': 'readonly'}}\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"policyHolder.documentType\\\" readonly>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"phForm.controls['documentType'].errors?.required\\\">\\n              * document type is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': phForm.controls['documentCode'].invalid \\n                  && (phForm.controls['documentCode'].dirty \\n                  || phForm.controls['documentCode'].touched)}\\\">\\n            <label for=\\\"documentCode\\\">Document Code</label>\\n            <input type=\\\"text\\\" formControlName=\\\"documentCode\\\" class=\\\"form-control required {{optional ? '': 'readonly'}}\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"policyHolder.documentCode\\\" readonly>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"phForm.controls['documentCode'].errors?.required\\\">\\n              * document code is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"editMode\\\" class=\\\"col-md-12\\\">\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"browse()\\\">Browse</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"create()\\\" *ngIf=\\\"showCreateBtn\\\">Create</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"clear()\\\">Clear</button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n\\n    <div *ngIf=\\\"editMode && showSearch\\\" class=\\\"row\\\">\\n      <div class=\\\"col-xl-12\\\">\\n        <form [formGroup]=\\\"searchForm\\\">\\n          <div class=\\\"form-divider\\\"></div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-4 col-sm-12\\\">\\n              <div class=\\\"form-group input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Search by</label>\\n                </div>\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"policyHolderType\\\" [(ngModel)]=\\\"policyHolderType\\\"\\n                  [attr.disabled]=\\\"type == 'mortgagee' ? '' : null\\\">\\n                  <option value=\\\"P\\\">Person</option>\\n                  <option value=\\\"C\\\">Company/Organization</option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-xl-4\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': searchForm.controls['firstName'].invalid \\n                  && (searchForm.controls['firstName'].dirty \\n                  || searchForm.controls['firstName'].touched)}\\\">\\n                <input type=\\\"text\\\" placeholder=\\\"{{firstNameLabel}}\\\" formControlName=\\\"firstName\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control required\\\" [(ngModel)]=\\\"firstName\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"searchForm.controls['firstName'].errors?.required\\\">\\n                  * {{firstNameError}} is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showLastName\\\" class=\\\"col-xl-4\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': searchForm.controls['lastName'].invalid \\n                  && (searchForm.controls['lastName'].dirty \\n                  || searchForm.controls['lastName'].touched)}\\\">\\n                <input type=\\\"text\\\" placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control required\\\" [(ngModel)]=\\\"lastName\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"searchForm.controls['lastName'].errors?.required\\\">\\n                  * last name is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-xl-12\\\" *ngIf=\\\"showSearchResult\\\">\\n\\n              <mat-table [dataSource]=\\\"dataSource\\\">\\n                <ng-container matColumnDef=\\\"documentType\\\">\\n                  <mat-header-cell *matHeaderCellDef> Document Type </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\">\\n                    {{row.tipDocum}}\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"firstName\\\">\\n                  <mat-header-cell *matHeaderCellDef> First Name </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\">\\n                    {{row.nomTercero}}\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"middleName\\\">\\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'amount-header'\\\"> Middle Name </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\">\\n                    {{row.nom2Tercero}}\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"lastName\\\">\\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'amount-header'\\\"> Last Name </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\">\\n                    {{row.ape2Tercero}}\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"address\\\">\\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'amount-header'\\\"> City Address </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\">\\n                    {{row.dirDomicilioCliente}}\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"action\\\">\\n                  <mat-header-cell *matHeaderCellDef> Document Code </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\">\\n                    <div *ngIf=\\\"type != 'mortgagee'\\\" class=\\\"input-group\\\">\\n                      <input #documentCode (keyup)=\\\"enableAddBtn($event, btn)\\\" \\n                        oninput=\\\"this.value = this.value.toUpperCase()\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <button #btn (click)=\\\"add(row, documentCode)\\\" disabled class=\\\"btn btn-outline-secondary\\\"\\n                          type=\\\"button\\\">Add</button>\\n                      </div>\\n                    </div>\\n                    <button *ngIf=\\\"type == 'mortgagee'\\\" (click)=\\\"add(row)\\\" class=\\\"btn btn-outline-secondary\\\"\\n                      type=\\\"button\\\">{{row.codDocum}}</button>\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n              </mat-table>\\n              <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n            </div>\\n\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button [disabled]=\\\"searchForm.pristine || searchForm.invalid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                  (click)=\\\"searchResult()\\\">Search</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showSearch = !showSearch\\\">Close</button>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\";","export default \"<div class=\\\"row\\\" id=\\\"profile\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-user fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Profile\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"row\\\">\\n\\n      <!-- User Information -->\\n      <div class=\\\"col-xl-12\\\">\\n        <!-- <div class=\\\"col-xl-8 col-lg-7\\\"> -->\\n        <div class=\\\"card shadow mb-4\\\">\\n          <!-- Card Header -->\\n          <div class=\\\"card-header py-3 d-flex flex-row align-items-center justify-content-between\\\">\\n            <h6 class=\\\"m-0 font-weight-bold text-primary\\\">User Information</h6>\\n          </div>\\n          <!-- Card Body -->\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 col-form-label\\\">Agent Code</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentUser.agentCode}}\\\" disabled>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentUser.fullName}}\\\" disabled>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">User Name</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentUser.userName}}\\\" disabled>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Address</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentUser.address}}\\\" disabled>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Password Panel -->\\n      <div *ngIf=\\\"false\\\" class=\\\"col-xl-4 col-lg-5\\\">\\n        <div class=\\\"card shadow mb-4\\\">\\n          <!-- Card Header -->\\n          <div class=\\\"card-header py-3 d-flex flex-row align-items-center justify-content-between\\\">\\n            <h6 class=\\\"m-0 font-weight-bold text-primary\\\">Password</h6>\\n          </div>\\n          <!-- Card Body -->\\n          <div class=\\\"card-body\\\">\\n\\n            <form [formGroup]=\\\"changePasswordForm\\\">\\n              <div class=\\\"form-group row\\\" [ngClass]=\\\"{'input-error': changePasswordForm.controls['oldPassword'].invalid \\n              && (changePasswordForm.controls['oldPassword'].dirty \\n              || changePasswordForm.controls['oldPassword'].touched)}\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"password\\\" class=\\\"form-control required\\\" formControlName=\\\"oldPassword\\\" name=\\\"oldPassword\\\"\\n                    id=\\\"oldPassword\\\" placeholder=\\\"Old Password\\\">\\n                  <p class=\\\"form-error\\\" *ngIf=\\\"changePasswordForm.controls['oldPassword'].errors?.required\\\">\\n                    * old password is required\\n                  </p>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\" [ngClass]=\\\"{'input-error': changePasswordForm.controls['newPassword'].invalid \\n              && (changePasswordForm.controls['newPassword'].dirty \\n              || changePasswordForm.controls['newPassword'].touched)}\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"password\\\" class=\\\"form-control required\\\" formControlName=\\\"newPassword\\\" name=\\\"newPassword\\\"\\n                    id=\\\"newPassword\\\" placeholder=\\\"New Password\\\">\\n                  <p class=\\\"form-error\\\" *ngIf=\\\"changePasswordForm.controls['newPassword'].errors?.required\\\">\\n                    * new password is required\\n                  </p>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\" [ngClass]=\\\"{'input-error': changePasswordForm.controls['confirmPassword'].invalid \\n              && (changePasswordForm.controls['confirmPassword'].dirty \\n              || changePasswordForm.controls['confirmPassword'].touched)}\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"password\\\" class=\\\"form-control required\\\" formControlName=\\\"confirmPassword\\\"\\n                    name=\\\"confirmPassword\\\" id=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\n                  <p class=\\\"form-error\\\" *ngIf=\\\"changePasswordForm.controls['confirmPassword'].errors?.required\\\">\\n                    * confirm password is required\\n                  </p>\\n                  <!-- <p class=\\\"form-error\\\" *ngIf=\\\"changePasswordForm.controls['confirmPassword'].errors?.pattern\\\">\\n                    * confirm password does not match new password\\n                  </p> -->\\n                  <!-- <p class=\\\"form-error\\\" *ngIf=\\\"changePasswordForm.hasError('notSame')\\\">\\n                    * confirm password does not match new password\\n                  </p> -->\\n                </div>\\n              </div>\\n\\n              <p class=\\\"text-muted\\\"><i>* Your password will expire in <strong>{{currentUser.expiryDay}} {{currentUser.expiryDay <= 1 ? 'day' : 'days' }}</strong></i></p>\\n\\n              <div class=\\\"btn-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Confirm</button>\\n              </div>\\n            </form>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #profile -->\\n\";","export default \"<div class=\\\"row\\\" id=\\\"query\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Query</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xl-3 col-md-5 col-sm-12\\\">\\n            <div class=\\\"input-group mb-3\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Options</label>\\n              </div>\\n\\n              <select  value=\\\"{{selectedOption}}\\\" [(ngModel)]=\\\"selectedOption\\\" class=\\\"custom-select mr-sm-2 required\\\" (change)=\\\"onSelectOption(selectedOption)\\\">\\n                <option value=\\\"policy\\\">Policy</option>\\n                <option value=\\\"claims\\\">Claims</option>\\n              </select>\\n            </div>\\n          </div> \\n\\n          <div class=\\\"col-xl-9 col-md-7 col-sm-12\\\">\\n            <div class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control bg-light small\\\" aria-label=\\\"Search\\\"\\n                aria-describedby=\\\"basic-addon2\\\" placeholder=\\\"{{optPlaceholder}}\\\" #inputVal>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"search()\\\">\\n                  <i class=\\\"fas fa-search fa-sm\\\"></i>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #query -->\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quickQuotationAccident\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-shield-alt fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Quick Quotation \\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/accident.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"alert alert-info note\\\">\\n          <p><strong>Important Reminder:</strong> All the amounts shown on the product comparison table are only\\n            estimates and must not be taken as the actual premiums of the products.\\n          </p>\\n        </div>\\n        <!-- .note -->\\n        \\n        <form [formGroup]=\\\"quickQuoteForm\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['subline'].invalid \\n                  && (quickQuoteForm.controls['subline'].dirty \\n                  || quickQuoteForm.controls['subline'].touched)}\\\">\\n                <label for=\\\"subline\\\">Subline</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                  [(ngModel)]=\\\"accidentDetails.subline\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let subline of LOV.sublineLOV\\\" [ngValue]=\\\"subline.COD_RAMO\\\">{{ subline.NOM_RAMO }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['subline'].errors?.required\\\">\\n                  * subline is required\\n                </p>\\n              </div>\\n            </div>\\n            <!-- col-lg-3 col-md-4 col-sm-6 -->\\n            <div class=\\\"clearfix\\\"></div>\\n\\n            <div class=\\\"additional-accident-details\\\" *ngIf=\\\"showDetails\\\">\\n              <div class=\\\"form-divider\\\"></div>\\n              <div class=\\\"col-xl-12\\\">\\n                <h6>Details</h6>\\n              </div>\\n              <!-- .col-xl-12 -->\\n\\n              <div class=\\\"acci-spa col-lg-12\\\" *ngIf=\\\"showSPADetails\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4 col-sm-6\\\">\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['occupationalClass'].invalid \\n                        && (quickQuoteForm.controls['occupationalClass'].dirty \\n                        || quickQuoteForm.controls['occupationalClass'].touched)}\\\">\\n                      <label for=\\\"occupationalClass\\\">Occupational Class</label>\\n                      <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"occupationalClass\\\"\\n                        [(ngModel)]=\\\"accidentDetails.occupationalClass\\\">\\n                        <option selected></option>\\n                        <option *ngFor=\\\"let occupationalClass of LOV.occupationalClassLOV\\\"\\n                          [ngValue]=\\\"occupationalClass.COD_VALOR\\\">\\n                          CLASS {{ occupationalClass.COD_VALOR }} - {{ occupationalClass.NOM_VALOR }}</option>\\n                      </select>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['occupationalClass'].errors?.required\\\">\\n                        * occupational class is required\\n                      </p>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-4 col-sm-6\\\">\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['disablementValue'].invalid \\n                        && (quickQuoteForm.controls['disablementValue'].dirty \\n                        || quickQuoteForm.controls['disablementValue'].touched)}\\\">\\n                      <label for=\\\"disablementValue\\\">Accidental Death and Disablement Value</label>\\n                      <input type=\\\"number\\\" formControlName=\\\"disablementValue\\\" class=\\\"form-control required\\\"\\n                        [(ngModel)]=\\\"accidentDetails.disablementValue\\\">\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['disablementValue'].errors?.required\\\">\\n                        * accidental death and disablement value is required\\n                      </p>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['disablementValue'].errors?.max\\\">\\n                        * accidental death and disablement value must be lower than Php2,000,001.00\\n                      </p>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['disablementValue'].errors?.min\\\">\\n                        * accidental death and disablement value must be higner than Php9,999.00\\n                      </p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"clearfix\\\"></div>\\n                </div>\\n                <!-- .row -->\\n              </div>\\n              <!-- acci-spa col-lg-12 -->\\n\\n              <div class=\\\"acci-hcbi col-lg-12\\\" *ngIf=\\\"showHCBIDetails\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4 col-sm-6\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      Primary Insured\\n                    </label>\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['primaryInsuredAge'].invalid \\n                        && (quickQuoteForm.controls['primaryInsuredAge'].dirty \\n                        || quickQuoteForm.controls['primaryInsuredAge'].touched)}\\\">\\n                      <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"primaryInsuredAge\\\"\\n                        [(ngModel)]=\\\"accidentDetails.primaryInsuredAge\\\">\\n                        <option selected></option>\\n                        <option *ngFor=\\\"let primaryInsuredAge of LOV.ageLOV\\\" [ngValue]=\\\"primaryInsuredAge.value\\\">\\n                          {{ primaryInsuredAge.name }}</option>\\n                      </select>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['primaryInsuredAge'].errors?.required\\\">\\n                        * primary insured is required\\n                      </p>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-4 col-sm-6\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbSpouseAge\\\" formControlName=\\\"cbSpouseAge\\\"\\n                        [(ngModel)]=\\\"accidentDetails.cbSpouseAge\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbSpouseAge\\\">\\n                        Spouse\\n                      </label>\\n                    </div>\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['spouseAge'].invalid \\n                        && (quickQuoteForm.controls['spouseAge'].dirty \\n                        || quickQuoteForm.controls['spouseAge'].touched)}\\\">\\n                      <select class=\\\"custom-select mr-sm-2 required\\\"\\n                        [attr.disabled]=\\\"accidentDetails.cbSpouseAge ? null : ''\\\" formControlName=\\\"spouseAge\\\"\\n                        [(ngModel)]=\\\"accidentDetails.spouseAge\\\">\\n                        <option selected></option>\\n                        <option *ngFor=\\\"let spouseAge of LOV.ageLOV\\\" [ngValue]=\\\"spouseAge.value\\\">\\n                          {{ spouseAge.name }}\\n                        </option>\\n                      </select>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['spouseAge'].errors?.required\\\">\\n                        * spouse is required\\n                      </p>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-4 col-sm-6\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbChildNumber\\\" formControlName=\\\"cbChildNumber\\\"\\n                        [(ngModel)]=\\\"accidentDetails.cbChildNumber\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbChildNumber\\\">\\n                        Child/Children\\n                      </label>\\n                    </div>\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['childNumber'].invalid \\n                        && (quickQuoteForm.controls['childNumber'].dirty \\n                        || quickQuoteForm.controls['childNumber'].touched)}\\\">\\n                      <select class=\\\"custom-select mr-sm-2 required\\\"\\n                        [attr.disabled]=\\\"accidentDetails.cbChildNumber ? null : ''\\\" formControlName=\\\"childNumber\\\"\\n                        [(ngModel)]=\\\"accidentDetails.childNumber\\\">\\n                        <option selected></option>\\n                        <option *ngFor=\\\"let childNumber of LOV.childNumberLOV\\\" [ngValue]=\\\"childNumber.name\\\">{{ childNumber.value }}\\n                        </option>\\n                      </select>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['childNumber'].errors?.required\\\">\\n                        * child/children is required\\n                      </p>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n                <!-- .row -->\\n              </div>\\n              <!-- acci-hcbi col-lg-12 -->\\n            </div>\\n            <!-- .additional-accident-details -->\\n          </div>\\n          <!-- .row -->\\n\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button [disabled]=\\\"quickQuoteForm.pristine || quickQuoteForm.invalid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"quickQuote(accidentDetails)\\\">Generate</button>\\n          </div>\\n          <!-- .btn-group -->\\n          <div class=\\\"clearfix\\\"></div>\\n        </form>\\n        <!-- .quick-quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\" id=\\\"productComparison\\\">\\n    <div class=\\\"product-comparison\\\" *ngIf=\\\"showProductComparison\\\">\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-accident.png\\\" alt=\\\"product-accident\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"accidentData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Packages Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Packages</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Premium Column -->\\n                  <ng-container matColumnDef=\\\"premium\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Premium</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.premium | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"generateCoverage(row)\\\"\\n                    matTooltip=\\\"click to show product coverage\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n          <!-- .row -->\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card  -->\\n\\n      <div id=\\\"productCoverage\\\">\\n        <div class=\\\"card shadow mb-3\\\" *ngIf=\\\"showProductCoverage\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-12\\\">\\n                <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-coverage.png\\\" alt=\\\"product-coverage\\\" />\\n              </div>\\n              <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"flexitable\\\">\\n                  <table mat-table [dataSource]=\\\"coverageData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                    <!-- Position Column -->\\n                    <ng-container matColumnDef=\\\"label\\\">\\n                      <th mat-header-cell *matHeaderCellDef>Limit</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.label\\\"></td>\\n                    </ng-container>\\n\\n                    <!-- Name Column -->\\n                    <ng-container matColumnDef=\\\"premium\\\">\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Premium</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                        {{element.isHeader ? '' : element.premium | currency:'PHP': 'symbol-narrow'}}\\n                      </td>\\n                    </ng-container>\\n\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                  </table>\\n                </div>\\n              </div>\\n              <!-- .col-xl-12 -->\\n            </div>\\n            <!-- .row -->\\n          </div>\\n          <!-- .card-body -->\\n        </div>\\n        <!-- .card  -->\\n      </div>\\n      <!-- #productCoverage -->\\n\\n    </div>\\n    <!-- .product-comparison -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n</div>\\n<!-- #quickQuotationAccident -->\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quickQuotationCar\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-car fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Quick Quotation \\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/car.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"alert alert-info note\\\">\\n          <p><strong>Important Reminder:</strong> All the amounts shown on the product comparison table are only\\n            estimates and must not be taken as the actual premiums of the products.\\n          </p>\\n          <br>\\n          <strong>Fixed Values: </strong>\\n          <ul>\\n            <li>Sum Insured per Passenger: <strong>50,000</strong></li>\\n            <li>VTPL BI : <strong>200,000</strong></li>\\n            <li>VTPL PD : <strong>200,000</strong></li>\\n            <li>LGT : <strong>.75%</strong></li>\\n          </ul>\\n        </div>\\n        <!-- .note -->\\n\\n        <form [formGroup]=\\\"quickQuoteForm\\\" class=\\\"quick-quote-form\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['make'].invalid \\n                && (quickQuoteForm.controls['make'].dirty \\n                || quickQuoteForm.controls['make'].touched)}\\\">\\n                <label for=\\\"make\\\">Make</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"make\\\" (change)=\\\"makeOnchange()\\\"\\n                  [(ngModel)]=\\\"carDetails.make\\\">\\n                  <option *ngFor=\\\"let make of LOV.makeLOV\\\" [ngValue]=\\\"make.COD_MARCA\\\">{{ make.NOM_MARCA }}</option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['make'].errors?.required\\\">\\n                  * make is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['model'].invalid \\n              && (quickQuoteForm.controls['model'].dirty \\n              || quickQuoteForm.controls['model'].touched)}\\\">\\n                <label for=\\\"model\\\">Model</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"model\\\" (change)=\\\"modelOnchange()\\\"\\n                  [(ngModel)]=\\\"carDetails.model\\\" [attr.disabled]=\\\" LOV.modelLOV?.length ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let model of LOV.modelLOV\\\" [ngValue]=\\\"model.COD_MODELO\\\">{{ model.NOM_MODELO }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['model'].errors?.required\\\">\\n                  * model is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['vehicleType'].invalid \\n              && (quickQuoteForm.controls['vehicleType'].dirty \\n              || quickQuoteForm.controls['vehicleType'].touched)}\\\">\\n                <label for=\\\"vehicleType\\\">Vehicle Type</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"vehicleType\\\"\\n                  (change)=\\\"vehicleTypeOnchange()\\\" [(ngModel)]=\\\"carDetails.vehicleType\\\"\\n                  [attr.disabled]=\\\" LOV.vehicleTypeLOV?.length ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let vehicleType of LOV.vehicleTypeLOV\\\" [ngValue]=\\\"vehicleType.COD_TIP_VEHI\\\">\\n                    {{ vehicleType.NOM_TIP_VEHI }}</option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['vehicleType'].errors?.required\\\">\\n                  * vehicle type is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['modelYear'].invalid \\n              && (quickQuoteForm.controls['modelYear'].dirty \\n              || quickQuoteForm.controls['modelYear'].touched)}\\\">\\n                <label for=\\\"modelYear\\\">Model Year</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"modelYear\\\"\\n                  (change)=\\\"modelYearOnchange()\\\" [(ngModel)]=\\\"carDetails.modelYear\\\"\\n                  [attr.disabled]=\\\" LOV.modelYearLOV?.length ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let modelYear of LOV.modelYearLOV\\\" [ngValue]=\\\"modelYear.ANIO_SUB_MODELO\\\">\\n                    {{ modelYear.ANIO_SUB_MODELO }}</option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['modelYear'].errors?.required\\\">\\n                  * model year is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['subModel'].invalid \\n              && (quickQuoteForm.controls['subModel'].dirty \\n              || quickQuoteForm.controls['subModel'].touched)}\\\">\\n                <label for=\\\"subModel\\\">Sub Model</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subModel\\\" (change)=\\\"subModelOnchange()\\\"\\n                  [(ngModel)]=\\\"carDetails.subModel\\\" [attr.disabled]=\\\" LOV.subModelLOV?.length ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let subModel of LOV.subModelLOV\\\" [ngValue]=\\\"subModel.COD_SUB_MODELO\\\">\\n                    {{subModel.NOM_SUB_MODELO + '('+ subModel.TIP_CAJA_CAMBIO+ ') '+ (subModel.NOM_TRACCION == 'UNKNOWN' ? \\\"\\\": subModel.NOM_TRACCION)}}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['subModel'].errors?.required\\\">\\n                  * sub model is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['typeOfUse'].invalid \\n              && (quickQuoteForm.controls['typeOfUse'].dirty \\n              || quickQuoteForm.controls['typeOfUse'].touched)}\\\">\\n                <label for=\\\"typeOfUse\\\">Type of Use</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"typeOfUse\\\"\\n                  (change)=\\\"typeOfUseOnchange()\\\" [(ngModel)]=\\\"carDetails.typeOfUse\\\"\\n                  [attr.disabled]=\\\" LOV.typeOfUseLOV?.length ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let typeOfUse of LOV.typeOfUseLOV\\\" [ngValue]=\\\"typeOfUse.COD_USO_VEHI\\\">\\n                    {{ typeOfUse.NOM_USO_VEHI }}</option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['typeOfUse'].errors?.required\\\">\\n                  * type of use is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['subline'].invalid \\n              && (quickQuoteForm.controls['subline'].dirty \\n              || quickQuoteForm.controls['subline'].touched)}\\\">\\n                <label for=\\\"subline\\\">Subline</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                  (change)=\\\"sublineOnchange($event)\\\" [(ngModel)]=\\\"carDetails.subline\\\"\\n                  [attr.disabled]=\\\" LOV.sublineLOV?.length ? null : true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let subline of LOV.sublineLOV\\\" [ngValue]=\\\"subline.value\\\"\\n                    [attr.data-sublinedate]=\\\"subline.effectivityDate\\\">{{ subline.name }}</option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['subline'].errors?.required\\\">\\n                  * subline is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['vehicleValue'].invalid \\n              && (quickQuoteForm.controls['vehicleValue'].dirty \\n              || quickQuoteForm.controls['vehicleValue'].touched)}\\\">\\n                <label for=\\\"vehicleValue\\\">Vehicle Value</label>\\n                <input type=\\\"text\\\" formControlName=\\\"vehicleValue\\\" class=\\\"form-control required\\\"\\n                  [(ngModel)]=\\\"carDetails.vehicleValue\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['vehicleValue'].errors?.required\\\">\\n                  * vehicle value is required\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n          <!-- .row -->\\n\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button [disabled]=\\\"quickQuoteForm.pristine || quickQuoteForm.invalid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"quickQuote(carDetails)\\\">Generate</button>\\n          </div>\\n          <!-- .btn-group -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n        </form>\\n        <!-- .quick-quote-form -->\\n\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\" id=\\\"productComparison\\\">\\n    <div class=\\\"product-comparison\\\" *ngIf=\\\"showProductComparison\\\">\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-car.png\\\" alt=\\\"product-car\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"annualData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Payment Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Payment</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Compre Column -->\\n                  <ng-container matColumnDef=\\\"compre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Compre</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.compre == 0 ? 'n/a' : element.compre | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- CTPL Column -->\\n                  <ng-container matColumnDef=\\\"ctpl\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> CTPL </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.ctpl == 0 ? 'n/a' : element.ctpl | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Column -->\\n                  <ng-container matColumnDef=\\\"autoCompre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoCompre == 0 ? 'n/a' : element.autoCompre | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Plus Column -->\\n                  <ng-container matColumnDef=\\\"autoComprePlus\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre Plus </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoComprePlus == 0 ? 'n/a' : element.autoComprePlus | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liabilty Regular Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilityRegular\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Regular </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilityRegular == 0 ? 'n/a' : element.autoLiabilityRegular | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Select Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilitySelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilitySelect == 0 ? 'n/a' : element.autoLiabilitySelect | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Select Column -->\\n                  <ng-container matColumnDef=\\\"autoSelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoSelect == 0 || !showAutoSelect ? 'n/a' : element.autoSelect | currency:'PHP': 'symbol-narrow'}} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n          <!-- .row -->\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card  -->\\n\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"payment-img-banner\\\" src=\\\"./assets/images/product-payment.png\\\" alt=\\\"product-payment\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n\\n                <table mat-table [dataSource]=\\\"plan30Data\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Label Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <h6>PLAN 30</h6>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Compre Column -->\\n                  <ng-container matColumnDef=\\\"compre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Compre</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.compre == 0 ? 'n/a' : element.compre | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- CTPL Column -->\\n                  <ng-container matColumnDef=\\\"ctpl\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> CTPL </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.ctpl == 0 ? 'n/a' : element.ctpl | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Column -->\\n                  <ng-container matColumnDef=\\\"autoCompre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoCompre == 0 ? 'n/a' : element.autoCompre | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Plus Column -->\\n                  <ng-container matColumnDef=\\\"autoComprePlus\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre Plus </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoComprePlus == 0 ? 'n/a' : element.autoComprePlus | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilityRegular\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Regular </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilityRegular == 0 ? 'n/a' : element.autoLiabilityRegular | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Select Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilitySelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilitySelect == 0 ? 'n/a' : element.autoLiabilitySelect | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Select Column -->\\n                  <ng-container matColumnDef=\\\"autoSelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoSelect == 0 || !showAutoSelect ? 'n/a' : element.autoSelect | currency:'PHP': 'symbol-narrow'}} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n\\n                <table mat-table [dataSource]=\\\"plan60Data\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Label Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <h6>PLAN 60</h6>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Compre Column -->\\n                  <ng-container matColumnDef=\\\"compre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Compre</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.compre == 0 ? 'n/a' : element.compre | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- CTPL Column -->\\n                  <ng-container matColumnDef=\\\"ctpl\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> CTPL </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.ctpl == 0 ? 'n/a' : element.ctpl | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Column -->\\n                  <ng-container matColumnDef=\\\"autoCompre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoCompre == 0 ? 'n/a' : element.autoCompre | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Plus Column -->\\n                  <ng-container matColumnDef=\\\"autoComprePlus\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre Plus </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoComprePlus == 0 ? 'n/a' : element.autoComprePlus | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Regular Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilityRegular\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Regular </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilityRegular == 0 ? 'n/a' : element.autoLiabilityRegular | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Select Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilitySelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilitySelect == 0 ? 'n/a' : element.autoLiabilitySelect | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Select Column -->\\n                  <ng-container matColumnDef=\\\"autoSelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoSelect == 0 || !showAutoSelect ? 'n/a' : element.autoSelect | currency:'PHP': 'symbol-narrow'}} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"plan90Data\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Label Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <h6>PLAN 90</h6>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Compre Column -->\\n                  <ng-container matColumnDef=\\\"compre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Compre</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.compre == 0 ? 'n/a' : element.compre | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- CTPL Column -->\\n                  <ng-container matColumnDef=\\\"ctpl\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> CTPL </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.ctpl == 0 ? 'n/a' : element.ctpl | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Column -->\\n                  <ng-container matColumnDef=\\\"autoCompre\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoCompre == 0 ? 'n/a' : element.autoCompre | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Plus Column -->\\n                  <ng-container matColumnDef=\\\"autoComprePlus\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Compre Plus </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoComprePlus == 0 ? 'n/a' : element.autoComprePlus | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Regular Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilityRegular\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Regular </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilityRegular == 0 ? 'n/a' : element.autoLiabilityRegular | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Select Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilitySelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Liability Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoLiabilitySelect == 0 ? 'n/a' : element.autoLiabilitySelect | currency:'PHP': 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Auto Select Column -->\\n                  <ng-container matColumnDef=\\\"autoSelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Auto Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.autoSelect == 0 || !showAutoSelect ? 'n/a' : element.autoSelect | currency:'PHP': 'symbol-narrow'}} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n        </div>\\n      </div>\\n      <!-- .card -->\\n\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-coverage.png\\\" alt=\\\"product-coverage\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"coveragelist\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Payment Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Payment</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Compre Column -->\\n                  <ng-container matColumnDef=\\\"compre\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Compre</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.compre\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- CTPL Column -->\\n                  <ng-container matColumnDef=\\\"ctpl\\\">\\n                    <th mat-header-cell *matHeaderCellDef> CTPL </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.ctpl\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Column -->\\n                  <ng-container matColumnDef=\\\"autoCompre\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Auto Compre </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.autoCompre\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Auto Compre Plus Column -->\\n                  <ng-container matColumnDef=\\\"autoComprePlus\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Auto Compre Plus </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.autoComprePlus\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Regular Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilityRegular\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Auto Liabilty Regular </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.autoLiabilityRegular\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Auto Liability Select Column -->\\n                  <ng-container matColumnDef=\\\"autoLiabilitySelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Auto Liability Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.autoLiabilitySelect\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Auto Select Column -->\\n                  <ng-container matColumnDef=\\\"autoSelect\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Auto Select </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.autoSelect\\\"></td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n          <!-- .row -->\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card  -->\\n\\n    </div>\\n    <!-- .showProductComparison -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n</div>\\n<!-- #quickQuotationCar -->\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quickQuotationHome\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-home fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Quick Quotation\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/home.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"alert alert-info note\\\">\\n          <p><strong>Important Reminder:</strong> All the amounts shown on the product comparison table are only\\n            estimates and must not be taken as the actual premiums of the products.\\n          </p>\\n        </div>\\n        <!-- .note -->\\n\\n        <form [formGroup]=\\\"quickQuoteForm\\\" class=\\\"quick-quote-form\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['subline'].invalid \\n                  && (quickQuoteForm.controls['subline'].dirty \\n                  || quickQuoteForm.controls['subline'].touched)}\\\">\\n                <label for=\\\"subline\\\">Subline</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                  [(ngModel)]=\\\"homeDetails.subline\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let subline of LOV.sublineLOV\\\" [ngValue]=\\\"subline.COD_RAMO\\\">{{ subline.NOM_RAMO }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['subline'].errors?.required\\\">\\n                  * subline is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-divider\\\"></div>\\n            <div class=\\\"col-xl-12\\\">\\n              <h6>Coverage</h6>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbBuilding\\\" formControlName=\\\"cbBuilding\\\"\\n                  [(ngModel)]=\\\"homeDetails.cbBuilding\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"cbBuilding\\\">\\n                  Building\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['building'].invalid \\n                && (quickQuoteForm.controls['building'].dirty \\n                || quickQuoteForm.controls['building'].touched)}\\\">\\n                <input class=\\\"form-control required\\\" [attr.disabled]=\\\"homeDetails.cbBuilding ? null : ''\\\" type=\\\"number\\\"\\n                  id=\\\"building\\\" formControlName=\\\"building\\\" [(ngModel)]=\\\"homeDetails.building\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['building'].errors?.required\\\">\\n                  * building is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbContent\\\" formControlName=\\\"cbContent\\\"\\n                  [(ngModel)]=\\\"homeDetails.cbContent\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"cbContent\\\">\\n                  Content\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['content'].invalid \\n                && (quickQuoteForm.controls['content'].dirty \\n                || quickQuoteForm.controls['content'].touched)}\\\">\\n                <input class=\\\"form-control required\\\" [attr.disabled]=\\\"homeDetails.cbContent ? null : ''\\\" type=\\\"number\\\"\\n                  id=\\\"content\\\" formControlName=\\\"content\\\" [(ngModel)]=\\\"homeDetails.content\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['content'].errors?.required\\\">\\n                  * content is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-divider\\\"></div>\\n            <div class=\\\"col-xl-12\\\">\\n              <h6>Content</h6>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\"\\n                  [attr.disabled]=\\\"homeDetails.cbBuilding || homeDetails.cbContent ? null : ''\\\" type=\\\"checkbox\\\"\\n                  id=\\\"cbImprovements\\\" formControlName=\\\"cbImprovements\\\" [(ngModel)]=\\\"homeDetails.cbImprovements\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"cbImprovements\\\">\\n                  Improvements\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['improvements'].invalid \\n                && (quickQuoteForm.controls['improvements'].dirty \\n                || quickQuoteForm.controls['improvements'].touched)}\\\">\\n                <input class=\\\"form-control required\\\"\\n                  [attr.disabled]=\\\"(homeDetails.cbBuilding || homeDetails.cbContent) && homeDetails.cbImprovements ? null : ''\\\"\\n                  type=\\\"number\\\" id=\\\"improvements\\\" formControlName=\\\"improvements\\\" [(ngModel)]=\\\"homeDetails.improvements\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['improvements'].errors?.required\\\">\\n                  * improvements is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\"\\n                  [attr.disabled]=\\\"homeDetails.cbBuilding || homeDetails.cbContent ? null : ''\\\" type=\\\"checkbox\\\"\\n                  id=\\\"cbRelatedBuild\\\" formControlName=\\\"cbRelatedBuild\\\" [(ngModel)]=\\\"homeDetails.cbRelatedBuild\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"cbRelatedBuild\\\">\\n                  Other Related Build\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['relatedBuild'].invalid \\n                && (quickQuoteForm.controls['relatedBuild'].dirty \\n                || quickQuoteForm.controls['relatedBuild'].touched)}\\\">\\n                <input class=\\\"form-control required\\\"\\n                  [attr.disabled]=\\\"(homeDetails.cbBuilding || homeDetails.cbContent) && homeDetails.cbRelatedBuild ? null : ''\\\"\\n                  type=\\\"number\\\" id=\\\"relatedBuild\\\" formControlName=\\\"relatedBuild\\\" [(ngModel)]=\\\"homeDetails.relatedBuild\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['relatedBuild'].errors?.required\\\">\\n                  * related build is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\"\\n                  [attr.disabled]=\\\"homeDetails.cbBuilding || homeDetails.cbContent ? null : ''\\\" type=\\\"checkbox\\\"\\n                  id=\\\"cbRelatedContent\\\" formControlName=\\\"cbRelatedContent\\\" [(ngModel)]=\\\"homeDetails.cbRelatedContent\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"cbRelatedContent\\\">\\n                  Other Related Content\\n                </label>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['relatedContent'].invalid \\n                && (quickQuoteForm.controls['relatedContent'].dirty \\n                || quickQuoteForm.controls['relatedContent'].touched)}\\\">\\n                <input class=\\\"form-control required\\\"\\n                  [attr.disabled]=\\\"(homeDetails.cbBuilding || homeDetails.cbContent) && homeDetails.cbRelatedContent ? null : ''\\\"\\n                  type=\\\"number\\\" id=\\\"relatedContent\\\" formControlName=\\\"relatedContent\\\"\\n                  [(ngModel)]=\\\"homeDetails.relatedContent\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['relatedContent'].errors?.required\\\">\\n                  * related content is required\\n                </p>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <!-- .row -->\\n\\n          <div class=\\\"alert alert-warning note\\\">\\n            <p><strong>Note:</strong> Sum Insured should be higher than 999,999 or lower than 30,000,001. Currently,\\n              your sum insured is\\n              <strong>\\n                {{homeDetails.building--homeDetails.content--homeDetails.improvements--homeDetails.relatedBuild--homeDetails.relatedContent  | currency:'PHP': 'symbol-narrow'}}</strong>\\n            </p>\\n          </div>\\n\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button\\n              [disabled]=\\\"quickQuoteForm.pristine || quickQuoteForm.invalid ||\\n            homeDetails.building--homeDetails.content--homeDetails.improvements--homeDetails.relatedBuild--homeDetails.relatedContent < 1000000 ||\\n            homeDetails.building--homeDetails.content--homeDetails.improvements--homeDetails.relatedBuild--homeDetails.relatedContent > 30000000\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"quickQuote(homeDetails)\\\">Generate</button>\\n          </div>\\n          <!-- .btn-group -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n        </form>\\n        <!-- .quick-quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\" id=\\\"productComparison\\\">\\n    <div class=\\\"product-comparison\\\" *ngIf=\\\"showProductComparison\\\">\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-home.png\\\" alt=\\\"product-home\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"annualData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Payment Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Payment</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Fire Column -->\\n                  <ng-container matColumnDef=\\\"fire\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Fire</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.fire | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Earth Column -->\\n                  <ng-container matColumnDef=\\\"earth\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Earth </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.earth | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Water Column -->\\n                  <ng-container matColumnDef=\\\"water\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Water </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.water | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n          <!-- .row -->\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card  -->\\n\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"payment-img-banner\\\" src=\\\"./assets/images/product-payment.png\\\" alt=\\\"product-payment\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n\\n                <table mat-table [dataSource]=\\\"plan30Data\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Label Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <h6>PLAN 30</h6>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Fire Column -->\\n                  <ng-container matColumnDef=\\\"fire\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Fire</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.fire | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Earth Column -->\\n                  <ng-container matColumnDef=\\\"earth\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Earth </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.earth | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Water Column -->\\n                  <ng-container matColumnDef=\\\"water\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Water </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.water | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n\\n                <table mat-table [dataSource]=\\\"plan60Data\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Label Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <h6>PLAN 60</h6>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Fire Column -->\\n                  <ng-container matColumnDef=\\\"fire\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Fire</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.fire | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Earth Column -->\\n                  <ng-container matColumnDef=\\\"earth\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Earth </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.earth | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Water Column -->\\n                  <ng-container matColumnDef=\\\"water\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Water </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.water | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"plan90Data\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Label Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <h6>PLAN 90</h6>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Fire Column -->\\n                  <ng-container matColumnDef=\\\"fire\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Fire</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.fire | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Earth Column -->\\n                  <ng-container matColumnDef=\\\"earth\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Earth </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.earth | currency:'PHP': 'symbol-narrow'}}</td>\\n                  </ng-container>\\n\\n                  <!-- Water Column -->\\n                  <ng-container matColumnDef=\\\"water\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\"> Water </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.water | currency:'PHP': 'symbol-narrow' }} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n        </div>\\n      </div>\\n      <!-- .card -->\\n\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-coverage.png\\\" alt=\\\"product-coverage\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"coveragelist\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Payment Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Payment</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </td>\\n                  </ng-container>\\n\\n                  <!-- Fire Column -->\\n                  <ng-container matColumnDef=\\\"fire\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Fire</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.fire\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Earth Column -->\\n                  <ng-container matColumnDef=\\\"earth\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Earth</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.earth\\\"></td>\\n                  </ng-container>\\n\\n                  <!-- Water Column -->\\n                  <ng-container matColumnDef=\\\"water\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Water </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.water\\\"></td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n          <!-- .row -->\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card  -->\\n\\n    </div>\\n    <!-- .product-comparison -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n</div>\\n<!-- #quickQuotationHome -->\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quickQuotationTravel\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-plane fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Quick Quotation \\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/travel.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"alert alert-info note\\\">\\n          <p><strong>Important Reminder:</strong> All the amounts shown on the product comparison table are only\\n            estimates and must not be taken as the actual premiums of the products. Family risk should be max of 6 \\n            members and age of children should be from 0-21 years old only. Please also be advised that family is considered\\n            as 1 risk and no multirisk is allowed for quotation. Premiums reflected are based on highest \\n            LGT of 0.75%. For exact premiums based on branch LGT, please proceed to regular quote.\\n          </p>\\n        </div>\\n        <!-- .note -->\\n\\n        <form [formGroup]=\\\"quickQuoteForm\\\" class=\\\"quick-quote-form\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['currency'].invalid \\n                && (quickQuoteForm.controls['currency'].dirty \\n                || quickQuoteForm.controls['currency'].touched)}\\\">\\n                <label for=\\\"currency\\\">Currency</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"currency\\\"\\n                  [(ngModel)]=\\\"travelDetails.currency\\\" (change)=\\\"currencyOnchange()\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let currency of LOV.currencyLOV\\\" [ngValue]=\\\"currency.COD_MON\\\">{{ currency.NOM_MON }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['currency'].errors?.required\\\">\\n                  * currency is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-5 col-md-5 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['country'].invalid \\n                  && (quickQuoteForm.controls['country'].dirty \\n                  || quickQuoteForm.controls['country'].touched)}\\\">\\n                <label for=\\\"country\\\">Itinerary</label>\\n                <ng-select [items]=\\\"LOV.countryLOV\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select Country to visit\\\"\\n                  appendTo=\\\"body\\\" formControlName=\\\"country\\\" multiple=\\\"true\\\" [(ngModel)]=\\\"travelDetails.countries\\\">\\n                </ng-select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['country'].errors?.required\\\">\\n                  * country is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-divider\\\"></div>\\n            <div class=\\\"col-xl-12\\\">\\n              <h6>Travel Information</h6>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['travelPackage'].invalid \\n                && (quickQuoteForm.controls['travelPackage'].dirty \\n                || quickQuoteForm.controls['travelPackage'].touched)}\\\">\\n                <label for=\\\"travelPackage\\\">Travel Package</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"travelPackage\\\"\\n                  [(ngModel)]=\\\"travelDetails.travelPackage\\\" [attr.disabled]=\\\"true\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let package of LOV.packageLOV\\\" [ngValue]=\\\"package.TRAVEL_PACK\\\">{{ package.NOM_VALOR }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['travelPackage'].errors?.required\\\">\\n                  * travel package is required\\n                </p>\\n              </div>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['typeOfCoverage'].invalid \\n                && (quickQuoteForm.controls['typeOfCoverage'].dirty \\n                || quickQuoteForm.controls['typeOfCoverage'].touched)}\\\">\\n                <label for=\\\"typeOfCoverage\\\">Type of Coverage</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"typeOfCoverage\\\"\\n                  [(ngModel)]=\\\"travelDetails.typeOfCoverage\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let coverage of LOV.coverageLOV\\\" [ngValue]=\\\"coverage.INSURANCE_COVERAGE\\\">\\n                    {{ coverage.NOM_VALOR }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['typeOfCoverage'].errors?.required\\\">\\n                  * type of coverage is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"clearfix\\\"></div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['startDate'].invalid \\n                && (quickQuoteForm.controls['startDate'].dirty \\n                || quickQuoteForm.controls['startDate'].touched)}\\\">\\n                <label for=\\\"startDate\\\">Start Date</label>\\n                <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\" [minDate]=\\\"mindate\\\"\\n                  formControlName=\\\"startDate\\\" [(ngModel)]=\\\"travelDetails.startDate\\\" bsDatepicker>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['startDate'].errors?.required\\\">\\n                  * start date is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['endDate'].invalid \\n                && (quickQuoteForm.controls['endDate'].dirty \\n                || quickQuoteForm.controls['endDate'].touched)}\\\">\\n                <label for=\\\"endDate\\\">End Date</label>\\n                <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\" [minDate]=\\\"endDateMinDate\\\"\\n                  formControlName=\\\"endDate\\\" [(ngModel)]=\\\"travelDetails.endDate\\\" bsDatepicker\\n                  [attr.disabled]=\\\"enableEndDate ? null : ''\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['endDate'].errors?.required\\\">\\n                  * end date is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['noOfDays'].invalid \\n                && (quickQuoteForm.controls['noOfDays'].dirty \\n                || quickQuoteForm.controls['noOfDays'].touched)}\\\">\\n                <label for=\\\"noOfDays\\\">No. of Days</label>\\n                <input class=\\\"form-control required\\\" id=\\\"noOfDays\\\" formControlName=\\\"noOfDays\\\"\\n                  [(ngModel)]=\\\"travelDetails.noOfDays\\\" [attr.disabled]=\\\"true\\\">\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['noOfDays'].errors?.required\\\">\\n                  * number of days is required\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"clearfix\\\"></div>\\n\\n            <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quickQuoteForm.controls['ageRange'].invalid \\n                && (quickQuoteForm.controls['ageRange'].dirty \\n                || quickQuoteForm.controls['ageRange'].touched)}\\\">\\n                <label for=\\\"ageRange\\\">Select the range of the eldest insured from the list</label>\\n                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"ageRange\\\"\\n                  [(ngModel)]=\\\"travelDetails.ageRange\\\">\\n                  <option selected></option>\\n                  <option *ngFor=\\\"let ageRange of LOV.ageRangeLOV\\\" [ngValue]=\\\"ageRange.AGE_RANGE\\\">\\n                    {{ ageRange.NOM_VALOR }}\\n                  </option>\\n                </select>\\n                <p class=\\\"form-error\\\" *ngIf=\\\"quickQuoteForm.controls['ageRange'].errors?.required\\\">\\n                  * age range is required\\n                </p>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <!-- .row -->\\n\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button [disabled]=\\\"quickQuoteForm.pristine || quickQuoteForm.invalid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"quickQuote(travelDetails)\\\">Generate</button>\\n          </div>\\n          <!-- .btn-group -->\\n\\n          <div class=\\\"clearfix\\\"></div>\\n        </form>\\n        <!-- .quick-quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\" id=\\\"productComparison\\\">\\n    <div class=\\\"product-comparison\\\" *ngIf=\\\"showProductComparison\\\">\\n      <div class=\\\"card shadow mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-travel.png\\\" alt=\\\"product-travel\\\" />\\n            </div>\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"flexitable\\\">\\n                <table mat-table [dataSource]=\\\"travelData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                  <!-- Position Column -->\\n                  <ng-container matColumnDef=\\\"label\\\">\\n                    <th mat-header-cell *matHeaderCellDef>Limit</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\">{{element.label}}</td>\\n                  </ng-container>\\n\\n                  <!-- Name Column -->\\n                  <ng-container matColumnDef=\\\"complete\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Travel Complete</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.complete == null ? 'n/a' : element.complete | currency: element.currency: 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Weight Column -->\\n                  <ng-container matColumnDef=\\\"personalAssistance\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Travel Assist with Personal Assistance</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.personalAssistance == null ? 'n/a' : element.personalAssistance | currency: element.currency: 'symbol-narrow'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <!-- Symbol Column -->\\n                  <ng-container matColumnDef=\\\"assist\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Travel Assist Only</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                      {{element.assist == null ? 'n/a' : element.assist | currency: element.currency: 'symbol-narrow' }}\\n                    </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"generateCoverage(row)\\\"\\n                    matTooltip=\\\"click to show product coverage\\\"></tr>\\n\\n                </table>\\n              </div>\\n            </div>\\n            <!-- .col-xl-12 -->\\n          </div>\\n          <!-- .row -->\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card  -->\\n\\n      <div id=\\\"productCoverage\\\">\\n        <div class=\\\"card shadow mb-3\\\" *ngIf=\\\"showProductCoverage\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-12\\\">\\n                <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/product-coverage.png\\\" alt=\\\"product-coverage\\\" />\\n              </div>\\n              <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"flexitable\\\">\\n                  <table mat-table [dataSource]=\\\"coverageData\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                    <!-- Position Column -->\\n                    <ng-container matColumnDef=\\\"label\\\">\\n                      <th mat-header-cell *matHeaderCellDef>Limit</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.label\\\"></td>\\n                    </ng-container>\\n\\n                    <!-- Name Column -->\\n                    <ng-container matColumnDef=\\\"complete\\\">\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Travel Complete</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                        {{element.isHeader && (element.code != '330' && element.code != '332') ? '' : element.complete == null ? 'n/a' : element.complete == 0 ? element.isHeader ? '' : 'actual cost' : element.complete | currency: element.currency: 'symbol-narrow'}}\\n                      </td>\\n                    </ng-container>\\n\\n                    <!-- Weight Column -->\\n                    <ng-container matColumnDef=\\\"personalAssistance\\\">\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Travel Assist with Personal Assistance</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                        {{element.isHeader && (element.code != '330' && element.code != '332') ? '' : element.personalAssistance == null ? 'n/a' : element.personalAssistance == 0 ? element.isHeader ? '' : 'actual cost' : element.personalAssistance | currency: element.currency: 'symbol-narrow'}}\\n                      </td>\\n                    </ng-container>\\n\\n                    <!-- Symbol Column -->\\n                    <ng-container matColumnDef=\\\"assist\\\">\\n                      <th mat-header-cell *matHeaderCellDef class=\\\"amount\\\">Travel Assist Only</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"amount\\\">\\n                        {{element.isHeader && (element.code != '330' && element.code != '332') ? '' : element.assist == null ? 'n/a' : element.assist == 0 ? element.isHeader ? '' : 'actual cost' : element.assist | currency: element.currency: 'symbol-narrow' }}\\n                      </td>\\n                    </ng-container>\\n\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n                  </table>\\n                </div>\\n              </div>\\n              <!-- .col-xl-12 -->\\n            </div>\\n            <!-- .row -->\\n          </div>\\n          <!-- .card-body -->\\n        </div>\\n        <!-- .card  -->\\n      </div>\\n      <!-- #productCoverage -->\\n\\n    </div>\\n    <!-- .showProductComparison -->\\n\\n  </div>\\n  <!-- #quickQuotationTravel -->\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quotationAccident\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-shield-alt fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        {{pageLabel}}\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/accident.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"clearfix\\\"></div>\\n        <form [formGroup]=\\\"quoteForm\\\">\\n\\n          <div *ngIf='isIssuance' class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Individual Policy</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <label class=\\\"input-group-text\\\" for=\\\"quotationNumber\\\">Quotation Number</label>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Quotation Number here..\\\"\\n                      formControlName=\\\"quotationNumber\\\" [(ngModel)]=\\\"accidentDetails.quotationNumber\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <button [disabled]=\\\"disableLoadBtn\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"loadQuotation()\\\"\\n                        type=\\\"button\\\">Load</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Business Line</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['subline'].invalid \\n                    && (quoteForm.controls['subline'].dirty \\n                    || quoteForm.controls['subline'].touched)}\\\">\\n                    <label for=\\\"subline\\\">Subline</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                      [(ngModel)]=\\\"accidentDetails.subline\\\"\\n                      (change)=\\\"sublineOnChange()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let subline of LOV.sublineLOV\\\" [ngValue]=\\\"subline.COD_RAMO\\\">{{ subline.NOM_RAMO }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['subline'].errors?.required\\\">\\n                      * subline is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <app-group-policy #appGroupPolicy\\n            [subline]=\\\"accidentDetails.subline\\\"\\n            [prevDetails]=\\\"prevAccidentDetails\\\"\\n            [groupPolicy]=\\\"groupPolicy\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [showExpiring]=\\\"false\\\"\\n            [(changedValues)]=\\\"changedValues\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-group-policy>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>General Information</strong>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Movement Dates</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['effectivityDate'].invalid \\n                    && (quoteForm.controls['effectivityDate'].dirty \\n                    || quoteForm.controls['effectivityDate'].touched)}\\\">\\n                    <label for=\\\"effectivityDate\\\">Effectivity Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                      (bsValueChange)=\\\"affecting('effectivityDate', 'Effectivity Date')\\\"\\n                      formControlName=\\\"effectivityDate\\\"\\n                      [(ngModel)]=\\\"accidentDetails.effectivityDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"\\n                      bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['effectivityDate'].errors?.required\\\">\\n                      * effectivity date is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['expiryDate'].invalid \\n                    && (quoteForm.controls['expiryDate'].dirty \\n                    || quoteForm.controls['expiryDate'].touched)}\\\">\\n                    <label for=\\\"expiryDate\\\">Expiry Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                      [minDate]=\\\"expiryDateMinDate\\\"\\n                      (bsValueChange)=\\\"affecting('expiryDate', 'Expirty Date')\\\"\\n                      formControlName=\\\"expiryDate\\\"\\n                      [(ngModel)]=\\\"accidentDetails.expiryDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"\\n                      bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['expiryDate'].errors?.required\\\">\\n                      * expiry date is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <app-policy-holder #appPolicyHolder\\n            [title]=\\\"'Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"accidentDetails\\\"\\n            [(policyHolder)]=\\\"policyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'primary'\\\"\\n            [optional]=\\\"false\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-policy-holder>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Insured Details</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Personal Information</h6>\\n                </div>\\n              </div>\\n\\n              <div formArrayName=\\\"insured\\\">\\n                <div *ngFor=\\\"let ins of quoteForm.get('insured')['controls']; let i=index\\\">\\n                  <div [formGroupName]=\\\"i\\\" class=\\\"card insured-card\\\">\\n                    <div class=\\\"card-body\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['firstName'].invalid \\n                              && (ins.controls['firstName'].dirty \\n                              || ins.controls['firstName'].touched)}\\\">\\n                            <label for=\\\"firstName\\\">First Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control required\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['firstName'].errors?.required\\\">\\n                              * first name is required\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"middleName\\\">Middle Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"middleName\\\" class=\\\"form-control\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['lastName'].invalid \\n                              && (ins.controls['lastName'].dirty \\n                              || ins.controls['lastName'].touched)}\\\">\\n                            <label for=\\\"lastName\\\">Last Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control required\\\"\\n                             oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                             [attr.disabled]=\\\"editMode ? null : true\\\">\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['lastName'].errors?.required\\\">\\n                              * last name is required\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"commercialStructure\\\">Suffix</label>\\n                            <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"suffix\\\"\\n                              (change)=\\\"suffixOnChange(ins)\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                              <option></option>\\n                              <option *ngFor=\\\"let suffix of LOV.suffixLOV\\\" [ngValue]=\\\"suffix.TIPO_SUFIJO_NOMBRE\\\">{{ suffix.NOM_VALOR }}</option>\\n                            </select>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['gender'].invalid \\n                              && (ins.controls['gender'].dirty \\n                              || ins.controls['gender'].touched)}\\\">\\n                            <label for=\\\"gender\\\">Gender</label>\\n                            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"gender\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                              <option></option>\\n                              <option [ngValue]=\\\"1\\\">MALE</option>\\n                              <option [ngValue]=\\\"0\\\">FEMALE</option>\\n                            </select>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['gender'].errors?.required\\\">\\n                              * gender is required\\n                            </p>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['relationship'].invalid \\n                          && (ins.controls['relationship'].dirty \\n                          || ins.controls['relationship'].touched)}\\\">\\n                            <label for=\\\"relationship\\\">Relationship</label>\\n                            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"relationship\\\"\\n                              (change)=\\\"relationshipOnChange(ins)\\\"\\n                              [attr.disabled]=\\\"editMode && LOV.relationshipLOV?.length && i != 0 && editMode? null: true\\\">\\n                              <option \\n                                *ngFor=\\\"let relationship of LOV.relationshipLOV\\\"\\n                                [attr.disabled]=\\\"relationship.disabled ? '' : null\\\"\\n                                [ngValue]=\\\"relationship.COD_VALOR\\\">\\n                                {{ relationship.NOM_VALOR }}</option>\\n                            </select>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['relationship'].errors?.required\\\">\\n                              * relationship is required\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['birthDate'].invalid \\n                              && (ins.controls['birthDate'].dirty \\n                              || ins.controls['birthDate'].touched)}\\\">\\n                            <label for=\\\"birthDate\\\">Birth Date</label>\\n                            <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                              [maxDate]=\\\"ins.controls['bdaymaxdate'].value\\\" [minDate]=\\\"ins.controls['bdaymindate'].value\\\"\\n                              formControlName=\\\"birthDate\\\" bsDatepicker\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['birthDate'].errors?.required\\\">\\n                              * birth date is required\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-lg-12\\\">\\n                          <div class=\\\"form-check\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbWithHealthDeclaration{{i}}\\\"\\n                              formControlName=\\\"cbWithHealthDeclaration\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\"\\n                              (change)=\\\"cbWithHealthDeclarationOnChange(ins)\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"cbWithHealthDeclaration{{i}}\\\">\\n                              With Health Declaration\\n                            </label>\\n                          </div>\\n                          <label class=\\\"form-check-label\\\" for=\\\"cbWithHealthDeclaration\\\">\\n                            Declare Pre-existing Illness\\n                          </label>\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['preExistingIllness'].invalid \\n                              && (ins.controls['preExistingIllness'].dirty \\n                              || ins.controls['preExistingIllness'].touched)}\\\">\\n                            <textarea class=\\\"form-control required\\\"\\n                              [attr.disabled]=\\\"ins.controls['cbWithHealthDeclaration'].value && editMode ? null : ''\\\" type=\\\"text\\\"\\n                              id=\\\"preExistingIllness\\\" formControlName=\\\"preExistingIllness\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"></textarea>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['preExistingIllness'].errors?.required\\\">\\n                              * please indicate pre-existing illness\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['occupationalClass'].invalid \\n                              && (ins.controls['occupationalClass'].dirty \\n                              || ins.controls['occupationalClass'].touched)}\\\">\\n                            <label for=\\\"occupationalClass\\\">Occupational Class</label>\\n                            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"occupationalClass\\\"\\n                              (change)=\\\"occupationalClassOnchange(ins)\\\"\\n                              [attr.disabled]=\\\"LOV.occupationalClassLOV?.length && editMode? null : true\\\">\\n                              <option></option>\\n                              <option *ngFor=\\\"let occupationalClass of LOV.occupationalClassLOV\\\"\\n                                [ngValue]=\\\"occupationalClass.COD_VALOR\\\">CLASS {{ occupationalClass.COD_VALOR }} - {{ occupationalClass.NOM_VALOR }}</option>\\n                            </select>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['occupationalClass'].errors?.required\\\">\\n                              * occupational class is required\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['occupation'].invalid \\n                              && (ins.controls['occupation'].dirty \\n                              || ins.controls['occupation'].touched)}\\\">\\n                            <label for=\\\"occupation\\\">Occupation</label>\\n                            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"occupation\\\"\\n                              (change)=\\\"occupationOnchange(ins)\\\"\\n                              [attr.disabled]=\\\"ins.controls['occupationList'].value.length && editMode? null : true\\\">\\n                              <option></option>\\n                              <option *ngFor=\\\"let occupation of ins.controls['occupationList'].value\\\" [ngValue]=\\\"occupation.COD_VALOR\\\">\\n                                {{ occupation.NOM_VALOR }}</option>\\n                            </select>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['occupation'].errors?.required\\\">\\n                              * occupation is required\\n                            </p>\\n                          </div>\\n                        </div>\\n        \\n                        <div class=\\\"col-lg-12\\\" *ngIf=\\\"ins.controls['showOtherOccupation'].value\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"occupation\\\">\\n                            Declare Other Occupation\\n                          </label>\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': ins.controls['otherOccupation'].invalid \\n                              && (ins.controls['otherOccupation'].dirty \\n                              || ins.controls['otherOccupation'].touched)}\\\">\\n                            <textarea class=\\\"form-control required\\\" type=\\\"text\\\"\\n                              id=\\\"otherOccupation\\\" formControlName=\\\"otherOccupation\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"ins.controls['otherOccupation'].errors?.required\\\">\\n                              * please indicate other occupation\\n                            </p>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"clearfix\\\"></div>\\n                        <div class=\\\"col-lg-12\\\">\\n                          <div class=\\\"btn-group\\\" *ngIf=\\\"i > 0 && editMode\\\">\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"removeInsured(i)\\\">Remove</button>\\n                          </div>\\n                        </div>\\n\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div *ngIf=\\\"insuredHeadCount <= 5 && showHCBIDetails\\\" class=\\\"btn-group\\\">\\n                <button [disabled]=\\\"!editMode || quoteForm.get('insured').status !== 'VALID'\\\" type=\\\"button\\\"\\n                  (click)=\\\"addInsured(false)\\\" class=\\\"btn btn-primary\\\">Add Insured Individual</button>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\" *ngIf=\\\"showSPADetails\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Accidental Death / Disablement Detail</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['disablementValue'].invalid \\n                        && (quoteForm.controls['disablementValue'].dirty \\n                        || quoteForm.controls['disablementValue'].touched)}\\\">\\n                    <label for=\\\"disablementValue\\\">Accidental Death and Disablement Value</label>\\n                    <input type=\\\"number\\\" formControlName=\\\"disablementValue\\\" class=\\\"form-control required\\\"\\n                        [(ngModel)]=\\\"accidentDetails.disablementValue\\\"\\n                        [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['disablementValue'].errors?.required\\\">\\n                      * accidental death and disablement value is required\\n                    </p>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['disablementValue'].errors?.max\\\">\\n                      * accidental death and disablement value must be lower than Php2,000,001.00\\n                    </p>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['disablementValue'].errors?.min\\\">\\n                      * accidental death and disablement value must be higner than Php9,999.00\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <app-payment-breakdown\\n            *ngIf=\\\"showPaymentBreakdown\\\"\\n            #appPaymentBreakdown\\n            [paymentReceipt]=\\\"paymentReceipt\\\"\\n            [paymentBreakdown]=\\\"paymentBreakdown\\\"\\n            [showExchangeRate]=\\\"false\\\"\\n            [loadBreakdown]=\\\"triggerBreakdown\\\">\\n          </app-payment-breakdown>\\n\\n          <app-fixed-coverages\\n            *ngIf=\\\"showCoverage\\\"\\n            [line]=\\\"'accident'\\\"\\n            [coverageList]=\\\"coverageList\\\"\\n            [loadCoverage]=\\\"triggerCoverage\\\">\\n          </app-fixed-coverages>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Product</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['product'].invalid \\n                    && (quoteForm.controls['product'].dirty \\n                    || quoteForm.controls['product'].touched)}\\\">\\n                    <label for=\\\"product\\\">Product List</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"product\\\"\\n                      [(ngModel)]=\\\"accidentDetails.product\\\"\\n                      [attr.disabled]=\\\"LOV.productListLOV?.length && editMode? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let product of LOV.productListLOV\\\" [ngValue]=\\\"product.COD_MODALIDAD\\\">\\n                        {{ product.NOM_MODALIDAD }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['product'].errors?.required\\\">\\n                      * product list is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n         <!-- button controls for quotation -->\\n         <div *ngIf=\\\"!isIssuance\\\">\\n          <div *ngIf=\\\"showGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button\\n              *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n            <button\\n              *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"proceed(1)\\\">Generate</button>\\n          </div>\\n          <div *ngIf=\\\"showIssueQuoteBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button *ngIf=\\\"!editMode\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"manageBtn(1)\\\">Edit Details</button>\\n            <button\\n              *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Issue Quote</button>\\n            <button\\n              *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"proceed(2)\\\">Issue Quote</button>\\n          </div>\\n          <div *ngIf=\\\"showProceedToIssuanceBtn\\\" class=\\\"text-right\\\">\\n            <h5><small>Your quotation number:</small> {{accidentDetails.quotationNumber}}</h5>\\n          </div>\\n          <div *ngIf=\\\"showProceedToIssuanceBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button type=\\\"button\\\" (click)=\\\"newQuote()\\\" class=\\\"btn btn-primary\\\">New Quote</button>\\n            <button type=\\\"button\\\" (click)=\\\"printQuote()\\\" class=\\\"btn btn-primary\\\">Print Quote</button>\\n            <button type=\\\"button\\\" (click)=\\\"proceedToIssuance()\\\" class=\\\"btn btn-primary\\\">Proceed to Issuance</button>\\n          </div>\\n        </div>\\n\\n        <!-- button controls for issuance -->\\n        <div *ngIf=\\\"isIssuance\\\">\\n          <div *ngIf=\\\"(showSaveBtn && withTechControl) || (showPostBtn && withTechControl)\\\">\\n            <div class=\\\"alert alert-warning note\\\">\\n              <p>\\n                <strong>Quotation has tech control!</strong> Unable to issue policy.\\n              </p>\\n            </div>\\n            <!-- .note -->\\n            <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"showNewPolicyBtn\\\">\\n            <div class=\\\"alert alert-danger note\\\">\\n              <p>\\n                <strong>Quotation has error!</strong> Unable to issue policy.\\n              </p>\\n            </div>\\n            <!-- .note -->\\n            <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"showIssuanceGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button\\n              *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n            <button\\n              *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"proceed(1)\\\">Generate</button>\\n          </div>\\n\\n          <div *ngIf=\\\"showSaveBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button *ngIf=\\\"!editMode\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"manageBtn(1)\\\">Edit Details</button>\\n            <button\\n              *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Save</button>\\n            <button\\n              *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"proceed(3)\\\">Save</button>\\n          </div>\\n\\n          <div *ngIf=\\\"showPostBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button *ngIf=\\\"!editMode\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"editMode = !editMode\\\">Edit Details</button>\\n            <button\\n              *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Post</button>\\n            <button\\n              *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"proceed(4)\\\">Post</button>\\n          </div>\\n\\n          <div *ngIf=\\\"showPrintBtn\\\" class=\\\"text-right\\\">\\n            <h5><small>Your policy number:</small> {{accidentDetails.policyNumber}}</h5>\\n          </div>\\n          <div *ngIf=\\\"showPrintBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"newPolicy()\\\">New Policy</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"printPolicy()\\\">Print</button>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n        </form>\\n        <!-- .quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #quotationAccident -->\\n\\n<ng-template #proceedModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Are you sure you want to proceed?</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have changes to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of changedValues\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n    <h6>Changes may affect your premium and will create a new quotation.</h6>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Cancel\\n      </button>\\n      <button *ngIf=\\\"data.generateBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"issueQuote('S')\\\">\\n        Generate\\n      </button>\\n      <button *ngIf=\\\"data.saveBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"savePolicy()\\\">\\n        Save\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #validationModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Your application is incomplete</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have invalid/empty data to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of invalidForms\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Okay\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quotationCar\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-car fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        {{pageLabel}}\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/car.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\" id=\\\"topDiv\\\">\\n        <form [formGroup]=\\\"quoteForm\\\" class=\\\"regular-quote-form\\\">\\n\\n          <div *ngIf='isIssuance' class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Individual Policy</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <label class=\\\"input-group-text\\\" for=\\\"quotationNumber\\\">Quotation Number</label>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Quotation Number here..\\\"\\n                      formControlName=\\\"quotationNumber\\\" [(ngModel)]=\\\"carDetails.quotationNumber\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <button [disabled]=\\\"disableLoadBtn\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"loadQuotation()\\\"\\n                        type=\\\"button\\\">Load</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Vehicle Information</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Risk Details</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['make'].invalid \\n                    && (quoteForm.controls['make'].dirty \\n                    || quoteForm.controls['make'].touched)}\\\">\\n                    <label for=\\\"make\\\">Make</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"make\\\"\\n                      (change)=\\\"makeOnchange(); affecting('make', 'Make')\\\"\\n                      [(ngModel)]=\\\"carDetails.make\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.makeLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let make of LOV.makeLOV\\\" [ngValue]=\\\"make.COD_MARCA\\\">{{ make.NOM_MARCA }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['make'].errors?.required\\\">\\n                      * make is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['model'].invalid \\n                  && (quoteForm.controls['model'].dirty \\n                  || quoteForm.controls['model'].touched)}\\\">\\n                    <label for=\\\"model\\\">Model</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"model\\\"\\n                      (change)=\\\"modelOnchange(); affecting('model', 'Model')\\\"\\n                      [(ngModel)]=\\\"carDetails.model\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.modelLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let model of LOV.modelLOV\\\" [ngValue]=\\\"model.COD_MODELO\\\">{{ model.NOM_MODELO }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['model'].errors?.required\\\">\\n                      * model is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['vehicleType'].invalid \\n                  && (quoteForm.controls['vehicleType'].dirty \\n                  || quoteForm.controls['vehicleType'].touched)}\\\">\\n                    <label for=\\\"vehicleType\\\">Vehicle Type</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"vehicleType\\\"\\n                      (change)=\\\"vehicleTypeOnchange(); affecting('vehicleType', 'Vehicle Type')\\\"\\n                      [(ngModel)]=\\\"carDetails.vehicleType\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.vehicleTypeLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let vehicleType of LOV.vehicleTypeLOV\\\" [ngValue]=\\\"vehicleType.COD_TIP_VEHI\\\">\\n                        {{ vehicleType.NOM_TIP_VEHI }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['vehicleType'].errors?.required\\\">\\n                      * vehicle type is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['modelYear'].invalid \\n                  && (quoteForm.controls['modelYear'].dirty \\n                  || quoteForm.controls['modelYear'].touched)}\\\">\\n                    <label for=\\\"modelYear\\\">Model Year</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"modelYear\\\"\\n                      (change)=\\\"modelYearOnchange(); affecting('modelYear', 'Model Year')\\\"\\n                      [(ngModel)]=\\\"carDetails.modelYear\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.modelYearLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let modelYear of LOV.modelYearLOV\\\" [ngValue]=\\\"modelYear.ANIO_SUB_MODELO\\\">\\n                        {{ modelYear.ANIO_SUB_MODELO }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['modelYear'].errors?.required\\\">\\n                      * model year is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['subModel'].invalid \\n                  && (quoteForm.controls['subModel'].dirty \\n                  || quoteForm.controls['subModel'].touched)}\\\">\\n                    <label for=\\\"subModel\\\">Sub Model</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subModel\\\"\\n                      (change)=\\\"subModelOnchange(); affecting('subModel', 'Sub Model')\\\"\\n                      [(ngModel)]=\\\"carDetails.subModel\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.subModelLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let subModel of LOV.subModelLOV\\\" [ngValue]=\\\"subModel.COD_SUB_MODELO\\\">\\n                        {{subModel.NOM_SUB_MODELO + '('+ subModel.TIP_CAJA_CAMBIO+ ') '+ (subModel.NOM_TRACCION == 'UNKNOWN' ? \\\"\\\": subModel.NOM_TRACCION)}}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['subModel'].errors?.required\\\">\\n                      * sub model is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['typeOfUse'].invalid \\n                  && (quoteForm.controls['typeOfUse'].dirty \\n                  || quoteForm.controls['typeOfUse'].touched)}\\\">\\n                    <label for=\\\"typeOfUse\\\">Type of Use</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"typeOfUse\\\"\\n                      (change)=\\\"typeOfUseOnchange(); affecting('typeOfUse', 'Type of Use')\\\"\\n                      [(ngModel)]=\\\"carDetails.typeOfUse\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.typeOfUseLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let typeOfUse of LOV.typeOfUseLOV\\\" [ngValue]=\\\"typeOfUse.COD_USO_VEHI\\\">\\n                        {{ typeOfUse.NOM_USO_VEHI }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['typeOfUse'].errors?.required\\\">\\n                      * type of use is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['subline'].invalid \\n                  && (quoteForm.controls['subline'].dirty \\n                  || quoteForm.controls['subline'].touched)}\\\">\\n                    <label for=\\\"subline\\\">Subline</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                      (change)=\\\"sublineOnchange($event); affecting('subline', 'Subline')\\\"\\n                      [(ngModel)]=\\\"carDetails.subline\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.sublineLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let subline of LOV.sublineLOV\\\" [ngValue]=\\\"subline.value\\\"\\n                        [attr.data-sublinedate]=\\\"subline.effectivityDate\\\">{{ subline.name }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['subline'].errors?.required\\\">\\n                      * subline is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['vehicleValue'].invalid \\n                  && (quoteForm.controls['vehicleValue'].dirty \\n                  || quoteForm.controls['vehicleValue'].touched)}\\\">\\n                    <label for=\\\"vehicleValue\\\">Vehicle Value</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"vehicleValue\\\" class=\\\"form-control required\\\"\\n                      (change)=\\\"affecting('vehicleValue', 'Vehicle Value')\\\"\\n                      [(ngModel)]=\\\"carDetails.vehicleValue\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['vehicleValue'].errors?.required\\\">\\n                      * vehicle value is required\\n                    </p>\\n                  </div>\\n                </div>\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Vehicle Information</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['color'].invalid \\n                    && (quoteForm.controls['color'].dirty \\n                    || quoteForm.controls['color'].touched)}\\\">\\n                    <label for=\\\"color\\\">Color</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"color\\\"\\n                      [(ngModel)]=\\\"carDetails.color\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option *ngFor=\\\"let color of LOV.colorLOV\\\" [ngValue]=\\\"color.COD_COLOR\\\">{{ color.NOM_COLOR }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['color'].errors?.required\\\">\\n                      * color is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['areaOfUsage'].invalid \\n                    && (quoteForm.controls['areaOfUsage'].dirty \\n                    || quoteForm.controls['areaOfUsage'].touched)}\\\">\\n                    <label for=\\\"areaOfUsage\\\">Area of Usage</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"areaOfUsage\\\"\\n                      [(ngModel)]=\\\"carDetails.areaOfUsage\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.areaOfUsageLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let areaOfUsage of LOV.areaOfUsageLOV\\\" [ngValue]=\\\"areaOfUsage.COD_VALOR\\\">\\n                        {{ areaOfUsage.NOM_VALOR }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['areaOfUsage'].errors?.required\\\">\\n                      * area of usage is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['conductionNumber'].invalid \\n                  && (quoteForm.controls['conductionNumber'].dirty \\n                  || quoteForm.controls['conductionNumber'].touched)}\\\">\\n                    <label for=\\\"conductionNumber\\\">Conduction Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"conductionNumber\\\" class=\\\"form-control\\\" \\n                      [ngClass]=\\\"{'required' : (carDetails.plateNumber === undefined\\n                      || carDetails.plateNumber === null\\n                      || carDetails.plateNumber === '')\\n                      && carDetails.subline !== 120}\\\"\\n                      [(ngModel)]=\\\"carDetails.conductionNumber\\\"\\n                      (change)=\\\"affecting('conductionNumber', 'Conduction Number')\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['conductionNumber'].errors?.required\\\">\\n                      * conduction number is required\\n                    </p>\\n                    <p class=\\\"form-error\\\"\\n                      *ngIf=\\\"quoteForm.controls['conductionNumber'].errors?.invalidConductionNumber\\\">\\n                      * conduction number is invalid\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['plateNumber'].invalid \\n                  && (quoteForm.controls['plateNumber'].dirty \\n                  || quoteForm.controls['plateNumber'].touched)}\\\">\\n                    <label for=\\\"plateNumber\\\">Plate Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"plateNumber\\\" class=\\\"form-control\\\"\\n                      [ngClass]=\\\"{'required' : (carDetails.conductionNumber === undefined\\n                      || carDetails.conductionNumber === null\\n                      || carDetails.conductionNumber === '')\\n                      && carDetails.subline !== 120}\\\" \\n                      [(ngModel)]=\\\"carDetails.plateNumber\\\"\\n                      (change)=\\\"affecting('plateNumber', 'Plate Number')\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode && (LOV.sublineLOV?.length && LOV.modelYearLOV?.length) ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['plateNumber'].errors?.required\\\">\\n                      * plate number is required\\n                    </p>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['plateNumber'].errors?.invalidPlateNumber\\\">\\n                      * plate number is invalid\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['serialNumber'].invalid \\n                  && (quoteForm.controls['serialNumber'].dirty \\n                  || quoteForm.controls['serialNumber'].touched)}\\\">\\n                    <label for=\\\"serialNumber\\\">Chassis Number/Serial Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"serialNumber\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"carDetails.serialNumber\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['serialNumber'].errors?.required\\\">\\n                      * serial number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['engineNumber'].invalid \\n                  && (quoteForm.controls['engineNumber'].dirty \\n                  || quoteForm.controls['engineNumber'].touched)}\\\">\\n                    <label for=\\\"engineNumber\\\">Motor Number/Engine Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"engineNumber\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"carDetails.engineNumber\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['engineNumber'].errors?.required\\\">\\n                      * engine number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!-- <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['mvFileNumber'].invalid \\n                    && (quoteForm.controls['mvFileNumber'].dirty \\n                    || quoteForm.controls['mvFileNumber'].touched)}\\\">\\n                    <label for=\\\"mvFileNumber\\\">MV File Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"mvFileNumber\\\" class=\\\"form-control {{isIssuance ? 'required' : ''}}\\\"\\n                      [(ngModel)]=\\\"carDetails.mvFileNumber\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['mvFileNumber'].errors?.required\\\">\\n                        * MV File Number is required\\n                      </p>\\n                  </div>\\n                </div> -->\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"mvFileNumber\\\">MV File Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"mvFileNumber\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"carDetails.mvFileNumber\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"purchaseDate\\\">Purchase Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [maxDate]=\\\"today\\\"\\n                      formControlName=\\\"purchaseDate\\\" [(ngModel)]=\\\"carDetails.purchaseDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"\\n                      bsDatepicker>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['receivedBy'].invalid \\n                  && (quoteForm.controls['receivedBy'].dirty \\n                  || quoteForm.controls['receivedBy'].touched)}\\\">\\n                    <label for=\\\"receivedBy\\\">Received By</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"receivedBy\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"carDetails.receivedBy\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['receivedBy'].errors?.required\\\">\\n                      * received by is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['receivedDate'].invalid \\n                      && (quoteForm.controls['receivedDate'].dirty \\n                      || quoteForm.controls['receivedDate'].touched)}\\\">\\n                    <label for=\\\"receivedDate\\\">Received Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\" [maxDate]=\\\"today\\\"\\n                      formControlName=\\\"receivedDate\\\" [(ngModel)]=\\\"carDetails.receivedDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"\\n                      bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['receivedDate'].errors?.required\\\">\\n                      * received date is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <app-policy-holder\\n            #appPolicyHolder\\n            [title]=\\\"'Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"carDetails\\\"\\n            [(policyHolder)]=\\\"policyHolder\\\"\\n            [compareTo]=\\\"assigneePolicyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'primary'\\\"\\n            [optional]=\\\"false\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-policy-holder>\\n\\n          <app-policy-holder\\n            *ngIf=\\\"isIssuance\\\"\\n            [title]=\\\"'Alternative Policy Holder (Optional)'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"carDetails\\\"\\n            [(policyHolder)]=\\\"secondaryPolicyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'secondary'\\\"\\n            [optional]=\\\"true\\\">\\n          </app-policy-holder>\\n\\n          <app-group-policy\\n            #appGroupPolicy\\n            [subline]=\\\"carDetails.subline\\\"\\n            [prevDetails]=\\\"prevCarDetails\\\"\\n            [groupPolicy]=\\\"groupPolicy\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [showExpiring]=\\\"true\\\"\\n            [(changedValues)]=\\\"changedValues\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-group-policy>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>General Information</strong>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Movement Dates</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['effectivityDate'].invalid \\n                    && (quoteForm.controls['effectivityDate'].dirty \\n                    || quoteForm.controls['effectivityDate'].touched)}\\\">\\n                    <label for=\\\"effectivityDate\\\">Effectivity Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                      (bsValueChange)=\\\"affecting('effectivityDate', 'Effectivity Date')\\\"\\n                      formControlName=\\\"effectivityDate\\\"\\n                      [(ngModel)]=\\\"carDetails.effectivityDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"\\n                      bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['effectivityDate'].errors?.required\\\">\\n                      * effectivity date is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['expiryDate'].invalid \\n                    && (quoteForm.controls['expiryDate'].dirty \\n                    || quoteForm.controls['expiryDate'].touched)}\\\">\\n                    <label for=\\\"expiryDate\\\">Expiry Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                      [minDate]=\\\"expiryDateMinDate\\\"\\n                      (bsValueChange)=\\\"affecting('expiryDate', 'Expirty Date')\\\"\\n                      formControlName=\\\"expiryDate\\\"\\n                      [(ngModel)]=\\\"carDetails.expiryDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"\\n                      bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['expiryDate'].errors?.required\\\">\\n                      * expiry date is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\"\\n              (click)=\\\"showAccessories = !showAccessories\\\" matTooltip=\\\"click to show/hide accessories\\\">\\n              <strong>Accessories (Optional)</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showAccessories\\\">\\n\\n              <div formArrayName=\\\"accessories\\\">\\n                <div *ngFor=\\\"let accessories of quoteForm.get('accessories')['controls']; let i=index\\\">\\n                  <div [formGroupName]=\\\"i\\\" class=\\\"card accessory-card\\\">\\n                    <div class=\\\"card-body\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-10 col-md-9\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': accessories.controls['accessory'].invalid \\n                                && (accessories.controls['accessory'].dirty \\n                                || accessories.controls['accessory'].touched)}\\\">\\n                                <label for=\\\"accessory\\\">Accessory List</label>\\n                                <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"accessory\\\"\\n                                  (change)=\\\"accessoryOnchange($event, i)\\\"\\n                                  [attr.disabled]=\\\"editMode ? null : true\\\">\\n                                  <option *ngFor=\\\"let accessoryList of LOV.accessoryListLOV\\\"\\n                                    [ngValue]=\\\"accessoryList.COD_ACCESORIO\\\"\\n                                    [attr.disabled]=\\\"accessoryList.disabled ? '' : null\\\"\\n                                    [attr.data-price]=\\\"accessoryList.IMP_ACCESORIO\\\"\\n                                    [attr.data-type]=\\\"accessoryList.ABR_AGRUP_ACCESORIO\\\">\\n                                    {{ accessoryList.NOM_ACCESORIO }}\\n                                    ( {{ \\n                                      accessoryList.ABR_AGRUP_ACCESORIO == 'A' ? 'Additional' :\\n                                      accessoryList.ABR_AGRUP_ACCESORIO == 'B' ? 'Built-in' : 'Free'\\n                                    }} )</option>\\n                                </select>\\n                                <p class=\\\"form-error\\\" *ngIf=\\\"accessories.controls['accessory'].errors?.required\\\">\\n                                  * accessory list is required\\n                                </p>\\n                              </div>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': accessories.controls['accessoryType'].invalid \\n                                && (accessories.controls['accessoryType'].dirty \\n                                || accessories.controls['accessoryType'].touched)}\\\">\\n                                <label for=\\\"accessoryType\\\">Accessory Type</label>\\n                                <input type=\\\"text\\\" formControlName=\\\"accessoryType\\\" class=\\\"form-control required\\\"\\n                                  readonly>\\n                                <p class=\\\"form-error\\\" *ngIf=\\\"accessories.controls['accessoryType'].errors?.required\\\">\\n                                  * accessory type is required\\n                                </p>\\n                              </div>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': accessories.controls['price'].invalid \\n                                && (accessories.controls['price'].dirty \\n                                || accessories.controls['price'].touched)}\\\">\\n                                <label for=\\\"price\\\">Price</label>\\n                                <input type=\\\"number\\\"  class=\\\"form-control required\\\"\\n                                  formControlName=\\\"price\\\"\\n                                  [attr.disabled]=\\\"editMode ? null : true\\\">\\n                                <p class=\\\"form-error\\\" *ngIf=\\\"accessories.controls['price'].errors?.required\\\">\\n                                  * price is required\\n                                </p>\\n                              </div>\\n                            </div>\\n\\n                            <div class=\\\"col-md-12\\\">\\n                              <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': accessories.controls['description'].invalid \\n                                && (accessories.controls['description'].dirty \\n                                || accessories.controls['description'].touched)}\\\">\\n                                <label for=\\\"description\\\">Description</label>\\n                                <textarea type=\\\"text\\\" formControlName=\\\"description\\\"\\n                                  class=\\\"form-control required\\\"\\n                                  [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                                <p class=\\\"form-error\\\" *ngIf=\\\"accessories.controls['description'].errors?.required\\\">\\n                                  * description is required\\n                                </p>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-lg-2 col-md-3\\\">\\n                          <div *ngIf=\\\"editMode\\\" class=\\\"btn-group\\\">\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"removeAccessory(i)\\\">Remove</button>\\n                          </div>\\n                        </div>\\n\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"btn-group\\\">\\n                <button [disabled]=\\\"!editMode || quoteForm.get('accessories').status !== 'VALID' || !carDetails.subline\\\"\\n                  type=\\\"button\\\" (click)=\\\"addAccessory()\\\" class=\\\"btn btn-primary\\\">Add Accessory</button>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\"\\n              (click)=\\\"showAdditionalInformation = !showAdditionalInformation\\\"\\n              matTooltip=\\\"click to show/hide additional policy information\\\">\\n              <strong>Additional Policy Information (Optional)</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showAdditionalInformation\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Additional Vehicle Information</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-9\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"customRiskName\\\">Custom Risk Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carDetails.customRiskName\\\"\\n                      formControlName=\\\"customRiskName\\\">\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"seatingCapacity\\\">Seating Capacity</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                      (change)=\\\"affecting('seatingCapacity', 'Seating Capacity')\\\"\\n                      [(ngModel)]=\\\"carDetails.seatingCapacity\\\"\\n                      formControlName=\\\"seatingCapacity\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"weight\\\">Weight</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carDetails.weight\\\" formControlName=\\\"weight\\\"\\n                      readonly>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"displacement\\\">Displacement</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carDetails.displacement\\\"\\n                      formControlName=\\\"displacement\\\" readonly>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"classification\\\">Classification</label>\\n                    <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"classification\\\"\\n                      [(ngModel)]=\\\"carDetails.classification\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let classification of LOV.classificationLOV\\\"\\n                        [ngValue]=\\\"classification.TIP_VEHI_PESO\\\">{{ classification.NOM_VALOR }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"price\\\">Coverage Area</label>\\n                    <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"coverageArea\\\"\\n                      (change)=\\\"affecting('coverageArea', 'Coverage Area')\\\"\\n                      [(ngModel)]=\\\"carDetails.coverageArea\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let coverageArea of LOV.coverageAreaLOV\\\" [ngValue]=\\\"coverageArea.COD_AREA_COVER\\\">\\n                        {{ coverageArea.NOM_VALOR }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['assuredsCoinsuranceShare'].invalid \\n                  && (quoteForm.controls['assuredsCoinsuranceShare'].dirty \\n                  || quoteForm.controls['assuredsCoinsuranceShare'].touched)}\\\">\\n                    <label for=\\\"assuredCoinsuranceShare\\\">Assured's Coinsurance Share</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carDetails.assuredsCoinsuranceShare\\\"\\n                      formControlName=\\\"assuredsCoinsuranceShare\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['assuredsCoinsuranceShare'].errors?.max\\\">\\n                      * assured's coinsurance share max value is 100\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbWaivedMinPremium\\\"\\n                        (change)=\\\"affecting('cbWaivedMinPremium', 'Waived Min. Premium')\\\"\\n                        [(ngModel)]=\\\"carDetails.cbWaivedMinPremium\\\"\\n                        formControlName=\\\"cbWaivedMinPremium\\\"\\n                        [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbWaivedMinPremium\\\">\\n                        Waived Min. Premium\\n                      </label>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div *ngIf=\\\"isIssuance\\\" class=\\\"col-xl-12\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"form-divider\\\"></div>\\n\\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <div class=\\\"form-check\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbPolicyOnlyDriver\\\"\\n                            [(ngModel)]=\\\"carDetails.cbPolicyOnlyDriver\\\" formControlName=\\\"cbPolicyOnlyDriver\\\"\\n                            [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"cbPolicyOnlyDriver\\\">\\n                            Is the Policy Holder the only Driver?\\n                          </label>\\n                        </div>\\n                      </div>\\n                    </div>\\n    \\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <div class=\\\"form-check\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbPolicyOwner\\\"\\n                            [(ngModel)]=\\\"carDetails.cbPolicyOwner\\\" formControlName=\\\"cbPolicyOwner\\\"\\n                            [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"cbPolicyOwner\\\">\\n                            Is the Policy Holder the Owner?\\n                          </label>\\n                        </div>\\n                      </div>\\n                    </div>\\n    \\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <div class=\\\"form-check\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbHasAssignee\\\"\\n                            [(ngModel)]=\\\"carDetails.cbHasAssignee\\\"\\n                            formControlName=\\\"cbHasAssignee\\\"\\n                            (change)=\\\"showAssignee = !showAssignee\\\"\\n                            [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"cbHasAssignee\\\">\\n                            Has Assignee?\\n                          </label>\\n                        </div>\\n                      </div>\\n                    </div>\\n    \\n                    <div class=\\\"form-divider\\\"></div>\\n    \\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['mortgageClause'].invalid \\n                      && (quoteForm.controls['mortgageClause'].dirty \\n                      || quoteForm.controls['mortgageClause'].touched)}\\\">\\n                        <div class=\\\"form-check\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbVehicleMortgaged\\\"\\n                            [(ngModel)]=\\\"carDetails.cbVehicleMortgaged\\\"\\n                            formControlName=\\\"cbVehicleMortgaged\\\"\\n                            (change)=\\\"showMortgagee = !showMortgagee\\\"\\n                            [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"cbVehicleMortgaged\\\">\\n                            Vehicle Mortgaged\\n                          </label>\\n                        </div>\\n                        <label class=\\\"form-check-label\\\" for=\\\"mortgageClause\\\">\\n                          Mortgage Clause\\n                        </label>\\n                        <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"mortgageClause\\\"\\n                          [attr.disabled]=\\\"editMode && carDetails.cbVehicleMortgaged ? null : ''\\\"\\n                          [(ngModel)]=\\\"carDetails.mortgageClause\\\">\\n                          <option></option>\\n                          <option *ngFor=\\\"let mortgageClause of LOV.mortgageClauseLOV\\\"\\n                            [ngValue]=\\\"mortgageClause.TIP_MORT_CLAUSE\\\">{{ mortgageClause.NOM_VALOR }}</option>\\n                        </select>\\n                        <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['mortgageClause'].errors?.required\\\">\\n                          * mortgage clause is required\\n                        </p>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Other Details</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbGlassEtchingEntitled\\\"\\n                        [(ngModel)]=\\\"carDetails.cbGlassEtchingEntitled\\\" formControlName=\\\"cbGlassEtchingEntitled\\\"\\n                        [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbGlassEtchingEntitled\\\">\\n                        Glass Etching Entitled\\n                      </label>\\n                    </div>\\n                    <label class=\\\"form-check-label\\\" for=\\\"glassEtchingAvailmentDate\\\">\\n                      Glass Etching Availment Date\\n                    </label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\" [minDate]=\\\"today\\\"\\n                      [attr.disabled]=\\\"editMode && carDetails.cbGlassEtchingEntitled ? null : ''\\\"\\n                      formControlName=\\\"glassEtchingAvailmentDate\\\" [(ngModel)]=\\\"carDetails.glassEtchingAvailmentDate\\\"\\n                      bsDatepicker>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbPrepaidPremium\\\"\\n                        [(ngModel)]=\\\"carDetails.cbPrepaidPremium\\\" formControlName=\\\"cbPrepaidPremium\\\"\\n                        [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbPrepaidPremium\\\">\\n                        Prepaid Premium\\n                      </label>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Inspection Details</h6>\\n                </div>\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"alert alert-info note\\\">\\n                    <p><strong>Important Reminder:</strong> Only fill up the following details when advised by the\\n                      UNDERWRITER.\\n                    </p>\\n                  </div>\\n                  <!-- .note -->\\n                </div>\\n\\n                <div class=\\\"col-md-8\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"existingDamages\\\">Existing Damages</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carDetails.existingDamages\\\"\\n                      formControlName=\\\"existingDamages\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"price\\\">Inspection Assessment</label>\\n                    <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"inspectionAssessment\\\"\\n                      [(ngModel)]=\\\"carDetails.inspectionAssessment\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let inspectionAssessment of LOV.inspectionAssessmentLOV\\\"\\n                        [ngValue]=\\\"inspectionAssessment.COD_VALOR\\\">{{ inspectionAssessment.NOM_VALOR }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <app-policy-holder\\n            *ngIf=\\\"isIssuance && showAssignee\\\"\\n            [title]=\\\"'Assignee Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"carDetails\\\"\\n            [(policyHolder)]=\\\"assigneePolicyHolder\\\"\\n            [compareTo]=\\\"policyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'assignee'\\\"\\n            [optional]=\\\"false\\\">\\n          </app-policy-holder>\\n\\n          <app-policy-holder\\n            *ngIf=\\\"isIssuance && showMortgagee\\\"\\n            [title]=\\\"'Mortgagee Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"false\\\"\\n            [details]=\\\"carDetails\\\"\\n            [(policyHolder)]=\\\"mortgageePolicyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'mortgagee'\\\"\\n            [optional]=\\\"false\\\">\\n          </app-policy-holder>\\n\\n          <div *ngIf='isIssuance' class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\" (click)=\\\"showSubAgent = !showSubAgent\\\"\\n              matTooltip=\\\"click to show/hide subagents\\\">\\n              <strong>Subagent (Optional)</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showSubAgent\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                  <h6>Subagent List</h6>\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['subAgents'].invalid \\n                      && (quoteForm.controls['subAgents'].dirty \\n                      || quoteForm.controls['subAgents'].touched)}\\\">\\n                    <ng-select [items]=\\\"LOV.subagentLOV\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select Subagent\\\" appendTo=\\\"body\\\"\\n                      formControlName=\\\"subAgents\\\" multiple=\\\"true\\\" [(ngModel)]=\\\"carDetails.subAgents\\\">\\n                    </ng-select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['subAgents'].errors?.required\\\">\\n                      * subagent is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"isIssuance && showCTPL\\\" class=\\\"card shadow mb-3\\\" id=\\\"CTPLAuth\\\">\\n            <!-- <div *ngIf=\\\"isIssuance\\\" class=\\\"card shadow mb-3\\\" id=\\\"CTPLAuth\\\"> -->\\n            <div class=\\\"card-header\\\">\\n              <strong>CTPL Authentication (for products with CTPL)</strong>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['automaticAuth'].invalid \\n                    && (quoteForm.controls['automaticAuth'].dirty \\n                    || quoteForm.controls['automaticAuth'].touched)}\\\">\\n                    <label for=\\\"automaticAuth\\\">Automatic Authentication</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"automaticAuth\\\"\\n                      [(ngModel)]=\\\"carDetails.automaticAuth\\\">\\n                      <option value=\\\"S\\\">YES</option>\\n                      <option value=\\\"N\\\">NO</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['automaticAuth'].errors?.required\\\">\\n                      * automatic authentication is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['registrationType'].invalid \\n                    && (quoteForm.controls['registrationType'].dirty \\n                    || quoteForm.controls['registrationType'].touched)}\\\">\\n                    <label for=\\\"registrationType\\\">Registration Type</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"registrationType\\\"\\n                      [(ngModel)]=\\\"carDetails.registrationType\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let rType of LOV.registrationTypeLOV\\\" [ngValue]=\\\"rType.COD_VALOR\\\">\\n                        {{ rType.NOM_VALOR }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['registrationType'].errors?.required\\\">\\n                      * registration type is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"mvType\\\">MV Type (leave blank to set default value)</label>\\n                    <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"mvType\\\" [(ngModel)]=\\\"carDetails.mvType\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let mv of LOV.mvTypeLOV\\\" [ngValue]=\\\"mv.COD_VALOR\\\">{{ mv.NOM_VALOR }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['cocNumber'].invalid \\n                  && (quoteForm.controls['cocNumber'].dirty \\n                  || quoteForm.controls['cocNumber'].touched)}\\\">\\n                    <label for=\\\"cocNumber\\\">COC Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"cocNumber\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"carDetails.cocNumber\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['cocNumber'].errors?.required\\\">\\n                      * coc number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-sm-8\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['authNumber'].invalid \\n                    && (quoteForm.controls['authNumber'].dirty \\n                    || quoteForm.controls['authNumber'].touched)}\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbIsNotRequiredAuthNumber\\\"\\n                        formControlName=\\\"cbIsNotRequiredAuthNumber\\\" [(ngModel)]=\\\"carDetails.cbIsNotRequiredAuthNumber\\\"\\n                        (change)=\\\"cbIsNotRequiredAuthNumberChange()\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbIsNotRequiredAuthNumber\\\">\\n                        Do not require Authentication Number\\n                      </label>\\n                    </div>\\n                    <label class=\\\"form-check-label\\\" for=\\\"cbIsNotRequiredAuthNumber\\\">\\n                      Authentication Number (ISAP Authentication)\\n                    </label>\\n                    <div class=\\\"input-group mb-3\\\">\\n                      <input type=\\\"text\\\" formControlName=\\\"authNumber\\\"\\n                        [attr.disabled]=\\\"carDetails.cbIsNotRequiredAuthNumber ? '' : null\\\" class=\\\"form-control required\\\"\\n                        [(ngModel)]=\\\"carDetails.authNumber\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <button (click)=\\\"authCOCRegistration()\\\" [attr.disabled]=\\\"carDetails.cbIsNotRequiredAuthNumber ? '' : null\\\"\\n                          class=\\\"btn btn-primary\\\" type=\\\"button\\\">Authenticate</button>\\n                      </div>\\n                      <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['authNumber'].errors?.required\\\">\\n                        * authentication number is required\\n                      </p>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- cannot use reference variable and ngIf -->\\n          <app-coverages\\n            *ngIf=\\\"showCoverage\\\"\\n            [carDetails]=\\\"carDetails\\\"\\n            [(showCTPL)]=\\\"showCTPL\\\"\\n            [quoteForm]=\\\"quoteForm\\\"\\n            [coverageList]=\\\"coverageList\\\"\\n            [coverageVariable]=\\\"coverageVariable\\\"\\n            [amountList]=\\\"amountList\\\"\\n            [premiumAmount]=\\\"premiumAmount\\\"\\n            [coverageAmount]=\\\"coverageAmount\\\"\\n            [coverageVariableData]=\\\"coverageVariableData\\\"\\n            [isModifiedCoverage]=\\\"isModifiedCoverage\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [hasRoadAssist]=\\\"hasRoadAssist\\\"\\n            [loadCoverage]=\\\"triggerCoverage\\\">\\n          </app-coverages>\\n\\n          <app-payment-breakdown\\n            *ngIf=\\\"showPaymentBreakdown\\\"\\n            #appPaymentBreakdown\\n            [paymentReceipt]=\\\"paymentReceipt\\\"\\n            [paymentBreakdown]=\\\"paymentBreakdown\\\"\\n            [showExchangeRate]=\\\"false\\\"\\n            [loadBreakdown]=\\\"triggerBreakdown\\\">\\n          </app-payment-breakdown>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Product</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Product Data</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['paymentMethod'].invalid \\n                        && (quoteForm.controls['paymentMethod'].dirty \\n                        || quoteForm.controls['paymentMethod'].touched)}\\\">\\n                    <label for=\\\"paymentMethod\\\">Payment Method</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"paymentMethod\\\"\\n                      [(ngModel)]=\\\"carDetails.paymentMethod\\\"\\n                      (change)=\\\"affecting('paymentMethod', 'Payment Method')\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.paymentMethodLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let paymentMethod of LOV.paymentMethodLOV\\\"\\n                        [ngValue]=\\\"paymentMethod.COD_FRACC_PAGO\\\">\\n                        {{ paymentMethod.NOM_FRACC_PAGO }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['paymentMethod'].errors?.required\\\">\\n                      * payment method is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['product'].invalid \\n                        && (quoteForm.controls['product'].dirty \\n                        || quoteForm.controls['product'].touched)}\\\">\\n                    <label for=\\\"product\\\">Product List</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"product\\\"\\n                      [(ngModel)]=\\\"carDetails.productList\\\"\\n                      (change)=\\\"affecting('productList', 'Product List')\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.productListLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let product of LOV.productListLOV\\\" [ngValue]=\\\"product.COD_MODALIDAD\\\">\\n                        {{ product.NOM_MODALIDAD }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['product'].errors?.required\\\">\\n                      * product list is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined\\\" class=\\\"alert alert-warning note\\\">\\n            <p>\\n              <strong>Required:</strong> You need to fill out Alternative Policy holder <strong>Separator</strong>.\\n              Scroll to <button class=\\\"btn btn-warning\\\" (click)=\\\"scrollTo('secondary_panel')\\\">Alternative</button>\\n            </p>\\n          </div>\\n          <!-- .note -->\\n\\n          <div *ngIf=\\\"carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')\\\" class=\\\"alert alert-warning note\\\">\\n            <p>\\n              <strong>Required:</strong> You are required to add <strong>Assignee</strong>.\\n              Scroll to <button class=\\\"btn btn-warning\\\" (click)=\\\"scrollTo('assignee_panel')\\\">Assignee</button>\\n            </p>\\n          </div>\\n          <!-- .note -->\\n\\n          <div *ngIf=\\\"carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == '')\\\" class=\\\"alert alert-warning note\\\">\\n            <p>\\n              <strong>Required:</strong> You are required to add <strong>Mortgagee</strong>. \\n              Scroll to <button class=\\\"btn btn-warning\\\" (click)=\\\"scrollTo('mortgagee_panel')\\\">Mortgagee</button>\\n            </p>\\n          </div>\\n          <!-- .note -->\\n\\n          <!-- button controls for quotation -->\\n          <div *ngIf=\\\"!isIssuance\\\">\\n            <div *ngIf=\\\"showGenerateBtnGrp\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n              <button *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceed(1)\\\">Generate</button>\\n            </div>\\n  \\n            <div *ngIf=\\\"showIssueQuoteBtnGrp\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"manageBtn(1)\\\">Edit Details</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"manageBtn(1, true)\\\">Edit Coverage</button>\\n              <button\\n                [disabled]=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(2)\\\">Issue Quote</button>\\n            </div>\\n  \\n            <div *ngIf=\\\"showProceedToIssuanceBtnGrp\\\" class=\\\"text-right\\\">\\n              <h5><small>Your quotation number:</small> {{carDetails.quotationNumber}}</h5>\\n            </div>\\n            <div *ngIf=\\\"showProceedToIssuanceBtnGrp\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" (click)=\\\"newQuote()\\\" class=\\\"btn btn-primary\\\">New Quote</button>\\n              <button type=\\\"button\\\" (click)=\\\"printQuote()\\\" class=\\\"btn btn-primary\\\">Print Quote</button>\\n              <button type=\\\"button\\\" (click)=\\\"proceedToIssuance()\\\" class=\\\"btn btn-primary\\\">Proceed to Issuance</button>\\n            </div>\\n          </div>\\n\\n          <!-- button controls for issuance -->\\n          <div *ngIf=\\\"isIssuance\\\">\\n            <div *ngIf=\\\"(showSaveBtn && withTechControl) || (showPostBtn && withTechControl)\\\">\\n              <div class=\\\"alert alert-warning note\\\">\\n                <p>\\n                  <strong>Quotation has tech control!</strong> Unable to issue policy.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showNewPolicyBtn\\\">\\n              <div class=\\\"alert alert-danger note\\\">\\n                <p>\\n                  <strong>Quotation has error!</strong> Unable to issue policy.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showIssuanceGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button \\n                *ngIf=\\\"\\n                  quoteForm.invalid ||\\n                  appGroupPolicy.gpForm.invalid ||\\n                  appPolicyHolder.phForm.invalid ||\\n                  (secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) ||\\n                  (carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) ||\\n                  (carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">\\n                  Generate\\n              </button>\\n              <button \\n                *ngIf=\\\"\\n                  !quoteForm.invalid &&\\n                  !appGroupPolicy.gpForm.invalid &&\\n                  !appPolicyHolder.phForm.invalid &&\\n                  !(secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) &&\\n                  !(carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) &&\\n                  !(carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(1)\\\">\\n                  Generate\\n              </button>\\n            </div>\\n\\n            <div *ngIf=\\\"showSaveBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"manageBtn(1)\\\">Edit Details</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"manageBtn(1, true)\\\">Edit Coverage</button>\\n              <button \\n                *ngIf=\\\"\\n                  quoteForm.invalid ||\\n                  appGroupPolicy.gpForm.invalid ||\\n                  appPolicyHolder.phForm.invalid ||\\n                  (secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) ||\\n                  (carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) ||\\n                  (carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">\\n                  Save\\n              </button>\\n              <button \\n                *ngIf=\\\"\\n                  !quoteForm.invalid &&\\n                  !appGroupPolicy.gpForm.invalid &&\\n                  !appPolicyHolder.phForm.invalid &&\\n                  !(secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) &&\\n                  !(carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) &&\\n                  !(carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(3)\\\">\\n                Save\\n              </button>\\n            </div>\\n\\n            <div *ngIf=\\\"showPostBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"editMode = !editMode\\\">Edit Details</button>\\n              <button \\n                *ngIf=\\\"\\n                  quoteForm.invalid ||\\n                  appGroupPolicy.gpForm.invalid ||\\n                  appPolicyHolder.phForm.invalid ||\\n                  (secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) ||\\n                  (carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) ||\\n                  (carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">\\n                  Post\\n              </button>\\n              <button \\n                *ngIf=\\\"\\n                  !quoteForm.invalid &&\\n                  !appGroupPolicy.gpForm.invalid &&\\n                  !appPolicyHolder.phForm.invalid &&\\n                  !(secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined) &&\\n                  !(carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')) &&\\n                  !(carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == ''))\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(4)\\\">\\n                Post\\n              </button>\\n            </div>\\n\\n            <div *ngIf=\\\"showPrintBtn\\\" class=\\\"text-right\\\">\\n              <h5><small>Your policy number:</small> {{carDetails.policyNumber}}</h5>\\n            </div>\\n            <div *ngIf=\\\"showPrintBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"newPolicy()\\\">New Policy</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"printPolicy()\\\">Print</button>\\n            </div>\\n          </div>\\n\\n        </form>\\n        <!-- .regular-quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #quotationCar -->\\n\\n<ng-template #proceedModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Are you sure you want to proceed?</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have changes to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of changedValues\\\">\\n        {{item}}\\n      </li>\\n\\n      <li *ngFor=\\\"let item of changedAccessoryValues\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n    <h6>Changes may affect your premium and will create a new quotation.</h6>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Cancel\\n      </button>\\n      <button *ngIf=\\\"data.generateBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"issueQuote('S')\\\">\\n        Generate\\n      </button>\\n      <button *ngIf=\\\"data.saveBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"savePolicy()\\\">\\n        Save\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #validationModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Your application is incomplete</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have invalid/empty data to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of invalidForms\\\">\\n        {{item}}\\n      </li>\\n      <li *ngIf=\\\"secondaryPolicyHolder.documentCode != undefined && secondaryPolicyHolder.documentCode != '' && carDetails.secondaryPolicyHolderSeparator == undefined\\\">\\n        Alternative Policy holder Separator\\n      </li>\\n      <li *ngIf=\\\"carDetails.cbHasAssignee && (assigneePolicyHolder.documentCode == undefined || assigneePolicyHolder.documentCode == '')\\\">\\n        Assignee\\n      </li>\\n      <li *ngIf=\\\"carDetails.cbVehicleMortgaged && (mortgageePolicyHolder.documentCode == undefined || mortgageePolicyHolder.documentCode == '')\\\">\\n        Mortgagee\\n      </li>\\n    </ul>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Okay\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\";","export default \"<div class=\\\"row\\\" id=\\\"quotationHome\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-home fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        {{pageLabel}}\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/home.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"quoteForm\\\">\\n\\n          <div *ngIf='isIssuance' class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Individual Policy</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"alert alert-info note\\\">\\n                    <p><strong>Important Reminder:</strong> You need to have an approved quotation to proceed issuing a policy.</p>\\n                  </div>\\n                  <!-- .note -->\\n                </div>\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <label class=\\\"input-group-text\\\" for=\\\"quotationNumber\\\">Quotation Number</label>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Quotation Number here..\\\"\\n                      formControlName=\\\"quotationNumber\\\" [(ngModel)]=\\\"homeDetails.quotationNumber\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <button [disabled]=\\\"disableLoadBtn\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"loadQuotation()\\\"\\n                        type=\\\"button\\\">Load</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Risk Details</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['subline'].invalid \\n                    && (quoteForm.controls['subline'].dirty \\n                    || quoteForm.controls['subline'].touched)}\\\">\\n                    <label for=\\\"subline\\\">Business Line</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                      [(ngModel)]=\\\"homeDetails.subline\\\" [attr.disabled]=\\\"true\\\">\\n                      <option *ngFor=\\\"let subline of LOV.sublineLOV\\\" [ngValue]=\\\"subline.COD_RAMO\\\">\\n                        {{ subline.NOM_RAMO }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['subline'].errors?.required\\\">\\n                      * business line is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['currency'].invalid \\n                  && (quoteForm.controls['currency'].dirty \\n                  || quoteForm.controls['currency'].touched)}\\\">\\n                    <label for=\\\"currency\\\">Currency</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"currency\\\"\\n                      [(ngModel)]=\\\"homeDetails.currency\\\" [attr.disabled]=\\\"true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let currency of LOV.currencyLOV\\\" [ngValue]=\\\"currency.COD_MON\\\">\\n                        {{ currency.NOM_MON }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['currency'].errors?.required\\\">\\n                      * currency is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Location of Risk</h6>\\n                </div>\\n\\n                <div *ngIf=\\\"isIssuance\\\" class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['district'].invalid \\n                  && (quoteForm.controls['district'].dirty \\n                  || quoteForm.controls['district'].touched)}\\\">\\n                    <label for=\\\"district\\\">District</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"district\\\"\\n                      [(ngModel)]=\\\"homeDetails.district\\\" (change)=\\\"getBlockNumber()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let district of LOV.districtLOV\\\" [ngValue]=\\\"district.NUM_DISTRICT\\\">\\n                        {{ district.NUM_DISTRICT }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['district'].errors?.required\\\">\\n                      * district is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div *ngIf=\\\"isIssuance\\\" class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['blockNumber'].invalid \\n                  && (quoteForm.controls['blockNumber'].dirty \\n                  || quoteForm.controls['blockNumber'].touched)}\\\">\\n                    <label for=\\\"blockNumber\\\">Block Number</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"blockNumber\\\"\\n                      [(ngModel)]=\\\"homeDetails.blockNumber\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let blockNumber of LOV.blockNumberLOV\\\" [ngValue]=\\\"blockNumber.NUM_BLOCK\\\">\\n                        {{ blockNumber.NUM_BLOCK }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['blockNumber'].errors?.required\\\">\\n                      * block number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['buildingNumber'].invalid \\n                  && (quoteForm.controls['buildingNumber'].dirty \\n                  || quoteForm.controls['buildingNumber'].touched)}\\\">\\n                    <label for=\\\"buildingNumber\\\">House/Building Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"buildingNumber\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.buildingNumber\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['buildingNumber'].errors?.required\\\">\\n                      * building number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['subdivision'].invalid \\n                  && (quoteForm.controls['subdivision'].dirty \\n                  || quoteForm.controls['subdivision'].touched)}\\\">\\n                    <label for=\\\"subdivision\\\">Village/Subdivision</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"subdivision\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.subdivision\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['subdivision'].errors?.required\\\">\\n                      * subdivision is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['buildingName'].invalid \\n                  && (quoteForm.controls['buildingName'].dirty \\n                  || quoteForm.controls['buildingName'].touched)}\\\">\\n                    <label for=\\\"buildingName\\\">Building Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"buildingName\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.buildingName\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['buildingName'].errors?.required\\\">\\n                      * building name is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['streetName'].invalid \\n                  && (quoteForm.controls['streetName'].dirty \\n                  || quoteForm.controls['streetName'].touched)}\\\">\\n                    <label for=\\\"streetName\\\">Street Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"streetName\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.streetName\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['streetName'].errors?.required\\\">\\n                      * street name is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['barangay'].invalid \\n                  && (quoteForm.controls['barangay'].dirty \\n                  || quoteForm.controls['barangay'].touched)}\\\">\\n                    <label for=\\\"barangay\\\">Barangay</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"barangay\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.barangay\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['barangay'].errors?.required\\\">\\n                      * barangay is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['region'].invalid \\n                  && (quoteForm.controls['region'].dirty \\n                  || quoteForm.controls['region'].touched)}\\\">\\n                    <label for=\\\"region\\\">Region</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"region\\\"\\n                      [(ngModel)]=\\\"homeDetails.region\\\" (change)=\\\"getProvince()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let region of LOV.regionLOV\\\" [ngValue]=\\\"region.COD_ESTADO\\\">\\n                        {{ region.NOM_ESTADO }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['region'].errors?.required\\\">\\n                      * region is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['province'].invalid \\n                  && (quoteForm.controls['province'].dirty \\n                  || quoteForm.controls['province'].touched)}\\\">\\n                    <label for=\\\"province\\\">Province</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"province\\\"\\n                      [(ngModel)]=\\\"homeDetails.province\\\" (change)=\\\"getCity()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let province of LOV.provinceLOV\\\" [ngValue]=\\\"province.COD_PROV\\\">\\n                        {{ province.NOM_PROV }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['province'].errors?.required\\\">\\n                      * province is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['city'].invalid \\n                  && (quoteForm.controls['city'].dirty \\n                  || quoteForm.controls['city'].touched)}\\\">\\n                    <label for=\\\"city\\\">City</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"city\\\"\\n                      [(ngModel)]=\\\"homeDetails.city\\\" (change)=\\\"getZipCode()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let city of LOV.cityLOV\\\" [ngValue]=\\\"city.COD_LOCALIDAD\\\">\\n                        {{ city.NOM_LOCALIDAD }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['city'].errors?.required\\\">\\n                      * city is required\\n                    </p>\\n                  </div>\\n                </div>\\n                <div class=\\\"clearfix\\\"></div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Building / Content Details</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Building/Content</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['buildingCapital'].invalid \\n                  && (quoteForm.controls['buildingCapital'].dirty \\n                  || quoteForm.controls['buildingCapital'].touched)}\\\">\\n                    <label for=\\\"buildingCapital\\\">Building Capital</label>\\n                    <input type=\\\"number\\\" formControlName=\\\"buildingCapital\\\" class=\\\"form-control required\\\" \\n                      [(ngModel)]=\\\"homeDetails.buildingCapital\\\"\\n                      (change)=\\\"affecting('buildingCapital', 'Building Capital')\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['buildingCapital'].errors?.required\\\">\\n                      * building capital is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"contentValue\\\">Content Value</label>\\n                    <input type=\\\"number\\\" formControlName=\\\"contentValue\\\" class=\\\"form-control\\\"\\n                      (change)=\\\"affecting('contentValue', 'Content Value')\\\"\\n                      [(ngModel)]=\\\"homeDetails.contentValue\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                  </div>\\n                </div>\\n\\n                <div *ngIf=\\\"isIssuance\\\" class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"buildingContent\\\">Content</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"buildingContent\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.buildingContent\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Additional Details</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['constructionOfBuilding'].invalid \\n                  && (quoteForm.controls['constructionOfBuilding'].dirty \\n                  || quoteForm.controls['constructionOfBuilding'].touched)}\\\">\\n                    <label for=\\\"constructionOfBuilding\\\">Construction of Building</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"constructionOfBuilding\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"homeDetails.constructionOfBuilding\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['constructionOfBuilding'].errors?.required\\\">\\n                      * construction of building required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['occupancyOfBuilding'].invalid \\n                  && (quoteForm.controls['occupancyOfBuilding'].dirty \\n                  || quoteForm.controls['occupancyOfBuilding'].touched)}\\\">\\n                    <label for=\\\"occupancyOfBuilding\\\">Occupancy of Building</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"occupancyOfBuilding\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"homeDetails.occupancyOfBuilding\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['occupancyOfBuilding'].errors?.required\\\">\\n                      * occupancy of building is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-divider\\\"></div>\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Boundaries</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['front'].invalid \\n                  && (quoteForm.controls['front'].dirty \\n                  || quoteForm.controls['front'].touched)}\\\">\\n                    <label for=\\\"front\\\">Front</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"front\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"homeDetails.front\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['front'].errors?.required\\\">\\n                      * front is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['right'].invalid \\n                  && (quoteForm.controls['right'].dirty \\n                  || quoteForm.controls['right'].touched)}\\\">\\n                    <label for=\\\"right\\\">Right</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"right\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"homeDetails.right\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['right'].errors?.required\\\">\\n                      * right is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['left'].invalid \\n                  && (quoteForm.controls['left'].dirty \\n                  || quoteForm.controls['left'].touched)}\\\">\\n                    <label for=\\\"left\\\">Left</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"left\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"homeDetails.left\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['left'].errors?.required\\\">\\n                      * left is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['rear'].invalid \\n                  && (quoteForm.controls['rear'].dirty \\n                  || quoteForm.controls['rear'].touched)}\\\">\\n                    <label for=\\\"rear\\\">Rear</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"rear\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"homeDetails.rear\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['rear'].errors?.required\\\">\\n                      * rear is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\"\\n              (click)=\\\"showImprovement = !showImprovement\\\" matTooltip=\\\"click to show/hide improvement details\\\">\\n              <strong>Improvement Details</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showImprovement\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['improvement'].invalid \\n                  && (quoteForm.controls['improvement'].dirty \\n                  || quoteForm.controls['improvement'].touched)}\\\">\\n                    <label for=\\\"improvement\\\">Improvement</label>\\n                    <input type=\\\"number\\\" formControlName=\\\"improvement\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"homeDetails.improvement\\\"\\n                      (change)=\\\"affecting('improvement', 'Improvement')\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['improvement'].errors?.min\\\">\\n                      * should be higher than 0\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\"\\n              (click)=\\\"showRelatedStructure = !showRelatedStructure\\\"\\n              matTooltip=\\\"click to show/hide other related structure details\\\">\\n              <strong>Other Related Structure Details</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showRelatedStructure\\\">\\n\\n              <div class=\\\"row\\\" formArrayName=\\\"relatedStructure\\\">\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\"\\n                  *ngFor=\\\"let item of quoteForm.get('relatedStructure')['controls']; let i=index\\\">\\n                  <div class=\\\"form-group\\\" [formGroupName]=\\\"i\\\" [ngClass]=\\\"{'input-error': item.controls['_value'].invalid \\n                  && (item.controls['_value'].dirty \\n                  || item.controls['_value'].touched)}\\\">\\n                    <label>{{item.get('_name').value}}</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"_value\\\" [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"item.controls['_value'].errors?.min\\\">\\n                      * should be higher than 0\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\"\\n              (click)=\\\"showRelatedContent = !showRelatedContent\\\"\\n              matTooltip=\\\"click to show/hide other related content details\\\">\\n              <strong>Other Related Content Details</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showRelatedContent\\\">\\n\\n              <div class=\\\"row\\\" formArrayName=\\\"relatedContent\\\">\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\"\\n                  *ngFor=\\\"let item of quoteForm.get('relatedContent')['controls']; let i=index\\\">\\n                  <div class=\\\"form-group\\\" [formGroupName]=\\\"i\\\" [ngClass]=\\\"{'input-error': item.controls['_value'].invalid \\n                  && (item.controls['_value'].dirty \\n                  || item.controls['_value'].touched)}\\\">\\n                    <label>{{item.get('_name').value}}</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"_value\\\" [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"item.controls['_value'].errors?.min\\\">\\n                      * should be higher than 0\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <app-group-policy \\n            #appGroupPolicy\\n            [subline]=\\\"homeDetails.subline\\\"\\n            [prevDetails]=\\\"prevHomeDetails\\\"\\n            [groupPolicy]=\\\"groupPolicy\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [showExpiring]=\\\"true\\\"\\n            [(changedValues)]=\\\"changedValues\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-group-policy>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>General Information</strong>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Movement Dates</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['effectivityDate'].invalid \\n                    && (quoteForm.controls['effectivityDate'].dirty \\n                    || quoteForm.controls['effectivityDate'].touched)}\\\">\\n                    <label for=\\\"effectivityDate\\\">Effectivity Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                      (bsValueChange)=\\\"affecting('effectivityDate', 'Effectivity Date')\\\"\\n                      formControlName=\\\"effectivityDate\\\" [(ngModel)]=\\\"homeDetails.effectivityDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\" bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['effectivityDate'].errors?.required\\\">\\n                      * effectivity date is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['expiryDate'].invalid \\n                    && (quoteForm.controls['expiryDate'].dirty \\n                    || quoteForm.controls['expiryDate'].touched)}\\\">\\n                    <label for=\\\"expiryDate\\\">Expiry Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                      [minDate]=\\\"expiryDateMinDate\\\" (bsValueChange)=\\\"affecting('expiryDate', 'Expirty Date')\\\"\\n                      formControlName=\\\"expiryDate\\\" [(ngModel)]=\\\"homeDetails.expiryDate\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\" bsDatepicker>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['expiryDate'].errors?.required\\\">\\n                      * expiry date is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <app-policy-holder #appPolicyHolder\\n            [title]=\\\"'Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"homeDetails\\\"\\n            [(policyHolder)]=\\\"policyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\" \\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'primary'\\\"\\n            [optional]=\\\"false\\\" \\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-policy-holder>\\n\\n          <app-policy-holder\\n            *ngIf=\\\"isIssuance\\\"\\n            [title]=\\\"'Alternative Policy Holder (Optional)'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"homeDetails\\\"\\n            [(policyHolder)]=\\\"secondaryPolicyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'secondary'\\\"\\n            [optional]=\\\"true\\\"\\n            [showPrefix]=\\\"false\\\">\\n          </app-policy-holder>\\n\\n          <div class=\\\"card shadow mb-3\\\" *ngIf=\\\"isIssuance\\\">\\n            <div class=\\\"card-header d-flex justify-content-between\\\">\\n              <strong>Additional Policy Information</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Additional Details for Location of Risk</h6>\\n                </div>\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"crestaZone\\\">Cresta Zone</label>\\n                        <input type=\\\"number\\\" formControlName=\\\"crestaZone\\\" class=\\\"form-control\\\"\\n                          [(ngModel)]=\\\"homeDetails.crestaZone\\\"\\n                          [attr.disabled]=\\\"true\\\">\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['zipCode'].invalid \\n                        && (quoteForm.controls['zipCode'].dirty \\n                        || quoteForm.controls['zipCode'].touched)}\\\">\\n                        <label for=\\\"zipCode\\\">Zip Code</label>\\n                        <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"zipCode\\\"\\n                          [(ngModel)]=\\\"homeDetails.zipCode\\\" [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          <option selected></option>\\n                          <option *ngFor=\\\"let zipCode of LOV.zipCodeLOV\\\" [ngValue]=\\\"zipCode.COD_POSTAL\\\">\\n                            {{ zipCode.COD_POSTAL }}\\n                          </option>\\n                        </select>\\n                        <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['zipCode'].errors?.required\\\">\\n                          * zip code is required\\n                        </p>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-divider\\\"></div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"alert alert-info note\\\">\\n                    <p><strong>Important Reminder:</strong> Please provide mortgagee details if you selected <strong>Mortgagee</strong>.\\n                    </p>\\n                  </div>\\n                  <!-- .note -->\\n                </div>\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Mortgagee</h6>\\n                </div>\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <div class=\\\"form-check\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbMortgagee\\\"\\n                            [(ngModel)]=\\\"homeDetails.cbMortgagee\\\" formControlName=\\\"cbMortgagee\\\"\\n                            (change)=\\\"showMortgagee = !showMortgagee\\\" [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"cbMortgagee\\\">\\n                            Mortgagee\\n                          </label>\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <app-policy-holder\\n            *ngIf=\\\"isIssuance && showMortgagee\\\"\\n            [title]=\\\"'Mortgagee Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"false\\\"\\n            [details]=\\\"homeDetails\\\"\\n            [(policyHolder)]=\\\"mortgageePolicyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'mortgagee'\\\"\\n            [optional]=\\\"false\\\">\\n          </app-policy-holder>\\n\\n          <div class=\\\"card shadow mb-3\\\" *ngIf=\\\"showRatePercentage\\\">\\n            <div class=\\\"card-header d-flex justify-content-between\\\">\\n              <strong>Rate Percentage</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"alert alert-info note\\\">\\n                    <p><strong>Important Reminder:</strong> Rate should be modified <strong>higher</strong> than the original rate.\\n                    </p>\\n                  </div>\\n                  <!-- .note -->\\n                </div>\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['ratePercentage'].invalid \\n                      && (quoteForm.controls['ratePercentage'].dirty \\n                      || quoteForm.controls['ratePercentage'].touched)}\\\">\\n                        <label for=\\\"ratePercentage\\\">Rate Percentage</label>\\n                        <input type=\\\"number\\\" formControlName=\\\"ratePercentage\\\" class=\\\"form-control\\\"\\n                          [(ngModel)]=\\\"homeDetails.ratePercentage\\\"\\n                          [attr.disabled]=\\\"editMode ? null : true\\\"\\n                          (change)=\\\"affecting('ratePercentage', 'Rate Percentage')\\\">\\n                          <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['ratePercentage'].errors?.required\\\">\\n                            * rate percentage is required\\n                          </p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\" *ngIf=\\\"isIssuance\\\">\\n            <div class=\\\"card-header d-flex justify-content-between\\\">\\n              <strong>Warranted No Loss</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-xl-12\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"warrantedNoLoss\\\">Warranted No Loss</label>\\n                        <input type=\\\"number\\\" formControlName=\\\"warrantedNoLoss\\\" class=\\\"form-control\\\"\\n                          [(ngModel)]=\\\"homeDetails.warrantedNoLoss\\\"\\n                          [attr.disabled]=\\\"editMode ? null : true\\\">\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <app-payment-breakdown\\n            *ngIf=\\\"showPaymentBreakdown\\\"\\n            #appPaymentBreakdown\\n            [paymentReceipt]=\\\"paymentReceipt\\\"\\n            [paymentBreakdown]=\\\"paymentBreakdown\\\"\\n            [showExchangeRate]=\\\"false\\\"\\n            [loadBreakdown]=\\\"triggerBreakdown\\\">\\n          </app-payment-breakdown>\\n\\n          <app-fixed-coverages\\n            *ngIf=\\\"showCoverage\\\"\\n            [line]=\\\"'home'\\\"\\n            [coverageList]=\\\"coverageList\\\"\\n            [loadCoverage]=\\\"triggerCoverage\\\">\\n          </app-fixed-coverages>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Product</strong>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Product Data</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['paymentMethod'].invalid \\n                    && (quoteForm.controls['paymentMethod'].dirty \\n                    || quoteForm.controls['paymentMethod'].touched)}\\\">\\n                    <label for=\\\"paymentMethod\\\">Payment Method</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"paymentMethod\\\"\\n                      [(ngModel)]=\\\"homeDetails.paymentMethod\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.paymentMethodLOV?.length ? null : true\\\">\\n                      <option *ngFor=\\\"let paymentMethod of LOV.paymentMethodLOV\\\"\\n                        [ngValue]=\\\"paymentMethod.COD_FRACC_PAGO\\\">\\n                        {{ paymentMethod.NOM_FRACC_PAGO }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['paymentMethod'].errors?.required\\\">\\n                      * payment method is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['product'].invalid \\n                    && (quoteForm.controls['product'].dirty \\n                    || quoteForm.controls['product'].touched)}\\\">\\n                    <label for=\\\"product\\\">Product List</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"product\\\"\\n                      [(ngModel)]=\\\"homeDetails.product\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.productListLOV?.length ? null : true\\\">\\n                      <option *ngFor=\\\"let product of LOV.productListLOV\\\" [ngValue]=\\\"product.COD_MODALIDAD\\\">\\n                        {{ product.NOM_MODALIDAD }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['product'].errors?.required\\\">\\n                      * product list is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- button controls for quotation -->\\n          <div *ngIf=\\\"!isIssuance\\\">\\n            <div *ngIf=\\\"showGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n              <button *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceed(1)\\\">Generate</button>\\n            </div>\\n            <div *ngIf=\\\"showIssueQuoteBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"manageBtn(1)\\\">Edit\\n                Details</button>\\n              <button *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Issue\\n                Quote</button>\\n              <button *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceed(2)\\\">Issue Quote</button>\\n            </div>\\n            <div *ngIf=\\\"showProceedToIssuanceBtn\\\" class=\\\"text-right\\\">\\n              <h5><small>Your quotation number:</small> {{homeDetails.quotationNumber}}</h5>\\n            </div>\\n            <div *ngIf=\\\"showProceedToIssuanceBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" (click)=\\\"newQuote()\\\" class=\\\"btn btn-primary\\\">New Quote</button>\\n              <button type=\\\"button\\\" (click)=\\\"printQuote()\\\" class=\\\"btn btn-primary\\\">Print Quote</button>\\n              <button type=\\\"button\\\" (click)=\\\"proceedToIssuance()\\\" class=\\\"btn btn-primary\\\">Proceed to Issuance</button>\\n            </div>\\n          </div>\\n\\n          <!-- button controls for issuance -->\\n          <div *ngIf=\\\"isIssuance\\\">\\n            <!-- <div *ngIf=\\\"showIssuanceGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                [disabled]=\\\"!editMode\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n              <button *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceed(1)\\\">Generate</button>\\n            </div> -->\\n            <div *ngIf=\\\"(showSaveBtn && withTechControl) || (showPostBtn && withTechControl)\\\">\\n              <div class=\\\"alert alert-warning note\\\">\\n                <p>\\n                  <strong>Quotation has tech control!</strong> Unable to issue policy.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showNewPolicyBtn\\\">\\n              <div class=\\\"alert alert-danger note\\\">\\n                <p>\\n                  <strong>Quotation has error!</strong> Unable to issue policy.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showSaveBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"manageBtn(1)\\\">Edit\\n                Details</button>\\n              <button *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Save</button>\\n              <button *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceed(3)\\\">Save</button>\\n            </div>\\n\\n            <div *ngIf=\\\"showPostBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editMode = !editMode\\\">Edit\\n                Details</button>\\n              <button *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Post</button>\\n              <button *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"proceed(4)\\\">Post</button>\\n            </div>\\n\\n            <div *ngIf=\\\"showPrintBtn\\\" class=\\\"text-right\\\">\\n              <h5><small>Your policy number:</small> {{homeDetails.policyNumber}}</h5>\\n            </div>\\n            <div *ngIf=\\\"showPrintBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"printPolicy()\\\">Print</button>\\n            </div>\\n          </div>\\n\\n        </form>\\n        <!-- .quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #quotationHome -->\\n\\n<ng-template #proceedModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Are you sure you want to proceed?</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have changes to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of changedValues\\\">\\n        {{item}}\\n      </li>\\n\\n      <li *ngIf=\\\"hasRSChanges\\\">\\n        Other Related Structure Details\\n      </li>\\n\\n      <li *ngIf=\\\"hasRCChanges\\\">\\n        Other Related Content Details\\n      </li>\\n    </ul>\\n    <h6>Changes may affect your premium and will create a new quotation.</h6>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Cancel\\n      </button>\\n      <button *ngIf=\\\"data.generateBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"issueQuote('S')\\\">\\n        Generate\\n      </button>\\n      <button *ngIf=\\\"data.saveBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"savePolicy()\\\">\\n        Save\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #validationModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Your application is incomplete</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have invalid/empty data to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of invalidForms\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Okay\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\";","export default \"<div class=\\\"row\\\" id=\\\"quickQuotationTravel\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-plane fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        {{pageLabel}}\\n      </h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <img class=\\\"product-img-banner\\\" src=\\\"./assets/images/banner/travel.jpg\\\" alt=\\\"credits to freepik @stories\\\" />\\n  </div>\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"quoteForm\\\" class=\\\"quote-form\\\">\\n\\n          <div *ngIf='isIssuance' class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Individual Policy</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <label class=\\\"input-group-text\\\" for=\\\"quotationNumber\\\">Quotation Number</label>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Quotation Number here..\\\"\\n                      formControlName=\\\"quotationNumber\\\" [(ngModel)]=\\\"travelDetails.quotationNumber\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <button [disabled]=\\\"disableLoadBtn\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"loadQuotation()\\\"\\n                        type=\\\"button\\\">Load</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Travel Itinerary</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['currency'].invalid \\n                    && (quoteForm.controls['currency'].dirty \\n                    || quoteForm.controls['currency'].touched)}\\\">\\n                    <label for=\\\"currency\\\">Currency</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"currency\\\"\\n                      [(ngModel)]=\\\"travelDetails.currency\\\"\\n                      (change)=\\\"currencyOnchange(); affecting('currency', 'Currency')\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.currencyLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let currency of LOV.currencyLOV\\\" [ngValue]=\\\"currency.COD_MON\\\">\\n                        {{ currency.NOM_MON }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['currency'].errors?.required\\\">\\n                      * currency is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-5 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['countries'].invalid \\n                    && (quoteForm.controls['countries'].dirty \\n                    || quoteForm.controls['countries'].touched)}\\\">\\n                    <label for=\\\"currency\\\">Itinerary</label>\\n                    <ng-select [items]=\\\"LOV.countryLOV\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select Country to visit\\\"\\n                      appendTo=\\\"body\\\" formControlName=\\\"countries\\\" multiple=\\\"true\\\" [(ngModel)]=\\\"travelDetails.countries\\\"\\n                      [readonly]=\\\"!editMode\\\">\\n                    </ng-select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['countries'].errors?.required\\\">\\n                      * country is required\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>General Information</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['travelPackage'].invalid \\n                    && (quoteForm.controls['travelPackage'].dirty \\n                    || quoteForm.controls['travelPackage'].touched)}\\\">\\n                    <label for=\\\"travelPackage\\\">Travel Package</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"travelPackage\\\"\\n                      [(ngModel)]=\\\"travelDetails.travelPackage\\\"\\n                      (change)=\\\"affecting('travelPackage', 'Travel Package')\\\"\\n                      [attr.disabled]=\\\"true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let package of LOV.packageLOV\\\" [ngValue]=\\\"package.TRAVEL_PACK\\\">\\n                        {{ package.NOM_VALOR }}\\n                      </option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['travelPackage'].errors?.required\\\">\\n                      * travel package is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['travelType'].invalid \\n                    && (quoteForm.controls['travelType'].dirty \\n                    || quoteForm.controls['travelType'].touched)}\\\">\\n                    <label for=\\\"travelType\\\">Travel Type</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"travelType\\\"\\n                      [(ngModel)]=\\\"travelDetails.travelType\\\" [attr.disabled]=\\\"true\\\">\\n                      <option value=\\\"D\\\">Domestic</option>\\n                      <option value=\\\"I\\\">International</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['travelType'].errors?.required\\\">\\n                      * travel type is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['startDate'].invalid \\n                    && (quoteForm.controls['startDate'].dirty \\n                    || quoteForm.controls['startDate'].touched)}\\\">\\n                    <label for=\\\"startDate\\\">Start Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\" [minDate]=\\\"mindate\\\"\\n                      formControlName=\\\"startDate\\\" [(ngModel)]=\\\"travelDetails.startDate\\\" bsDatepicker\\n                      (bsValueChange)=\\\"affecting('startDate', 'Start Date')\\\"\\n                      [attr.disabled]=\\\"(editMode && travelDetails.currency) ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['startDate'].errors?.required\\\">\\n                      * start date is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['endDate'].invalid \\n                    && (quoteForm.controls['endDate'].dirty \\n                    || quoteForm.controls['endDate'].touched)}\\\">\\n                    <label for=\\\"endDate\\\">End Date</label>\\n                    <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\" [minDate]=\\\"endDateMinDate\\\"\\n                      formControlName=\\\"endDate\\\" [(ngModel)]=\\\"travelDetails.endDate\\\" bsDatepicker\\n                      (ngModelChange)=\\\"getOneTrip()\\\"\\n                      (bsValueChange)=\\\"affecting('endDate', 'End Date')\\\"\\n                      [attr.disabled]=\\\"(editMode && enableEndDate && travelDetails.currency) ? null : ''\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['endDate'].errors?.required\\\">\\n                      * end date is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['noOfDays'].invalid \\n                    && (quoteForm.controls['noOfDays'].dirty \\n                    || quoteForm.controls['noOfDays'].touched)}\\\">\\n                    <label for=\\\"noOfDays\\\">No. of Days</label>\\n                    <input class=\\\"form-control required\\\" id=\\\"noOfDays\\\" formControlName=\\\"noOfDays\\\"\\n                      [(ngModel)]=\\\"travelDetails.noOfDays\\\"\\n                      (change)=\\\"affecting('noOfDays', 'No. of Days')\\\"\\n                      [attr.disabled]=\\\"true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['noOfDays'].errors?.required\\\">\\n                      * number of days is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['completeItinerary'].invalid \\n                    && (quoteForm.controls['completeItinerary'].dirty \\n                    || quoteForm.controls['completeItinerary'].touched)}\\\">\\n                    <label for=\\\"completeItinerary\\\">Complete Itinerary</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"completeItinerary\\\" class=\\\"form-control required\\\"\\n                      placeholder=\\\"ex. Manila-Japan-China-Manila\\\" [(ngModel)]=\\\"travelDetails.completeItinerary\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['completeItinerary'].errors?.required\\\">\\n                      * complete itinerary is required\\n                    </p>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['completeItinerary'].errors?.invalidItinerary\\\">\\n                      * invalid itinerary\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['purposeOfTrip'].invalid \\n                    && (quoteForm.controls['purposeOfTrip'].dirty \\n                    || quoteForm.controls['purposeOfTrip'].touched)}\\\">\\n                    <label for=\\\"purposeOfTrip\\\">Purpose of Trip</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"purposeOfTrip\\\"\\n                      [(ngModel)]=\\\"travelDetails.purposeOfTrip\\\"\\n                      (change)=\\\"affecting('purposeOfTrip', 'Purpose of Trip')\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.purposeOfTripLOV?.length ? null : true\\\">\\n                      <option selected></option>\\n                      <option *ngFor=\\\"let purposeOfTrip of LOV.purposeOfTripLOV\\\" [ngValue]=\\\"purposeOfTrip.COD_BUSINESS\\\">\\n                        {{ purposeOfTrip.NOM_BUSINESS }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['purposeOfTrip'].errors?.required\\\">\\n                      * purpose of trip is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbOneTripOnly\\\"\\n                        [(ngModel)]=\\\"travelDetails.cbOneTripOnly\\\" formControlName=\\\"cbOneTripOnly\\\"\\n                        [attr.disabled]=\\\"true\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbOneTripOnly\\\">\\n                        One Trip Only?\\n                      </label>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbWithCruise\\\"\\n                        [(ngModel)]=\\\"travelDetails.cbWithCruise\\\" formControlName=\\\"cbWithCruise\\\"\\n                        [attr.disabled]=\\\"editMode && travelDetails.travelType != 'D' ? null : true\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"cbWithCruise\\\">\\n                        With Cruise?\\n                      </label>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div *ngIf=\\\"showOthersDescription\\\" class=\\\"col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['othersDescription'].invalid \\n                    && (quoteForm.controls['othersDescription'].dirty \\n                    || quoteForm.controls['othersDescription'].touched)}\\\">\\n                    <label for=\\\"othersDescription\\\">If others, please specify</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"othersDescription\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"travelDetails.othersDescription\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['othersDescription'].errors?.required\\\">\\n                      * please specify your purpose of trip\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <app-group-policy #appGroupPolicy\\n            [subline]=\\\"travelDetails.subline\\\"\\n            [prevDetails]=\\\"prevTravelDetails\\\"\\n            [groupPolicy]=\\\"groupPolicy\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [showExpiring]=\\\"false\\\"\\n            [(changedValues)]=\\\"changedValues\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-group-policy>\\n\\n          <app-policy-holder #appPolicyHolder\\n            [title]=\\\"'Policy Holder Information'\\\"\\n            [showCreateBtn]=\\\"true\\\"\\n            [details]=\\\"travelDetails\\\"\\n            [(policyHolder)]=\\\"policyHolder\\\"\\n            [isIssuance]=\\\"isIssuance\\\"\\n            [editMode]=\\\"editMode\\\"\\n            [type]=\\\"'primary'\\\"\\n            [optional]=\\\"false\\\"\\n            [loadQuotation]=\\\"triggerCounter\\\">\\n          </app-policy-holder>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Travelers</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n\\n              <div class=\\\"alert alert-info note\\\">\\n                <p>\\n                  <strong>Important Reminder:</strong> Family risk should be max of 6 members, age of primary should be from 18-65 and age of children \\n                  should be from 0-21 years old only. Please also be advised that family is considered as 1 risk and no multirisk is allowed for quotation.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n\\n              <div formArrayName=\\\"travelers\\\">\\n                <div *ngFor=\\\"let traveler of quoteForm.get('travelers')['controls']; let i=index\\\">\\n                  <div [formGroupName]=\\\"i\\\" class=\\\"card traveler-card\\\">\\n                    <div class=\\\"card-body\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': traveler.controls['completeName'].invalid \\n                              && (traveler.controls['completeName'].dirty \\n                              || traveler.controls['completeName'].touched)}\\\">\\n                            <label for=\\\"completeName\\\">Complete Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"completeName\\\" class=\\\"form-control required\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"traveler.controls['completeName'].errors?.required\\\">\\n                              * complete name is required\\n                            </p>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': traveler.controls['relationship'].invalid \\n                          && (traveler.controls['relationship'].dirty \\n                          || traveler.controls['relationship'].touched)}\\\">\\n                            <label for=\\\"relationship\\\">Relationship</label>\\n                            <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"relationship\\\"\\n                              (change)=\\\"relationshipOnChange(traveler)\\\"\\n                              [attr.disabled]=\\\"editMode && LOV.relationshipLOV?.length && i != 0 ? null: true\\\">\\n                              <option \\n                                *ngFor=\\\"let relationship of LOV.relationshipLOV\\\"\\n                                [attr.disabled]=\\\"relationship.disabled ? '' : null\\\"\\n                                [ngValue]=\\\"relationship.COD_VALOR\\\">\\n                                {{ relationship.NOM_VALOR }}</option>\\n                            </select>\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"traveler.controls['relationship'].errors?.required\\\">\\n                              * relationship is required\\n                            </p>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-md-4 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': traveler.controls['birthDate'].invalid \\n                          && (traveler.controls['birthDate'].dirty \\n                          || traveler.controls['birthDate'].touched)}\\\">\\n                            <label for=\\\"birthDate\\\">Birthdate</label>\\n                            <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control required\\\"\\n                              [maxDate]=\\\"traveler.controls['bdaymaxdate'].value\\\" [minDate]=\\\"traveler.controls['bdaymindate'].value\\\"\\n                              formControlName=\\\"birthDate\\\" bsDatepicker\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"traveler.controls['birthDate'].errors?.required\\\">\\n                              * birthdate is required\\n                            </p>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-md-6 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': traveler.controls['passportNumber'].invalid \\n                          && (traveler.controls['passportNumber'].dirty \\n                          || traveler.controls['passportNumber'].touched)}\\\">\\n                            <label for=\\\"passportNumber\\\">Passport Number</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"passportNumber\\\" class=\\\"form-control required\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                            <p class=\\\"form-error\\\" *ngIf=\\\"traveler.controls['passportNumber'].errors?.required\\\">\\n                              * passport number is required\\n                            </p>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"col-md-6 col-sm-6\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"physicianName\\\">Usual Physician Name and Number</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"physicianName\\\" class=\\\"form-control\\\"\\n                              oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                              [attr.disabled]=\\\"editMode ? null : true\\\">\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"clearfix\\\"></div>\\n                        <div class=\\\"col-lg-12\\\">\\n                          <div class=\\\"btn-group\\\" *ngIf=\\\"i > 0 && editMode\\\">\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"removeTraveler(i)\\\">Remove</button>\\n                          </div>\\n                        </div>\\n\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div *ngIf=\\\"travelerHeadCount <= 5\\\" class=\\\"btn-group\\\">\\n                <button [disabled]=\\\"!editMode || quoteForm.get('travelers').status !== 'VALID'\\\" type=\\\"button\\\"\\n                  (click)=\\\"addTraveler()\\\" class=\\\"btn btn-primary\\\">Add Traveler</button>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header d-flex justify-content-between optional\\\"\\n              (click)=\\\"showAdditionalInformation = !showAdditionalInformation\\\"\\n              matTooltip=\\\"click to show/hide additional policy information\\\">\\n              <strong>Additional Policy Information (Optional)</strong>\\n              <div class=\\\"dropdown no-arrow\\\">\\n                <i class=\\\"fas fa-angle-double-down fa-sm fa-fw text-gray-400\\\"></i>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"showAdditionalInformation\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-check\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbSportsEquipment\\\"\\n                      formControlName=\\\"cbSportsEquipment\\\" [(ngModel)]=\\\"travelDetails.cbSportsEquipment\\\"\\n                      (change)=\\\"affecting('cbSportsEquipment', 'Sports Equipment Checkbox')\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"cbSportsEquipment\\\">\\n                      will bring sports equipment?\\n                    </label>\\n                  </div>\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['sportsEquipment'].invalid \\n                    && (quoteForm.controls['sportsEquipment'].dirty \\n                    || quoteForm.controls['sportsEquipment'].touched)}\\\">\\n                    <textarea class=\\\"form-control required\\\"\\n                      [attr.disabled]=\\\"editMode && travelDetails.cbSportsEquipment ? null : ''\\\" type=\\\"text\\\"\\n                      id=\\\"sportsEquipment\\\" formControlName=\\\"sportsEquipment\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [(ngModel)]=\\\"travelDetails.sportsEquipment\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['sportsEquipment'].errors?.required\\\">\\n                      * please indicate sport equipment/s\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"form-check\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"cbHazardousSports\\\"\\n                      formControlName=\\\"cbHazardousSports\\\" [(ngModel)]=\\\"travelDetails.cbHazardousSports\\\"\\n                      (change)=\\\"affecting('cbHazardousSports', 'Hazardous Sports Checkbox')\\\"\\n                      [attr.disabled]=\\\"editMode ? null : true\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"cbHazardousSports\\\">\\n                      will do hazardous sports?\\n                    </label>\\n                  </div>\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['hazardousSports'].invalid \\n                    && (quoteForm.controls['hazardousSports'].dirty \\n                    || quoteForm.controls['hazardousSports'].touched)}\\\">\\n                    <textarea class=\\\"form-control required\\\"\\n                      [attr.disabled]=\\\"editMode && travelDetails.cbHazardousSports ? null : ''\\\" type=\\\"text\\\"\\n                      id=\\\"hazardousSports\\\" formControlName=\\\"hazardousSports\\\"\\n                      oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      [(ngModel)]=\\\"travelDetails.hazardousSports\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['hazardousSports'].errors?.required\\\">\\n                      * please indicate the sport\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <app-payment-breakdown\\n            *ngIf=\\\"showPaymentBreakdown\\\"\\n            #appPaymentBreakdown\\n            [paymentReceipt]=\\\"paymentReceipt\\\"\\n            [paymentBreakdown]=\\\"paymentBreakdown\\\"\\n            [showExchangeRate]=\\\"true\\\"\\n            [loadBreakdown]=\\\"triggerBreakdown\\\">\\n          </app-payment-breakdown>\\n\\n          <app-fixed-coverages\\n            *ngIf=\\\"showCoverage\\\"\\n            [line]=\\\"'travel'\\\"\\n            [coverageList]=\\\"coverageList\\\"\\n            [loadCoverage]=\\\"triggerCoverage\\\">\\n          </app-fixed-coverages>\\n\\n          <div class=\\\"card shadow mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              <strong>Coverages</strong>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xl-12\\\">\\n                  <h6>Coverage Option</h6>\\n                </div>\\n\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['insuranceCoverage'].invalid \\n                      && (quoteForm.controls['insuranceCoverage'].dirty \\n                      || quoteForm.controls['insuranceCoverage'].touched)}\\\">\\n                    <label for=\\\"insuranceCoverage\\\">Travel Insurance Coverage</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"insuranceCoverage\\\"\\n                      [(ngModel)]=\\\"travelDetails.insuranceCoverage\\\"\\n                      (change)=\\\"affecting('insuranceCoverage', 'Travel Insurance Coverage')\\\"\\n                      [attr.disabled]=\\\"true\\\">\\n                      <option *ngFor=\\\"let insuranceCoverage of LOV.insuranceCoverageLOV\\\" [ngValue]=\\\"insuranceCoverage.INSURANCE_COVERAGE\\\">\\n                        {{ insuranceCoverage.NOM_VALOR }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['insuranceCoverage'].errors?.required\\\">\\n                      * travel insurance coverage is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['coverageOption'].invalid \\n                        && (quoteForm.controls['coverageOption'].dirty \\n                        || quoteForm.controls['coverageOption'].touched)}\\\">\\n                    <label for=\\\"coverageOption\\\">Coverage Option Pack</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"coverageOption\\\"\\n                      [(ngModel)]=\\\"travelDetails.coverageOption\\\"\\n                      (change)=\\\"affecting('coverageOption', 'Coverage Option Pack')\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.coverageOptionLOV?.length ? null : true\\\">\\n                      <option></option>\\n                      <option *ngFor=\\\"let coverageOption of LOV.coverageOptionLOV\\\" [ngValue]=\\\"coverageOption.COVERAGE_OPTIONS\\\">\\n                        {{ coverageOption.NOM_VALOR }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['coverageOption'].errors?.required\\\">\\n                      * coverage option pack is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': quoteForm.controls['medicalExpenses'].invalid \\n                          && (quoteForm.controls['medicalExpenses'].dirty \\n                          || quoteForm.controls['medicalExpenses'].touched)}\\\">\\n                    <label for=\\\"medicalExpenses\\\">Medical Expenses Coverage</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"medicalExpenses\\\"\\n                      [(ngModel)]=\\\"travelDetails.medicalExpenses\\\"\\n                      (change)=\\\"affecting('medicalExpenses', 'Medical Expenses Coverage')\\\"\\n                      [attr.disabled]=\\\"editMode && LOV.medicalExpensesLOV?.length ? null : true\\\">\\n                      <option></option>\\n                      <option *ngFor=\\\"let medicalExpenses of LOV.medicalExpensesLOV\\\" [ngValue]=\\\"medicalExpenses.VAL_CAMPO1\\\">\\n                        {{ medicalExpenses.VAL_CAMPO2 }}</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"quoteForm.controls['medicalExpenses'].errors?.required\\\">\\n                      * medical expenses coverage is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- button controls for quotation -->\\n          <div *ngIf=\\\"!isIssuance\\\">\\n            <div *ngIf=\\\"showGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button\\n                *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n              <button\\n                *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(1)\\\">Generate</button>\\n            </div>\\n            <div *ngIf=\\\"showIssueQuoteBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"manageBtn(1)\\\">Edit Details</button>\\n              <button\\n                *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Issue Quote</button>\\n              <button\\n                *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(2)\\\">Issue Quote</button>\\n            </div>\\n            <div *ngIf=\\\"showProceedToIssuanceBtn\\\" class=\\\"text-right\\\">\\n              <h5><small>Your quotation number:</small> {{travelDetails.quotationNumber}}</h5>\\n            </div>\\n            <div *ngIf=\\\"showProceedToIssuanceBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" (click)=\\\"newQuote()\\\" class=\\\"btn btn-primary\\\">New Quote</button>\\n              <button type=\\\"button\\\" (click)=\\\"printQuote()\\\" class=\\\"btn btn-primary\\\">Print Quote</button>\\n              <button type=\\\"button\\\" (click)=\\\"proceedToIssuance()\\\" class=\\\"btn btn-primary\\\">Proceed to Issuance</button>\\n            </div>\\n          </div>\\n\\n          <!-- button controls for issuance -->\\n          <div *ngIf=\\\"isIssuance\\\">\\n            <div *ngIf=\\\"(showSaveBtn && withTechControl) || (showPostBtn && withTechControl)\\\">\\n              <div class=\\\"alert alert-warning note\\\">\\n                <p>\\n                  <strong>Quotation has tech control!</strong> Unable to issue policy.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showNewPolicyBtn\\\">\\n              <div class=\\\"alert alert-danger note\\\">\\n                <p>\\n                  <strong>Quotation has error!</strong> Unable to issue policy.\\n                </p>\\n              </div>\\n              <!-- .note -->\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newQuote()\\\">New Quote</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"newPolicy()\\\">New Policy</button>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"showIssuanceGenerateBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button\\n                *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Generate</button>\\n              <button\\n                *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(1)\\\">Generate</button>\\n            </div>\\n\\n            <div *ngIf=\\\"showSaveBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"manageBtn(1)\\\">Edit Details</button>\\n              <button\\n                *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Save</button>\\n              <button\\n                *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(3)\\\">Save</button>\\n            </div>\\n\\n            <div *ngIf=\\\"showPostBtn && !withTechControl\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button *ngIf=\\\"!editMode\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"editMode = !editMode\\\">Edit Details</button>\\n              <button\\n                *ngIf=\\\"quoteForm.invalid || appGroupPolicy.gpForm.invalid || appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"openValidationModal(quoteForm, appGroupPolicy.gpForm, appPolicyHolder.phForm)\\\">Post</button>\\n              <button\\n                *ngIf=\\\"!quoteForm.invalid && !appGroupPolicy.gpForm.invalid && !appPolicyHolder.phForm.invalid\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"proceed(4)\\\">Post</button>\\n            </div>\\n\\n            <div *ngIf=\\\"showPrintBtn\\\" class=\\\"text-right\\\">\\n              <h5><small>Your policy number:</small> {{travelDetails.policyNumber}}</h5>\\n            </div>\\n            <div *ngIf=\\\"showPrintBtn\\\" class=\\\"btn-group\\\" role=\\\"group\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"newPolicy()\\\">New Policy</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                (click)=\\\"printPolicy()\\\">Print</button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n        </form>\\n        <!-- .quote-form -->\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #QuotationTravel -->\\n\\n<ng-template #proceedModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Are you sure you want to proceed?</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have changes to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of changedValues\\\">\\n        {{item}}\\n      </li>\\n\\n      <li *ngFor=\\\"let item of changedTravelerValues\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n    <h6>Changes may affect your premium and will create a new quotation.</h6>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Cancel\\n      </button>\\n      <button *ngIf=\\\"data.generateBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"issueQuote('S')\\\">\\n        Generate\\n      </button>\\n      <button *ngIf=\\\"data.saveBtn\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose (click)=\\\"savePolicy()\\\">\\n        Save\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #validationModal let-data>\\n  <div class=\\\"mat-dialog-header border-bottom\\\">\\n    <div class=\\\"header row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h4>Your application is incomplete</h4>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-dialog-content>\\n    <br>\\n    <h6>You have invalid/empty data to this following field/s: </h6>\\n    <ul>\\n      <li *ngFor=\\\"let item of invalidForms\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n  </mat-dialog-content>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" matDialogClose>\\n        Okay\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\";","export default \"<p>reloading page</p>\\n\";","export default \"<div class=\\\"row\\\" id=\\\"requests\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n\\n      <h4 class=\\\"all-caps\\\">\\n        <span class=\\\"fa-stack fa-md\\\">\\n          <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n          <i class=\\\"fa fa-plus fa-stack-1x fa-inverse\\\"></i>\\n        </span>\\n        Create Requests\\n      </h4>\\n\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <form [formGroup]=\\\"requestForm\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-5 col-md-5 col-sm-12\\\">\\n              <div class=\\\"form-group input-group mb-3\\\" [ngClass]=\\\"{'input-error': requestForm.controls['type'].invalid \\n                  && (requestForm.controls['type'].dirty \\n                  || requestForm.controls['type'].touched)}\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Request Type</label>\\n                </div>\\n\\n                <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"type\\\" [(ngModel)]=\\\"requestDetails.type\\\">\\n                  <option selected>\\n                    <p *ngIf=\\\"requestForm.controls['type'].errors?.required\\\">\\n                      Select Request Type\\n                    </p>\\n                  </option>\\n                  <option value=\\\"P\\\">Policy Request</option>\\n                  <option value=\\\"E\\\">Endorsement</option>\\n                  <option value=\\\"R\\\">Renewal</option>\\n                  <option value=\\\"U\\\">Underwriting</option>\\n                </select>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n            <div class=\\\"form-divider\\\"></div>\\n\\n            <div class=\\\"col-md-12\\\" *ngIf=\\\"showPolicyDetails\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['type1'].invalid \\n                              && (requestForm.controls['type1'].dirty \\n                              || requestForm.controls['type1'].touched)}\\\">\\n\\n                    <label for=\\\"type1\\\">Type 1</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"type1\\\"\\n                      [(ngModel)]=\\\"requestDetails.type1\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['type1'].errors?.required\\\">\\n                      * type 1 is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['type2'].invalid \\n                              && (requestForm.controls['type2'].dirty \\n                              || requestForm.controls['type2'].touched)}\\\">\\n\\n                    <label for=\\\"type2\\\">Type 2</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"type2\\\"\\n                      [(ngModel)]=\\\"requestDetails.type2\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['type2'].errors?.required\\\">\\n                      * type 2 is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['branch'].invalid \\n                              && (requestForm.controls['branch'].dirty \\n                              || requestForm.controls['branch'].touched)}\\\">\\n\\n                    <label for=\\\"branch\\\">Branch</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"branch\\\"\\n                      [(ngModel)]=\\\"requestDetails.branch\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['branch'].errors?.required\\\">\\n                      * branch is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['line'].invalid \\n                              && (requestForm.controls['line'].dirty \\n                              || requestForm.controls['line'].touched)}\\\">\\n\\n                    <label for=\\\"line\\\">Line</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"line\\\"\\n                      [(ngModel)]=\\\"requestDetails.line\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['line'].errors?.required\\\">\\n                      * line is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['subline'].invalid \\n                              && (requestForm.controls['subline'].dirty \\n                              || requestForm.controls['subline'].touched)}\\\">\\n\\n                    <label for=\\\"subline\\\">Subline</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"subline\\\"\\n                      [(ngModel)]=\\\"requestDetails.subline\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['subline'].errors?.required\\\">\\n                      * subline is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['typeOfPolicy'].invalid \\n                        && (requestForm.controls['typeOfPolicy'].dirty \\n                        || requestForm.controls['typeOfPolicy'].touched)}\\\">\\n\\n                    <label for=\\\"typeOfPolicy\\\">Type of Policy</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"typeOfPolicy\\\"\\n                      [(ngModel)]=\\\"requestDetails.typeOfPolicy\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['typeOfPolicy'].errors?.required\\\">\\n                      * type of policy is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['clientName'].invalid \\n                          && (requestForm.controls['clientName'].dirty \\n                          || requestForm.controls['clientName'].touched)}\\\">\\n                    <label for=\\\"clientName\\\">Client Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"clientName\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.clientName\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['clientName'].errors?.required\\\">\\n                      * client name is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['clientGroup'].invalid \\n                              && (requestForm.controls['clientGroup'].dirty \\n                              || requestForm.controls['clientGroup'].touched)}\\\">\\n\\n                    <label for=\\\"clientGroup\\\">Client Group</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"clientGroup\\\"\\n                      [(ngModel)]=\\\"requestDetails.clientGroup\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['clientGroup'].errors?.required\\\">\\n                      * client group is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"clearfix\\\"></div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['copyNotify'].invalid \\n                          && (requestForm.controls['copyNotify'].dirty \\n                          || requestForm.controls['copyNotify'].touched)}\\\">\\n                    <label for=\\\"copyNotify\\\">Copy Notify</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"copyNotify\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.copyNotify\\\" placeholder=\\\"Use semicolon (;) as email separator\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['copyNotify'].errors?.required\\\">\\n                      * copy notify is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['comments'].invalid \\n                      && (requestForm.controls['comments'].dirty \\n                      || requestForm.controls['comments'].touched)}\\\">\\n                    <label for=\\\"comments\\\">Comments or Remarks</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"comments\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.comments\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['comments'].errors?.required\\\">\\n                      * comments/remarks is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"row\\\">\\n                    <ngx-dropzone (change)=\\\"onSelect($event)\\\"\\n                      accept=\\\"image/jpeg,\\n                      image/jpg,\\n                      image/png,\\n                      image/gif,\\n                      application/pdf,\\n                      application/xls,\\n                      application/xlsx,\\n                      application/doc,\\n                      application/docx,\\n                      application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,\\n                      application/vnd.openxmlformats-officedocument.wordprocessingml.document\\\"\\n                      >\\n                      <ngx-dropzone-label>Drop file here</ngx-dropzone-label>\\n                      <ngx-dropzone-preview *ngFor=\\\"let f of files\\\" [removable]=\\\"true\\\" (removed)=\\\"onRemove(f)\\\">\\n                        <ngx-dropzone-label>{{ f.name }}</ngx-dropzone-label>\\n                      </ngx-dropzone-preview>\\n                    </ngx-dropzone>\\n                  </div>\\n                  \\n                </div>\\n\\n                \\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-12\\\" *ngIf=\\\"showDetails\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['requestType'].invalid \\n                        && (requestForm.controls['requestType'].dirty \\n                        || requestForm.controls['requestType'].touched)}\\\">\\n\\n                    <label for=\\\"requestType\\\">Request Type</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"requestType\\\"\\n                      [(ngModel)]=\\\"requestDetails.requestType\\\">\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"1\\\">Endorsement</option>\\n                      <option *ngIf=\\\"showEndorsementRT\\\" value=\\\"2\\\">Cancellation</option>\\n                      <option *ngIf=\\\"showRenewalRT\\\" value=\\\"5\\\">Renewal</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Approval</option>\\n                      <option *ngIf=\\\"showUnderwritingRT\\\" value=\\\"S\\\">Rejection</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\" *ngIf=\\\"showUnderwritingRT\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['issueType'].invalid \\n                        && (requestForm.controls['issueType'].dirty \\n                        || requestForm.controls['issueType'].touched)}\\\">\\n                    <label for=\\\"issueType\\\">Issue Type</label>\\n                    <select class=\\\"custom-select mr-sm-2 required\\\" formControlName=\\\"issueType\\\"\\n                      [(ngModel)]=\\\"requestDetails.issueType\\\">\\n                      <option value=\\\"P\\\">Policy</option>\\n                      <option value=\\\"C\\\">Quotation</option>\\n                    </select>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['issueType'].errors?.required\\\">\\n                      * issue type is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['policyNumber'].invalid \\n                        && (requestForm.controls['policyNumber'].dirty \\n                        || requestForm.controls['policyNumber'].touched)}\\\">\\n                    <label for=\\\"policyNumber\\\">Policy Number</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"policyNumber\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.policyNumber\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['policyNumber'].errors?.required\\\">\\n                      * policy number is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['reason'].invalid \\n                    && (requestForm.controls['reason'].dirty \\n                    || requestForm.controls['reason'].touched)}\\\">\\n                    <label for=\\\"reason\\\">Reason</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"reason\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.reason\\\"></textarea>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['reason'].errors?.required\\\">\\n                      * reason is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['agentEmail'].invalid \\n                    && (requestForm.controls['agentEmail'].dirty \\n                    || requestForm.controls['agentEmail'].touched)}\\\">\\n                    <label for=\\\"agentEmail\\\">Agent's Email</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"agentEmail\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.agentEmail\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['agentEmail'].errors?.required\\\">\\n                      * agent's email is required\\n                    </p>\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['agentEmail'].errors?.email\\\">\\n                      * invalid email format\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['name'].invalid \\n                    && (requestForm.controls['name'].dirty \\n                    || requestForm.controls['name'].touched)}\\\">\\n                    <label for=\\\"name\\\">Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control required\\\"\\n                      [(ngModel)]=\\\"requestDetails.name\\\">\\n                    <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['name'].errors?.required\\\">\\n                      * name is required\\n                    </p>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"clearfix\\\"></div>\\n\\n          </div>\\n          <!-- .row -->\\n\\n          <div class=\\\"alert alert-info note\\\">\\n            <p>\\n              <strong>Important Reminder:</strong> Please make sure to fill out all required fields to enable the button below.\\n            </p>\\n          </div>\\n          <!-- .note -->\\n\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n            <button [disabled]=\\\"requestForm.invalid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n              (click)=\\\"request(requestDetails)\\\">Create Request</button>\\n          </div>\\n\\n          <!-- .btn-group -->\\n\\n        </form>\\n\\n      </div>\\n      <!-- .card-body -->\\n    </div>\\n    <!-- .card.shadow -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n</div>\\n<!-- #requests -->\";","export default \"<form [formGroup]=\\\"requestForm\\\">\\n  <h2 mat-dialog-title>View Details</h2>\\n  <div mat-dialog-content>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <h5>Main Details</h5>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"requestId\\\">Request ID</label>\\n            <input type=\\\"text\\\" formControlName=\\\"requestId\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"requestDetailsList.requestId\\\" [readOnly]=\\\"true\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"requestHandler\\\">Request Handler</label>\\n            <input type=\\\"text\\\" formControlName=\\\"requestHandler\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"requestDetailsList.requestHandler\\\" [attr.disabled]=\\\"true\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"requestType\\\">Request Type</label>\\n            <input type=\\\"text\\\" formControlName=\\\"requestType\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"requestDetailsList.requestType\\\" [attr.disabled]=\\\"true\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"policyNumber\\\">Policy Number</label>\\n            <input type=\\\"text\\\" formControlName=\\\"policyNumber\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"requestDetailsList.policyNumber\\\" [attr.disabled]=\\\"true\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"status\\\">Status</label>\\n            <input type=\\\"text\\\" formControlName=\\\"status\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"requestDetailsList.status\\\" [attr.disabled]=\\\"true\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"address\\\">Message</label>\\n            <textarea type=\\\"text\\\" formControlName=\\\"message\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"requestDetailsList.message\\\" [attr.disabled]=\\\"true\\\"></textarea>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-divider\\\"></div>\\n        \\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"flexitable\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  \\n              <ng-container matColumnDef=\\\"requestHandler\\\">\\n                <th mat-header-cell *matHeaderCellDef> Request Handler </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.requestHandler}} </td>\\n              </ng-container>\\n  \\n              <ng-container matColumnDef=\\\"message\\\">\\n                <th mat-header-cell *matHeaderCellDef> Message </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.message\\\"> {{element.message}} </td>\\n              </ng-container>\\n  \\n              <ng-container matColumnDef=\\\"user\\\">\\n                <th mat-header-cell *matHeaderCellDef> User </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.user}} </td>\\n              </ng-container>\\n  \\n              <ng-container matColumnDef=\\\"source\\\">\\n                <th mat-header-cell *matHeaderCellDef> Source </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\n              </ng-container>\\n  \\n              <ng-container matColumnDef=\\\"postDate\\\">\\n                <th mat-header-cell *matHeaderCellDef> Date </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.postDate}} </td>\\n              </ng-container>\\n  \\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  \\n            </table>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n        \\n        <div class=\\\"form-divider\\\"></div>\\n\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['replyMessage'].invalid \\n              && (requestForm.controls['replyMessage'].dirty \\n              || requestForm.controls['replyMessage'].touched)}\\\">\\n            <label for=\\\"address\\\">Reply</label>\\n            <textarea type=\\\"text\\\" formControlName=\\\"replyMessage\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"replyDetails.message\\\"></textarea>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['replyMessage'].errors?.required\\\">\\n              * reply is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['agentEmail'].invalid \\n              && (requestForm.controls['agentEmail'].dirty \\n              || requestForm.controls['agentEmail'].touched)}\\\">\\n            <label for=\\\"agentEmail\\\">Agent's Email</label>\\n            <input type=\\\"text\\\" formControlName=\\\"agentEmail\\\" class=\\\"form-control required\\\"\\n              [(ngModel)]=\\\"replyDetails.agentEmail\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['agentEmail'].errors?.required\\\">\\n              * agent's email is required\\n            </p>\\n            <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['agentEmail'].errors?.email\\\">\\n              * invalid email format\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'input-error': requestForm.controls['name'].invalid \\n              && (requestForm.controls['name'].dirty \\n              || requestForm.controls['name'].touched)}\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control required\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"replyDetails.name\\\">\\n            <p class=\\\"form-error\\\" *ngIf=\\\"requestForm.controls['name'].errors?.required\\\">\\n              * name is required\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"close()\\\">\\n        Close\\n      </button>\\n      <button [disabled]=\\\"requestForm.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"reply()\\\">\\n        Reply\\n      </button>\\n    </div>\\n  </div>\\n</form>\";","export default \"<div class=\\\"row\\\" id=\\\"requestList\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h4>Request List</h4>\\n    </div>\\n    <!-- .page-header -->\\n  </div>\\n  <!-- .col-xl-12 -->\\n\\n  <div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"col-lg-12\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"filterForm\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"requestType\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Request Type</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"requestType\\\" id=\\\"requestType\\\" [(ngModel)]=\\\"pageFilter.requestType\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of requestTypeItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"requestId\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Request ID</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"requestId\\\" id=\\\"requestId\\\" [(ngModel)]=\\\"pageFilter.requestId\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"policyNumber\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Policy Number</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"policyNumber\\\" id=\\\"policyNumber\\\" [(ngModel)]=\\\"pageFilter.policyNumber\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"status\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Status</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <select class=\\\"custom-select mr-sm-2\\\" formControlName=\\\"status\\\" id=\\\"status\\\" [(ngModel)]=\\\"pageFilter.status\\\">\\n                        <option></option>\\n                        <option *ngFor=\\\"let item of statusItems\\\" [ngValue]=\\\"item\\\">{{ item }}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"requestHandler\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">Request Handler</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"requestHandler\\\" id=\\\"requestHandler\\\" [(ngModel)]=\\\"pageFilter.requestHandler\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-group col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <label for=\\\"user\\\" class=\\\"col-md-12 col-lg-4 col-form-label\\\">User</label>\\n                    <div class=\\\"col-md-12 col-lg-8\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"user\\\" id=\\\"user\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" [(ngModel)]=\\\"pageFilter.user\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12\\\">\\n                  <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"apply()\\\">Apply</button>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n            </form>\\n            \\n\\n          </div>\\n\\n          <div class=\\\"clearfix\\\"></div>\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"flexitable\\\">\\n\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortChange($event)\\\"\\n              class=\\\"mat-elevation-z8\\\">\\n\\n              <!-- Position Column -->\\n              <ng-container matColumnDef=\\\"requestType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Request Type </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.requestType}} </td>\\n              </ng-container>\\n\\n              <!-- Name Column -->\\n              <ng-container matColumnDef=\\\"requestId\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Request ID </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.requestId}} </td>\\n              </ng-container>\\n\\n              <!-- Weight Column -->\\n              <ng-container matColumnDef=\\\"policyNumber\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.policyNumber}} </td>\\n              </ng-container>\\n\\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"status\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\n              </ng-container>\\n\\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"requestHandler\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Request Hanlder </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.requestHandler}} </td>\\n              </ng-container>\\n\\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"user\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> User </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.user}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getDetails(row)\\\"></tr>\\n\\n            </table>\\n          </div>\\n\\n          <div *ngIf=\\\"dataSource.filteredData.length === 0\\\" class=\\\"no-data-found\\\">No Data Found</div>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" [length]=\\\"totalItem\\\" [pageIndex]=\\\"currentPage\\\"\\n            [pageSize]=\\\"pageSize\\\" showFirstLastButtons (page)=\\\"pageChange($event)\\\"></mat-paginator>\\n\\n        </div>\\n        <!-- .card-body -->\\n      </div>\\n      <!-- .card.shadow -->\\n    </div>\\n    <!-- .col-xl-12 -->\\n  </div>\\n  <!-- #requestList -->\";","export default \"<ul class=\\\"navbar-nav sidebar sidebar-dark accordion\\\" id=\\\"accordionSidebar\\\">\\n\\n  <!-- Sidebar - Brand -->\\n  <a class=\\\"sidebar-brand d-flex align-items-center justify-content-center\\\" (click)=\\\"setPage(p.DAS.N)\\\">\\n    <img src=\\\"./assets/images/{{logo}}.png\\\" alt=\\\"brand-logo\\\" />\\n  </a>\\n\\n  <!-- Divider -->\\n  <hr class=\\\"sidebar-divider my-0\\\">\\n\\n  <!-- Nav Item - Dashboard -->\\n  <li *ngIf=\\\"menu.dash\\\" [ngClass]=\\\"{'active': page==p.DAS.N}\\\" class=\\\"nav-item\\\" (click)=\\\"setPage(p.DAS.N)\\\">\\n    <a class=\\\"nav-link\\\">\\n      <i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i>\\n      <span>Dashboard</span></a>\\n  </li>\\n\\n  <!-- Divider -->\\n  <hr class=\\\"sidebar-divider\\\">\\n\\n  <!-- Nav Item - Pages Collapse Menu -->\\n  <li *ngIf=\\\"menu.account\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myAccount\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"myAccount\\\">\\n      <i class=\\\"fas fa-fw fa-user\\\"></i>\\n      <span>My Account</span>\\n    </a>\\n    <div id=\\\"myAccount\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <a *ngIf=\\\"menu.outstanding\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ACC.OUT}\\\"\\n          (click)=\\\"setPage(p.ACC.OUT)\\\"><i class=\\\"fas fa-fw fa-star\\\"></i> Outstanding Bills</a>\\n        <a *ngIf=\\\"menu.commissionsPaid\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ACC.COM}\\\"\\n          (click)=\\\"setPage(p.ACC.COM)\\\"><i class=\\\"fas fa-fw fa-money-bill-wave\\\"></i> Commissions Paid</a>\\n        <a *ngIf=\\\"menu.estimatedCommissions\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ACC.EST}\\\"\\n          (click)=\\\"setPage(p.ACC.EST)\\\"><i class=\\\"fas fa-fw fa-calculator\\\"></i> Estimated Commissions</a>\\n        <a *ngIf=\\\"menu.premiumCollection\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ACC.PRE}\\\"\\n          (click)=\\\"setPage(p.ACC.PRE)\\\"><i class=\\\"fas fa-fw fa-award\\\"></i> Premium Collection</a>\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.client\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myClient\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"myClient\\\">\\n      <i class=\\\"fas fa-fw fa-handshake\\\"></i>\\n      <span>My Client</span>\\n    </a>\\n    <div id=\\\"myClient\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <h6 class=\\\"collapse-header\\\">Clients:</h6>\\n        <a *ngIf=\\\"menu.clientDetails\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.CLI}\\\"\\n          (click)=\\\"setPage(p.CLI.CLI)\\\"><i class=\\\"fas fa-fw fa-info-circle\\\"></i> Details</a>\\n        <h6 class=\\\"collapse-header\\\">Policies:</h6>\\n        <a *ngIf=\\\"menu.active\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.ACT}\\\"\\n          (click)=\\\"setPage(p.CLI.ACT)\\\"><i class=\\\"fas fa-fw fa-user-check\\\"></i> Active</a>\\n        <a *ngIf=\\\"menu.cancelled\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.CAN}\\\"\\n          (click)=\\\"setPage(p.CLI.CAN)\\\"><i class=\\\"fas fa-fw fa-user-times\\\"></i> Cancelled</a>\\n        <a *ngIf=\\\"menu.renewed\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.REN}\\\"\\n          (click)=\\\"setPage(p.CLI.REN)\\\"><i class=\\\"fas fa-fw fa-sync\\\"></i> Renewed</a>\\n        <a *ngIf=\\\"menu.notRenewed\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.NOT}\\\"\\n          (click)=\\\"setPage(p.CLI.NOT)\\\"><i class=\\\"fas fa-fw fa-user-slash\\\"></i> Not Renewed</a>\\n        <a *ngIf=\\\"menu.expiring\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.EXP}\\\"\\n          (click)=\\\"setPage(p.CLI.EXP)\\\"><i class=\\\"fas fa-fw fa-exclamation-triangle\\\"></i> Expiring</a>\\n        <a *ngIf=\\\"menu.provisional\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.PRO}\\\"\\n          (click)=\\\"setPage(p.CLI.PRO)\\\"><i class=\\\"fas fa-fw fa-user-clock\\\"></i> Provisional</a>\\n        <h6 class=\\\"collapse-header\\\">Quotations:</h6>\\n        <a *ngIf=\\\"menu.activeQuotation\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.ACTQ}\\\"\\n          (click)=\\\"setPage(p.CLI.ACTQ)\\\"><i class=\\\"fas fa-fw fa-user-check\\\"></i> Active</a>\\n        <a *ngIf=\\\"menu.provisionalQuotation\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.PROQ}\\\"\\n          (click)=\\\"setPage(p.CLI.PROQ)\\\"><i class=\\\"fas fa-fw fa-user-clock\\\"></i> Provisional</a>\\n        <h6 class=\\\"collapse-header\\\">Claims:</h6>\\n        <a *ngIf=\\\"menu.claims\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.CLI.CLA}\\\"\\n          (click)=\\\"setPage(p.CLI.CLA)\\\"><i class=\\\"fas fa-fw fa-info-circle\\\"></i> Details</a>\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.quick\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#quickQuotation\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"quickQuotation\\\">\\n      <i class=\\\"fas fa-fw fa-play\\\"></i>\\n      <span>Quick Quotation</span>\\n    </a>\\n    <div id=\\\"quickQuotation\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <a *ngIf=\\\"menu.quickCar\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUI.CAR}\\\"\\n          (click)=\\\"setPage(p.QUI.CAR)\\\"><i class=\\\"fas fa-fw fa-car\\\"></i> Car</a>\\n        <a *ngIf=\\\"menu.quickHome\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUI.HOM}\\\"\\n          (click)=\\\"setPage(p.QUI.HOM)\\\"><i class=\\\"fas fa-fw fa-home\\\"></i> Home</a>\\n        <a *ngIf=\\\"menu.quickTravel\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUI.TRA}\\\"\\n          (click)=\\\"setPage(p.QUI.TRA)\\\"><i class=\\\"fas fa-fw fa-plane\\\"></i> Travel</a>\\n        <a *ngIf=\\\"menu.quickAccident\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUI.ACC}\\\"\\n          (click)=\\\"setPage(p.QUI.ACC)\\\"><i class=\\\"fas fa-fw fa-shield-alt\\\"></i> Accident</a>\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.quotation\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link{{appType!='Q' ? ' collapsed' : ''}}\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#quotation\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"quotation\\\">\\n      <i class=\\\"fas fa-fw fa-play\\\"></i>\\n      <span>Quotation</span>\\n    </a>\\n    <div id=\\\"quotation\\\" class=\\\"collapse{{appType=='Q' ? ' show' : ''}}\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <a *ngIf=\\\"menu.quotationCar\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUO.CAR}\\\"\\n          (click)=\\\"setAppPage(p.QUO.CAR)\\\"><i class=\\\"fas fa-fw fa-car\\\"></i> Car</a>\\n        <a *ngIf=\\\"menu.quotationHome\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUO.HOM}\\\"\\n          (click)=\\\"setPage(p.QUO.HOM)\\\"><i class=\\\"fas fa-fw fa-home\\\"></i> Home</a>\\n        <a *ngIf=\\\"menu.quotationTravel\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUO.TRA}\\\"\\n          (click)=\\\"setAppPage(p.QUO.TRA)\\\"><i class=\\\"fas fa-fw fa-plane\\\"></i> Travel</a>\\n        <a *ngIf=\\\"menu.quotationAccident\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.QUO.ACC}\\\"\\n          (click)=\\\"setPage(p.QUO.ACC)\\\"><i class=\\\"fas fa-fw fa-shield-alt\\\"></i> Accident</a>\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.issuance\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link{{appType!='I' ? ' collapsed' : ''}}\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#policyIssuance\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"policyIssuance\\\">\\n      <i class=\\\"fas fa-fw fa-play\\\"></i>\\n      <span>Policy Issuance</span>\\n    </a>\\n    <div id=\\\"policyIssuance\\\" class=\\\"collapse{{appType=='I' ? ' show' : ''}}\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <a *ngIf=\\\"menu.issuanceCar\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ISS.CAR}\\\"\\n          (click)=\\\"setAppPage(p.ISS.CAR)\\\"><i class=\\\"fas fa-fw fa-car\\\"></i> Car</a>\\n        <a *ngIf=\\\"menu.issuanceHome\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ISS.HOM}\\\"\\n          (click)=\\\"setAppPage(p.ISS.HOM)\\\"><i class=\\\"fas fa-fw fa-home\\\"></i> Home</a>\\n        <a *ngIf=\\\"menu.issuanceTravel\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ISS.TRA}\\\"\\n          (click)=\\\"setAppPage(p.ISS.TRA)\\\"><i class=\\\"fas fa-fw fa-plane\\\"></i> Travel</a>\\n        <a *ngIf=\\\"menu.issuanceAccident\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.ISS.ACC}\\\"\\n          (click)=\\\"setPage(p.ISS.ACC)\\\"><i class=\\\"fas fa-fw fa-shield-alt\\\"></i> Accident</a>\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.requests\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#requests\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"requests\\\">\\n      <i class=\\\"fas fa-fw fa-bell\\\"></i>\\n      <span>Requests</span>\\n    </a>\\n    <div id=\\\"requests\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <a *ngIf=\\\"menu.requestCreate\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.REQ.CRE}\\\"\\n          (click)=\\\"setPage(p.REQ.CRE)\\\"><i class=\\\"fas fa-fw fa-plus\\\"></i> Create Request</a>\\n        <a *ngIf=\\\"menu.requestList\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.REQ.LIS}\\\"\\n          (click)=\\\"setPage(p.REQ.LIS)\\\"><i class=\\\"fas fa-fw fa-clipboard-list\\\"></i> Request List</a>\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.utilities\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#utilities\\\" aria-expanded=\\\"true\\\"\\n      aria-controls=\\\"utilities\\\">\\n      <i class=\\\"fas fa-fw fa-tools\\\"></i>\\n      <span>Utilities</span>\\n    </a>\\n    <div id=\\\"utilities\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n      <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\n        <a *ngIf=\\\"menu.query\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.UTI.QUE}\\\"\\n          (click)=\\\"setPage(p.UTI.QUE)\\\"><i class=\\\"fas fa-fw fa-clipboard-list\\\"></i> Query</a>\\n        <a *ngIf=\\\"menu.documentPrinting\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.UTI.DOC}\\\"\\n          (click)=\\\"setPage(p.UTI.DOC)\\\"><i class=\\\"fas fa-fw fa-print\\\"></i> Document Printing</a>\\n        <!-- <a *ngIf=\\\"menu.changePassword\\\" class=\\\"collapse-item\\\" [ngClass]=\\\"{'active': page==p.UTI.CHA}\\\"\\n          (click)=\\\"setPage(p.UTI.CHA)\\\"><i class=\\\"fas fa-fw fa-key\\\"></i> Change Password</a> -->\\n      </div>\\n    </div>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.news\\\" [ngClass]=\\\"{'active': page==p.NEW.N}\\\" class=\\\"nav-item\\\" (click)=\\\"setPage(p.NEW.N)\\\">\\n    <a class=\\\"nav-link\\\">\\n      <i class=\\\"fas fa-fw fa-newspaper\\\"></i>\\n      <span>News</span>\\n    </a>\\n  </li>\\n\\n  <li *ngIf=\\\"menu.faq\\\" [ngClass]=\\\"{'active': page==p.FAQ.N}\\\" class=\\\"nav-item\\\" (click)=\\\"setPage(p.FAQ.N)\\\">\\n    <a class=\\\"nav-link\\\">\\n      <i class=\\\"fas fa-fw fa-question\\\"></i>\\n      <span>FAQ</span>\\n    </a>\\n  </li>\\n\\n  <!-- Divider -->\\n  <hr class=\\\"sidebar-divider\\\">\\n\\n  <!-- Heading -->\\n  <div class=\\\"sidebar-heading\\\">\\n    User Information\\n  </div>\\n\\n  <li class=\\\"nav-item\\\">\\n    <div class=\\\"nav-link\\\">\\n      <i class=\\\"fas fa-fw fa-user\\\"></i>\\n      <span>{{currentUser.userName}}</span></div>\\n  </li>\\n\\n  <li *ngIf=\\\"currentUser.address\\\" class=\\\"nav-item\\\">\\n    <div class=\\\"nav-link\\\">\\n      <i class=\\\"fas fa-fw fa-map-marked-alt\\\"></i>\\n      <span>{{currentUser.address}}</span></div>\\n  </li>\\n\\n  <!-- <li class=\\\"nav-item\\\">\\n    <div class=\\\"nav-link\\\">\\n      <i class=\\\"fas fa-fw fa-key\\\"></i>\\n      <span>Your password will expire in <strong>{{currentUser.expiryDay}}\\n          {{currentUser.expiryDay <= 1 ? 'day' : 'days' }}</strong></span></div>\\n  </li> -->\\n\\n  <div *ngIf=\\\"hasSelectedAgent\\\">\\n    <!-- Divider -->\\n    <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\n\\n    <!-- Heading -->\\n    <div class=\\\"sidebar-heading\\\">\\n      Agent Information\\n    </div>\\n\\n    <li class=\\\"nav-item\\\">\\n      <div class=\\\"nav-link\\\">\\n        <i class=\\\"fas fa-fw fa-user\\\"></i>\\n        <span>{{currentUser.selectedAgent.agentName}}</span></div>\\n    </li>\\n\\n    <li *ngIf=\\\"currentUser.selectedAgent.agentAddress\\\" class=\\\"nav-item\\\">\\n      <div class=\\\"nav-link\\\">\\n        <i class=\\\"fas fa-fw fa-map-marked-alt\\\"></i>\\n        <span>{{currentUser.selectedAgent.agentAddress}}</span></div>\\n    </li>\\n  </div>\\n\\n  <!-- Sidebar Toggler (Sidebar) -->\\n  <!-- <div class=\\\"text-center d-none d-md-inline\\\">\\n    <button class=\\\"rounded-circle border-0\\\" id=\\\"sidebarToggle\\\"></button>\\n  </div> -->\\n</ul>\";","export default \"  <!-- Page Wrapper -->\\n  <div id=\\\"wrapper\\\">\\n\\n    <!-- Sidebar -->\\n    <app-sidenav class=\\\"{{sideNavClass}}\\\"></app-sidenav>\\n\\n    <!-- Content Wrapper -->\\n    <div id=\\\"content-wrapper\\\" class=\\\"d-flex flex-column\\\">\\n\\n      <!-- Main Content -->\\n      <div id=\\\"content\\\">\\n\\n        <!-- Header -->\\n        <app-header></app-header>\\n\\n        <!-- Begin Page Content -->\\n        <div class=\\\"container-fluid\\\">\\n          <app-dashboard *ngIf=\\\"page === p.DAS.N\\\"></app-dashboard>\\n\\n          <app-profile *ngIf=\\\"page === p.UTI.CHA\\\"></app-profile>\\n\\n          <app-account-outstanding-bills-list *ngIf=\\\"page === p.ACC.OUT\\\"></app-account-outstanding-bills-list>\\n          <app-account-commissions-paid-list *ngIf=\\\"page === p.ACC.COM\\\"></app-account-commissions-paid-list>\\n          <app-account-estimated-commissions-list *ngIf=\\\"page === p.ACC.EST\\\"></app-account-estimated-commissions-list>\\n          <app-account-premium-collection-list *ngIf=\\\"page === p.ACC.PRE\\\"></app-account-premium-collection-list>\\n\\n          <app-client-details-list *ngIf=\\\"page === p.CLI.CLI\\\"></app-client-details-list>\\n          <app-client-policy-active-list *ngIf=\\\"page === p.CLI.ACT\\\"></app-client-policy-active-list>\\n          <app-client-policy-cancelled-list *ngIf=\\\"page === p.CLI.CAN\\\"></app-client-policy-cancelled-list>\\n          <app-client-policy-renewed-list *ngIf=\\\"page === p.CLI.REN\\\"></app-client-policy-renewed-list>\\n          <app-client-policy-not-renewed-list *ngIf=\\\"page === p.CLI.NOT\\\"></app-client-policy-not-renewed-list>\\n          <app-client-policy-expiring-list *ngIf=\\\"page === p.CLI.EXP\\\"></app-client-policy-expiring-list>\\n          <app-client-policy-provisional-list *ngIf=\\\"page === p.CLI.PRO\\\"></app-client-policy-provisional-list>\\n          <app-client-quotation-active-list *ngIf=\\\"page === p.CLI.ACTQ\\\"></app-client-quotation-active-list>\\n          <app-client-quotation-provisional-list *ngIf=\\\"page === p.CLI.PROQ\\\"></app-client-quotation-provisional-list>\\n          <app-client-claims-list *ngIf=\\\"page === p.CLI.CLA\\\"></app-client-claims-list>\\n\\n          <app-quick-quotation-car *ngIf=\\\"page === p.QUI.CAR\\\"></app-quick-quotation-car>\\n          <app-quick-quotation-home *ngIf=\\\"page === p.QUI.HOM\\\"></app-quick-quotation-home>\\n          <app-quick-quotation-travel *ngIf=\\\"page === p.QUI.TRA\\\"></app-quick-quotation-travel>\\n          <app-quick-quotation-accident *ngIf=\\\"page === p.QUI.ACC\\\"></app-quick-quotation-accident>\\n\\n          <app-quotation-car *ngIf=\\\"page === p.QUO.CAR\\\"></app-quotation-car>\\n          <app-quotation-home *ngIf=\\\"page === p.QUO.HOM\\\"></app-quotation-home>\\n          <app-quotation-travel *ngIf=\\\"page === p.QUO.TRA\\\"></app-quotation-travel>\\n          <app-quotation-accident *ngIf=\\\"page === p.QUO.ACC\\\"></app-quotation-accident>\\n\\n          <app-quotation-car *ngIf=\\\"page === p.ISS.CAR\\\"></app-quotation-car>\\n          <app-quotation-home *ngIf=\\\"page === p.ISS.HOM\\\"></app-quotation-home>\\n          <app-quotation-travel *ngIf=\\\"page === p.ISS.TRA\\\"></app-quotation-travel>\\n          <app-quotation-accident *ngIf=\\\"page === p.ISS.ACC\\\"></app-quotation-accident>\\n\\n          <app-request-list *ngIf=\\\"page === p.REQ.LIS\\\"></app-request-list>\\n          <app-request-create *ngIf=\\\"page === p.REQ.CRE\\\"></app-request-create>\\n          \\n          <app-query *ngIf=\\\"page === p.UTI.QUE\\\"></app-query>\\n          <app-document-printing *ngIf=\\\"page === p.UTI.DOC\\\"></app-document-printing>\\n\\n          <app-missing-page *ngIf=\\\"page === p.NEW.N\\\"></app-missing-page>\\n\\n          <app-faq *ngIf=\\\"page === p.FAQ.N\\\"></app-faq>\\n        </div>\\n        <!-- End Page Content -->\\n\\n      </div>\\n      <!-- End of Main Content -->\\n\\n      <!-- Footer -->\\n      <app-footer></app-footer>\\n\\n    </div>\\n    <!-- End of Content Wrapper -->\\n\\n    <!-- Scroll to Top Button-->\\n    <a class=\\\"scroll-to-top rounded\\\" href=\\\"#page-top\\\">\\n      <i class=\\\"fas fa-angle-up\\\"></i>\\n    </a>\\n  </div>\\n  <!-- End of Page Wrapper -->\\n\";","export default \"<div id=\\\"termsAndCondition\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"wrap\\\">\\n            <div class=\\\"row\\\">\\n\\n              <div class=\\\"col-lg-4 menu\\\">\\n                <a class=\\\"brand-logo\\\" (click)=\\\"redirect()\\\">\\n                    <img src=\\\"./assets/images/mivo-logo/mivo-logo-light.png\\\" alt=\\\"brand-logo\\\" />\\n                </a>\\n\\n                <ul class=\\\"terms-menu\\\">\\n                  <li (click)=\\\"scrollTo('cancellation')\\\">\\n                    CANCELLATION AND REFUND\\n                  </li>\\n                  <li (click)=\\\"scrollTo('security')\\\">\\n                    SECURITY CAPABILITIES & POLICY FOR TRANSMISSION OF PAYMENT\\n                  </li>\\n                  <li (click)=\\\"scrollTo('copyright')\\\">\\n                    COPYRIGHT\\n                  </li>\\n                  <li (click)=\\\"scrollTo('disclaimer')\\\">\\n                    DISCLAIMER\\n                  </li>\\n                  <li (click)=\\\"scrollTo('jurisdiction')\\\">\\n                    JURISDICTION\\n                  </li>\\n                </ul>\\n              </div>\\n              <!-- .col-lg-4 -->\\n\\n              <div class=\\\"col-lg-8 details\\\">\\n\\n                <div class=\\\"scroll\\\">\\n                  <div class=\\\"scroll-wrapper\\\">\\n                    <h2>\\n                      TERMS AND CONDITIONS\\n                    </h2>\\n\\n                    <div id=\\\"cancellation\\\" class=\\\"top-20\\\">\\n                      <h5>\\n                        CANCELLATION AND REFUND\\n                      </h5>\\n                      <div class=\\\"terms\\\">\\n                        <p>\\n                          For policy cancellation and refund, Terms and Conditions of Mapfre Insurance Corporation shall apply.\\n                        </p>\\n                      </div>\\n                    </div>\\n\\n                    <div id=\\\"security\\\" class=\\\"top-20\\\">\\n                      <h5>\\n                        SECURITY CAPABILITIES & POLICY FOR TRANSMISSION OF PAYMENT\\n                      </h5>\\n                      <div class=\\\"terms\\\">\\n                        <ol>\\n                          <li>\\n                            What information do we collect and how do we use it? When you make credit card transaction through\\n                            this website, we need your personal information such as (e.g. name, e-mail, phone number, address,\\n                            and etc). This allows us to process and fulfill your transaction successfully. It also helps us in\\n                            maintaining your account.\\n                          </li>\\n                          <li>\\n                            How does MAPFRE Insurance protect customer information? When you make transaction, we use a secure\\n                            server. The secure server software (SSL) encrypts all information you input before it is sent to\\n                            us. Furthermore, all of the sensitive customer data we collect is protected by several layers of\\n                            encryption and several layers of security to prevent unauthorized access.\\n                          </li>\\n                          <li>\\n                            Credit Card Details All credit card payments are processed securely through Paynamics. MAPFRE\\n                            Insurance does not store any credit card information on our servers.\\n                          </li>\\n                        </ol>\\n                      </div>\\n                    </div>\\n\\n                    <div id=\\\"copyright\\\" class=\\\"top-20\\\">\\n                      <h5>\\n                        COPYRIGHT\\n                      </h5>\\n                      <div class=\\\"terms\\\">\\n                        <p>All contents included in this site, such as text, graphics, logos, button icons, images, audio\\n                          clips and software are property of mapfre.com.ph or its content suppliers and protected by\\n                          Philippine and International copyright laws. The compilation of all contents on this site is the\\n                          exclusive property of mapfre.com.ph and protected by Philippine and International copyright laws.\\n                          The reproduction, distribution, transmission, republication or display of the content in this\\n                          website without consent from mapfre.com.ph is strictly prohibited.</p>\\n                      </div>\\n                    </div>\\n\\n                    <div id=\\\"disclaimer\\\" class=\\\"top-20\\\">\\n                      <h5>\\n                        DISCLAIMER\\n                      </h5>\\n                      <div class=\\\"terms\\\">\\n                        <p>This website and the information, services, products and materials available through it are\\n                          provided \\\"as is\\\" basis, without warranty of any kind, either express or implied, to the extent\\n                          permitted under any applicable law, including without limitation, implied warranties or\\n                          conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual\\n                          property or other violation of rights, Further Mapfre.com.ph does not warrant or make any representations\\n                          concerning the accuracy, likely results or reliability of the use of the materials on its Internet\\n                          web or otherwise relating to such materials or on any sites linked to this site.</p>\\n                      </div>\\n                    </div>\\n\\n                    <div id=\\\"jurisdiction\\\" class=\\\"top-20\\\">\\n                      <h5>\\n                        JURISDICTION\\n                      </h5>\\n                      <div class=\\\"terms\\\">\\n                        <p>\\n                          For products and services only available for purchase in the Philippines, these terms and conditions\\n                          shall be governed by and construed in accordance with Philippine Law. Disputes arising between you\\n                          and Mapfre.com.ph shall be subject to the exclusive jurisdiction of the courts of the\\n                          Philippines.\\n                        </p>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n                <!-- .scroll -->\\n\\n              </div>\\n              <!-- .col-lg-8 -->\\n\\n            </div>\\n            <!-- .row -->\\n          </div>\\n          <!-- .wrap -->\\n        </div>\\n        <!-- .container -->\\n      </div>\\n      <!-- .col-lg-12 -->\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n    <!-- .row -->\\n  </div>\\n  <!-- .container-fluid -->\\n</div>\\n<!-- #termsAndCondition -->\";","export default \"<h2 mat-dialog-title>{{ title || 'View Details'}}</h2>\\n<div mat-dialog-content>\\n  <div class=\\\"container\\\">\\n    <!-- MY CLIENT lists -->\\n    <!-- CLIENT DETAILS -->\\n    <div *ngIf=\\\"type == 'client-details'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Client Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.name}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.email}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"address\\\">Address</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.address}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"documentType\\\">Document Type</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.documentType}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"documentCode\\\">Document Code</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.documentCode}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"homeTelNumber\\\">Home Tel. No.</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.homeTelNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"BusinessTelNumber\\\">Business Tel. No.</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listClientDetails.businessTelNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"mobileNumber\\\">Mobile Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClientDetails.mobileNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- ACTIVE POLICY -->\\n    <div *ngIf=\\\"type == 'client-active'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Active Policy Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyActive.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyDueDate\\\">Due Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.policyDueDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"line\\\">Line</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.line}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"documentType\\\">Document Type</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.documentType}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"documentCode\\\">Document Code</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.documentCode}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyActive.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- CANCELLED POLICY -->\\n    <div *ngIf=\\\"type == 'client-cancelled'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Cancelled Policy Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyCancelled.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyCancelled.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"line\\\">Line</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyCancelled.line}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyCancelled.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyCancelled.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- RENEWED POLICY -->\\n    <div *ngIf=\\\"type == 'client-renewed'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Renewed Policy Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyRenewed.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyRenewed.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyDueDate\\\">Due Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyRenewed.policyDueDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyRenewed.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"documentType\\\">Document Type</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyRenewed.documentType}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"documentCode\\\">Document Code</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyRenewed.documentCode}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- NOT RENEWED POLICY -->\\n    <div *ngIf=\\\"type == 'client-not-renewed'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Not Renewed Policy Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyNotRenewed.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyNotRenewed.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyDueDate\\\">Due Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyNotRenewed.policyDueDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"line\\\">Line</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyNotRenewed.line}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyNotRenewed.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyNotRenewed.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- EXPIRING POLICY -->\\n    <div *ngIf=\\\"type == 'client-expiring'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Expiring Policy Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyExpiring.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyExpiring.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyExpiryDate\\\">Expirty Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyExpiring.policyExpiryDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyExpiring.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyExpiring.email}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"telephoneNumber\\\">Telephone Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyExpiring.telephoneNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- PROVISIONAL POLICY -->\\n    <div *ngIf=\\\"type == 'client-provisional'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Provisional Policy Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyProvisional.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyProvisional.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyDueDate\\\">Due Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyProvisional.policyDueDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"line\\\">Line</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyProvisional.line}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listPolicyProvisional.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listPolicyProvisional.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- ACTIVE QUOTATION -->\\n    <div *ngIf=\\\"type == 'client-active-quotation'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Active Quotation Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"quotationNumber\\\">Quotation Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationActive.quotationNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationActive.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyDueDate\\\">Due Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationActive.policyDueDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"line\\\">Line</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listQuotationActive.line}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listQuotationActive.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listQuotationActive.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- PROVISIONAL QUOTATION -->\\n    <div *ngIf=\\\"type == 'client-provisional-quotation'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Provisional Quotation Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"quotationNumber\\\">Quotation Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationProvisional.quotationNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyEffectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationProvisional.policyEffectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyDueDate\\\">Due Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationProvisional.policyDueDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"line\\\">Line</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listQuotationProvisional.line}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listQuotationProvisional.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listQuotationProvisional.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- CLAIM DETAILS -->\\n    <div *ngIf=\\\"type == 'client-claims'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Claim Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"claimNumber\\\">Claim Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClaimDetails.claimNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"fileNumber\\\">File Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClaimDetails.fileNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"fileName\\\">File Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClaimDetails.fileName}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"lossDate\\\">Loss Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClaimDetails.lossDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"notificationDate\\\">Notification Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listClaimDetails.notificationDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"reserveAmount\\\">Reserve Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClaimDetails.reserveAmount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listClaimDetails.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- MY ACCOUNT lists -->\\n    <!-- OUTSTANDING BILLS -->\\n    <div *ngIf=\\\"type == 'account-outstanding-bills' && !isProceedToPayment\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Outstanding Bills Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"claimNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"prn\\\">PRN</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listAccountOutstandingBills.prn}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"invoiceNumber\\\">Invoice Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.invoiceNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"currency\\\">Currency</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.currency}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"effectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.effectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"expiryDate\\\">Expiry Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.expiryDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"paymentDateExpiry\\\">Payment Date Expiry</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.paymentDateExpiry}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"age\\\">Age</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\" value={{listAccountOutstandingBills.age}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"amount\\\">Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.amount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"paymentStatus\\\">Payment Status</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.paymentStatus}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"subline\\\">Subline</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountOutstandingBills.subline}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- OUTSTANDING BILLS PROCEED TO PAYMENT -->\\n    <form [formGroup]=\\\"paymentForm\\\">\\n      <div *ngIf=\\\"type == 'account-outstanding-bills' && isProceedToPayment\\\" class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <h5>Additional Information for Payment</h5>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <h6>Pay via:</h6>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"form-check\\\">\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"paynamics\\\" formControlName=\\\"paymentMethod\\\" id=\\\"radioPaynamics\\\" (change)=\\\"changePaymentMethod($event)\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"radioPaynamics\\\">\\n              Paynamics\\n            </label>\\n          </div>\\n          <div class=\\\"form-check\\\">\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"globalpay\\\" formControlName=\\\"paymentMethod\\\" id=\\\"radioGlobalPay\\\" (change)=\\\"changePaymentMethod($event)\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"radioGlobalPay\\\">\\n              Global Pay\\n            </label>\\n          </div>\\n        </div>\\n        <hr class=\\\"w-100\\\" />\\n        <ng-container *ngIf=\\\"paymentMethod === 'paynamics'\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"claimNumber\\\"><span class=\\\"required-indicator\\\">*</span>Email</label>\\n              <input type=\\\"text\\\" class=\\\"form-control required\\\" formControlName=\\\"email\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"claimNumber\\\">Phone</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"claimNumber\\\">Mobile</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"mobile\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"claimNumber\\\"><span class=\\\"required-indicator\\\">*</span>Address 1</label>\\n              <input type=\\\"text\\\" class=\\\"form-control required\\\" formControlName=\\\"address1\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"policyHolder\\\">Address 2</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address2\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"prn\\\"><span class=\\\"required-indicator\\\">*</span>City/Town</label>\\n              <input type=\\\"text\\\" class=\\\"form-control required\\\"  formControlName=\\\"city\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"invoiceNumber\\\"><span class=\\\"required-indicator\\\">*</span>Province/State</label>\\n              <input type=\\\"text\\\" class=\\\"form-control required\\\" formControlName=\\\"province\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"currency\\\">Zip</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"zip\\\">\\n            </div>\\n          </div>\\n          <hr class=\\\"w-100\\\" />\\n        </ng-container>\\n        <div class=\\\"col-md-12\\\">\\n          <h5>TERMS AND CONDITION</h5>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <h6>CANCELLATION AND REFUND</h6>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <p>For policy cancellation and refund, Terms and Conditions of Mapfre Insurance Corporation shall apply.</p>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <h6>SECURITY CAPABILITIES & POLICY FOR TRANSMISSION OF PAYMENT</h6>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <ul>1. What information do we collect and how do we use it? When you make credit card transaction through this website, we need your personal information such as (e.g. name, e-mail, phone number, address, and etc). This allows us to process and fulfill your transaction successfully. It also helps us in maintaining your account.</ul>\\n          <ul>2. How does MAPFRE Insurance protect customer information? When you make transaction, we use a secure server. The secure server software (SSL) encrypts all information you input before it is sent to us. Furthermore, all of the sensitive customer data we collect is protected by several layers of encryption and several layers of security to prevent unauthorized access.</ul>\\n          <ul>3. Credit Card Details All credit card payments are processed securely through Paynamics. MAPFRE Insular does not store any credit card information on our servers.</ul>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <h6>COPYRIGHT</h6>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <p>All contents included in this site, such as text, graphics, logos, button icons, images, audio clips and software are property of mapfre.com.ph or its content suppliers and protected by Philippine and International copyright laws. The compilation of all contents on this site is the exclusive property of mapfre.com.ph and protected by Philippine and International copyright laws. The reproduction, distribution, transmission, republication or display of the content in this website without consent from mapfre.com.ph is strictly prohibited.</p>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <h6>DISCLAIMER</h6>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <p>This website and the information, services, products and materials available through it are provided \\\"as is\\\" basis, without warranty of any kind, either express or implied, to the extent permitted under any applicable law, including without limitation, implied warranties or conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual property or other violation of rights, Further Mapfre.com.ph does not warrant or make any representations concerning the accuracy, likely results or reliability of the use of the materials on its Internet web or otherwise relating to such materials or on any sites linked to this site.</p>  \\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <h6>JURISDICTION</h6>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <p>For products and services only available for purchase in the Philippines, these terms and conditions shall be governed by and construed in accordance with Philippine Law. Disputes arising between you and Mapfre.com.ph shall be subject to the exclusive jurisdiction of the courts of the Philippines.</p>  \\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <span>By clicking 'I agree', you are accepting to the Mapfre's Payment terms and condition.</span>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n    </form>\\n\\n    <!-- COMMISSIONS PAID -->\\n    <div *ngIf=\\\"type == 'account-commissions-paid'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Commissions Paid Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"currency\\\">Currency</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.currency}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"invoiceNumber\\\">Invoice Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.invoiceNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"receiptAmount\\\">Receipt Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.receiptAmount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"commissionAmount\\\">Commission Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.commissionAmount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"withholdingTaxAmount\\\">Withholding Tax Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.withholdingTaxAmount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountCommissionsPaid.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- ESTIMATED COMMISSIONS -->\\n    <div *ngIf=\\\"type == 'account-estimated-commissions'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Estimated Commissions Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyHolder\\\">Policy Holder</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.policyHolder}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"currency\\\">Currency</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.currency}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"invoiceNumber\\\">Invoice Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.invoiceNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"movementDate\\\">Movement Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.movementDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"receiptAmount\\\">Receipt Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.receiptAmount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"estimatedCommission\\\">Estimated Commission</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.estimatedCommission}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountEstimatedCommissions.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n    <!-- PREMIUM COLLECTION -->\\n    <div *ngIf=\\\"type == 'account-premium-collection'\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h5>Premium Collection Details</h5>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"policyNumber\\\">Policy Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.policyNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"currency\\\">Currency</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.currency}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"subline\\\">Subline</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.subline}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"invoiceNumber\\\">Invoice Number</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.invoiceNumber}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"effectivityDate\\\">Effectivity Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.effectivityDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"expiryDate\\\">Expiry Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.expiryDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"collectedDate\\\">Collected Date</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.collectedDate}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"collectionType\\\">Collection Type</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.collectionType}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"receiptAmount\\\">Receipt Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.receiptAmount}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"netPremium\\\">Net Premium</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.netPremium}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"surcharge\\\">Surcharge</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.surcharge}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"tax\\\">Tax</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.tax}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"interest\\\">Interest</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.interest}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"source\\\">Source</label>\\n          <input type=\\\"text\\\" class=\\\"form-control required\\\" [readOnly]=\\\"true\\\"\\n            value={{listAccountPremiumCollection.source}}>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n\\n  </div>\\n  <!-- .container -->\\n</div>\\n<!-- mat-dialog-content -->\\n\\n<div mat-dialog-actions align=\\\"end\\\">\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button *ngIf=\\\"type == 'account-outstanding-bills' && !isProceedToPayment\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"pay()\\\">\\n      Proceed to Payment\\n    </button>\\n    <button *ngIf=\\\"type == p.ACC.SUC\\\"  type=\\\"button\\\" class=\\\"btn btn-success\\\">\\n      Print Policy\\n    </button>\\n    <button *ngIf=\\\"type == 'account-outstanding-bills' && isProceedToPayment\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"redirectToPayment(listAccountOutstandingBills)\\\">\\n      I agree\\n    </button>\\n    <button *ngIf=\\\"type == 'client-active' || type == 'client-claims'\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"inquire()\\\">\\n      Inquire\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"close()\\\">\\n      Close\\n    </button>\\n  </div>\\n</div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\nimport { Spinkit } from 'ng-http-loader';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'mivo';\n  spinnerStyle = Spinkit;\n}\n","import {\n  BrowserModule\n} from \"@angular/platform-browser\";\nimport {\n  NgModule\n} from \"@angular/core\";\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from \"@angular/forms\";\nimport {\n  HTTP_INTERCEPTORS\n} from \"@angular/common/http\";\n\nimport {\n  NgxDropzoneModule\n} from \"ngx-dropzone\";\nimport {\n  HttpClientModule\n} from \"@angular/common/http\";\nimport {\n  AppRoutingModule\n} from \"./app-routing.module\";\nimport {\n  AppComponent\n} from \"./app.component\";\nimport {\n  BrowserAnimationsModule\n} from \"@angular/platform-browser/animations\";\nimport {\n  BsDatepickerModule\n} from \"ngx-bootstrap/datepicker\";\nimport {\n  ModalModule\n} from \"ngx-bootstrap/modal\";\nimport {\n  NgMultiSelectDropDownModule\n} from \"ng-multiselect-dropdown\";\nimport {\n  NgSelectModule\n} from \"@ng-select/ng-select\";\nimport {\n  MatTableModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatTooltipModule,\n  MatDialogModule,\n} from \"@angular/material\";\nimport {\n  ChartsModule\n} from 'ng2-charts';\n\nimport {\n  RouterModule,\n  Routes\n} from \"@angular/router\";\nimport {\n  TranslateModule\n} from \"@ngx-translate/core\";\nimport {\n  NgHttpLoaderModule\n} from \"ng-http-loader\";\nimport {\n  ServiceModule\n} from \"./services/service.module\";\n\n//login component\nimport {\n  LoginComponent\n} from \"./components/login/login.component\";\n\n//page component\nimport {\n  DashboardComponent\n} from \"./components/dashboard/dashboard.component\";\nimport {\n  FooterComponent\n} from \"./components/footer/footer.component\";\nimport {\n  HeaderComponent\n} from \"./components/header/header.component\";\nimport {\n  SidenavComponent\n} from \"./components/sidenav/sidenav.component\";\nimport {\n  TemplateComponent\n} from \"./components/template/template.component\";\n\n//other feature components\nimport {\n  MissingPageComponent\n} from \"./components/missing-page/missing-page.component\";\nimport {\n  ProfileComponent\n} from \"./components/profile/profile.component\";\nimport {\n  QueryComponent\n} from \"./components/query/query.component\";\nimport {\n  FaqComponent\n} from \"./components/faq/faq.component\";\n\n//table list components\nimport {\n  OutstandingBillsComponent\n} from \"./components/outstanding-bills/outstanding-bills.component\";\n\n// quotation components\nimport {\n  QuotationCarComponent\n} from \"./components/quotation-car/quotation-car.component\";\nimport {\n  QuotationHomeComponent\n} from \"./components/quotation-home/quotation-home.component\";\nimport {\n  QuotationTravelComponent\n} from \"./components/quotation-travel/quotation-travel.component\";\nimport {\n  QuotationAccidentComponent\n} from \"./components/quotation-accident/quotation-accident.component\";\n\n// quick quotation components\nimport {\n  QuickQuotationCarComponent\n} from \"./components/quick-quotation-car/quick-quotation-car.component\";\nimport {\n  QuickQuotationHomeComponent\n} from \"./components/quick-quotation-home/quick-quotation-home.component\";\nimport {\n  QuickQuotationTravelComponent\n} from \"./components/quick-quotation-travel/quick-quotation-travel.component\";\nimport {\n  QuickQuotationAccidentComponent\n} from \"./components/quick-quotation-accident/quick-quotation-accident.component\";\n\nimport {\n  ModalComponent\n} from \"./components/modal/modal.component\";\nimport {\n  GroupPolicyComponent\n} from \"./components/group-policy/group-policy.component\";\n\nimport {\n  AuthGuard\n} from \"./helpers/auth.guard\";\nimport {\n  JwtInterceptor\n} from \"./helpers/jwt.interceptor\";\nimport {\n  ErrorInterceptor\n} from \"./helpers/error.interceptor\";\nimport {\n  fakeBackendProvider\n} from \"./helpers/fake-backend\";\nimport {\n  IndividualPolicyComponent\n} from \"./components/individual-policy/individual-policy.component\";\nimport {\n  ChooseAgentComponent\n} from \"./components/choose-agent/choose-agent.component\";\nimport {\n  DocumentPrintingComponent\n} from \"./components/document-printing/document-printing.component\";\nimport {\n  PolicyHolderComponent\n} from \"./components/policy-holder/policy-holder.component\";\nimport {\n  PaymentBreakdownComponent\n} from \"./components/payment-breakdown/payment-breakdown.component\";\nimport {\n  CoveragesComponent\n} from \"./components/coverages/coverages.component\";\nimport {\n  PaymentBreakdownModalComponent\n} from \"./components/payment-breakdown-modal/payment-breakdown-modal.component\";\nimport {\n  ReloadComponent\n} from \"./components/reload/reload.component\";\nimport {\n  CoverageVariableDataComponent\n} from \"./components/coverage-variable-data/coverage-variable-data.component\";\nimport {\n  CreateThirdPartyComponent\n} from \"./components/create-third-party/create-third-party.component\";\nimport {\n  FixedCoveragesComponent\n} from './components/fixed-coverages/fixed-coverages.component';\nimport {\n  RequestCreateComponent\n} from './components/request-create/request-create.component';\nimport {\n  RequestListComponent\n} from './components/request-list/request-list.component';\nimport {\n  RequestDetailsModalComponent\n} from './components/request-details-modal/request-details-modal.component';\nimport {\n  ClientDetailsListComponent\n} from './components/client-details-list/client-details-list.component';\nimport {\n  ViewDetailsModalComponent\n} from './components/view-details-modal/view-details-modal.component';\nimport {\n  ClientPolicyActiveListComponent\n} from './components/client-policy-active-list/client-policy-active-list.component';\nimport {\n  ClientPolicyCancelledListComponent\n} from './components/client-policy-cancelled-list/client-policy-cancelled-list.component';\nimport {\n  ClientPolicyRenewedListComponent\n} from './components/client-policy-renewed-list/client-policy-renewed-list.component';\nimport {\n  ClientPolicyNotRenewedListComponent\n} from './components/client-policy-not-renewed-list/client-policy-not-renewed-list.component';\nimport {\n  ClientPolicyExpiringListComponent\n} from './components/client-policy-expiring-list/client-policy-expiring-list.component';\nimport {\n  ClientPolicyProvisionalListComponent\n} from './components/client-policy-provisional-list/client-policy-provisional-list.component';\nimport {\n  ClientQuotationActiveListComponent\n} from './components/client-quotation-active-list/client-quotation-active-list.component';\nimport {\n  ClientQuotationProvisionalListComponent\n} from './components/client-quotation-provisional-list/client-quotation-provisional-list.component';\nimport {\n  ClientClaimsListComponent\n} from './components/client-claims-list/client-claims-list.component';\nimport {\n  AccountOutstandingBillsListComponent\n} from './components/account-outstanding-bills-list/account-outstanding-bills-list.component';\nimport {\n  AccountCommissionsPaidListComponent\n} from './components/account-commissions-paid-list/account-commissions-paid-list.component';\nimport {\n  AccountEstimatedCommissionsListComponent\n} from './components/account-estimated-commissions-list/account-estimated-commissions-list.component';\nimport {\n  AccountPremiumCollectionListComponent\n} from './components/account-premium-collection-list/account-premium-collection-list.component';\nimport {\n  TermsAndConditionComponent\n} from './components/terms-and-condition/terms-and-condition.component';\nimport {\n  HealthCheckComponent\n} from './components/health-check/health-check.component';\n\nconst routes: Routes = [{\n    path: \"login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"agent\",\n    component: ChooseAgentComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"\",\n    component: TemplateComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"reload\",\n    component: ReloadComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"terms-and-condition\",\n    component: TermsAndConditionComponent,\n  },\n  {\n    path: \"health-check\",\n    component: HealthCheckComponent,\n  },\n  {\n    path: \"404\",\n    component: MissingPageComponent,\n  },\n  // otherwise redirect to home\n  {\n    path: \"**\",\n    redirectTo: \"404\",\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    FooterComponent,\n    HeaderComponent,\n    SidenavComponent,\n    TemplateComponent,\n    FaqComponent,\n    OutstandingBillsComponent,\n    QueryComponent,\n    MissingPageComponent,\n    ProfileComponent,\n    QuotationCarComponent,\n    QuotationHomeComponent,\n    QuotationTravelComponent,\n    QuotationAccidentComponent,\n    QuickQuotationCarComponent,\n    QuickQuotationHomeComponent,\n    QuickQuotationTravelComponent,\n    QuickQuotationAccidentComponent,\n    ModalComponent,\n    GroupPolicyComponent,\n    IndividualPolicyComponent,\n    ChooseAgentComponent,\n    DocumentPrintingComponent,\n    PolicyHolderComponent,\n    PaymentBreakdownComponent,\n    CoveragesComponent,\n    PaymentBreakdownModalComponent,\n    ReloadComponent,\n    CoverageVariableDataComponent,\n    CreateThirdPartyComponent,\n    FixedCoveragesComponent,\n    RequestCreateComponent,\n    RequestListComponent,\n    RequestDetailsModalComponent,\n    ClientDetailsListComponent,\n    ViewDetailsModalComponent,\n    ClientPolicyActiveListComponent,\n    ClientPolicyCancelledListComponent,\n    ClientPolicyRenewedListComponent,\n    ClientPolicyNotRenewedListComponent,\n    ClientPolicyExpiringListComponent,\n    ClientPolicyProvisionalListComponent,\n    ClientQuotationActiveListComponent,\n    ClientQuotationProvisionalListComponent,\n    ClientClaimsListComponent,\n    AccountOutstandingBillsListComponent,\n    AccountCommissionsPaidListComponent,\n    AccountEstimatedCommissionsListComponent,\n    AccountPremiumCollectionListComponent,\n    TermsAndConditionComponent,\n    HealthCheckComponent,\n  ],\n  entryComponents: [\n    ModalComponent,\n    PaymentBreakdownModalComponent,\n    CreateThirdPartyComponent,\n    RequestDetailsModalComponent,\n    ViewDetailsModalComponent],\n  imports: [\n    AppRoutingModule,\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTooltipModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ServiceModule,\n    NgSelectModule,\n    NgxDropzoneModule,\n    TranslateModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgMultiSelectDropDownModule.forRoot(),\n    NgHttpLoaderModule.forRoot(),\n    ChartsModule\n  ],\n  providers: [{\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n    // provider used to create fake backend\n    fakeBackendProvider,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LWNvbW1pc3Npb25zLXBhaWQtbGlzdC9hY2NvdW50LWNvbW1pc3Npb25zLXBhaWQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC1jb21taXNzaW9ucy1wYWlkLWxpc3QvYWNjb3VudC1jb21taXNzaW9ucy1wYWlkLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoLm1hdC1zb3J0LWhlYWRlci1zb3J0ZWQge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmRpdmlkZXIge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbn1cblxuLmNvbC1mb3JtLWxhYmVsIHtcbiAgZm9udC1zaXplOiA5MCU7XG59Il19 */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterAccount\n} from 'src/app/objects/PageFilterAccount';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  ListAccountCommissionsPaid\n} from 'src/app/objects/ListAccountCommissionsPaid';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  AccountService\n} from 'src/app/services/account.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-account-commissions-paid-list',\n  templateUrl: './account-commissions-paid-list.component.html',\n  styleUrls: ['./account-commissions-paid-list.component.css']\n})\nexport class AccountCommissionsPaidListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyHolder',\n    'currency',\n    'invoiceNumber',\n    'receiptAmount',\n    'commissionAmount',\n    'withholdingTaxAmount',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  currencyItems: any[] = ['PHP', 'EUR', 'USD'];\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterAccount = new PageFilterAccount();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'polilcyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private as: AccountService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      policyHolder: [null],\n      currency: [null],\n      invoiceNumber: [null],\n      receiptAmount: [null],\n      commissionAmount: [null],\n      withholdingTaxAmount: [null],\n      source: [null]\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.as.getCommissionsPaidList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListAccountCommissionsPaid[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'polilcyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListAccountCommissionsPaid) {\n    row.type = page.ACC.COM;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListAccountCommissionsPaid) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('currency').setValue('');\n    this.filterForm.get('invoiceNumber').setValue('');\n    this.filterForm.get('receiptAmount').setValue('');\n    this.filterForm.get('commissionAmount').setValue('');\n    this.filterForm.get('withholdingTaxAmount').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LWVzdGltYXRlZC1jb21taXNzaW9ucy1saXN0L2FjY291bnQtZXN0aW1hdGVkLWNvbW1pc3Npb25zLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FjY291bnQtZXN0aW1hdGVkLWNvbW1pc3Npb25zLWxpc3QvYWNjb3VudC1lc3RpbWF0ZWQtY29tbWlzc2lvbnMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterAccount\n} from 'src/app/objects/PageFilterAccount';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  ListAccountEstimatedCommissions\n} from 'src/app/objects/ListAccountEstimatedCommissions';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  AccountService\n} from 'src/app/services/account.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-account-estimated-commissions-list',\n  templateUrl: './account-estimated-commissions-list.component.html',\n  styleUrls: ['./account-estimated-commissions-list.component.css']\n})\nexport class AccountEstimatedCommissionsListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyHolder',\n    'currency',\n    'invoiceNumber',\n    'movementDate',\n    'receiptAmount',\n    'estimatedCommission',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  currencyItems: any[] = ['PHP', 'EUR', 'USD'];\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterAccount = new PageFilterAccount();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private as: AccountService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      policyHolder: [null],\n      currency: [null],\n      invoiceNumber: [null],\n      movementDate: [null],\n      receiptAmount: [null],\n      estimatedCommission: [null],\n      source: [null]\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.movementDate = Utility.convertDatePickerDate(this.pageFilter.movementDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.as.getEstimatedCommissionsList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListAccountEstimatedCommissions[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'name';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListAccountEstimatedCommissions) {\n    row.type = page.ACC.EST;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListAccountEstimatedCommissions) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('currency').setValue('');\n    this.filterForm.get('invoiceNumber').setValue('');\n    this.filterForm.get('movementDate').setValue('');\n    this.filterForm.get('receiptAmount').setValue('');\n    this.filterForm.get('estimatedCommission').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n\\n/* modal css */\\n\\n.mat-dialog-container {\\n  padding: 0px !important;\\n}\\n\\n.header {\\n  padding-bottom: 20px;\\n}\\n\\n.header img {\\n  height: 30px;\\n}\\n\\n.footer {\\n  text-align: center;\\n}\\n\\n.footer p {\\n  color: #979797;\\n  font-size: 12px;\\n  text-shadow: 0 0 black;\\n}\\n\\n.paynamics-logo {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: 0;\\n}\\n\\n.payment-icon {\\n  font-size: 45px;\\n}\\n\\n.payment-icon.success {\\n  color: #4caf50;\\n}\\n\\n.payment-icon.failed {\\n  color: #c31f09;\\n}\\n\\n.payment-result-content {\\n  text-align: center;\\n  padding: 30px 0;\\n}\\n\\n.fa-times {\\n  color: #fff !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LW91dHN0YW5kaW5nLWJpbGxzLWxpc3QvYWNjb3VudC1vdXRzdGFuZGluZy1iaWxscy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBLGNBQWM7O0FBQ2Q7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LW91dHN0YW5kaW5nLWJpbGxzLWxpc3QvYWNjb3VudC1vdXRzdGFuZGluZy1iaWxscy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufVxuXG4vKiBtb2RhbCBjc3MgKi9cbi5tYXQtZGlhbG9nLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xufVxuXG4uaGVhZGVyIHtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG59XG5cbi5oZWFkZXIgaW1nIHtcbiAgaGVpZ2h0OiAzMHB4O1xufVxuXG4uZm9vdGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZm9vdGVyIHAge1xuICBjb2xvcjogIzk3OTc5NztcbiAgZm9udC1zaXplOiAxMnB4O1xuICB0ZXh0LXNoYWRvdzogMCAwIGJsYWNrO1xufVxuXG4ucGF5bmFtaWNzLWxvZ28ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cblxuLnBheW1lbnQtaWNvbiB7XG4gIGZvbnQtc2l6ZTogNDVweDtcbn1cblxuLnBheW1lbnQtaWNvbi5zdWNjZXNzIHtcbiAgY29sb3I6ICM0Y2FmNTA7XG59XG5cbi5wYXltZW50LWljb24uZmFpbGVkIHtcbiAgY29sb3I6ICNjMzFmMDk7XG59XG5cbi5wYXltZW50LXJlc3VsdC1jb250ZW50IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAzMHB4IDA7XG59XG5cbi5mYS10aW1lcyB7XG4gIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG59Il19 */\";","import {\n  Component,\n  OnInit,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef\n} from '@angular/material';\nimport {\n  ListAccountOutstandingBills\n} from 'src/app/objects/ListAccountOutstandingBills';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  AccountService\n} from 'src/app/services/account.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  page\n} from '../../constants/page';\nimport {\n  PageFilterAccount\n} from 'src/app/objects/PageFilterAccount';\nimport {\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  filter\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-account-outstanding-bills-list',\n  templateUrl: './account-outstanding-bills-list.component.html',\n  styleUrls: ['./account-outstanding-bills-list.component.css']\n})\nexport class AccountOutstandingBillsListComponent implements OnInit {\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyHolder',\n    'prn',\n    'invoiceNumber',\n    'currency',\n    'effectivityDate',\n    'expiryDate',\n    'paymentDateExpiry',\n    'age',\n    'amount',\n    'paymentStatus',\n    'source',\n    'subline'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  paymentStatusItems: any[] = ['Processing'];\n  currencyItems: any[] = ['PHP', 'EUR', 'USD'];\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterAccount = new PageFilterAccount();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n  @ViewChild('paymentResult') paymentResultModal: TemplateRef < any > ;\n\n  //modal reference\n  modalRef: BsModalRef;\n  dialogRef: MatDialogRef < TemplateRef < any >> ;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private as: AccountService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    var _this = this;\n    //opening modal for success/failed payment\n    this.route.queryParams\n      .pipe(filter(params => params.successPage) )\n      .subscribe(params => {\n        setTimeout(function(){\n          params.message\n          _this.openPaymentResultModal(params.successPage == 'true', params.message);\n        }, 500);\n      });\n\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      policyHolder: [null],\n      prn: [null],\n      invoiceNumber: [null],\n      currency: [null],\n      effectivityDate: [null],\n      expiryDate: [null],\n      paymentDateExpiry: [null],\n      amount: [null],\n      paymentStatus: [null],\n      source: [null],\n      subline: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.expiryDate = Utility.convertDatePickerDate(this.pageFilter.expiryDate);\n    this.pageFilter.paymentDateExpiry = Utility.convertDatePickerDate(this.pageFilter.paymentDateExpiry);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.as.getOutstandingBillsList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListAccountOutstandingBills[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListAccountOutstandingBills) {\n    row.type = page.ACC.OUT;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListAccountOutstandingBills) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  openPaymentResultModal(status: boolean, error: String): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '600px';\n    dialogConfig.data = {status : status, errorMessage: error};\n\n    this.dialogRef = this.dialog.open(this.paymentResultModal, dialogConfig);\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('prn').setValue('');\n    this.filterForm.get('invoiceNumber').setValue('');\n    this.filterForm.get('currency').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('expiryDate').setValue('');\n    this.filterForm.get('paymentDateExpiry').setValue('');\n    this.filterForm.get('amount').setValue('');\n    this.filterForm.get('paymentStatus').setValue('');\n    this.filterForm.get('source').setValue('');\n    this.filterForm.get('subline').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50LXByZW1pdW0tY29sbGVjdGlvbi1saXN0L2FjY291bnQtcHJlbWl1bS1jb2xsZWN0aW9uLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FjY291bnQtcHJlbWl1bS1jb2xsZWN0aW9uLWxpc3QvYWNjb3VudC1wcmVtaXVtLWNvbGxlY3Rpb24tbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterAccount\n} from 'src/app/objects/PageFilterAccount';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  ListAccountPremiumCollection\n} from 'src/app/objects/ListAccountPremiumCollection';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  AccountService\n} from 'src/app/services/account.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-account-premium-collection-list',\n  templateUrl: './account-premium-collection-list.component.html',\n  styleUrls: ['./account-premium-collection-list.component.css']\n})\nexport class AccountPremiumCollectionListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'currency',\n    'subline',\n    'invoiceNumber',\n    'effectivityDate',\n    'expiryDate',\n    'collectedDate',\n    'collectionType',\n    'receiptAmount',\n    'netPremium',\n    'surcharge',\n    'tax',\n    'interest',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  currencyItems: any[] = ['PHP', 'EUR', 'USD'];\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterAccount = new PageFilterAccount();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private as: AccountService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      currency: [null],\n      subline: [null],\n      invoiceNumber: [null],\n      effectivityDate: [null],\n      expiryDate: [null],\n      collectedDate: [null],\n      collectionType: [null],\n      receiptAmount: [null],\n      netPremium: [null],\n      surcharge: [null],\n      tax: [null],\n      interest: [null],\n      source: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.expiryDate = Utility.convertDatePickerDate(this.pageFilter.expiryDate);\n    this.pageFilter.collectedDate = Utility.convertDatePickerDate(this.pageFilter.collectedDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.as.getPremiumCollectionList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListAccountPremiumCollection[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListAccountPremiumCollection) {\n    row.type = page.ACC.PRE;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListAccountPremiumCollection) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('currency').setValue('');\n    this.filterForm.get('subline').setValue('');\n    this.filterForm.get('invoiceNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('expiryDate').setValue('');\n    this.filterForm.get('collectedDate').setValue('');\n    this.filterForm.get('collectionType').setValue('');\n    this.filterForm.get('receiptAmount').setValue('');\n    this.filterForm.get('netPremium').setValue('');\n    this.filterForm.get('surcharge').setValue('');\n    this.filterForm.get('tax').setValue('');\n    this.filterForm.get('interest').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}\n","export default \".container {\\n  width: 100%;\\n  min-height: 100vh;\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 15px;\\n\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-size: cover;\\n  position: relative;\\n  z-index: 1;\\n}\\n\\n.container::before {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  z-index: -1;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.wrap {\\n  max-width: 450px;\\n  width: 100%;\\n  border-radius: 5px;\\n  overflow: hidden;\\n  padding: 15px 25px;\\n  background: #fff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jaG9vc2UtYWdlbnQvY2hvb3NlLWFnZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0VBS2pCLGFBQWE7RUFDYixlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixhQUFhOztFQUViLDRCQUE0QjtFQUM1QiwyQkFBMkI7RUFDM0Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsV0FBVztFQUNYLFlBQVk7RUFDWixNQUFNO0VBQ04sT0FBTztBQUNUOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Nob29zZS1hZ2VudC9jaG9vc2UtYWdlbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMTVweDtcblxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbn1cblxuLmNvbnRhaW5lcjo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogLTE7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbn1cblxuLndyYXAge1xuICBtYXgtd2lkdGg6IDQ1MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAxNXB4IDI1cHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59Il19 */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport {\n  AuthenticationService\n} from '../../services/authentication.service';\nimport {\n  AgentService\n} from '../../services/agent.service';\nimport {\n  CURRENT_USER,\n  DASH_INFO\n} from '../../constants/local.storage';\nimport {\n  SelectedAgent\n} from 'src/app/objects/SelectedAgent';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Component({\n  selector: 'app-choose-agent',\n  templateUrl: './choose-agent.component.html',\n  styleUrls: ['./choose-agent.component.css']\n})\nexport class ChooseAgentComponent implements OnInit {\n  chooseAgentForm: FormGroup;\n  commercialStructureLOV: any[];\n  agentLOV: any[];\n  currentUser = this.auths.currentUserValue;\n  hasSelectedAgent = !Utility.isUndefined(this.currentUser.selectedAgent);\n  showCancelBtn: boolean = false;\n\n  constructor(private router: Router,\n    private auths: AuthenticationService,\n    private as: AgentService,\n    private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.createForm();\n    const _this = this;\n    if (this.hasSelectedAgent) {\n      this.showCancelBtn = true;\n      this.as.getAgentList(this.currentUser.selectedAgent.commStructure).then(res => {\n        _this.agentLOV = res;\n      });\n\n      this.chooseAgentForm.get('commercialStructure').markAsDirty();\n      this.chooseAgentForm.get('agent').markAsDirty();\n    }\n\n    this.as.getCommercialStructure().then(res => {\n      _this.commercialStructureLOV = res;\n    });\n  }\n\n  createForm() {\n    let comval = null;\n    let agentval = null;\n    if (this.hasSelectedAgent) {\n      comval = this.currentUser.selectedAgent.commStructure;\n      agentval = this.currentUser.selectedAgent.agentCode;\n    }\n    this.chooseAgentForm = this.fb.group({\n      commercialStructure: [comval, Validators.required],\n      agent: [agentval, Validators.required],\n    });\n  }\n\n  comStructureChange() {\n    const _this = this;\n    const commercialStructure: number = parseInt(this.chooseAgentForm.get('commercialStructure').value);\n    this.as.getAgentList(commercialStructure).then(res => {\n      _this.agentLOV = res;\n    });\n  }\n\n  cancel() {\n    this.router.navigate(['']);\n  };\n\n  next() {\n    const currentUser = this.auths.currentUserValue;\n    const agentCode: number = parseInt(this.chooseAgentForm.get('agent').value);\n    currentUser.agentCode = agentCode;\n    //adds chosen agent to current user detail\n    localStorage.setItem(CURRENT_USER, JSON.stringify(currentUser));\n\n    const param = {\n      agentCode: agentCode\n    };\n\n    this.as.getProductionAgentProfile(JSON.stringify(param)).then(res => {\n      if (res.status) {\n        var sa = new SelectedAgent();\n\n        const agentInfo = res.obj[\"agentInfo\"];\n\n        sa.agentCode = parseInt(agentInfo[\"codAgente\"]);\n        sa.agentName = agentInfo[\"nomAgente\"];\n        sa.documentCode = agentInfo[\"codDocumento\"];\n        sa.documentType = agentInfo[\"tipoDocumento\"];\n        sa.documentName = agentInfo[\"nomTipoDocumento\"];\n        sa.agentType = agentInfo[\"tipoAgente\"];\n        sa.agentTypeName = agentInfo[\"nomTipoAgente\"];\n        sa.agentAddress = agentInfo[\"dirAgente\"];\n        sa.commStructure = parseInt(this.chooseAgentForm.get('commercialStructure').value);\n        currentUser.selectedAgent = sa;\n        currentUser.commercialStructure = sa.commStructure;\n        currentUser.token = \"Bearer \" + res.obj[\"token\"];\n\n        //adds chosen agent to current user detail\n        localStorage.setItem(CURRENT_USER, JSON.stringify(currentUser));\n        localStorage.removeItem(DASH_INFO);\n      }\n      this.router.navigate(['']);\n    });\n  }\n\n}\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtY2xhaW1zLWxpc3QvY2xpZW50LWNsYWltcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtY2xhaW1zLWxpc3QvY2xpZW50LWNsYWltcy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListClaimDetails\n} from 'src/app/objects/ListClaimDetails';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-claims-list',\n  templateUrl: './client-claims-list.component.html',\n  styleUrls: ['./client-claims-list.component.css']\n})\nexport class ClientClaimsListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'claimNumber',\n    'fileNumber',\n    'fileName',\n    'lossDate',\n    'notificationDate',\n    'reserveAmount',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'claimNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      claimNumber: [null],\n      fileNumber: [null],\n      fileName: [null],\n      lossDate: [null],\n      notificationDate: [null],\n      source: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.lossDate = Utility.convertDatePickerDate(this.pageFilter.lossDate);\n    this.pageFilter.notificationDate = Utility.convertDatePickerDate(this.pageFilter.notificationDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getClaimsList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListClaimDetails[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'claimNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListClaimDetails) {\n    row.type = page.CLI.CLA;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListClaimDetails) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('claimNumber').setValue('');\n    this.filterForm.get('fileNumber').setValue('');\n    this.filterForm.get('fileName').setValue('');\n    this.filterForm.get('lossDate').setValue('');\n    this.filterForm.get('notificationDate').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtZGV0YWlscy1saXN0L2NsaWVudC1kZXRhaWxzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC1kZXRhaWxzLWxpc3QvY2xpZW50LWRldGFpbHMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  ListClientDetails\n} from 'src/app/objects/ListClientDetails';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ThirdPartyLOVServices\n} from 'src/app/services/lov/third-party-lov-service';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-details-list',\n  templateUrl: './client-details-list.component.html',\n  styleUrls: ['./client-details-list.component.css']\n})\nexport class ClientDetailsListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'name',\n    'documentType',\n    'documentCode',\n    'address',\n    'homeTelNumber',\n    'businessTelNumber',\n    'mobileNumber',\n    'email'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  documentTypeItems: any[] = [];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'name';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n    private tpls: ThirdPartyLOVServices\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n\n    var _this = this;\n    this.tpls.getDocumentType().then(res => {\n      var types = [];\n      res.forEach(r => {\n        if (r.TIP_DOCUM != 'OTH') {\n          types.push(r);\n        }\n      });\n      _this.documentTypeItems = types;\n    });\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      name: [null],\n      documentType: [null],\n      documentCode: [null],\n      address: [null],\n      homeTelNumber: [null],\n      businessTelNumber: [null],\n      mobileNumber: [null],\n      email: [null]\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getClientDetailsList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListClientDetails[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'name';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListClientDetails) {\n    row.type = page.CLI.CLI;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListClientDetails) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('name').setValue('');\n    this.filterForm.get('documentType').setValue('');\n    this.filterForm.get('documentCode').setValue('');\n    this.filterForm.get('address').setValue('');\n    this.filterForm.get('homeTelNumber').setValue('');\n    this.filterForm.get('businessTelNumber').setValue('');\n    this.filterForm.get('mobileNumber').setValue('');\n    this.filterForm.get('email').setValue('');\n\n    this.getList();\n  }\n\n}\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LWFjdGl2ZS1saXN0L2NsaWVudC1wb2xpY3ktYWN0aXZlLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC1wb2xpY3ktYWN0aXZlLWxpc3QvY2xpZW50LXBvbGljeS1hY3RpdmUtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ThirdPartyLOVServices\n} from 'src/app/services/lov/third-party-lov-service';\nimport {\n  ListPolicyActive\n} from 'src/app/objects/ListPolicyActive';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-policy-active-list',\n  templateUrl: './client-policy-active-list.component.html',\n  styleUrls: ['./client-policy-active-list.component.css']\n})\nexport class ClientPolicyActiveListComponent implements OnInit {\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyEffectivityDate',\n    'policyDueDate',\n    'line',\n    'policyHolder',\n    'documentType',\n    'documentCode',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  documentTypeItems: any[] = [];\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n    private tpls: ThirdPartyLOVServices\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n\n    var _this = this;\n    this.tpls.getDocumentType().then(res => {\n      var types = [];\n      res.forEach(r => {\n        if (r.TIP_DOCUM != 'OTH') {\n          types.push(r);\n        }\n      });\n      _this.documentTypeItems = types;\n    });\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      effectivityDate: [null],\n      dueDate: [null],\n      line: [null],\n      policyHolder: [null],\n      documentType: [null],\n      documentCode: [null],\n      source: [null]\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.dueDate = Utility.convertDatePickerDate(this.pageFilter.dueDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getPolicyActiveList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListPolicyActive[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListPolicyActive) {\n    row.type = page.CLI.ACT;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListPolicyActive) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('dueDate').setValue('');\n    this.filterForm.get('line').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('documentType').setValue('');\n    this.filterForm.get('documentCode').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LWNhbmNlbGxlZC1saXN0L2NsaWVudC1wb2xpY3ktY2FuY2VsbGVkLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC1wb2xpY3ktY2FuY2VsbGVkLWxpc3QvY2xpZW50LXBvbGljeS1jYW5jZWxsZWQtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListPolicyCancelled\n} from 'src/app/objects/ListPolicyCancelled';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-policy-cancelled-list',\n  templateUrl: './client-policy-cancelled-list.component.html',\n  styleUrls: ['./client-policy-cancelled-list.component.css']\n})\nexport class ClientPolicyCancelledListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyEffectivityDate',\n    'line',\n    'policyHolder',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      effectivityDate: [null],\n      line: [null],\n      policyHolder: [null],\n      source: [null]\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getPolicyCancelledList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListPolicyCancelled[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListPolicyCancelled) {\n    row.type = page.CLI.CAN;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListPolicyCancelled) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('line').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LWV4cGlyaW5nLWxpc3QvY2xpZW50LXBvbGljeS1leHBpcmluZy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LWV4cGlyaW5nLWxpc3QvY2xpZW50LXBvbGljeS1leHBpcmluZy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListPolicyExpiring\n} from 'src/app/objects/ListPolicyExpiring';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-policy-expiring-list',\n  templateUrl: './client-policy-expiring-list.component.html',\n  styleUrls: ['./client-policy-expiring-list.component.css']\n})\nexport class ClientPolicyExpiringListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyEffectivityDate',\n    'policyExpiryDate',\n    'policyHolder',\n    'email',\n    'telephoneNumber'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      effectivityDate: [null],\n      expiryDate: [null],\n      policyHolder: [null],\n      email: [null],\n      telephoneNumber: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.expiryDate = Utility.convertDatePickerDate(this.pageFilter.expiryDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getPolicyExpiringList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListPolicyExpiring[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListPolicyExpiring) {\n    row.type = page.CLI.EXP;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListPolicyExpiring) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('expiryDate').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('email').setValue('');\n    this.filterForm.get('telephoneNumber').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LW5vdC1yZW5ld2VkLWxpc3QvY2xpZW50LXBvbGljeS1ub3QtcmVuZXdlZC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LW5vdC1yZW5ld2VkLWxpc3QvY2xpZW50LXBvbGljeS1ub3QtcmVuZXdlZC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListPolicyNotRenewed\n} from 'src/app/objects/ListPolicyNotRenewed';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-policy-not-renewed-list',\n  templateUrl: './client-policy-not-renewed-list.component.html',\n  styleUrls: ['./client-policy-not-renewed-list.component.css']\n})\nexport class ClientPolicyNotRenewedListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyEffectivityDate',\n    'policyDueDate',\n    'line',\n    'policyHolder',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      effectivityDate: [null],\n      dueDate: [null],\n      line: [null],\n      policyHolder: [null],\n      source: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.dueDate = Utility.convertDatePickerDate(this.pageFilter.dueDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getPolicyNotRenewedList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListPolicyNotRenewed[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListPolicyNotRenewed) {\n    row.type = page.CLI.NOT;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListPolicyNotRenewed) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('dueDate').setValue('');\n    this.filterForm.get('line').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LXByb3Zpc2lvbmFsLWxpc3QvY2xpZW50LXBvbGljeS1wcm92aXNpb25hbC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LXByb3Zpc2lvbmFsLWxpc3QvY2xpZW50LXBvbGljeS1wcm92aXNpb25hbC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListPolicyProvisional\n} from 'src/app/objects/ListPolicyProvisional';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-policy-provisional-list',\n  templateUrl: './client-policy-provisional-list.component.html',\n  styleUrls: ['./client-policy-provisional-list.component.css']\n})\nexport class ClientPolicyProvisionalListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyEffectivityDate',\n    'policyDueDate',\n    'line',\n    'policyHolder',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      effectivityDate: [null],\n      dueDate: [null],\n      line: [null],\n      policyHolder: [null],\n      source: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.dueDate = Utility.convertDatePickerDate(this.pageFilter.dueDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getPolicyProvisionalList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListPolicyProvisional[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListPolicyProvisional) {\n    row.type = page.CLI.PRO;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListPolicyProvisional) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('dueDate').setValue('');\n    this.filterForm.get('line').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcG9saWN5LXJlbmV3ZWQtbGlzdC9jbGllbnQtcG9saWN5LXJlbmV3ZWQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50LXBvbGljeS1yZW5ld2VkLWxpc3QvY2xpZW50LXBvbGljeS1yZW5ld2VkLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoLm1hdC1zb3J0LWhlYWRlci1zb3J0ZWQge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmRpdmlkZXIge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbn1cblxuLmNvbC1mb3JtLWxhYmVsIHtcbiAgZm9udC1zaXplOiA5MCU7XG59Il19 */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ThirdPartyLOVServices\n} from 'src/app/services/lov/third-party-lov-service';\nimport {\n  ListPolicyRenewed\n} from 'src/app/objects/ListPolicyRenewed';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-policy-renewed-list',\n  templateUrl: './client-policy-renewed-list.component.html',\n  styleUrls: ['./client-policy-renewed-list.component.css']\n})\nexport class ClientPolicyRenewedListComponent implements OnInit {\n  displayedColumns: string[] = [\n    'policyNumber',\n    'policyEffectivityDate',\n    'policyDueDate',\n    'policyHolder',\n    'documentType',\n    'documentCode'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  documentTypeItems: any[] = [];\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'policyNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n    private tpls: ThirdPartyLOVServices\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n\n    var _this = this;\n    this.tpls.getDocumentType().then(res => {\n      var types = [];\n      res.forEach(r => {\n        if (r.TIP_DOCUM != 'OTH') {\n          types.push(r);\n        }\n      });\n      _this.documentTypeItems = types;\n    });\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      policyNumber: [null],\n      effectivityDate: [null],\n      dueDate: [null],\n      policyHolder: [null],\n      documentType: [null],\n      documentCode: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.dueDate = Utility.convertDatePickerDate(this.pageFilter.dueDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getPolicyRenewedList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListPolicyRenewed[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'policyNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListPolicyRenewed) {\n    row.type = page.CLI.REN;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListPolicyRenewed) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('dueDate').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('documentType').setValue('');\n    this.filterForm.get('documentCode').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcXVvdGF0aW9uLWFjdGl2ZS1saXN0L2NsaWVudC1xdW90YXRpb24tYWN0aXZlLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC1xdW90YXRpb24tYWN0aXZlLWxpc3QvY2xpZW50LXF1b3RhdGlvbi1hY3RpdmUtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZGl2aWRlciB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uY29sLWZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDkwJTtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListQuotationActive\n} from 'src/app/objects/ListQuotationActive';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-quotation-active-list',\n  templateUrl: './client-quotation-active-list.component.html',\n  styleUrls: ['./client-quotation-active-list.component.css']\n})\nexport class ClientQuotationActiveListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'quotationNumber',\n    'policyEffectivityDate',\n    'policyDueDate',\n    'line',\n    'policyHolder',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'quotationNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      quotationNumber: [null],\n      effectivityDate: [null],\n      dueDate: [null],\n      line: [null],\n      policyHolder: [null],\n      source: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.dueDate = Utility.convertDatePickerDate(this.pageFilter.dueDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getQuotationActiveList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListQuotationActive[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'quotationNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListQuotationActive) {\n    row.type = page.CLI.ACTQ;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListQuotationActive) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('quotationNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('dueDate').setValue('');\n    this.filterForm.get('line').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcXVvdGF0aW9uLXByb3Zpc2lvbmFsLWxpc3QvY2xpZW50LXF1b3RhdGlvbi1wcm92aXNpb25hbC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQtcXVvdGF0aW9uLXByb3Zpc2lvbmFsLWxpc3QvY2xpZW50LXF1b3RhdGlvbi1wcm92aXNpb25hbC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jb2wtZm9ybS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  PageFilterClient\n} from 'src/app/objects/PageFilterClient';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ClientService\n} from 'src/app/services/client.service';\nimport {\n  ViewDetailsModalComponent\n} from '../view-details-modal/view-details-modal.component';\nimport {\n  ListQuotationProvisional\n} from 'src/app/objects/ListQuotationProvisional';\nimport {\n  page\n} from '../../constants/page';\n\n@Component({\n  selector: 'app-client-quotation-provisional-list',\n  templateUrl: './client-quotation-provisional-list.component.html',\n  styleUrls: ['./client-quotation-provisional-list.component.css']\n})\nexport class ClientQuotationProvisionalListComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'quotationNumber',\n    'policyEffectivityDate',\n    'policyDueDate',\n    'line',\n    'policyHolder',\n    'source'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  sourceItems: any[] = ['MIVO', 'TRONWEB'];\n\n  pageFilter: PageFilterClient = new PageFilterClient();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'quotationNumber';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  today: Date = new Date();\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private cs: ClientService,\n    private bms: BsModalService,\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      quotationNumber: [null],\n      effectivityDate: [null],\n      dueDate: [null],\n      line: [null],\n      policyHolder: [null],\n      source: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n\n    this.pageFilter.effectivityDate = Utility.convertDatePickerDate(this.pageFilter.effectivityDate);\n    this.pageFilter.dueDate = Utility.convertDatePickerDate(this.pageFilter.dueDate);\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.cs.getQuotationProvisionalList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: ListQuotationProvisional[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'quotationNumber';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: ListQuotationProvisional) {\n    row.type = page.CLI.PROQ;\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: ListQuotationProvisional) {\n    this.dialog.open(ViewDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('quotationNumber').setValue('');\n    this.filterForm.get('effectivityDate').setValue('');\n    this.filterForm.get('dueDate').setValue('');\n    this.filterForm.get('line').setValue('');\n    this.filterForm.get('policyHolder').setValue('');\n    this.filterForm.get('source').setValue('');\n\n    this.getList();\n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY292ZXJhZ2UtdmFyaWFibGUtZGF0YS9jb3ZlcmFnZS12YXJpYWJsZS1kYXRhLmNvbXBvbmVudC5jc3MifQ== */\";","import {\n  Component,\n  OnInit,\n  Inject\n} from '@angular/core';\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  CarLOVServices\n} from 'src/app/services/lov/car.service';\n\n@Component({\n  selector: 'app-coverage-variable-data',\n  templateUrl: './coverage-variable-data.component.html',\n  styleUrls: ['./coverage-variable-data.component.css']\n})\nexport class CoverageVariableDataComponent implements OnInit {\n\n  variableForm: FormGroup;\n  sumInsuredPerPassengerLOV: any[];\n\n  constructor(public dialogRef: MatDialogRef < CoverageVariableDataComponent > ,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private cls: CarLOVServices) {\n    this.createVariableForm();\n  }\n\n  coverage = this.data.c.coverage;\n  code = this.data.c.code;\n\n  createVariableForm() {\n    this.variableForm = this.fb.group({\n      //1101\n      lossAndDamageType: {\n        value: null,\n        disabled: true\n      },\n      finalRate: ['', [Validators.nullValidator]],\n      adjustedCommissionRate: ['', [Validators.nullValidator]],\n      lossRatioRate: ['', [Validators.nullValidator]],\n\n      //1002\n      ownDamageTowingLimit: {\n        value: null,\n        disabled: true\n      },\n      ownDamageRepairLimit: {\n        value: null,\n        disabled: true\n      },\n      ownDamageSpecialDeductible: {\n        value: null,\n        disabled: true\n      },\n\n      //1003\n      theftTowingLimit: {\n        value: null,\n        disabled: true\n      },\n      theftRepairLimit: {\n        value: null,\n        disabled: true\n      },\n      theftSpecialDeductible: {\n        value: null,\n        disabled: true\n      },\n\n      //1007\n      uppaDiscountType: {\n        value: null,\n        disabled: true\n      },\n      uppaDiscountAmount: {\n        value: null,\n        disabled: true\n      },\n      uppaCommissionAdjustment: ['', [Validators.nullValidator]],\n      sumInsuredPerPassenger: ['', [Validators.nullValidator]],\n\n      //1008\n      aonFinalRate: ['', [Validators.nullValidator]],\n      aonTowingLimit: {\n        value: null,\n        disabled: true\n      },\n      aonRepairLimit: {\n        value: null,\n        disabled: true\n      },\n      aonSpecialDeductible: {\n        value: null,\n        disabled: true\n      },\n      aonCommissionAdjustment: ['', [Validators.nullValidator]],\n\n      //1020\n      srccFinalRate: ['', [Validators.nullValidator]],\n      srccTowingLimit: {\n        value: null,\n        disabled: true\n      },\n      srccRepairLimit: {\n        value: null,\n        disabled: true\n      },\n      srccSpecialDeductible: {\n        value: null,\n        disabled: true\n      },\n      srccCommissionAdjustment: ['', [Validators.nullValidator]],\n\n      //1040\n      roadAssistDiscount: {\n        value: null,\n        disabled: true\n      },\n\n      //1029\n      ra100Discount: {\n        value: null,\n        disabled: true\n      }\n    }, {\n      updateOn: 'submit'\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.code == 1007) {\n      this.cls.getSumInsuredPerPassenger(this.data.subline).then((res) => {\n        this.sumInsuredPerPassengerLOV = res;\n      });\n    }\n  }\n\n  update(): void {\n    this.dialogRef.close(true);\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n}\n","export default \"#coverages table {\\n  text-align: center !important;\\n  width: 100%;\\n}\\n\\n#coverages .mat-header-cell {\\n  text-align: center;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-cell.amount,\\n.mat-header-cell.amount-header {\\n  display: inline-grid;\\n  text-align: right !important;\\n}\\n\\n.mat-row.included {\\n  background-color: #e1fce3;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb3ZlcmFnZXMvY292ZXJhZ2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2QkFBNkI7RUFDN0IsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBOztFQUVFLG9CQUFvQjtFQUNwQiw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NvdmVyYWdlcy9jb3ZlcmFnZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb3ZlcmFnZXMgdGFibGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbiNjb3ZlcmFnZXMgLm1hdC1oZWFkZXItY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1jZWxsLmFtb3VudCxcbi5tYXQtaGVhZGVyLWNlbGwuYW1vdW50LWhlYWRlciB7XG4gIGRpc3BsYXk6IGlubGluZS1ncmlkO1xuICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LXJvdy5pbmNsdWRlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMWZjZTM7XG59Il19 */\";","import {\n  Component,\n  OnInit,\n  Input,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormArray,\n} from '@angular/forms';\nimport {\n  Car\n} from 'src/app/objects/Car';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  CoverageVariableDataComponent\n} from '../coverage-variable-data/coverage-variable-data.component';\nimport {\n  CoverageVariableData\n} from 'src/app/objects/CoverageVariableData';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  CarQuoteServices\n} from 'src/app/services/car-quote.service';\n\nexport interface TablesDTO {\n  isMandatory: boolean;\n  included: boolean;\n  coverage: string;\n  options: [];\n  sumInsured: number;\n  netPremium: number;\n  isRoadAssist: boolean;\n  isSelect: boolean;\n  code: number;\n}\n\n@Component({\n  selector: 'app-coverages',\n  templateUrl: './coverages.component.html',\n  styleUrls: ['./coverages.component.css']\n})\nexport class CoveragesComponent implements OnInit {\n  @Input() carDetails: Car;\n  @Input() coverageList: any[];\n  @Input() amountList: any[];\n  @Input() coverageVariable: any[];\n  @Input() premiumAmount: any[];\n  @Input() coverageAmount: any[];\n  @Input() coverageVariableData: CoverageVariableData;\n  @Input() isModifiedCoverage: boolean;\n  @Input() isIssuance: boolean;\n  @Input() hasRoadAssist: boolean;\n\n  @Input() quoteForm: FormGroup;\n  @Input() showCTPL: boolean;\n  @Input()\n  set loadCoverage(value: number) {\n    this.triggerCounter = value;\n    this.generateCoverage();\n  }\n\n  @Output() showCTPLChange = new EventEmitter < boolean > ();\n\n  cForm: FormGroup;\n  displayedColumns: string[] = ['included', 'coverage', 'sumInsured', 'netPremium', 'action'];\n  source: any[];\n  dataSource = new MatTableDataSource < TablesDTO > (this.source);\n  cvddv: CoverageVariableData;\n  triggerCounter: number;\n\n  constructor(\n    private fb: FormBuilder,\n    private cqs: CarQuoteServices,\n    public dialog: MatDialog) {}\n\n  ngOnInit() {\n    // for testing purposes\n    // this.coverageList = coverageList;\n    // this.amountList = amountList;\n    // this.coverageVariable = coverageVariable;\n    // this.premiumAmount = premiumAmount;\n    // this.coverageAmount = coverageAmount2;\n    this.generateCoverage();\n  }\n\n  generateCoverage() {\n    //getting and setting defaults to variable data\n    const cvd = new CoverageVariableData();\n    this.cvddv = cvd.getDefaultValues(this.coverageVariable, this.coverageVariableData);\n    this.source = this.getCoverageData();\n    if (this.source.length) {\n      this.dataSource = new MatTableDataSource < TablesDTO > (this.source);\n      this.setForm(this.dataSource.filteredData);\n    }\n  }\n\n  editCoverage(coverage: TablesDTO) {\n    var modalData = {\n      c: coverage,\n      subline: this.carDetails.subline,\n      cvd: this.coverageVariableData,\n      cvddv: this.cvddv\n    };\n    const dialogRef = this.dialog.open(CoverageVariableDataComponent, {\n      width: '500px',\n      data: modalData\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // if update button is clicked\n      if (!Utility.isUndefined(result)) {\n        const c = new CoverageVariableData();\n        c.validateValues(this.cvddv, this.coverageVariableData);\n      }\n    });\n  }\n\n  private setForm(d: any[]) {\n    this.cForm = this.fb.group({\n      coverages: this.fb.array([])\n    });\n\n    const control = this.cForm.get('coverages') as FormArray;\n    d.forEach((coverage) => {\n      control.push(this.setCoverageFormArray(coverage));\n    });\n  }\n\n  updateRow(row: TablesDTO) {\n    row.included = !row.included;\n    let updateItem = this.source.find(this.findIndexToUpdate, row.coverage);\n    let index = this.source.indexOf(updateItem);\n\n    if (row.code == 1020 || row.code == 1008) {\n      //if acts of nature or strike and riots is selected\n      row.sumInsured = row.included ? this.carDetails.vehicleValue : 0;\n    }\n\n    if (row.isRoadAssist) {\n      //unselect Road Assits options\n      this.unselectRAOptions(row.code);\n    }\n\n    this.source[index] = row;\n\n    // updating source\n    this.dataSource = new MatTableDataSource < TablesDTO > (this.source);\n    this.dataSource._updateChangeSubscription();\n    this.dataSource._renderChangesSubscription;\n    this.setForm(this.dataSource.filteredData);\n  }\n\n  findIndexToUpdate(row: any) {\n    return row.coverage === this;\n  }\n\n  unselectRAOptions(code: number) {\n    this.source.forEach(s => {\n      if (s.isRoadAssist && s.code != code) {\n        s.included = false;\n      }\n    });\n  }\n\n  get coverages(): FormArray {\n    return <FormArray > this.cForm.get('coverages');\n  }\n\n  private setCoverageFormArray(coverage: any) {\n    return this.fb.group({\n      isMandatory: [coverage.isMandatory],\n      included: [coverage.included],\n      code: [coverage.code],\n      coverage: [coverage.coverage],\n      options: [coverage.options],\n      sumInsured: [coverage.sumInsured],\n      netPremium: [coverage.netPremium],\n      isRoadAssist: [coverage.isRoadAssist],\n      hasVariableData: [coverage.hasVariableData],\n      isSelect: [coverage.isSelect]\n    });\n  }\n\n  private getCoverageData() {\n    var returnData: any[] = [];\n\n    this.coverageList.forEach((cov) => {\n      var code = parseInt(cov.COD_COB);\n      var product = this.carDetails.productList;\n      // for testing\n      // product = 10002;\n      var name = cov.NOM_COB;\n      var type = cov.MCA_TIP_CAPITAL;\n      var isMandatory = cov.MCA_OBLIGATORIO == \"S\";\n      var included = isMandatory;\n\n      var options = [];\n      var isSelect = false;\n      var sumInsured = 0;\n      var netPremium = 0;\n\n      //gets the net premium per code\n      this.premiumAmount.forEach((prem) => {\n        if (code == prem.codCob) {\n          netPremium = prem.impSpto;\n        }\n      });\n\n      //gets sum insured per code\n      this.coverageAmount.forEach((covAmount) => {\n        if (code == covAmount.codCob) {\n          sumInsured = covAmount.sumaAseg;\n          included = true;\n        }\n      });\n\n      if (code == 1040 && !included) {\n        // checking for product with Road Assist if code is 1040 or ROAD ASSIST\n        included = this.hasRoadAssist;\n      } else if (code == 1001 && included && this.isIssuance) {\n        // opens CTPL panel if code is 1001 or COMP. THIRD PAR. LIAB.\n        this.showCTPL = included;\n        this.showCTPLChange.emit(this.showCTPL);\n        this.cqs.activateCTPL(this.quoteForm, this.carDetails, this.showCTPL);\n      }\n\n      if (type == 4) {\n        isSelect = true;\n        this.amountList.forEach((amount) => {\n          if (code == amount.codCob) {\n            options.push({\n              value: amount.impLimite\n            });\n          }\n        });\n\n        var hasCounterpart = false;\n        options.forEach((o) => {\n          if (o.value == sumInsured) {\n            hasCounterpart = true;\n          }\n        });\n\n        //if has no counterpart to sum insured select options, gets the first option value\n        if (!hasCounterpart) {\n          sumInsured = options[0].value;\n        }\n      } else if (!included) {\n        sumInsured = 0;\n        netPremium = 0;\n      }\n\n      var returnObj = {\n        isMandatory: isMandatory,\n        included: included,\n        code: code,\n        coverage: name,\n        options: options,\n        sumInsured: sumInsured,\n        netPremium: netPremium,\n        isRoadAssist: (code == 1040),\n        hasVariableData: (\n          code == 1100 ||\n          code == 1002 ||\n          code == 1003 ||\n          code == 1007 ||\n          code == 1008 ||\n          code == 1020 ||\n          code == 1040),\n        isSelect: isSelect\n      }\n\n      //exclude to coverages list\n      if (\n        code != 1006 &&\n        code != 1018 &&\n        code != 1026 &&\n        code != 1027 &&\n        code != 1029 &&\n        code != 1037 &&\n        !(code == 1036 && product == 10001)) {\n        returnData.push(returnObj);\n      }\n    });\n\n    return returnData;\n  };\n}","export default \".mat-dialog-title {\\n  background: #3a3a3a;\\n  color: #fff;\\n  text-align: center;\\n  padding: 10px 0;\\n}\\n\\nh5 {\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtdGhpcmQtcGFydHkvY3JlYXRlLXRoaXJkLXBhcnR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtdGhpcmQtcGFydHkvY3JlYXRlLXRoaXJkLXBhcnR5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWRpYWxvZy10aXRsZSB7XG4gIGJhY2tncm91bmQ6ICMzYTNhM2E7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cblxuaDUge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  Inject\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material';\nimport {\n  ThirdPartyListObject\n} from 'src/app/objects/LOV/thirdPartyList';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  ThirdPartyLOVServices\n} from 'src/app/services/lov/third-party-lov-service';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  ThirdPartyService\n} from 'src/app/services/third-party.service';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-create-third-party',\n  templateUrl: './create-third-party.component.html',\n  styleUrls: ['./create-third-party.component.css']\n})\nexport class CreateThirdPartyComponent implements OnInit {\n  tpForm: FormGroup;\n  title: String = this.data.title;\n  thirdParty: PolicyHolder = new PolicyHolder();\n\n  TPLOV = new ThirdPartyListObject();\n\n  today: Date = new Date();\n\n  firstNameLabel = \"First Name\";\n  firstNameError = \"first name\"\n\n  //flag to show data for creating a person policy holder\n  showPersonDetails: boolean = true;\n\n  //flag to show data for creating organization/company \n  showOrgDetails: boolean = false;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(public dialogRef: MatDialogRef < CreateThirdPartyComponent > ,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private tpls: ThirdPartyLOVServices,\n    private tps: ThirdPartyService,\n    private bms: BsModalService) {}\n\n  ngOnInit(): void {\n    // getting all list of values needed for creating of third party person/organizaion/company\n    this.getLOVs();\n    this.setData();\n    this.setValidations();\n  }\n\n  createForm(type: string) {\n    this.tpForm = this.fb.group({\n      documentCode: ['', Validators.required],\n      documentType: ['', Validators.required],\n      policyHolderType: [null],\n      prefix: [null],\n      suffix: [null],\n      firstName: ['', Validators.required],\n      middleName: [null],\n      lastName: type == \"P\" ? ['', Validators.required] : [null],\n      gender: type == \"P\" ? ['', Validators.required] : [null],\n      birthDate: [null],\n      mobileNumber: ['', Validators.required],\n      correspondenceType: ['', Validators.required],\n      country: [null],\n      state: [null],\n      province: [null],\n      city: [null],\n      address: ['', Validators.required],\n      zipcode: [null],\n      email: ['', [Validators.required, Validators.email]],\n\n      orgDocumentType: [null],\n      orgDocumentCode: [null],\n      orgNationality: [null],\n      orgFirstName: [null],\n      orgLastName: [null],\n      orgPost: [null],\n      orgTypeOfBusiness: [null],\n\n      personMaritalStatus: [null],\n      personProfession: [null],\n      personOccupation: [null],\n      personNationality: [null],\n      personType: [null],\n      personLanguage: type == \"P\" ? ['', Validators.required] : [null],\n    });\n  }\n\n  setData() {\n    const policyHolder = this.data.policyHolder;\n    const type = policyHolder.policyHolderType;\n    this.createForm(type);\n    if (policyHolder.documentType == null || policyHolder.isExisting) {\n      this.thirdParty.policyHolderType = \"P\"; //person\n      this.thirdParty.correspondenceType = 1; //home\n      this.thirdParty.personLanguage = \"EN\" //english\n    } else {\n      this.thirdParty = policyHolder;\n      this.tpForm.get('documentType').markAsDirty();\n      this.tpForm.get('correspondenceType').markAsDirty();\n      if (this.thirdParty.policyHolderType == \"P\") {\n        this.tpForm.get('gender').markAsDirty();\n      }\n      this.getState()\n      this.getProvince();\n      this.getCity();\n      this.getZipCode();\n    }\n  }\n\n  setValidations() {\n    var policyHolderType = this.tpForm.get('policyHolderType');\n    var lastName = this.tpForm.get('lastName');\n    var gender = this.tpForm.get('gender');\n\n    policyHolderType.valueChanges.subscribe(type => {\n      this.showPersonDetails = type == \"P\";\n      this.showOrgDetails = type == \"C\";\n      this.firstNameLabel = type == \"P\" ? \"First Name\" : \"Company/Organization\";\n      this.firstNameError = this.firstNameLabel.toLocaleLowerCase();\n      Utility.updateValidator(lastName, type == \"P\" ? Validators.required : null);\n      Utility.updateValidator(gender, type == \"P\" ? Validators.required : null);\n    });\n  }\n\n  getLOVs() {\n    const _this = this;\n    this.tpls.getDocumentType().then(res => {\n      var types = [];\n      res.forEach(r => {\n        if (r.TIP_DOCUM != 'OTH') {\n          types.push(r);\n        }\n      });\n      _this.TPLOV.documentTypeLOV = types;\n    });\n    this.tpls.getPrefix().then(res => {\n      _this.TPLOV.prefixLOV = res;\n    });\n    this.tpls.getSuffix().then(res => {\n      _this.TPLOV.suffixLOV = res;\n    });\n    this.tpls.getCorrespondenceType().then(res => {\n      _this.TPLOV.correspondenceTypeLOV = res;\n    });\n    this.tpls.getCountry().then(res => {\n      _this.TPLOV.countryLOV = res;\n    });\n    this.tpls.getNationality().then(res => {\n      _this.TPLOV.nationalityLOV = res;\n    });\n    this.tpls.getPost().then(res => {\n      _this.TPLOV.orgPostLOV = res;\n    });\n    this.tpls.getTypeOfBusiness().then(res => {\n      _this.TPLOV.orgTypeOfBusinessLOV = res;\n    });\n    this.tpls.getMaritalStatus().then(res => {\n      _this.TPLOV.personMaritalStatusLOV = res;\n    });\n    this.tpls.getProfession().then(res => {\n      _this.TPLOV.personProfessionLOV = res;\n      _this.TPLOV.personOccupationLOV = res;\n    });\n    this.tpls.getType().then(res => {\n      _this.TPLOV.personTypeLOV = res;\n    });\n    this.tpls.getLanguage().then(res => {\n      _this.TPLOV.personLanguageLOV = res;\n    });\n  }\n\n  getState() {\n    const _this = this;\n    this.tpls.getState(this.thirdParty).then(res => {\n      _this.TPLOV.stateLOV = res;\n    });\n  }\n\n  getProvince() {\n    const _this = this;\n    this.tpls.getProvince(this.thirdParty).then(res => {\n      _this.TPLOV.provinceLOV = res;\n    });\n  }\n\n  getCity() {\n    const _this = this;\n    this.tpls.getCity(this.thirdParty).then(res => {\n      _this.TPLOV.cityLOV = res;\n    });\n  }\n\n  getZipCode() {\n    const _this = this;\n    this.tpls.getZipCode(this.thirdParty).then(res => {\n      _this.TPLOV.zipcodeLOV = res;\n    });\n  }\n\n  create(): void {\n    this.tps.getThirdPartyDetails(this.thirdParty.documentType, this.thirdParty.documentCode).then((res) => {\n      if (res.status) {\n        this.modalRef = Utility.showWarning(this.bms, \"Client information is already existing in the system. Search the client instead or create with a different document ID.\");\n      } else {\n        this.thirdParty.isExisting = false;\n        this.thirdParty.isPerson = this.thirdParty.policyHolderType == 'P';\n        this.dialogRef.close(this.thirdParty);\n      }\n    });\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n}","export default \".dollar {\\n  color: #4caf50;\\n}\\n\\n.euro {\\n  color: #03a9f4;\\n}\\n\\n.img-container {\\n  margin-bottom: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRvbGxhciB7XG4gIGNvbG9yOiAjNGNhZjUwO1xufVxuXG4uZXVybyB7XG4gIGNvbG9yOiAjMDNhOWY0O1xufVxuXG4uaW1nLWNvbnRhaW5lciB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59Il19 */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  DashboardService\n} from '../../services/dashboard.service';\nimport {\n  ChartOptions,\n  ChartType,\n  ChartDataSets\n} from 'chart.js';\nimport {\n  Label,\n  Color\n} from 'ng2-charts';\nimport {\n  DASH_INFO\n} from \"../../constants/local.storage\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  forex = {\n    dollar: 0.0,\n    euro: 0.0\n  }\n\n  dashboardInfo: any = {};\n  showData: boolean = false;\n\n  chartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          callback: function (value) {\n            return value.toLocaleString(\"en-US\", {\n              style: \"currency\",\n              currency: \"PHP\"\n            });\n          }\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    },\n    tooltips: {\n      mode: 'label',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          var value = Number(data.datasets[0].data[tooltipItem.index]).toFixed(2);\n          \n          return ' PHP ' + value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        },\n      },\n    }\n  };\n  chartLegend = true;\n  barChartLabels: Label[] = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n  barChartType: ChartType = 'bar';\n  barChartPlugins = [];\n  barChartColors: Color[] = [{\n    backgroundColor: \"#212529\"\n  }];\n  barChartData: ChartDataSets[] = [{\n    data: [],\n    label: 'Monthly Production'\n  }, ];\n\n  constructor(private ds: DashboardService) {}\n\n  ngOnInit() {\n    const _this = this;\n    this.ds.getForeignExchange().then((res) => {\n      if (res.status) {\n        _this.forex.dollar = res.obj[\"dollar\"];\n        _this.forex.euro = res.obj[\"euro\"];\n      }\n    });\n\n    const dashInfo = localStorage.getItem(DASH_INFO);\n\n    if (dashInfo != null) {\n      this.dashboardInfo = JSON.parse(dashInfo);\n      this.barChartData = [{\n        data: this.dashboardInfo[\"month\"],\n        label: 'Monthly Production'\n      }];\n      this.showData = true;\n    } else {\n      this.ds.getDashboardInfo().then((res) => {\n        if (res.status) {\n          localStorage.setItem(DASH_INFO, JSON.stringify(res.obj));\n          _this.dashboardInfo = res.obj;\n          _this.barChartData = [{\n            data: res.obj[\"month\"],\n            label: 'Monthly Production'\n          }];\n          this.showData = true;\n        }\n      });\n    }\n\n\n    // this.loadScripts();\n  }\n\n  // loadScripts() {\n  //   const dynamicScripts = [\n  //     './assets/js/chart.js'\n  //   ];\n  //   for (let i = 0; i < dynamicScripts.length; i++) {\n  //     const node = document.createElement('script');\n  //     node.src = dynamicScripts[i];\n  //     node.type = 'text/javascript';\n  //     node.async = false;\n  //     node.charset = 'utf-8';\n  //     document.getElementsByTagName('head')[0].appendChild(node);\n  //   }\n  // }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdW1lbnQtcHJpbnRpbmcvZG9jdW1lbnQtcHJpbnRpbmcuY29tcG9uZW50LmNzcyJ9 */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  DocumentPrinting\n} from '../../objects/DocumentPrinting';\nimport {\n  UtilityService\n} from '../../services/utility.service';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-document-printing',\n  templateUrl: './document-printing.component.html',\n  styleUrls: ['./document-printing.component.css']\n})\nexport class DocumentPrintingComponent implements OnInit {\n  documentPrintingDetails = new DocumentPrinting();\n  documentPrintingForm: FormGroup;\n  csProcessDateLOV: any[];\n  soaProcessDateLOV: any[];\n\n  showPolicyDetails: boolean = false;\n  showQuotationDetails: boolean = false;\n  showCommissionStatementDetails: boolean = false;\n  //flag if there is no generated commission statement dates for the agent\n  showCsDate: boolean = false;\n\n  showSOADetails: boolean = false;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  dateNameFormat: string = 'MMM DD, YYYY';\n  dateValueFormat: string = 'DDMMYYYY';\n\n  constructor(\n    private fb: FormBuilder,\n    private us: UtilityService,\n    private bms: BsModalService) {\n    this.createForm();\n    this.setValidations();\n  }\n\n  ngOnInit(): void {\n    this.getSOADates();\n    this.us.getDateRecord().then((res) => {\n      // date records for commission statement dates\n      if (res.status) {\n        this.csProcessDateLOV = res.obj as[];\n        if (this.csProcessDateLOV.length) {\n          this.formatDate(this.csProcessDateLOV);\n          this.showCsDate = true;\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  formatDate(lov: any[]) {\n    lov.forEach(el => {\n      var date = new Date(el.fec_PROCESO);\n      el.date = moment(date).format(this.dateNameFormat);\n      el.value = moment(date).format(this.dateValueFormat);\n    });\n  }\n\n  getSOADates() {\n    const number = 3;\n    let today = new Date();\n    var arr = [];\n\n    for (var i = 1; i <= number; i++) {\n      var name = moment(today).subtract(1, 'months').endOf('month').format(this.dateNameFormat);\n      var value = moment(today).subtract(1, 'months').endOf('month').format(this.dateValueFormat);\n      today = new Date(name);\n      arr.push({\n        name,\n        value\n      });\n    }\n    this.soaProcessDateLOV = arr;\n  }\n\n  createForm() {\n    this.documentPrintingForm = this.fb.group({\n      documentType: ['', Validators.required],\n      policyNumber: ['', Validators.required],\n      endorsementNumber: [null],\n      policyPPRF: [null],\n      policyPAC: [null],\n      policyPV: [null],\n      quotationNumber: ['', Validators.required],\n      csProcessDate: ['', Validators.required],\n      csPass: ['', Validators.required],\n      soaProcessDate: ['', Validators.required],\n      soaPass: ['', Validators.required]\n    });\n  }\n\n  setValidations() {\n    var policyNumber = this.documentPrintingForm.get('policyNumber');\n    var quotationNumber = this.documentPrintingForm.get('quotationNumber');\n    var csProcessDate = this.documentPrintingForm.get('csProcessDate');\n    var csPass = this.documentPrintingForm.get('csPass');\n    var soaProcessDate = this.documentPrintingForm.get('soaProcessDate');\n    var soaPass = this.documentPrintingForm.get('soaPass');\n\n    this.documentPrintingForm.get('documentType').valueChanges.subscribe(documentType => {\n      this.showPolicyDetails = false;\n      this.showQuotationDetails = false;\n      this.showCommissionStatementDetails = false;\n      this.showSOADetails = false;\n\n      //removing required validation\n      Utility.updateValidator(policyNumber, null);\n      Utility.updateValidator(quotationNumber, null);\n      Utility.updateValidator(csProcessDate, null);\n      Utility.updateValidator(csPass, null);\n      Utility.updateValidator(soaProcessDate, null);\n      Utility.updateValidator(soaPass, null);\n\n      if (documentType == \"P\") { //policy\n        this.showPolicyDetails = true;\n        Utility.updateValidator(policyNumber, [Validators.required]);\n      } else if (documentType == \"Q\") { //quotation\n        this.showQuotationDetails = true;\n        Utility.updateValidator(quotationNumber, [Validators.required]);\n      } else if (documentType == \"C\") { //commission statement\n        this.showCommissionStatementDetails = true;\n        Utility.updateValidator(csProcessDate, [Validators.required]);\n        Utility.updateValidator(csPass, [Validators.required]);\n      } else if (documentType == \"S\") { //commission statement\n        this.showSOADetails = true;\n        Utility.updateValidator(soaProcessDate, [Validators.required]);\n        Utility.updateValidator(soaPass, [Validators.required]);\n      }\n    });\n  }\n\n  policyNumberOnChange() {\n    this.us.getEndorsementNumber(this.documentPrintingDetails).then((res) => {\n      if (res.status) {\n        this.documentPrintingDetails.endorsementNumber = res.obj as String;\n      }\n    });\n  }\n\n  print(documentPrintingDetails: DocumentPrinting) {\n    this.us.validatePrinting(documentPrintingDetails).then((res) => {\n      if (res.status) {\n        var ext = res.obj;\n        this.us.printDocument(ext.toString()).subscribe(data => {\n          if (data != null) {\n            window.open(URL.createObjectURL(data));\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n}\n","export default \"\\n#faq span.qa-label {\\n    font-size: 35px;\\n    font-weight: 700;\\n}\\n\\n#faq .question-panel {\\n\\tpadding-bottom: 40px;\\n\\tmargin-bottom: 40px;\\n\\tborder-bottom: 1px solid #e0e0e0;\\n}\\n\\n#faq .question-container {\\n\\tpadding: 10px;\\n\\tbackground: #f5f5f5;\\n\\tborder-left: 5px solid #dc291e;\\n}\\n\\n#faq .question-section h4 {\\n\\tmargin: 9px 0;\\n}\\n\\n#faq .answer-container {\\n\\tbackground: #ffffff;\\n\\tborder-left: 5px solid #4a4a4a;\\n\\tpadding: 10px;\\n\\tcolor: #828282;\\n}\\n\\n#faq .answer-section p, #faq .answer-section li {\\n\\tfont-size: 14px;\\n\\tline-height: 25px;\\n}\\n\\n#faq img {\\n\\twidth: 100%;\\n    border: 1px solid #000;\\n    max-width: 900px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mYXEvZmFxLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7QUFFQTtDQUNDLG9CQUFvQjtDQUNwQixtQkFBbUI7Q0FDbkIsZ0NBQWdDO0FBQ2pDOztBQUVBO0NBQ0MsYUFBYTtDQUNiLG1CQUFtQjtDQUNuQiw4QkFBOEI7QUFDL0I7O0FBRUE7Q0FDQyxhQUFhO0FBQ2Q7O0FBRUE7Q0FDQyxtQkFBbUI7Q0FDbkIsOEJBQThCO0NBQzlCLGFBQWE7Q0FDYixjQUFjO0FBQ2Y7O0FBRUE7Q0FDQyxlQUFlO0NBQ2YsaUJBQWlCO0FBQ2xCOztBQUVBO0NBQ0MsV0FBVztJQUNSLHNCQUFzQjtJQUN0QixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2ZhcS9mYXEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuI2ZhcSBzcGFuLnFhLWxhYmVsIHtcbiAgICBmb250LXNpemU6IDM1cHg7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuI2ZhcSAucXVlc3Rpb24tcGFuZWwge1xuXHRwYWRkaW5nLWJvdHRvbTogNDBweDtcblx0bWFyZ2luLWJvdHRvbTogNDBweDtcblx0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbiNmYXEgLnF1ZXN0aW9uLWNvbnRhaW5lciB7XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGJhY2tncm91bmQ6ICNmNWY1ZjU7XG5cdGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2RjMjkxZTtcbn1cblxuI2ZhcSAucXVlc3Rpb24tc2VjdGlvbiBoNCB7XG5cdG1hcmdpbjogOXB4IDA7XG59XG5cbiNmYXEgLmFuc3dlci1jb250YWluZXIge1xuXHRiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuXHRib3JkZXItbGVmdDogNXB4IHNvbGlkICM0YTRhNGE7XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGNvbG9yOiAjODI4MjgyO1xufVxuXG4jZmFxIC5hbnN3ZXItc2VjdGlvbiBwLCAjZmFxIC5hbnN3ZXItc2VjdGlvbiBsaSB7XG5cdGZvbnQtc2l6ZTogMTRweDtcblx0bGluZS1oZWlnaHQ6IDI1cHg7XG59XG5cbiNmYXEgaW1nIHtcblx0d2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDtcbiAgICBtYXgtd2lkdGg6IDkwMHB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.css']\n})\nexport class FaqComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"#coverageBreakdown table {\\n  text-align: center !important;\\n  width: 100%;\\n}\\n\\n#coverageBreakdown .mat-header-cell {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9maXhlZC1jb3ZlcmFnZXMvZml4ZWQtY292ZXJhZ2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2QkFBNkI7RUFDN0IsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9maXhlZC1jb3ZlcmFnZXMvZml4ZWQtY292ZXJhZ2VzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjY292ZXJhZ2VCcmVha2Rvd24gdGFibGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbiNjb3ZlcmFnZUJyZWFrZG93biAubWF0LWhlYWRlci1jZWxsIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\n\nexport interface coverageDTO {\n  label: string;\n  sumInsured: number;\n  currency: string;\n  code: number;\n  details: string;\n  isHeader: boolean;\n  showDetails: boolean;\n}\n\n@Component({\n  selector: 'app-fixed-coverages',\n  templateUrl: './fixed-coverages.component.html',\n  styleUrls: ['./fixed-coverages.component.css']\n})\nexport class FixedCoveragesComponent implements OnInit {\n  @Input() line: string;\n  @Input() coverageList: any[] = [];\n  @Input()\n  set loadCoverage(value: number) {\n    this.triggerCounter = value;\n    this.generateCoverage();\n  }\n\n  displayedColumns: string[] = ['label', 'sumInsured'];\n  coverageData: Array < coverageDTO > = [];\n  triggerCounter: number;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.generateCoverage();\n  }\n\n  generateCoverage() {\n    this.coverageData = [];\n\n    let headers = [];\n    //coverage headers\n\n    if (this.line == 'travel') {\n      headers = [300, 332, 330, 302, 316, 319, 324, 333];\n    } else if (this.line == 'accident') {\n      headers = [340];\n    }\n\n    this.coverageList.forEach(coverage => {\n      var obj = {} as coverageDTO;\n      // bolder label if it is a header\n      obj.code = coverage.codCob;\n      if (this.line == 'home') {\n        obj.isHeader = coverage.MCA_TIP_CAPITAL == '5' || coverage.nomCob == 'OTHER RELATED STRUCTURES' || coverage.nomCob == 'OTHER RELATED CONTENTS';\n      } else {\n        obj.isHeader = headers.indexOf(obj.code) !== -1;\n      }\n\n      obj.label = obj.isHeader ? '<strong>' + coverage.nomCob + '</strong>' : coverage.nomCob;\n      obj.sumInsured = coverage.sumaAseg;\n      obj.showDetails = false;\n\n      if (obj.isHeader && obj.code != 330 && obj.code != 332) {\n        if (this.line != 'home' || obj.sumInsured == 0) {\n          obj.showDetails = true;\n        }\n        obj.details = '';\n      } else if (obj.sumInsured == null) {\n        obj.showDetails = true;\n        obj.details = 'n/a';\n      } else if (obj.sumInsured == 0) {\n        obj.showDetails = true;\n        obj.details = obj.isHeader ? '' : 'actual cost';\n      }\n\n      if (coverage.codMon == 2) {\n        obj.currency = 'USD';\n      } else if (coverage.codMon == 3) {\n        obj.currency = 'EU';\n      } else {\n        obj.currency = 'PHP';\n      }\n      \n      this.coverageData.push(obj);\n\n      //if selected product has hospital cash benefit coverage\n      if (this.line == 'accident' && coverage.codCob == 357) {\n        var obj1 = {} as coverageDTO;\n        obj1.showDetails = true;\n        obj1.label = 'Daily Cash Benefit - up to 365 days only, starting on the first day of Hospital Confinement or after 24 hours of covered accident / Sudden illness';\n        obj1.details = 'Php 1,000.00/day';\n        this.coverageData.push(obj1);\n\n        var obj2 = {} as coverageDTO;\n        obj2.showDetails = true;\n        obj2.label = '50% increase in Daily Cash Benefit, in case of Intensive Care Unit confinement';\n        obj2.details = 'Php 1,500.00/day';\n        this.coverageData.push(obj2);\n\n        var obj3 = {} as coverageDTO;\n        obj3.showDetails = true;\n        obj3.label = 'Surgical Cash Benefit for every covered surgery (Subject to Schedule of Surgical Benefits)';\n        obj3.details = 'max of Php 10,000.00';\n        this.coverageData.push(obj3);\n      }\n    });\n  }\n}","export default \"footer.sticky-footer {\\n    padding: 0;\\n    flex-shrink: 0;\\n    text-align: right;\\n}\\n\\n.footer-wrapper {\\n    padding-top: 30px;\\n}\\n\\n.footer-wrapper p {\\n    margin-bottom: 6px;\\n    font-size: 10px;\\n}\\n\\n.footer-wrapper img {\\n    width: 200px;\\n    margin: 0 -9px 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsY0FBYztJQUNkLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9vdGVyLnN0aWNreS1mb290ZXIge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgZmxleC1zaHJpbms6IDA7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5mb290ZXItd3JhcHBlciB7XG4gICAgcGFkZGluZy10b3A6IDMwcHg7XG59XG5cbi5mb290ZXItd3JhcHBlciBwIHtcbiAgICBtYXJnaW4tYm90dG9tOiA2cHg7XG4gICAgZm9udC1zaXplOiAxMHB4O1xufVxuXG4uZm9vdGVyLXdyYXBwZXIgaW1nIHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgbWFyZ2luOiAwIC05cHggNXB4O1xufSJdfQ== */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  VER\n} from '../../constants/app.constant';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  version = VER;\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZ3JvdXAtcG9saWN5L2dyb3VwLXBvbGljeS5jb21wb25lbnQuY3NzIn0= */\";","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  Validate\n} from '../../validators/validate';\nimport {\n  GroupPolicyLOVServices\n} from '../../services/lov/group-policy.service';\nimport {\n  GroupPolicyListObject\n} from 'src/app/objects/LOV/groupPolicyList';\nimport {\n  GroupPolicy\n} from 'src/app/objects/GroupPolicy';\nimport {\n  AuthenticationService\n} from '../../services/authentication.service';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Component({\n  selector: 'app-group-policy',\n  templateUrl: './group-policy.component.html',\n  styleUrls: ['./group-policy.component.css']\n})\n\nexport class GroupPolicyComponent {\n  user = this.auths.currentUserValue;\n  @Input() groupPolicy: GroupPolicy;\n  @Input() prevDetails: any;\n  @Input() changedValues: any[] = [];\n  @Input() editMode: boolean;\n  @Input() showExpiring: boolean;\n  @Input()\n  set subline(subline: number) {\n    this._subline = subline;\n    if (subline != null) {\n      this.getGroupPolicyLOV();\n    }\n  }\n  @Input()\n  set loadQuotation(value: number) {\n    this.triggerCounter = value;\n    if (!Utility.isUndefined(this.groupPolicy.commercialStructure)) {\n      this.gpForm.get('commercialStructure').markAsDirty();\n    }\n    if (!Utility.isUndefined(this.groupPolicy.groupPolicy)) {\n      this.gpForm.get('groupPolicy').markAsDirty();\n    }\n    if (!Utility.isUndefined(this.groupPolicy.contract)) {\n      this.gpForm.get('contract').markAsDirty();\n      this.gpls.getContract(this._subline, this.groupPolicy).then(res => {\n        this.GPLOV.contractLOV = res;\n      });\n    }\n    if (!Utility.isUndefined(this.groupPolicy.subContract)) {\n      this.gpForm.get('subContract').markAsDirty();\n      this.gpls.getSubContract(this._subline, this.groupPolicy).then(res => {\n        this.GPLOV.subContractLOV = res;\n      });\n    }\n  }\n\n  @Output() changedValuesChange = new EventEmitter < any[] > ();\n  triggerCounter: number;\n  _subline: number;\n\n  gpForm: FormGroup;\n  GPLOV = new GroupPolicyListObject();\n\n  today: Date = new Date();\n  expiryDateMinDate: Date = moment().add(1, 'years').toDate();\n\n  constructor(\n    private gpls: GroupPolicyLOVServices,\n    private fb: FormBuilder,\n    private auths: AuthenticationService) {}\n\n  ngOnInit(): void {\n    this.createForm();\n    setTimeout(() => {\n      this.groupPolicy.agentCode = this.user.agentCode;\n      this.groupPolicy.commercialStructure = this.user.commercialStructure;\n      if (!Utility.isUndefined(this.groupPolicy.commercialStructure)) {\n        this.gpForm.get('commercialStructure').markAsDirty();\n      }\n\n      const _this = this;\n      this.gpls.getCommercialStructure().then(res => {\n        _this.GPLOV.commercialStructureLOV = res;\n      });\n\n      Validate.setGroupPolicyValidations(this.gpForm, this.groupPolicy);\n    });\n  }\n\n  getGroupPolicyLOV() {\n    const _this = this;\n    this.gpls.getGroupPolicy(this._subline).then(res => {\n      _this.GPLOV.groupPolicyLOV = res;\n    });\n  }\n\n  createForm() {\n    this.gpForm = this.fb.group({\n      //group policy\n      groupPolicy: [null],\n      contract: [null],\n      subContract: [null],\n      commercialStructure: ['', Validators.required],\n      agentCode: [{\n        value: '',\n        disabled: true\n      }, Validators.required],\n      cbIsRenewal: [null],\n      expiringPolicyNumber: [null]\n    });\n  }\n\n  groupPolicyOnChange() {\n    const _this = this;\n    _this.GPLOV.contractLOV = []\n    this.gpls.getContract(this._subline, this.groupPolicy).then(res => {\n      _this.GPLOV.contractLOV = res;\n    });\n    if (this.groupPolicy.groupPolicy == undefined || this.groupPolicy.groupPolicy == 0) {\n      this.changedValues = this.changedValues.filter(v => v !== 'Contract');\n      this.changedValues = this.changedValues.filter(v => v !== 'Sub Contract');\n      this.changedValuesChange.emit(this.changedValues);\n    }\n  }\n\n  contractOnChange() {\n    const _this = this;\n    _this.GPLOV.subContractLOV = []\n    this.gpls.getSubContract(this._subline, this.groupPolicy).then(res => {\n      _this.GPLOV.subContractLOV = res;\n    });\n  }\n\n  affecting(key: string, label: string) {\n    if (this.prevDetails != null && 'groupPolicy' in this.prevDetails) {\n      const prev = this.prevDetails.groupPolicy[key] == undefined ? \"\" : this.prevDetails.groupPolicy[key];\n      const curr = this.groupPolicy[key] == undefined ? \"\" : this.groupPolicy[key];\n      if (prev != curr) {\n        if (!this.changedValues.includes(label)) {\n          //if changedValues length is greater than 0, request is affecting\n          this.changedValues.push(label);\n        }\n      } else {\n        //remove all occurence\n        this.changedValues = this.changedValues.filter(v => v !== label); \n      }\n      this.changedValuesChange.emit(this.changedValues);\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  Globals\n} from '../../utils/global';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  AuthenticationService\n} from '../../services/authentication.service';\nimport {\n  page\n} from '../../constants/page';\nimport {\n  User\n} from 'src/app/objects/User';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  p = page; //constant pages\n  canChooseAgent: boolean = false;\n  currentUser = new User();\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService) {}\n\n  ngOnInit() {\n    this.currentUser = this.authenticationService.currentUserValue;\n    this.canChooseAgent = this.currentUser.role === 2;\n  }\n\n  setPage(val: String) {\n    Globals.setPage(val);\n  }\n\n  chooseAgent() {\n    this.router.navigate(['/agent']);\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n","export default \".container {\\n    width: 100%;\\n    min-height: 100vh;\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n    align-items: center;\\n    padding: 15px;\\n  \\n    background-repeat: no-repeat;\\n    background-position: center;\\n    background-size: cover;\\n    position: relative;\\n    z-index: 1;\\n  }\\n  \\n  .container::before {\\n    content: \\\"\\\";\\n    display: block;\\n    position: absolute;\\n    z-index: -1;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n  }\\n  \\n  .wrap {\\n    max-width: 1200px;\\n    height: 650px;\\n    width: 100%;\\n    border-radius: 5px;\\n    overflow: hidden;\\n    background: #fff;\\n  }\\n  \\n  .brand-logo {\\n    cursor: pointer;\\n  }\\n  \\n  .brand-logo img {\\n    width: 100%;\\n    margin: 35px 0 0;\\n    padding: 20px;\\n  }\\n  \\n  .col-lg-4.menu {\\n    padding-left: 30px;\\n    background: #2a2a2a;\\n  }\\n  \\n  .col-lg-8.details {\\n    padding: 30px 40px 0 30px;\\n    text-align: justify;\\n  }\\n  \\n  ul.health-menu {\\n    display: block;\\n    margin: 10px;\\n    top: 90px;\\n    position: relative;\\n    list-style: none;\\n    padding: 0;\\n  }\\n  \\n  ul.health-menu li {\\n    padding: 10px 5px;\\n    background-color: #c64c4c;\\n    border: 1px solid #525252;\\n    margin: 20px 0;\\n    text-align: center;\\n    border-radius: 5px;\\n    color: #fbfbfb;\\n  }\\n  \\n  ul.health-menu li.live {\\n    background-color: #8de865;\\n    color: #404040;\\n  }\\n  \\n  .scroll {\\n    overflow: scroll;\\n    height: 100%;\\n  }\\n  \\n  .scroll-wrapper {\\n    height: 635px;\\n  }\\n  \\n  .top-20 {\\n    padding-top: 20px;\\n  }\\n  \\n  h5 {\\n    font-weight: bold;\\n  }\\n  \\n  h2 {\\n    font-weight: bold;\\n    text-align: center;\\n    margin: 20px 0;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9oZWFsdGgtY2hlY2svaGVhbHRoLWNoZWNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsaUJBQWlCO0lBS2pCLGFBQWE7SUFDYixlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixhQUFhOztJQUViLDRCQUE0QjtJQUM1QiwyQkFBMkI7SUFDM0Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixVQUFVO0VBQ1o7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsV0FBVztJQUNYLFlBQVk7SUFDWixNQUFNO0lBQ04sT0FBTztFQUNUOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxZQUFZO0lBQ1osU0FBUztJQUNULGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsVUFBVTtFQUNaOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6Qix5QkFBeUI7SUFDekIsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsY0FBYztFQUNoQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsY0FBYztFQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhbHRoLWNoZWNrL2hlYWx0aC1jaGVjay5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogMTAwdmg7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tb3otYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMTVweDtcbiAgXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMTtcbiAgfVxuICBcbiAgLmNvbnRhaW5lcjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAtMTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gIH1cbiAgXG4gIC53cmFwIHtcbiAgICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgICBoZWlnaHQ6IDY1MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gIH1cbiAgXG4gIC5icmFuZC1sb2dvIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgXG4gIC5icmFuZC1sb2dvIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAzNXB4IDAgMDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICB9XG4gIFxuICAuY29sLWxnLTQubWVudSB7XG4gICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICAgIGJhY2tncm91bmQ6ICMyYTJhMmE7XG4gIH1cbiAgXG4gIC5jb2wtbGctOC5kZXRhaWxzIHtcbiAgICBwYWRkaW5nOiAzMHB4IDQwcHggMCAzMHB4O1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gIH1cbiAgXG4gIHVsLmhlYWx0aC1tZW51IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgdG9wOiA5MHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbiAgXG4gIHVsLmhlYWx0aC1tZW51IGxpIHtcbiAgICBwYWRkaW5nOiAxMHB4IDVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzY0YzRjO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM1MjUyNTI7XG4gICAgbWFyZ2luOiAyMHB4IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjb2xvcjogI2ZiZmJmYjtcbiAgfVxuXG4gIHVsLmhlYWx0aC1tZW51IGxpLmxpdmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM4ZGU4NjU7XG4gICAgY29sb3I6ICM0MDQwNDA7XG4gIH1cbiAgXG4gIC5zY3JvbGwge1xuICAgIG92ZXJmbG93OiBzY3JvbGw7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG4gIFxuICAuc2Nyb2xsLXdyYXBwZXIge1xuICAgIGhlaWdodDogNjM1cHg7XG4gIH1cbiAgXG4gIC50b3AtMjAge1xuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICB9XG4gIFxuICBoNSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbiAgXG4gIGgyIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAyMHB4IDA7XG4gIH0iXX0= */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  LovService\n} from 'src/app/services/lov.service';\nimport {\n  environment\n} from '../../../environments/environment';\nimport {\n  VER\n} from '../../constants/app.constant';\n\n@Component({\n  selector: 'app-health-check',\n  templateUrl: './health-check.component.html',\n  styleUrls: ['./health-check.component.css']\n})\nexport class HealthCheckComponent implements OnInit {\n\n  apiUrl = environment.apiUrl;\n  imgUrl = environment.imgUrl;\n  production = environment.production;\n  version = VER;\n  backendConfigList : any[] = [];\n\n  constructor(private ls: LovService) {}\n\n  ngOnInit(): void {\n    this.ls.getConfigList().then(res => {\n      if (res.status) {\n        this.backendConfigList = res.obj as any[];\n      }\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5kaXZpZHVhbC1wb2xpY3kvaW5kaXZpZHVhbC1wb2xpY3kuY29tcG9uZW50LmNzcyJ9 */\";","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder\n} from '@angular/forms';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Component({\n  selector: 'app-individual-policy',\n  templateUrl: './individual-policy.component.html',\n  styleUrls: ['./individual-policy.component.css']\n})\nexport class IndividualPolicyComponent implements OnInit {\n  @Input() details: any;\n  loadForm: FormGroup;\n\n  disableLoadBtn: boolean = true;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private bms: BsModalService) {\n    this.createForm();\n    this.setValidations();\n  }\n\n  ngOnInit(): void {}\n\n  createForm() {\n    this.loadForm = this.fb.group({\n      quotationNumber: ['', null],\n    });\n  }\n\n  setValidations() {\n    var quotationNumber = this.loadForm.get('quotationNumber');\n    quotationNumber.valueChanges.subscribe(number => {\n      this.disableLoadBtn = Utility.isUndefined(number);\n    });\n  }\n\n}","export default \"#login,\\n#login .container-fluid,\\n#login .row,\\n#login .row .login-panel {\\n  height: 100%;\\n}\\n\\n#login .left-container img {\\n  width: 100%;\\n}\\n\\n.wrap-banner {\\n  position: relative;\\n  top: calc(50% - 100px);\\n  color: #efefef;\\n  max-width: 450px;\\n  position: relative;\\n  margin: 0 auto;\\n}\\n\\n.login-form-title {\\n  color: #c31f09;\\n  font-size: 20px;\\n  font-weight: 700;\\n  margin-bottom: 10px;\\n  display: block;\\n}\\n\\n.wrap-input {\\n  margin-bottom: 20px;\\n}\\n\\n.wrap-login {\\n  top: calc(50% - 180px);\\n  width: 80%;\\n  position: relative;\\n  margin: 0px auto;\\n}\\n\\n.login-logo {\\n  width: 80%;\\n  display: block;\\n  margin: 0 auto 40px;\\n}\\n\\n.login-footer {\\n  position: absolute;\\n  bottom: 10px;\\n  margin: 0px auto;\\n  padding: 0;\\n  width: 94%;\\n}\\n\\n.login-footer ul {\\n  margin: 0 auto;\\n  padding: 0px;\\n  text-align: center;\\n}\\n\\n.login-footer ul li {\\n  display: inline-block;\\n  margin-left: 15px;\\n}\\n\\n.f-password {\\n  color: #c31f09;\\n}\\n\\n.login-version {\\n  font-size: 11px;\\n}\\n\\n#rememberMe {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0VBSUUsWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsY0FBYztFQUNkLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNsb2dpbixcbiNsb2dpbiAuY29udGFpbmVyLWZsdWlkLFxuI2xvZ2luIC5yb3csXG4jbG9naW4gLnJvdyAubG9naW4tcGFuZWwge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbiNsb2dpbiAubGVmdC1jb250YWluZXIgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi53cmFwLWJhbm5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiBjYWxjKDUwJSAtIDEwMHB4KTtcbiAgY29sb3I6ICNlZmVmZWY7XG4gIG1heC13aWR0aDogNDUwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5sb2dpbi1mb3JtLXRpdGxlIHtcbiAgY29sb3I6ICNjMzFmMDk7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi53cmFwLWlucHV0IHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLndyYXAtbG9naW4ge1xuICB0b3A6IGNhbGMoNTAlIC0gMTgwcHgpO1xuICB3aWR0aDogODAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogMHB4IGF1dG87XG59XG5cbi5sb2dpbi1sb2dvIHtcbiAgd2lkdGg6IDgwJTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCBhdXRvIDQwcHg7XG59XG5cbi5sb2dpbi1mb290ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMTBweDtcbiAgbWFyZ2luOiAwcHggYXV0bztcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IDk0JTtcbn1cblxuLmxvZ2luLWZvb3RlciB1bCB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmxvZ2luLWZvb3RlciB1bCBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XG59XG5cbi5mLXBhc3N3b3JkIHtcbiAgY29sb3I6ICNjMzFmMDk7XG59XG5cbi5sb2dpbi12ZXJzaW9uIHtcbiAgZm9udC1zaXplOiAxMXB4O1xufVxuXG4jcmVtZW1iZXJNZSB7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xufSJdfQ== */\";","import {\n  Component,\n  OnInit\n} from \"@angular/core\";\nimport {\n  Router,\n  ActivatedRoute\n} from \"@angular/router\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from \"@angular/forms\";\nimport {\n  Utility\n} from \"../../utils/utility\";\nimport {\n  BsModalService,\n  BsModalRef\n} from \"ngx-bootstrap/modal\";\nimport {\n  first\n} from \"rxjs/operators\";\nimport {\n  AuthenticationService\n} from \"../../services/authentication.service\";\nimport {\n  MIVO_LOGIN\n} from \"../../constants/local.storage\";\nimport {\n  VER\n} from \"../../constants/app.constant\";\nimport {\n  Globals\n} from \"../../utils/global\";\nimport {\n  page\n} from \"../../constants/page\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  returnUrl: String;\n  loading = false;\n  message: any;\n  alert: boolean;\n  version = VER;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private modalService: BsModalService,\n    private authenticationService: AuthenticationService\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate([\"/\"]);\n    }\n    this.createForm();\n  }\n\n  ngOnInit() {\n    this.modalRef = Utility.modal(\n      this.modalService,\n      \"You are about to enter MAPFRE Insurance Information System. The access and use of this system is limited to duly authorized personnel and strictly for official use only. MAPFRE Insurance informs all of its employees, agents, representatives, service providers, and all natural or juridical persons having official transactions with the company involving similar access to its information system that Information accessed in MAPFRE SYSTEM is considered property of MAPFRE Insurance and is subject to obligation of confidentiality and security in accordance with the laws on privacy and protection of personal information. All registered users of this system shall be monitored and all accesses be recorded by MAPFRE INSURANCE as a matter of right, in accordance with existing and applicable laws and Company Rules and regulations.\",\n      \"MAPFRE INFORMATION USAGE SECURITY NOTICE\"\n    );\n\n    var mivoLogin = localStorage.getItem(MIVO_LOGIN);\n    if (mivoLogin != null) {\n      var login = JSON.parse(mivoLogin);\n      this.loginForm.markAsDirty();\n      this.loginForm.setValue({\n        username: login.username,\n        password: login.password,\n        rememberMe: login.rememberMe,\n      });\n    }\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\n  }\n\n  createForm() {\n    this.loginForm = this.fb.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required],\n      rememberMe: [],\n    });\n  }\n\n  rememberMe(): void {\n    if (this.loginForm.value.rememberMe) {\n      localStorage.setItem(MIVO_LOGIN, JSON.stringify(this.loginForm.value));\n    } else {\n      localStorage.removeItem(MIVO_LOGIN);\n    }\n  }\n\n  onSubmit(): void {\n    this.rememberMe();\n    this.loading = true;\n    this.authenticationService\n      .login(this.loginForm.value.username, this.loginForm.value.password)\n      .pipe(first())\n      .subscribe(\n        (data) => {\n          if (data != null) {\n            Globals.setPage(page.DAS.N);\n            if (data.role === 2) { // if employee\n              this.router.navigate([\"/agent\"]);\n            } else {\n              this.router.navigate([this.returnUrl]);\n            }\n          } else {\n            this.loading = false;\n            this.alert = true;\n            this.message = \"Incorrect useraname or password.\";\n          }\n        },\n        (err) => {\n          this.loading = false;\n            this.alert = true;\n            this.message = \"Application Error! \" + err.message;\n        }\n      );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWlzc2luZy1wYWdlL21pc3NpbmctcGFnZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-missing-page',\n  templateUrl: './missing-page.component.html',\n  styleUrls: ['./missing-page.component.css']\n})\nexport class MissingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".modal-footer {\\n  padding: 0.50rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9tb2RhbC9tb2RhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9tb2RhbC9tb2RhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLWZvb3RlciB7XG4gIHBhZGRpbmc6IDAuNTByZW07XG59Il19 */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  BsModalRef\n} from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n\n  className: string;\n  title: string;\n  message: string;\n  items: any[];\n  isHtml: boolean;\n  isConfirm: boolean;\n  isOkay: boolean;\n  isClose: boolean;\n  isCancel: boolean;\n  icon: string = 'fa-smile';\n  btnClass: string = 'default';\n\n  constructor(\n    private bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {\n    if (this.title == \"Error\") {\n      this.icon = 'fa-times';\n      this.btnClass = 'danger';\n    } else if (this.title == \"Warning\") {\n      this.icon = 'fa-exclamation';\n    } else if (this.title == \"Info\") {\n      this.icon = 'fa-info';\n      this.btnClass = 'primary';\n    }\n  }\n\n  confirm() {\n    this.close();\n  }\n\n  okay() {\n    this.bsModalRef.hide();\n  }\n\n  close() {\n    this.bsModalRef.hide();\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n  }\n\n}\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-sort-header-container {\\n  align-items: center;\\n}\\n\\n.divider {\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n.col-form-label {\\n  font-size: 90%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9vdXRzdGFuZGluZy1iaWxscy9vdXRzdGFuZGluZy1iaWxscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvb3V0c3RhbmRpbmctYmlsbHMvb3V0c3RhbmRpbmctYmlsbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoLm1hdC1zb3J0LWhlYWRlci1zb3J0ZWQge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmRpdmlkZXIge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbn1cblxuLmNvbC1mb3JtLWxhYmVsIHtcbiAgZm9udC1zaXplOiA5MCU7XG59XG4iXX0= */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\n\nexport interface OutstandingBillsDTO {\n  policyHolder: string;\n  policyNumber: string;\n  currency: string;\n  invoiceNumber: number;\n  receiptAmount: string;\n  commissionAmount: string;\n  withholdingTax: string;\n  source: string;\n}\n\nconst ELEMENT_DATA: OutstandingBillsDTO[] = [{\n    policyHolder: \"JAMES, LeBRON\",\n    policyNumber: \"1001661000178\",\n    currency: \"PHP\",\n    invoiceNumber: 33432,\n    receiptAmount: \"560.00\",\n    commissionAmount: \"44.80\",\n    withholdingTax: \"0.00\",\n    source: \"TRONWEB\"\n  },{\n    policyHolder: \"WADE, DYWANE\",\n    policyNumber: \"2001892000786\",\n    currency: \"PHP\",\n    invoiceNumber: 416512,\n    receiptAmount: \"1,974.96\",\n    commissionAmount: \"624.00\",\n    withholdingTax: \"93.60\",\n    source: \"TRONWEB\"\n  },{\n    policyHolder: \"BRYANT, KOBE\",\n    policyNumber: \"2001892000783\",\n    currency: \"PHP\",\n    invoiceNumber: 33432,\n    receiptAmount: \"4,605.00\",\n    commissionAmount: \"144.80\",\n    withholdingTax: \"203.00\",\n    source: \"TRONWEB\"\n  },{\n    policyHolder: \"MITCHELL, DONOVAN\",\n    policyNumber: \"2001892000787\",\n    currency: \"PHP\",\n    invoiceNumber: 87687,\n    receiptAmount: \"800.00\",\n    commissionAmount: \"444.80\",\n    withholdingTax: \"405.00\",\n    source: \"TRONWEB\"\n  },{\n    policyHolder: \"ROSE, DERRICK\",\n    policyNumber: \"2001892000788\",\n    currency: \"PHP\",\n    invoiceNumber: 6323,\n    receiptAmount: \"560.00\",\n    commissionAmount: \"44.80\",\n    withholdingTax: \"0.00\",\n    source: \"TRONWEB\"\n  },{\n    policyHolder: \"IRVING, KYRIE\",\n    policyNumber: \"2001892000789\",\n    currency: \"PHP\",\n    invoiceNumber: 132433,\n    receiptAmount: \"5600.00\",\n    commissionAmount: \"4764.80\",\n    withholdingTax: \"6780.00\",\n    source: \"TRONWEB\"\n  }\n];\n\n@Component({\n  selector: 'app-outstanding-bills',\n  templateUrl: './outstanding-bills.component.html',\n  styleUrls: ['./outstanding-bills.component.css']\n})\nexport class OutstandingBillsComponent implements OnInit {\n\n  displayedColumns: string[] = ['policyHolder', 'policyNumber', 'currency', 'invoiceNumber', 'receiptAmount', 'commissionAmount', 'withholdingTax', 'source'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n}\n","export default \"#paymentBreakdown table {\\n  text-align: center !important;\\n  width: 100%;\\n}\\n\\n.header.row {\\n  background: #3a3a3a;\\n  color: #fff;\\n  text-align: center;\\n  padding: 10px 0 0;\\n}\\n\\n#paymentBreakdown .mat-header-cell {\\n  text-align: center;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.mat-dialog-actions {\\n    border-top: 1px solid #e0e0e0;\\n}\\n\\n.breakdown .col-4 {\\n  padding: 10px 0;\\n}\\n\\n.breakdown .col-4.right {\\n  text-align: right;\\n}\\n\\n.clearfix.divider {\\n  border-bottom: 1px solid #e0e0e0;\\n}\\n\\n.show-more {\\n  margin: 10px 0;\\n  padding: 10px 0;\\n  text-align: center;\\n  display: block;\\n  cursor: pointer;\\n}\\n\\n.show-more:hover {\\n  background: #e7e7e7;\\n}\\n\\n.emphasize {\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXltZW50LWJyZWFrZG93bi1tb2RhbC9wYXltZW50LWJyZWFrZG93bi1tb2RhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNkJBQTZCO0VBQzdCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtJQUNJLDZCQUE2QjtBQUNqQzs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3BheW1lbnQtYnJlYWtkb3duLW1vZGFsL3BheW1lbnQtYnJlYWtkb3duLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcGF5bWVudEJyZWFrZG93biB0YWJsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmhlYWRlci5yb3cge1xuICBiYWNrZ3JvdW5kOiAjM2EzYTNhO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAxMHB4IDAgMDtcbn1cblxuI3BheW1lbnRCcmVha2Rvd24gLm1hdC1oZWFkZXItY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm1hdC1kaWFsb2ctYWN0aW9ucyB7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5icmVha2Rvd24gLmNvbC00IHtcbiAgcGFkZGluZzogMTBweCAwO1xufVxuXG4uYnJlYWtkb3duIC5jb2wtNC5yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uY2xlYXJmaXguZGl2aWRlciB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTBlMGUwO1xufVxuXG4uc2hvdy1tb3JlIHtcbiAgbWFyZ2luOiAxMHB4IDA7XG4gIHBhZGRpbmc6IDEwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uc2hvdy1tb3JlOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2U3ZTdlNztcbn1cblxuLmVtcGhhc2l6ZSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  Inject\n} from '@angular/core';\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatTableDataSource\n} from '@angular/material';\nimport {\n  SlideInOutAnimation\n} from 'src/app/utils/animation';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n// import {\n//   CarQuoteServices\n// } from 'src/app/services/car-quote.service';\n// import {\n//   TravelIssueServices\n// } from 'src/app/services/travel-issue.service';\n// import {\n//   AccidentIssueServices\n// } from 'src/app/services/accident-issue.service';\nimport {\n  PrintingService\n} from 'src/app/services/printing.service';\nimport {\n  page\n} from 'src/app/constants/page';\n\nexport interface TablesDTO {\n  effectivityDate: string;\n  dueDate: string;\n  premium: number;\n  netPremium: number;\n  tax: number;\n  commission: number;\n}\n\n@Component({\n  selector: 'app-payment-breakdown-modal',\n  templateUrl: './payment-breakdown-modal.component.html',\n  styleUrls: ['./payment-breakdown-modal.component.css'],\n  animations: [SlideInOutAnimation]\n})\nexport class PaymentBreakdownModalComponent implements OnInit {\n\n  constructor(\n    // private cqs: CarQuoteServices,\n    // private tis: TravelIssueServices,\n    // private ais: AccidentIssueServices,\n    private ps: PrintingService,\n    public dialogRef: MatDialogRef < PaymentBreakdownModalComponent > ,\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  payments: any[] = [];\n  number = this.data.number;\n  product = this.data.product;\n  payment = this.data.payment;\n  isPostPolicy = this.data.isPostPolicy;\n  line = this.data.line;\n\n  ngOnInit(): void {\n    this.data.receipt.forEach((receipt) => {\n      var exchangeRate = receipt[\"valCambio\"];\n      var currency = receipt[\"codMon\"];\n      var paymentNumber = receipt[\"numCuota\"];\n\n      var paymentBreakdown = [];\n      this.data.breakdown.forEach((breakdown) => {\n        var breakdownNumber = breakdown[\"numCuota\"];\n        if (breakdownNumber == paymentNumber) {\n          paymentBreakdown.push(breakdown);\n        }\n      });\n\n      var currencyCode = \"PHP\";\n      if (currency == \"2\") {\n        currencyCode = \"USD\";\n      } else if (currency == \"3\") {\n        currencyCode = \"EUR\"\n      }\n\n      var efectivityDate = new Date(receipt[\"fecEfecRecibo\"].substr(0, 10));\n      var dueDate = new Date(receipt[\"fecVctoRecibo\"].substr(0, 10));\n\n      const data: TablesDTO[] = [{\n        effectivityDate: Utility.formatDate(efectivityDate),\n        dueDate: Utility.formatDate(dueDate),\n        premium: receipt[\"impRecibo\"],\n        netPremium: receipt[\"impNeta\"],\n        tax: receipt[\"impImptos\"],\n        commission: receipt[\"impComis\"],\n      }];\n      var dataSource = new MatTableDataSource(data);\n      const obj = {\n        exchangeRate: exchangeRate,\n        currency: currency,\n        paymentNumber: paymentNumber,\n        currencyCode: currencyCode,\n        dataSource: dataSource,\n        displayedColumns: ['effectivityDate', 'dueDate', 'premium', 'netPremium', 'tax', 'commission'],\n        animationState: 'out',\n        showExchangeRate: this.data.showExchangeRate,\n        toggleLabel: 'Show Economic Values',\n        paymentBreakdown: paymentBreakdown\n      };\n      this.payments.push(obj);\n    });\n  }\n\n  toggle(index: number) {\n    this.payments[index].animationState = this.payments[index].animationState === 'out' ? 'in' : 'out';\n    this.payments[index].toggleLabel = (this.payments[index].animationState === 'out' ? 'Show' : 'Hide') + ' Economic Values';\n  }\n\n  close(b: boolean): void {\n    this.dialogRef.close(b);\n  }\n\n  printPolicy() {\n    this.ps.printPolicy(this.data.number);\n  }\n\n  printQuote() {\n    this.ps.printQuote(this.data.number);\n  }\n\n  proceedToIssuance(line: string) {\n    this.dialogRef.close(false);\n    if (line == \"CAR\") {\n      // this.cqs.proceedToIssuance(this.data.number);\n      this.ps.proceedToIssuance(this.data.number, page.ISS.CAR);\n    } else if (line == \"TRAVEL\") {\n      // this.tis.proceedToIssuance(this.data.number);\n      this.ps.proceedToIssuance(this.data.number, page.ISS.TRA);\n    } else if (line == \"ACCIDENT\") {\n      // this.ais.proceedToIssuance(this.data.number);\n      this.ps.proceedToIssuance(this.data.number, page.ISS.ACC);\n    } else if (line == \"HOME\") {\n      this.ps.proceedToIssuance(this.data.number, page.ISS.HOM);\n    }\n  }\n\n}","export default \"#paymentBreakdown table {\\n  text-align: center !important;\\n  width: 100%;\\n}\\n\\n#paymentBreakdown .mat-header-cell {\\n  text-align: center;\\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n\\n.breakdown .col-4 {\\n  padding: 10px 0;\\n}\\n\\n.breakdown .col-4.right {\\n  text-align: right;\\n}\\n\\n.clearfix.divider {\\n  border-bottom: 1px solid #e0e0e0;\\n}\\n\\n.show-more {\\n  margin: 10px 0;\\n  padding: 10px 0;\\n  text-align: center;\\n  display: block;\\n  cursor: pointer;\\n}\\n\\n.show-more:hover {\\n  background: #e7e7e7;\\n}\\n\\n.emphasize {\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXltZW50LWJyZWFrZG93bi9wYXltZW50LWJyZWFrZG93bi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNkJBQTZCO0VBQzdCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3BheW1lbnQtYnJlYWtkb3duL3BheW1lbnQtYnJlYWtkb3duLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcGF5bWVudEJyZWFrZG93biB0YWJsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xuICB3aWR0aDogMTAwJTtcbn1cblxuI3BheW1lbnRCcmVha2Rvd24gLm1hdC1oZWFkZXItY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLmJyZWFrZG93biAuY29sLTQge1xuICBwYWRkaW5nOiAxMHB4IDA7XG59XG5cbi5icmVha2Rvd24gLmNvbC00LnJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5jbGVhcmZpeC5kaXZpZGVyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5zaG93LW1vcmUge1xuICBtYXJnaW46IDEwcHggMDtcbiAgcGFkZGluZzogMTBweCAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5zaG93LW1vcmU6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZTdlN2U3O1xufVxuXG4uZW1waGFzaXplIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNjAwO1xufVxuIl19 */\";","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\nimport {\n  SlideInOutAnimation\n} from '../../utils/animation';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\nexport interface TablesDTO {\n  effectivityDate: string;\n  dueDate: string;\n  premium: number;\n  netPremium: number;\n  tax: number;\n  commission: number;\n}\n\n@Component({\n  selector: 'app-payment-breakdown',\n  templateUrl: './payment-breakdown.component.html',\n  styleUrls: ['./payment-breakdown.component.css'],\n  animations: [SlideInOutAnimation]\n})\nexport class PaymentBreakdownComponent implements OnInit {\n  @Input() paymentBreakdown: any[];\n  @Input() paymentReceipt: any[];\n  @Input() showExchangeRate: boolean;\n  @Input()\n  set loadBreakdown(value: number) {\n    this.triggerCounter = value;\n    this.generateBreakdown();\n  }\n\n  payments: any[] = [];\n  triggerCounter: number;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.generateBreakdown();\n  }\n\n  generateBreakdown() {\n    this.payments = [];\n    this.paymentReceipt.forEach((receipt)=>{\n      var exchangeRate = receipt[\"valCambio\"];\n      var currency = receipt[\"codMon\"];\n      var paymentNumber = receipt[\"numCuota\"];\n\n      var paymentBreakdown = [];\n      this.paymentBreakdown.forEach((breakdown)=>{\n        var breakdownNumber = breakdown[\"numCuota\"];\n        if (breakdownNumber == paymentNumber) {\n          paymentBreakdown.push(breakdown);\n        }\n      });\n\n      var currencyCode = \"PHP\";\n      if (currency == \"2\") {\n        currencyCode = \"USD\";\n      } else if (currency == \"3\") {\n        currencyCode = \"EUR\"\n      }\n  \n      var efectivityDate = new Date(receipt[\"fecEfecRecibo\"].substr(0, 10));\n      var dueDate = new Date(receipt[\"fecVctoRecibo\"].substr(0, 10));\n  \n      const data: TablesDTO[] = [{\n        effectivityDate: Utility.formatDate(efectivityDate),\n        dueDate: Utility.formatDate(dueDate),\n        premium: receipt[\"impRecibo\"],\n        netPremium: receipt[\"impNeta\"],\n        tax: receipt[\"impImptos\"],\n        commission: receipt[\"impComis\"],\n      }];\n      var dataSource = new MatTableDataSource(data);\n      const obj = {\n        exchangeRate: exchangeRate,\n        currency: currency,\n        paymentNumber: paymentNumber,\n        currencyCode: currencyCode,\n        dataSource: dataSource,\n        displayedColumns: ['effectivityDate', 'dueDate', 'premium', 'netPremium', 'tax', 'commission'],\n        animationState: 'out',\n        showExchangeRate: this.showExchangeRate,\n        toggleLabel: 'Show Economic Values',\n        paymentBreakdown: paymentBreakdown\n      };\n      this.payments.push(obj);\n    });\n  }\n\n  toggle(index: number) {\n    this.payments[index].animationState = this.payments[index].animationState === 'out' ? 'in' : 'out';\n    this.payments[index].toggleLabel = (this.payments[index].animationState === 'out' ? 'Show' : 'Hide') + ' Economic Values';\n  }\n\n}","export default \".btn-group {\\n  float: right !important;\\n}\\n\\nform .required.readonly {\\n  border-left: 6px solid #7e7e7e !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wb2xpY3ktaG9sZGVyL3BvbGljeS1ob2xkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLHlDQUF5QztBQUMzQyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcG9saWN5LWhvbGRlci9wb2xpY3ktaG9sZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWdyb3VwIHtcbiAgZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7XG59XG5cbmZvcm0gLnJlcXVpcmVkLnJlYWRvbmx5IHtcbiAgYm9yZGVyLWxlZnQ6IDZweCBzb2xpZCAjN2U3ZTdlICFpbXBvcnRhbnQ7XG59Il19 */\";","import {\n  Component,\n  OnInit,\n  Input,\n  ViewChild,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  MatTableDataSource,\n  MatPaginator,\n  MatDialog\n} from '@angular/material';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  ThirdPartyService\n} from 'src/app/services/third-party.service';\nimport {\n  CreateThirdPartyComponent\n} from '../create-third-party/create-third-party.component';\nimport {\n  CarLOVServices\n} from 'src/app/services/lov/car.service';\n\n@Component({\n  selector: 'app-policy-holder',\n  templateUrl: './policy-holder.component.html',\n  styleUrls: ['./policy-holder.component.css']\n})\nexport class PolicyHolderComponent implements OnInit {\n  @Input() title: String;\n  @Input() showCreateBtn: boolean;\n  @Input() policyHolder: PolicyHolder;\n  @Input() compareTo: PolicyHolder;\n  @Input() details: any;\n  @Input() isIssuance: boolean;\n  @Input() type: String;\n  @Input() optional: boolean;\n  @Input() editMode: boolean;\n  @Input() showPrefix: boolean = true;\n  @Input()\n  set loadQuotation(value: number) {\n    this.triggerCounter = value;\n    if (!Utility.isUndefined(this.policyHolder.documentCode)) {\n      this.phForm.get('documentType').markAsDirty();\n      this.phForm.get('documentCode').markAsDirty();\n    }\n  }\n\n  @Output() policyHolderChange = new EventEmitter < PolicyHolder > ();\n  \n  _details: any;\n  triggerCounter: number;\n\n  displayedColumns: string[] = ['documentType', 'firstName', 'middleName', 'lastName', 'address', 'action'];\n  source: any[] = [];\n  dataSource = new MatTableDataSource(this.source);\n\n  @ViewChild(MatPaginator, {\n    static: false\n  }) paginator: MatPaginator;\n\n  phForm: FormGroup;\n  searchForm: FormGroup;\n\n  //for optional content\n  showContent: boolean;\n\n  showSearch: boolean = false;\n  showSearchResult: boolean = false;\n\n  policyHolderType: string;\n  firstName: string;\n  lastName: string;\n  showLastName: boolean = true;\n\n  firstNameLabel: string = \"First Name\";\n  firstNameError: string = \"first name\";\n\n  prefixLOV: any[];\n  separatorLOV: any[];\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private bms: BsModalService,\n    private tps: ThirdPartyService,\n    private cls: CarLOVServices,\n    public dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    this.createForm();\n    this.setValidations();\n    this.showContent = !this.optional;\n\n    if (this.isIssuance) {\n      //can only search company/organization if type is mortgagee\n      this.policyHolderType = this.type == 'mortgagee' ? 'C' : 'P';\n\n      if (this.type == 'secondary') {\n        var _this = this;\n        this.cls.getPHPrefix().then(res => {\n          _this.prefixLOV = res;\n        });\n        this.cls.getPHSeparator().then(res => {\n          _this.separatorLOV = res;\n        });\n      }\n    }\n  }\n\n  createForm() {\n    if (this.isIssuance) {\n      this.phForm = this.fb.group({\n        documentCode: this.optional ? [null] : ['', Validators.required],\n        documentType: this.optional ? [null] : ['', Validators.required],\n        secondaryPolicyHolderPrefix: [null],\n        secondaryPolicyHolderSeparator: [null]\n      });\n    } else {\n      this.phForm = this.fb.group({\n        name: ['', Validators.required],\n      });\n    }\n\n    this.searchForm = this.fb.group({\n      policyHolderType: [null],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n    });\n  }\n\n  setValidations() {\n    var policyHolderType = this.searchForm.get('policyHolderType');\n    var lastName = this.searchForm.get('lastName');\n\n    policyHolderType.valueChanges.subscribe(type => {\n      this.showLastName = type == \"P\";\n      this.firstNameLabel = type == \"P\" ? \"First Name\" : \"Company/Organization\";\n      this.firstNameError = this.firstNameLabel.toLowerCase();\n      Utility.updateValidator(lastName, type == \"P\" ? Validators.required : null);\n    });\n  }\n\n  browse() {\n    this.showSearch = true;\n    this.showSearchResult = false;\n  }\n\n  create() {\n    this.showSearch = false;\n    this.showSearchResult = false;\n\n    var label = this.type == 'secondary' ? \"Alternative \" :\n      this.type == 'assignee' ? \"Assignee \" :\n      this.type == 'morgagee' ? \"Mortagee \" : '';\n\n    let title = \"Create \" + label + \"Policy Holder\";\n\n    const modalData = {\n      title: title,\n      policyHolder: this.policyHolder\n    };\n\n    const dialogRef = this.dialog.open(CreateThirdPartyComponent, {\n      width: '1000px',\n      data: modalData\n    });\n\n    dialogRef.afterClosed().subscribe(thirdParty => {\n      // if create button is clicked\n      if (!Utility.isUndefined(thirdParty)) {\n        this.setPolicyHolder(thirdParty);\n      }\n    });\n  }\n\n  clear() {\n    this.showSearch = false;\n    this.showSearchResult = false;\n    this.setPolicyHolder(new PolicyHolder());\n  }\n\n  setPolicyHolder(update: PolicyHolder) {\n    this.policyHolder = update;\n    this.policyHolderChange.emit(this.policyHolder);\n    this.phForm.get('documentType').markAsDirty();\n    this.phForm.get('documentCode').markAsDirty();\n    var id = this.type + '_panel';\n    Utility.scroll(id);\n  }\n\n  searchResult() {\n    this.showSearchResult = false;\n    const isPerson = this.policyHolderType == \"P\";\n    this.lastName = isPerson ? this.lastName : \"\";\n\n    this.tps.getThirdPartyList(1, this.firstName, this.lastName).then((res) => {\n      if (res.status) {\n        this.source = res.obj as[];\n        if (this.source.length) {\n          this.showSearchResult = true;\n          this.dataSource = new MatTableDataSource(this.source);\n          setTimeout(() => {\n            this.dataSource.paginator = this.paginator;\n          }, 100);\n        } else {\n          var completeName = isPerson ? this.firstName + \" \" + this.lastName : this.firstName;\n          this.modalRef = Utility.showInfo(this.bms, \"No results for \" + completeName);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  enableAddBtn(event: any, input: HTMLInputElement) {\n    var val = event.target.value;\n    input.disabled = Utility.isEmpty(val);\n  }\n\n  add(row: any, input ? : HTMLInputElement) {\n    if (Utility.isUndefined(input) || row.codDocum == input.value) {\n      if (!Utility.isUndefined(this.compareTo) &&\n        (this.type == 'primary' || this.type == 'assignee') &&\n        this.compareTo.documentCode == row.codDocum &&\n        this.compareTo.documentType == row.tipDocum) {\n        // preventing user to choose same policy holder for both primary and assignee\n        this.modalRef = Utility.showWarning(this.bms, \"Policy Holder and Assignee can not be the same, choose or create a new one.\");\n      } else {\n        this.showSearch = false;\n        this.showSearchResult = false;\n\n        this.policyHolder.isExisting = true;\n        this.policyHolder.isPerson = this.policyHolderType == \"P\";\n        this.policyHolder.documentCode = row.codDocum;\n        this.policyHolder.documentType = row.tipDocum;\n        this.policyHolder.firstName = this.firstName;\n        this.policyHolder.lastName = this.lastName;\n\n        this.setPolicyHolder(this.policyHolder);\n      }\n    } else {\n      var completeName = this.policyHolderType == \"P\" ? this.firstName + \" \" + this.lastName : this.firstName;\n      this.modalRef = Utility.showError(this.bms, \"Incorrect document code entered for \" + completeName);\n    }\n  }\n}\n\n// for testing\nconst thirdPartyList: any[] = [{\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"P99999\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"MANILA\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"P00000000\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"MAKATI CITY\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"DRI\",\n  \"codDocum\": \"DRI-77777\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"BUENAVISTA\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"P77777\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"SANTO TOMAS\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"P1232131\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"MANGALDAN\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"P1111111\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"MANILA\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"231123\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"MAKATI CITY\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"9876111\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"MAKATI CITY\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"TIN\",\n  \"codDocum\": \"441-724-648-000\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"LAS PIÑAS CITY\",\n  \"codActTercero\": \"1\"\n}, {\n  \"codCia\": 1,\n  \"tipDocum\": \"PAS\",\n  \"codDocum\": \"02-3499027-4\",\n  \"ape2Tercero\": \"MANAOIS\",\n  \"nomTercero\": \"PATRICK\",\n  \"nom2Tercero\": \"AMIAN\",\n  \"dirDomicilioCliente\": \"LAS PIÑAS CITY\",\n  \"codActTercero\": \"1\"\n}];\n\nconst coverageList: any[] = [{\n  \"MCA_TIP_CAPITAL\": \"4\",\n  \"MCA_OBLIGATORIO\": \"N\",\n  \"COD_COB\": \"1001\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"COMP. THIRD PAR. LIAB.\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1100\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"LOSS AND DAMAGE\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1002\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"OWN DAMAGE\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1003\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"THEFT\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"4\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1004\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"VTPL-BODILY INJURY\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"4\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1005\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"VTPL-PROPERTY DAMAGE\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1007\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"UNNAMED PASS. P.A.\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1008\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"ACTS OF NATURE\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"N\",\n  \"COD_COB\": \"1020\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"STRIKE AND RIOTS\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"4\",\n  \"MCA_OBLIGATORIO\": \"N\",\n  \"COD_COB\": \"1026\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"ACCD'L DEATH/DISABL.\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"\",\n  \"MCA_OBLIGATORIO\": \"N\",\n  \"COD_COB\": \"1040\",\n  \"IMP_CALCULO\": \"0\",\n  \"NOM_COB\": \"ROAD ASSIST\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"5\",\n  \"MCA_OBLIGATORIO\": \"N\",\n  \"COD_COB\": \"1029\",\n  \"IMP_CALCULO\": \"360\",\n  \"NOM_COB\": \"ROAD ASSIST 100\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"\",\n  \"MCA_OBLIGATORIO\": \"N\",\n  \"COD_COB\": \"1027\",\n  \"IMP_CALCULO\": \"500\",\n  \"NOM_COB\": \"MAPFRE ROAD ASSIST\"\n}, {\n  \"MCA_TIP_CAPITAL\": \"4\",\n  \"MCA_OBLIGATORIO\": \"S\",\n  \"COD_COB\": \"1036\",\n  \"IMP_CALCULO\": \"1\",\n  \"NOM_COB\": \"PERSONAL PROPERTY COVER\"\n}];","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  AuthenticationService\n} from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  currentUser = this.authenticationService.currentUserValue;\n  changePasswordForm: FormGroup;\n  constructor(private fb: FormBuilder,\n    private authenticationService: AuthenticationService) {\n    this.createChangePasswordForm();\n  }\n\n  createChangePasswordForm() {\n    this.changePasswordForm = this.fb.group({\n      oldPassword: ['', Validators.required],\n      newPassword: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVlcnkvcXVlcnkuY29tcG9uZW50LmNzcyJ9 */\";","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\nimport {\n  UtilitiesQueryFilter\n} from '../../objects/UtilitiesQueryFilter';\nimport {\n  UtilityQueryService\n} from 'src/app/services/utility-query.service';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  MIVO_LOGIN\n} from \"../../constants/local.storage\";\n\n@Component({\n  selector: 'app-query',\n  templateUrl: './query.component.html',\n  styleUrls: ['./query.component.css']\n})\nexport class QueryComponent implements OnInit {\n  selectedOption = 'policy';\n  optPlaceholder = 'Policy Number';\n  filter: UtilitiesQueryFilter = new UtilitiesQueryFilter();\n  modalRef: BsModalRef;\n\n  @ViewChild('inputVal') inputVal: ElementRef;\n\n  constructor(\n    private utilityQueryService: UtilityQueryService,\n    private bms: BsModalService, ) {}\n\n  ngOnInit() {}\n\n  search() {\n    if (this.inputVal.nativeElement.value === '') {\n      this.modalRef = Utility.showError(this.bms, 'Search value is empty.');\n    } else {\n      const userName = JSON.parse(localStorage.getItem(MIVO_LOGIN)).username\n\n      if (userName != null) {\n        this.filter.userName = userName\n        this.filter.param = this.inputVal.nativeElement.value;\n        this.filter.inquiryType = this.selectedOption === 'policy' ? 'GETPOLICYDETAILS' : 'GETCLAIMDETAILS';\n        this.filter.paramName = this.selectedOption;\n\n        this.utilityQueryService.getSearchResult(this.filter).then((res) => {\n          if (res) {\n            const jsonData = JSON.parse(JSON.stringify(res));\n            window.open(jsonData.obj, '_blank');\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, 'No login credentials found!');\n      }\n    }\n  }\n\n  onSelectOption(opt: string) {\n    this.optPlaceholder = (opt === 'policy' ? 'Policy Number' : 'Claim Number');\n  }\n\n}\n","export default \".additional-accident-details,\\n.acci-spa,\\n.acci-hcbi {\\n  width: 100%;\\n}\\n\\n.mat-row:hover {\\n  background: azure;\\n  cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdWljay1xdW90YXRpb24tYWNjaWRlbnQvcXVpY2stcXVvdGF0aW9uLWFjY2lkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztFQUdFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9xdWljay1xdW90YXRpb24tYWNjaWRlbnQvcXVpY2stcXVvdGF0aW9uLWFjY2lkZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRkaXRpb25hbC1hY2NpZGVudC1kZXRhaWxzLFxuLmFjY2ktc3BhLFxuLmFjY2ktaGNiaSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LXJvdzpob3ZlciB7XG4gIGJhY2tncm91bmQ6IGF6dXJlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iXX0= */\";","import {\n  Component,\n  OnInit,\n  Input,\n  AfterViewChecked,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  AccidentListObject\n} from 'src/app/objects/LOV/accidentList';\nimport {\n  QuickQuoteService\n} from '../../services/quickquote.service';\nimport {\n  AccidentLOVServices\n} from '../../services/lov/accident.service'\nimport {\n  Accident\n} from 'src/app/objects/Accident';\n\nexport interface QuickQuoteResultDTO {\n  label: string;\n  premium: string;\n  product: number;\n  isHeader: boolean;\n  exclude: boolean;\n}\n\n@Component({\n  selector: 'app-quick-quotation-accident',\n  templateUrl: './quick-quotation-accident.component.html',\n  styleUrls: ['./quick-quotation-accident.component.css']\n})\n\nexport class QuickQuotationAccidentComponent implements OnInit, AfterViewChecked {\n  accidentDetails = new Accident();\n  LOV = new AccidentListObject();\n  quickQuoteForm: FormGroup;\n\n  showDetails: boolean = false;\n  showSPADetails: boolean = false;\n  showHCBIDetails: boolean = false;\n\n  displayedColumns: string[] = ['label', 'premium'];\n\n  accidentData: Array < QuickQuoteResultDTO > = [];\n  coverageData: Array < QuickQuoteResultDTO > = [];\n  coverageList: any[];\n\n  //flag to display product comparison\n  showProductComparison: boolean = false;\n  //flag to display product coverage\n  showProductCoverage: boolean = false;\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private qqs: QuickQuoteService,\n    private als: AccidentLOVServices,\n    private changeDetector: ChangeDetectorRef,\n    private bms: BsModalService\n  ) {\n    this.createQuickQuoteForm();\n    this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    var _this = this;\n    this.als.getSubline().then(res => {\n      _this.LOV.sublineLOV = res;\n    });\n\n    this.getAge();\n    this.getChildNumber();\n  }\n\n  createQuickQuoteForm() {\n    this.quickQuoteForm = this.fb.group({\n      subline: ['', Validators.required],\n      occupationalClass: ['', Validators.required],\n      disablementValue: ['', [Validators.required, Validators.max(2000000), Validators.min(10000)]],\n      primaryInsuredAge: ['', Validators.required],\n      cbSpouseAge: [null],\n      spouseAge: ['', Validators.required],\n      cbChildNumber: [null],\n      childNumber: ['', Validators.required]\n    });\n  }\n\n  setValidations() {\n    var _this = this;\n    var occupationalClass = this.quickQuoteForm.get('occupationalClass');\n    var disablementValue = this.quickQuoteForm.get('disablementValue');\n    var primaryInsuredAge = this.quickQuoteForm.get('primaryInsuredAge');\n    var spouseAge = this.quickQuoteForm.get('spouseAge');\n    var cbSpouseAge = this.quickQuoteForm.get('cbSpouseAge');\n    var childNumber = this.quickQuoteForm.get('childNumber');\n    var cbChildNumber = this.quickQuoteForm.get('cbChildNumber');\n\n    this.quickQuoteForm.get('subline').valueChanges.subscribe(subline => {\n      this.accidentDetails.subline = subline;\n      this.showDetails = false;\n      this.showSPADetails = false;\n      this.showHCBIDetails = false;\n\n      //removing required validation\n      Utility.updateValidator(occupationalClass, null);\n      Utility.updateValidator(disablementValue, null);\n      Utility.updateValidator(primaryInsuredAge, null);\n      Utility.updateValidator(spouseAge, null);\n      Utility.updateValidator(childNumber, null);\n\n      if (subline == 323) { //standard personal accident\n        this.showDetails = true;\n        this.showSPADetails = true;\n        Utility.updateValidator(occupationalClass, [Validators.required]);\n        Utility.updateValidator(disablementValue, [Validators.required, Validators.max(2000000), Validators.min(10000)]);\n        this.als.getOccupationalClass(this.accidentDetails).then(res => {\n          _this.LOV.occupationalClassLOV = res;\n        });\n      } else if (subline == 326) { //hospital cash benefit\n        this.showDetails = true;\n        this.showHCBIDetails = true;\n        Utility.updateValidator(primaryInsuredAge, [Validators.required]);\n        Utility.updateValidator(spouseAge, cbSpouseAge.value === true ? [Validators.required] : null);\n        Utility.updateValidator(childNumber, cbChildNumber.value === true ? [Validators.required] : null);\n      }\n    });\n\n    cbSpouseAge.valueChanges.subscribe(checked => {\n      this.accidentDetails.spouseAge = Utility.setNull(checked, this.accidentDetails.spouseAge);\n      Utility.updateValidator(spouseAge, checked === true ? [Validators.required] : null);\n    });\n\n    cbChildNumber.valueChanges.subscribe(checked => {\n      this.accidentDetails.childNumber = Utility.setNull(checked, this.accidentDetails.childNumber);\n      Utility.updateValidator(childNumber, checked === true ? [Validators.required] : null);\n    });\n  }\n\n  createQuickQuoteData(quickQuoteDetails: any[], productList: any[]) {\n    this.accidentData = [];\n    productList.forEach(a => {\n      quickQuoteDetails.forEach(b => {\n        if (a.numSimulacion === b.numSimulacion) {\n          var obj = {} as QuickQuoteResultDTO;\n          obj.label = a.nomSimulacion;\n          obj.premium = b.impRecibo;\n          obj.product = b.numSimulacion;\n          this.accidentData.push(obj);\n        }\n      });\n    });\n  }\n\n  getAge() {\n    this.LOV.ageLOV = [{\n      value: 20,\n      name: \"18-29\"\n    }, {\n      value: 32,\n      name: \"30-29\"\n    }, {\n      value: 42,\n      name: \"40-49\"\n    }, {\n      value: 52,\n      name: \"50-59\"\n    }, {\n      value: 62,\n      name: \"60-65\"\n    }];\n  }\n\n  getChildNumber() {\n    this.LOV.childNumberLOV = [{\n      value: 1,\n      name: \"1\"\n    }, {\n      value: 2,\n      name: \"2\"\n    }, {\n      value: 3,\n      name: \"3\"\n    }, {\n      value: 4,\n      name: \"4\"\n    }];\n  }\n\n  generateCoverage(row: QuickQuoteResultDTO) {\n    this.coverageData = [];\n    var headers = [340];\n    var exclude = [9998];\n    this.coverageList.forEach(coverage => {\n      var obj = {} as QuickQuoteResultDTO;\n      if (coverage.numSimulacion == row.product) {\n        var code = parseInt(coverage.codCob);\n        obj.isHeader = headers.indexOf(code) !== -1;\n        // bolder label if it is a header\n        obj.label = obj.isHeader ? '<strong>' + coverage.nomCob + '</strong>' : coverage.nomCob;\n        obj.premium = coverage.sumaAseg;\n        // excluded rows\n        if (exclude.indexOf(code) == -1) {\n          this.coverageData.push(obj);\n        }\n      }\n    });\n\n    // displaying product coverage\n    this.showProductCoverage = true;\n    setTimeout(() => {\n      Utility.scroll('productCoverage');\n    }, 500);\n  }\n\n  quickQuote(accidentDetails: Accident) {\n    this.qqs.quickQuoteAccident(accidentDetails).then(res => {\n      if (!Utility.isUndefined(res)) {\n        if (res.status) {\n          var quickQuoteDetails = res.obj[\"quickQuoteDetails\"];\n          var productList = res.obj[\"productList\"];\n          this.coverageList = res.obj[\"coverage\"];\n          // generates quick quote accident details\n          this.createQuickQuoteData(quickQuoteDetails, productList);\n          // hiding product coverage\n          this.showProductCoverage = false;\n          // displaying product comparison\n          this.showProductComparison = true;\n          setTimeout(() => {\n            Utility.scroll('productComparison');\n          });\n        } else {\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      }\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVpY2stcXVvdGF0aW9uLWNhci9xdWljay1xdW90YXRpb24tY2FyLmNvbXBvbmVudC5jc3MifQ== */\";","import {\n  Component,\n  OnInit,\n  AfterViewChecked,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  Car\n} from '../../objects/Car';\nimport {\n  CarListObject\n} from 'src/app/objects/LOV/carList';\nimport {\n  QuickQuoteService\n} from '../../services/quickquote.service';\nimport {\n  CarUtilityServices\n} from '../../services/car-utility.service';\nimport {\n  CarLOVServices\n} from '../../services/lov/car.service';\n\nexport interface QuickQuoteResultDTO {\n  label: string;\n  compre: string;\n  ctpl: string;\n  autoCompre: string;\n  autoComprePlus: string;\n  autoLiabilityRegular: string;\n  autoLiabilitySelect: string;\n  autoSelect: string;\n}\n\n@Component({\n  selector: 'app-quick-quotation-car',\n  templateUrl: './quick-quotation-car.component.html',\n  styleUrls: ['./quick-quotation-car.component.css']\n})\n\nexport class QuickQuotationCarComponent implements OnInit, AfterViewChecked {\n  carDetails = new Car();\n  LOV = new CarListObject();\n  quickQuoteForm: FormGroup;\n\n  showAutoSelect = true;\n\n  displayedColumns: string[] = [\n    'label',\n    'compre',\n    'ctpl',\n    'autoCompre',\n    'autoComprePlus',\n    'autoLiabilityRegular',\n    'autoLiabilitySelect',\n    'autoSelect'\n  ];\n\n  annualData: Array < QuickQuoteResultDTO > = [];\n  plan30Data: Array < QuickQuoteResultDTO > = [];\n  plan60Data: Array < QuickQuoteResultDTO > = [];\n  plan90Data: Array < QuickQuoteResultDTO > = [];\n  coveragelist: Array < QuickQuoteResultDTO > = [];\n  \n  vehicleValue: any;\n\n  //flag to display product comparison and coverage\n  showProductComparison: boolean = false;\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private cus: CarUtilityServices,\n    private qqs: QuickQuoteService,\n    private cls: CarLOVServices,\n    private changeDetector: ChangeDetectorRef,\n    private bms: BsModalService\n  ) {\n    this.createQuickQuoteForm();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    var _this = this;\n    this.cls.getMakeList().then(res => {\n      _this.LOV.makeLOV = res;\n    });\n  }\n\n  createQuickQuoteForm() {\n    this.quickQuoteForm = this.fb.group({\n      make: ['', Validators.required],\n      model: ['', Validators.required],\n      vehicleType: ['', Validators.required],\n      modelYear: ['', Validators.required],\n      subModel: ['', Validators.required],\n      typeOfUse: ['', Validators.required],\n      subline: ['', Validators.required],\n      vehicleValue: ['', Validators.required],\n    });\n  }\n\n  //getting the year difference between the current and selected model year\n  getDiff() {\n    var today = new Date();\n    var currentYear = today.getFullYear();\n    return currentYear - parseInt(this.carDetails.modelYear);\n  }\n\n  createObj(name: String, value: String, installment: String, product: number) {\n    var diff = this.getDiff();\n\n    //set value to 0 if conditions meets\n    if (product != 1 && name == '2') {\n      value = \"0\";\n    } else if ((name == '3' || name == '4') && diff > 8) {\n      value = \"0\";\n    } else if ((name == '1') && diff < 8) {\n      value = \"0\";\n    }\n\n    return {\n      'name': name,\n      'value': value,\n      'installment': installment,\n      'product': product\n    };\n  }\n\n  createQuickQuoteData(quickQuoteDetails: any[], products: any[], productList: any[]) {\n    this.annualData = [];\n    this.plan30Data = [];\n    this.plan60Data = [];\n    this.plan90Data = [];\n    var annual = [];\n    var plan30 = [];\n    var plan60 = [];\n    var plan90 = [];\n    productList.forEach(a => {\n      quickQuoteDetails.forEach(b => {\n        products.forEach(c => {\n          if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"1\" && b.numSimulacion === c.numSimulacion) {\n            annual.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 1));\n          } else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"30\" && b.numSimulacion === c.numSimulacion) {\n            if (b.numCuota === \"1\") {\n              plan30.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 30));\n            } else if (b.numCuota === \"2\") {\n              plan30.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 30));\n            }\n          } else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"60\" && b.numSimulacion === c.numSimulacion) {\n            if (b.numCuota === \"1\") {\n              plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));\n            } else if (b.numCuota === \"2\") {\n              plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));\n            } else if (b.numCuota === \"3\") {\n              plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));\n            }\n          } else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"90\" && b.numSimulacion === c.numSimulacion) {\n            if (b.numCuota === \"1\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            } else if (b.numCuota === \"2\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            } else if (b.numCuota === \"3\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            } else if (b.numCuota === \"4\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            }\n          }\n        });\n      });\n    });\n\n    this.annualData.push(this.createQQResultDTO(annual, '1', true));\n    this.annualData.push(this.getInstallmentTotal(plan30));\n\n    this.plan30Data.push(this.createQQResultDTO(plan30, '1'));\n    this.plan30Data.push(this.createQQResultDTO(plan30, '2'));\n\n    this.plan60Data.push(this.createQQResultDTO(plan60, '1'));\n    this.plan60Data.push(this.createQQResultDTO(plan60, '2'));\n    this.plan60Data.push(this.createQQResultDTO(plan60, '3'));\n\n    this.plan90Data.push(this.createQQResultDTO(plan90, '1'));\n    this.plan90Data.push(this.createQQResultDTO(plan90, '2'));\n    this.plan90Data.push(this.createQQResultDTO(plan90, '3'));\n    this.plan90Data.push(this.createQQResultDTO(plan90, '4'));\n  }\n\n  createQuickQuoteCoverage(coverage: any[], hasRoadAssist: boolean) {\n    var coverages = [];\n    var diff = this.getDiff();\n    coverage.forEach(cov => {\n      var coverageName = cov.nomCob;\n      var coverageCode = cov.codCob;\n      var product = cov.numSimulacion;\n      var isIncluded = \"N\";\n\n      if (\"S\" == cov.mcaOligatorio) {\n        isIncluded = ((product == 3 || product == 4) && diff > 8) || (product == 1 && diff < 8) ? \"N\" : \"S\";\n      } else if (\"N\" == cov.mcaOligatorio) {\n        if (((product == 3 || product == 4) && diff > 8) || (product == 1 && diff < 8)) {\n          isIncluded = \"N\";\n        } else {\n          if (hasRoadAssist && (coverageCode == \"1040\" || coverageCode == \"1027\" || coverageCode == \"1029\")) {\n            if (coverageCode == \"1040\" && (product != 2 && product != 5 && product != 6)) {\n              isIncluded = \"ODRA\"; //optional disabled ra with check\n            } else {\n              if ((coverageCode == \"1040\" || coverageCode == \"1027\" || coverageCode == \"1029\") &&\n                (product == 2 || product == 5 || product == 6)) {\n                isIncluded = \"ORA\"; //optional ra\n              } else {\n                isIncluded = \"ORA\"; //optional disabled ra without check\n              }\n            }\n          } else {\n            if (coverageCode == '1036' && product == 1) {\n              isIncluded = \"N\";\n            } else if ((coverageCode == \"1004\" || coverageCode == \"1005\") && product == \"1\") {\n              isIncluded = \"O\"; //optional\n            } else {\n              isIncluded = \"O\"; //optional\n            }\n          }\n        }\n      } else {\n        isIncluded = coverageCode == '1018' || coverageCode == '1037' || coverageCode == '1026' ? \"S\" : \"N\";\n      }\n\n      var icon = '';\n      if (isIncluded == \"S\" || isIncluded == \"ODRA\") {\n        icon = \"<i class='far fa-check-circle'></i>\"\n      } else if (isIncluded == \"N\") {\n        icon = \"<i class='far fa-times-circle'></i>\";\n      } else if (isIncluded == \"O\" || isIncluded == \"ORA\") {\n        icon = \"<i class='far fa-circle'></i>\";\n      }\n\n      if (!coverages.includes(coverageName)\n        && coverageName != \"UPPA - MR\"\n        && coverageName != \"ACCD\\'L DEATH/DISABL.\"\n        && coverageName != \"ALTERNATIVE TRANSPORT BENEFIT\") {\n        coverages.push(coverageName);\n        var obj = {} as QuickQuoteResultDTO;\n        obj.label = coverageName;\n        obj.compre = \"<i class='far fa-times-circle'></i>\";\n        obj.ctpl = \"<i class='far fa-times-circle'></i>\";\n        obj.autoCompre = \"<i class='far fa-times-circle'></i>\";\n        obj.autoComprePlus = \"<i class='far fa-times-circle'></i>\";\n        obj.autoLiabilityRegular = \"<i class='far fa-times-circle'></i>\";\n        obj.autoLiabilitySelect = \"<i class='far fa-times-circle'></i>\";\n        obj.autoSelect = \"<i class='far fa-times-circle'></i>\";\n        this.coveragelist.push(obj);\n      }\n\n      this.coveragelist.forEach(c => {\n        if (c.label == coverageName) {\n          if (product == 1) {\n            c.compre = icon;\n          } else if (product == 2) {\n            c.ctpl = icon;\n          } else if (product == 3) {\n            c.autoCompre = icon;\n          } else if (product == 4) {\n            c.autoComprePlus = icon;\n          } else if (product == 5) {\n            c.autoLiabilityRegular = icon;\n          } else if (product == 6) {\n            c.autoLiabilitySelect = icon;\n          } else if (product == 9) {\n            c.autoSelect = icon;\n          }\n        }\n      });\n    });\n  }\n\n  setTotalValue(product: any, value: any) {\n    if (product === undefined) {\n      return value;\n    } else {\n      var x = parseFloat(product);\n      var y = parseFloat(value);\n      return (x + y).toString();\n    }\n  }\n\n  getInstallmentTotal(arr: any[]) {\n    var obj = {} as QuickQuoteResultDTO;\n    // initial values for products\n    obj.compre = \"0\";\n    obj.ctpl = \"0\";\n    obj.autoCompre = \"0\";\n    obj.autoComprePlus = \"0\";\n    obj.autoLiabilityRegular = \"0\";\n    obj.autoLiabilitySelect = \"0\";\n    obj.autoSelect = \"0\";\n    obj.label = \"Installment\";\n\n    arr.forEach((a: any) => {\n      var product = a[\"name\"];\n      var value = a[\"value\"];\n      if (product == 1) {\n        obj.compre = this.setTotalValue(obj.compre, value);\n      } else if (product == 2) {\n        obj.ctpl = this.setTotalValue(obj.ctpl, value);\n      } else if (product == 3) {\n        obj.autoCompre = this.setTotalValue(obj.autoCompre, value);\n      } else if (product == 4) {\n        obj.autoComprePlus = this.setTotalValue(obj.autoComprePlus, value);\n      } else if (product == 5) {\n        obj.autoLiabilityRegular = this.setTotalValue(obj.autoLiabilityRegular, value);\n      } else if (product == 6) {\n        obj.autoLiabilitySelect = this.setTotalValue(obj.autoLiabilitySelect, value);\n      } else if (product == 9) {\n        obj.autoSelect = this.setTotalValue(obj.autoSelect, value);\n      }\n    });\n    return obj;\n  }\n\n  createQQResultDTO(arr: any[], installment: String, isAnnual ? : boolean) {\n    var obj = {} as QuickQuoteResultDTO;\n    // initiate values for products\n    obj.compre = \"0\";\n    obj.ctpl = \"0\";\n    obj.autoCompre = \"0\";\n    obj.autoComprePlus = \"0\";\n    obj.autoLiabilityRegular = \"0\";\n    obj.autoLiabilitySelect = \"0\";\n    obj.autoSelect = \"0\";\n\n    if (installment == '1') {\n      obj.label = isAnnual ? 'Annual' : '1st Installment';\n    } else if (installment == '2') {\n      obj.label = '2nd Installment';\n    } else if (installment == '3') {\n      obj.label = '3rd Installment';\n    } else if (installment == '4') {\n      obj.label = '4th Installment';\n    }\n\n    arr.forEach((a: any) => {\n      var price = a[\"value\"];\n      var product = a[\"name\"];\n      if (a[\"installment\"] == installment) {\n        if (product == 1) {\n          obj.compre = price;\n        } else if (product == 2) {\n          obj.ctpl = price;\n        } else if (product == 3) {\n          obj.autoCompre = price;\n        } else if (product == 4) {\n          obj.autoComprePlus = price;\n        } else if (product == 5) {\n          obj.autoLiabilityRegular = price;\n        } else if (product == 6) {\n          obj.autoLiabilitySelect = price;\n        } else if (product == 9) {\n          obj.autoSelect = price;\n        }\n      }\n    });\n    return obj;\n  }\n\n  clearRiskDetails(level: number, type ? : boolean) {\n    if (level <= 1) { //if user changes car make\n      this.LOV.modelLOV = [];\n      this.carDetails.model = undefined;\n      this.quickQuoteForm.get('model').reset();\n    }\n    if (level <= 2) { //if user changes car model\n      this.LOV.vehicleTypeLOV = [];\n      this.carDetails.vehicleType = undefined;\n      this.quickQuoteForm.get('vehicleType').reset();\n    }\n    if (level <= 3) { //if user changes vehicle type\n      this.LOV.modelYearLOV = [];\n      this.carDetails.modelYear = undefined;\n      this.quickQuoteForm.get('modelYear').reset();\n    }\n    if (level <= 4) { //if user changes car model year\n      this.LOV.subModelLOV = [];\n      this.LOV.typeOfUseLOV = [];\n      this.carDetails.subModel = undefined;\n      this.carDetails.typeOfUse = undefined;\n      this.quickQuoteForm.get('subModel').reset();\n      this.quickQuoteForm.get('typeOfUse').reset();\n    }\n    if (level <= 5) { //if user changes car sub model or type of use\n      if (level == 5) {\n        if (type) {\n          //if user changes type of use\n          this.LOV.sublineLOV = [];\n          this.carDetails.subline = undefined;\n          this.quickQuoteForm.get('subline').reset();\n        } else {\n          //if user changes sub model\n          this.carDetails.vehicleValue = undefined;\n          this.quickQuoteForm.get('vehicleValue').reset();\n        }\n      } else {\n        //if level is below 5, subline and vehicle value will reset\n        this.LOV.sublineLOV = [];\n        this.carDetails.subline = undefined;\n        this.carDetails.vehicleValue = undefined;\n        this.quickQuoteForm.get('subline').reset();\n        this.quickQuoteForm.get('vehicleValue').reset();\n      }\n    }\n  }\n\n  makeOnchange() {\n    this.clearRiskDetails(1);\n    var _this = this;\n    this.cls.getModelList(this.carDetails).then(res => {\n      _this.LOV.modelLOV = res;\n    });\n  }\n\n  modelOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(2);\n    this.carDetails.make = _carDetails.make;\n\n    var _this = this;\n    this.cls.getVehicleTypeList(this.carDetails).then(res => {\n      _this.LOV.vehicleTypeLOV = res;\n    });\n  }\n\n  vehicleTypeOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(3);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n\n    if (this.carDetails.vehicleType > 0) {\n      var _this = this;\n      this.cls.getModelYearList(this.carDetails).then(res => {\n        _this.LOV.modelYearLOV = res;\n      });\n    }\n  }\n\n  modelYearOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(4);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n    this.carDetails.vehicleType = _carDetails.vehicleType;\n\n    if (this.carDetails.modelYear != '') {\n      var _this = this;\n      this.cls.getSubModelList(this.carDetails).then(res => {\n        _this.LOV.subModelLOV = res;\n      });\n      this.cls.getTypeOfUseList(this.carDetails).then(res => {\n        _this.LOV.typeOfUseLOV = res;\n      });\n    }\n  }\n\n  subModelOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(5, false);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n    this.carDetails.vehicleType = _carDetails.vehicleType;\n    this.carDetails.modelYear = _carDetails.modelYear;\n    this.carDetails.subModel = _carDetails.subModel\n    this.carDetails.typeOfUse = _carDetails.typeOfUse;\n    this.carDetails.subline = _carDetails.subline;\n    this.getVehicleValue();\n  }\n\n  typeOfUseOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(5, true);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n    this.carDetails.vehicleType = _carDetails.vehicleType;\n    this.carDetails.modelYear = _carDetails.modelYear;\n    this.carDetails.subModel = _carDetails.subModel\n    this.carDetails.typeOfUse = _carDetails.typeOfUse;\n    this.carDetails.vehicleValue = _carDetails.vehicleValue;\n    this.getSubline();\n  }\n\n  getVehicleValue() {\n    const _this = this;\n    this.cus.getFMV(this.carDetails).then(res => {\n      _this.carDetails.vehicleValue = res.obj[\"fmv\"];\n    });\n  }\n\n  getSubline() {\n    const _this = this;\n    this.cus.getSubline(this.carDetails).then(res => {\n      _this.LOV.sublineLOV = res.obj[\"list\"];\n    });\n  }\n\n  sublineOnchange(event: any) {\n    var options = event.target.options;\n    if (options.length) {\n      //effectivity date is based on selected subline\n      var selectedIndex = event.target.options.selectedIndex;\n      var effectivityDate = event.target.options[selectedIndex].dataset.sublinedate;\n\n      //effectivity date change format\n      var d = moment(effectivityDate, 'DDMMYYYY').format('MMDDYYYY');\n      this.carDetails.sublineEffectivityDate = d.toString();\n    }\n  }\n\n  quickQuote(carDetails: Car) {\n    this.qqs.quickQuoteCar(carDetails).then(res => {\n      if (!Utility.isUndefined(res)) {\n        if (res.status) {\n\n          const currentYear = new Date().getFullYear();\n          let modelYear = 0;\n          try {\n            modelYear = parseInt(carDetails.modelYear);\n          } catch {\n            //do nothing\n          }\n\n          this.showAutoSelect = currentYear - modelYear < 10;\n\n          var quickQuoteDetails = res.obj[\"quickQuoteDetails\"];\n          var productList = res.obj[\"productList\"];\n          var products = res.obj[\"products\"];\n          var coverage = res.obj[\"coverage\"];\n          var hasRoadAssist = res.obj[\"hasRoadAssist\"];\n\n          this.createQuickQuoteData(quickQuoteDetails, productList, products);\n          this.createQuickQuoteCoverage(coverage, hasRoadAssist);\n          this.showProductComparison = true;\n\n          setTimeout(() => {\n            Utility.scroll('productComparison');\n          });\n        } else {\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      }\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVpY2stcXVvdGF0aW9uLWhvbWUvcXVpY2stcXVvdGF0aW9uLWhvbWUuY29tcG9uZW50LmNzcyJ9 */\";","import {\n  Component,\n  OnInit,\n  Input,\n  AfterViewChecked,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  Home\n} from '../../objects/Home';\nimport {\n  HomeListObject\n} from 'src/app/objects/LOV/homeList';\nimport {\n  QuickQuoteService\n} from '../../services/quickquote.service'\nimport {\n  HomeLOVServices\n} from '../../services/lov/home.service'\n\nexport interface QuickQuoteResultDTO {\n  label: string;\n  fire: string;\n  earth: string;\n  water: string;\n}\n\n@Component({\n  selector: 'app-quick-quotation-home',\n  templateUrl: './quick-quotation-home.component.html',\n  styleUrls: ['./quick-quotation-home.component.css']\n})\n\nexport class QuickQuotationHomeComponent implements OnInit, AfterViewChecked {\n  @Input() homeDetails = new Home();\n  LOV = new HomeListObject();\n  quickQuoteForm: FormGroup;\n\n  displayedColumns: string[] = ['label', 'fire', 'earth', 'water'];\n\n  annualData: Array < QuickQuoteResultDTO > = [];\n  plan30Data: Array < QuickQuoteResultDTO > = [];\n  plan60Data: Array < QuickQuoteResultDTO > = [];\n  plan90Data: Array < QuickQuoteResultDTO > = [];\n  coveragelist: Array < QuickQuoteResultDTO > = [];\n\n  //flag to display product comparison\n  showProductComparison: boolean = false;\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private hls: HomeLOVServices,\n    private changeDetector: ChangeDetectorRef,\n    private qqs: QuickQuoteService,\n    private bms: BsModalService\n  ) {\n    this.createQuickQuoteForm();\n    this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    var _this = this;\n    this.hls.getHomeBusinessLine().then(res => {\n      res.forEach(businessLine => {\n        //display Residential only\n        if (businessLine.COD_RAMO == \"200\" && businessLine.NOM_RAMO == \"RESIDENTIAL\") {\n          _this.LOV.sublineLOV = [businessLine];\n        }\n      });\n    });\n\n    // default to residential\n    this.homeDetails.subline = 200;\n  }\n\n  createQuickQuoteForm() {\n    this.quickQuoteForm = this.fb.group({\n      subline: ['', Validators.required],\n      cbBuilding: [null],\n      building: [null],\n      cbContent: [null],\n      content: [null],\n      cbImprovements: [null],\n      improvements: [null],\n      cbRelatedBuild: [null],\n      relatedBuild: [null],\n      cbRelatedContent: [null],\n      relatedContent: [null],\n    });\n  }\n\n  setValidations() {\n    const cbBuilding = this.quickQuoteForm.get('cbBuilding');\n    const cbContent = this.quickQuoteForm.get('cbContent');\n    const cbImprovements = this.quickQuoteForm.get('cbImprovements');\n    const cbRelatedBuild = this.quickQuoteForm.get('cbRelatedBuild');\n    const cbRelatedContent = this.quickQuoteForm.get('cbRelatedContent');\n\n    const improvements = this.quickQuoteForm.get('improvements');\n    const relatedBuild = this.quickQuoteForm.get('relatedBuild');\n    const relatedContent = this.quickQuoteForm.get('relatedContent');\n\n    cbBuilding.valueChanges.subscribe(checked => {\n      const building = this.quickQuoteForm.get('building');\n      this.homeDetails.building = Utility.setNull(checked, this.homeDetails.building);\n      Utility.updateValidator(building, checked ? [Validators.required] : null);\n\n      if (!checked && cbContent.value !== true) {\n        this.homeDetails.improvements = null;\n        this.homeDetails.relatedBuild = null;\n        this.homeDetails.relatedContent = null;\n        Utility.updateValidator(improvements, null);\n        Utility.updateValidator(relatedBuild, null);\n        Utility.updateValidator(relatedContent, null);\n      } else if (cbContent.value === true) {\n        Utility.updateValidator(improvements, cbImprovements.value === true ? [Validators.required] : null);\n        Utility.updateValidator(relatedBuild, cbRelatedBuild.value === true ? [Validators.required] : null);\n        Utility.updateValidator(relatedContent, cbRelatedContent.value === true ? [Validators.required] : null);\n      }\n    });\n\n    cbContent.valueChanges.subscribe(checked => {\n      const content = this.quickQuoteForm.get('content');\n      this.homeDetails.content = Utility.setNull(checked, this.homeDetails.content);\n      Utility.updateValidator(content, checked ? [Validators.required] : null);\n\n      if (!checked && cbBuilding.value !== true) {\n        this.homeDetails.improvements = null;\n        this.homeDetails.relatedBuild = null;\n        this.homeDetails.relatedContent = null;\n        Utility.updateValidator(improvements, null);\n        Utility.updateValidator(relatedBuild, null);\n        Utility.updateValidator(relatedContent, null);\n      } else if (cbBuilding.value === true) {\n        Utility.updateValidator(improvements, cbImprovements.value === true ? [Validators.required] : null);\n        Utility.updateValidator(relatedBuild, cbRelatedBuild.value === true ? [Validators.required] : null);\n        Utility.updateValidator(relatedContent, cbRelatedContent.value === true ? [Validators.required] : null);\n      }\n    });\n\n    cbImprovements.valueChanges.subscribe(checked => {\n      this.homeDetails.improvements = Utility.setNull(checked, this.homeDetails.improvements);\n      Utility.updateValidator(improvements, checked ? [Validators.required] : null);\n    });\n\n    cbRelatedBuild.valueChanges.subscribe(checked => {\n      this.homeDetails.relatedBuild = Utility.setNull(checked, this.homeDetails.relatedBuild);\n      Utility.updateValidator(relatedBuild, checked ? [Validators.required] : null);\n    });\n\n    cbRelatedContent.valueChanges.subscribe(checked => {\n      this.homeDetails.relatedContent = Utility.setNull(checked, this.homeDetails.relatedContent);\n      Utility.updateValidator(relatedContent, checked ? [Validators.required] : null);\n    });\n  }\n\n  createObj(name: String, value: String, installment: String, product: number) {\n    return {\n      'name': name,\n      'value': value,\n      'installment': installment,\n      'product': product\n    };\n  }\n\n  createQuickQuoteData(quickQuoteDetails: any[], products: any[], productList: any[]) {\n    this.annualData = [];\n    this.plan30Data = [];\n    this.plan60Data = [];\n    this.plan90Data = [];\n    var annual = [];\n    var plan30 = [];\n    var plan60 = [];\n    var plan90 = [];\n    productList.forEach(a => {\n      quickQuoteDetails.forEach(b => {\n        products.forEach(c => {\n          if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"1\" && b.numSimulacion === c.numSimulacion) {\n            annual.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 1));\n          } else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"30\" && b.numSimulacion === c.numSimulacion) {\n            if (b.numCuota === \"1\") {\n              plan30.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 30));\n            } else if (b.numCuota === \"2\") {\n              plan30.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 30));\n            }\n          } else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"60\" && b.numSimulacion === c.numSimulacion) {\n            if (b.numCuota === \"1\") {\n              plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));\n            } else if (b.numCuota === \"2\") {\n              plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));\n            } else if (b.numCuota === \"3\") {\n              plan60.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 60));\n            }\n          } else if (a.COD_FRACC_PAGO === b.codFraccPago && a.COD_FRACC_PAGO === \"90\" && b.numSimulacion === c.numSimulacion) {\n            if (b.numCuota === \"1\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            } else if (b.numCuota === \"2\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            } else if (b.numCuota === \"3\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            } else if (b.numCuota === \"4\") {\n              plan90.push(this.createObj(c.numSimulacion, b.impRecibo, b.numCuota, 90));\n            }\n          }\n        });\n      });\n    });\n\n    this.annualData.push(this.createQQResultDTO(annual, '1', true));\n    this.annualData.push(this.getInstallmentTotal(plan30));\n\n    this.plan30Data.push(this.createQQResultDTO(plan30, '1'));\n    this.plan30Data.push(this.createQQResultDTO(plan30, '2'));\n\n    this.plan60Data.push(this.createQQResultDTO(plan60, '1'));\n    this.plan60Data.push(this.createQQResultDTO(plan60, '2'));\n    this.plan60Data.push(this.createQQResultDTO(plan60, '3'));\n\n    this.plan90Data.push(this.createQQResultDTO(plan90, '1'));\n    this.plan90Data.push(this.createQQResultDTO(plan90, '2'));\n    this.plan90Data.push(this.createQQResultDTO(plan90, '3'));\n    this.plan90Data.push(this.createQQResultDTO(plan90, '4'));\n  }\n\n  createQuickQuoteCoverage(coverage: any[]) {\n    var coverages = [];\n\n    coverage.forEach(cov => {\n      var coverageName = cov.nomCob;\n      var coverageCode = cov.codCob;\n      var product = cov.numSimulacion;\n      var isIncluded = cov.mcaOligatorio;\n\n      var icon = '';\n      if (isIncluded == \"S\") {\n        icon = \"<i class='far fa-check-circle'></i>\"\n      } else if (isIncluded == \"N\") {\n        icon = \"<i class='far fa-times-circle'></i>\";\n      }\n\n      if (!coverages.includes(coverageName) && (coverageCode <= '2110' && coverageCode >= '2101')) {\n        coverages.push(coverageName);\n        var obj = {} as QuickQuoteResultDTO;\n        obj.label = coverageName;\n        obj.fire = \"<i class='far fa-times-circle'></i>\";\n        obj.earth = \"<i class='far fa-times-circle'></i>\";\n        obj.water = \"<i class='far fa-times-circle'></i>\";\n        this.coveragelist.push(obj);\n      }\n\n      this.coveragelist.forEach(c => {\n        if (c.label == coverageName) {\n          if (product == 1) {\n            c.fire = icon;\n          } else if (product == 2) {\n            c.earth = icon;\n          } else if (product == 3) {\n            c.water = icon;\n          }\n        }\n      });\n    });\n  }\n\n  setTotalValue(product: any, value: any) {\n    if (product === undefined) {\n      return value;\n    } else {\n      var x = parseFloat(product);\n      var y = parseFloat(value);\n      return (x + y).toString();\n    }\n  }\n\n  getInstallmentTotal(arr: any[]) {\n    var obj = {} as QuickQuoteResultDTO;\n    obj.label = \"Installment\";\n    arr.forEach((a: any) => {\n      var product = a[\"name\"];\n      var value = a[\"value\"];\n      if (product == 1) {\n        obj.fire = this.setTotalValue(obj.fire, value);\n      } else if (product == 2) {\n        obj.earth = this.setTotalValue(obj.earth, value);\n      } else if (product == 3) {\n        obj.water = this.setTotalValue(obj.water, value);\n      }\n    });\n    return obj;\n  }\n\n  createQQResultDTO(arr: any[], installment: String, isAnnual ? : boolean) {\n    var obj = {} as QuickQuoteResultDTO;\n\n    if (installment == '1') {\n      obj.label = isAnnual ? 'Annual' : '1st Installment';\n    } else if (installment == '2') {\n      obj.label = '2nd Installment';\n    } else if (installment == '3') {\n      obj.label = '3rd Installment';\n    } else if (installment == '4') {\n      obj.label = '4th Installment';\n    }\n\n    arr.forEach((a: any) => {\n      var price = a[\"value\"];\n      var product = a[\"name\"];\n      if (a[\"installment\"] == installment) {\n        if (product == 1) {\n          obj.fire = price;\n        } else if (product == 2) {\n          obj.earth = price;\n        } else if (product == 3) {\n          obj.water = price;\n        }\n      }\n    });\n    return obj;\n  }\n\n  quickQuote(homeDetails: Home) {\n    this.qqs.quickQuoteHome(homeDetails).then(res => {\n      if (res.status) {\n        var quickQuoteDetails = res.obj[\"quickQuoteDetails\"];\n        var productList = res.obj[\"productList\"];\n        var products = res.obj[\"products\"];\n        var coverage = res.obj[\"coverage\"];\n\n        // generates quick quote home details\n        this.createQuickQuoteData(quickQuoteDetails, productList, products);\n        // generates product coverage\n        this.createQuickQuoteCoverage(coverage);\n        // displaying product comparison\n        this.showProductComparison = true;\n        setTimeout(() => {\n          Utility.scroll('productComparison');\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n}\n","export default \".mat-row:hover{\\n    background: azure;\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdWljay1xdW90YXRpb24tdHJhdmVsL3F1aWNrLXF1b3RhdGlvbi10cmF2ZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9xdWljay1xdW90YXRpb24tdHJhdmVsL3F1aWNrLXF1b3RhdGlvbi10cmF2ZWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtcm93OmhvdmVye1xuICAgIGJhY2tncm91bmQ6IGF6dXJlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  Input,\n  AfterViewChecked,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  Travel\n} from '../../objects/Travel';\nimport {\n  TravelListObject\n} from 'src/app/objects/LOV/travelList';\nimport {\n  QuickQuoteService\n} from '../../services/quickquote.service'\nimport {\n  TravelLOVServices\n} from '../../services/lov/travel.service'\n\nexport interface QuickQuoteResultDTO {\n  label: string;\n  complete: number;\n  personalAssistance: number;\n  assist: number;\n  currency: string;\n  code: number;\n  isHeader: boolean;\n}\n\n@Component({\n  selector: 'app-quick-quotation-travel',\n  templateUrl: './quick-quotation-travel.component.html',\n  styleUrls: ['./quick-quotation-travel.component.css']\n})\n\nexport class QuickQuotationTravelComponent implements OnInit, AfterViewChecked {\n  travelDetails = new Travel();\n  LOV = new TravelListObject();\n  quickQuoteForm: FormGroup;\n\n  displayedColumns: string[] = ['label', 'complete', 'personalAssistance', 'assist'];\n\n  travelData: Array < QuickQuoteResultDTO > = [];\n  coverageData: Array < QuickQuoteResultDTO > = [];\n  coverageList: [];\n\n  mindate: Date = new Date();\n  endDateMinDate: Date = moment().add(1, 'days').toDate();\n  enableEndDate: boolean = false;\n\n  //flag to display product comparison\n  showProductComparison: boolean = false;\n  //flag to display product coverage\n  showProductCoverage: boolean = false;\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private qqs: QuickQuoteService,\n    private tls: TravelLOVServices,\n    private changeDetector: ChangeDetectorRef,\n    private bms: BsModalService\n  ) {\n    this.createQuickQuoteForm();\n    this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    var _this = this;\n    this.tls.getCurrencyList().then(res => {\n      _this.LOV.currencyLOV = res;\n    });\n    this.tls.getTravelPackage().then(res => {\n      _this.LOV.packageLOV = res;\n    });\n    this.tls.getTypeOfCoverage().then(res => {\n      _this.LOV.coverageLOV = res;\n    });\n    this.tls.getAgeRange().then(res => {\n      var ageList = [];\n      res.forEach((age) => {\n        //removes ages 66 and above\n        if (age.AGE_RANGE < 3) {\n          ageList.push(age);\n        }\n      });\n      _this.LOV.ageRangeLOV = ageList;\n    });\n  }\n\n  createQuickQuoteForm() {\n    this.quickQuoteForm = this.fb.group({\n      currency: ['', Validators.required],\n      country: ['', Validators.required],\n      travelPackage: ['', Validators.required],\n      typeOfCoverage: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      noOfDays: ['', Validators.required],\n      ageRange: ['', Validators.required]\n    });\n  }\n\n  onItemSelect(item: any) {\n    console.log(item);\n  }\n  onSelectAll(items: any) {\n    console.log(items);\n  }\n\n  currencyOnchange() {\n    var _this = this;\n\n    //if currency is philippine peso\n    this.travelDetails.countries = this.travelDetails.currency === 1 ? [{\n        NOM_PAIS: \"PHILIPPINES\",\n        COD_PAIS: \"PHL\",\n        NOM_VERNACULO: \"PHILIPPINES\",\n        name: \"PHILIPPINES\",\n        value: \"PHL\",\n        type: \"PHILIPPINES\"\n      }] :\n      null;\n    this.travelDetails.travelPackage = this.travelDetails.currency === 1 ?\n      \"P\" :\n      null;\n\n    this.tls.getCountryList(this.travelDetails).then(res => {\n      res.forEach(country => {\n        country.name = country.NOM_PAIS;\n        country.value = country.COD_PAIS;\n        country.type = country.NOM_VERNACULO;\n      });\n      _this.LOV.countryLOV = res;\n    });\n  }\n\n  setValidations() {\n    this.quickQuoteForm.get('endDate').valueChanges.subscribe(date => {\n      var diff = moment(date).diff(moment(this.quickQuoteForm.get('startDate').value), 'days') + 1;\n      this.travelDetails.noOfDays = diff >= 2 ? diff : 0;\n    });\n\n    this.quickQuoteForm.get('startDate').valueChanges.subscribe(date => {\n      this.enableEndDate = date !== null && date !== undefined;\n      var diff = 0;\n      if (this.enableEndDate) {\n        var diff = moment(this.quickQuoteForm.get('endDate').value).diff(moment(date), 'days') + 1;\n        diff = diff === NaN ? 0 : diff;\n        this.endDateMinDate = moment(date).add(1, 'days').toDate();\n        if (diff < 1) {\n          this.travelDetails.endDate = null;\n        }\n      } else {\n        this.travelDetails.endDate = null;\n      }\n\n      this.travelDetails.noOfDays = diff >= 2 ? diff : 0;\n    });\n\n    this.quickQuoteForm.get('country').valueChanges.subscribe(countries => {\n      var packageList = [];\n      if (!Utility.isUndefined(countries)) {\n        countries.forEach(country => {\n          packageList.push(country.type);\n        });\n        if (packageList.indexOf(\"WORLD\") !== -1) {\n          this.travelDetails.travelPackage = \"W\";\n        } else if (packageList.indexOf(\"SCHENGEN\") !== -1) {\n          this.travelDetails.travelPackage = \"S\";\n        } else if (packageList.indexOf(\"ASIA\") !== -1) {\n          this.travelDetails.travelPackage = \"A\";\n        } else {\n          this.travelDetails.travelPackage = \"P\";\n        }\n      }\n    });\n  }\n\n  generateCoverage(row: QuickQuoteResultDTO) {\n    this.coverageData = [];\n    var c = this.coverageList[row.label];\n    //coverage headers\n    var headers = [300, 332, 330, 302, 316, 319, 324, 333];\n    c.forEach(coverage => {\n      var obj = {} as QuickQuoteResultDTO;\n      // bolder label if it is a header\n      obj.isHeader = headers.indexOf(coverage.code) !== -1;\n      obj.label = obj.isHeader ? '<strong>' + coverage.label + '</strong>' : coverage.label;\n      obj.complete = coverage.complete;\n      obj.personalAssistance = coverage.personalAssistance;\n      obj.assist = coverage.assistOnly;\n      obj.currency = coverage.currency;\n      obj.code = coverage.code;\n      this.coverageData.push(obj);\n    });\n    // display product coverage\n    this.showProductCoverage = true;\n    setTimeout(() => {\n      Utility.scroll('productCoverage');\n    }, 500);\n  }\n\n  quickQuote(travelDetails: Travel) {\n    this.qqs.quickQuoteTravel(travelDetails).then(res => {\n      if (res.status) {\n        this.travelData = [];\n        this.coverageData = [];\n        var quickQuoteDetails = res.obj[\"quickQuoteDetails\"];\n        this.coverageList = res.obj[\"coverages\"];\n        quickQuoteDetails.forEach(details => {\n          var obj = {} as QuickQuoteResultDTO;\n          obj.label = details.label;\n          obj.complete = details.complete;\n          obj.personalAssistance = details.personalAssistance;\n          obj.assist = details.assistOnly;\n          obj.currency = details.currency;\n          this.travelData.push(obj);\n        });\n\n        // hiding product coverage\n        this.showProductCoverage = false;\n        // displaying product comparison\n        this.showProductComparison = true;\n        setTimeout(() => {\n          Utility.scroll('productComparison');\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n}\n","export default \".additional-accident-details,\\n.acci-spa,\\n.acci-hcbi {\\n  width: 100%;\\n}\\n\\n.insured-card {\\n  margin-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdW90YXRpb24tYWNjaWRlbnQvcXVvdGF0aW9uLWFjY2lkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztFQUdFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVvdGF0aW9uLWFjY2lkZW50L3F1b3RhdGlvbi1hY2NpZGVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZGl0aW9uYWwtYWNjaWRlbnQtZGV0YWlscyxcbi5hY2NpLXNwYSxcbi5hY2NpLWhjYmkge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmluc3VyZWQtY2FyZCB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59Il19 */\";","import {\n  Component,\n  OnInit,\n  AfterViewChecked,\n  ChangeDetectorRef,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  distinctUntilChanged\n} from 'rxjs/operators';\nimport {\n  Accident\n} from '../../objects/Accident';\nimport {\n  GroupPolicy\n} from 'src/app/objects/GroupPolicy';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  page\n} from 'src/app/constants/page';\nimport {\n  AccidentListObject\n} from 'src/app/objects/LOV/accidentList';\nimport {\n  GroupPolicyListObject\n} from 'src/app/objects/LOV/groupPolicyList';\nimport {\n  AccidentLOVServices\n} from '../../services/lov/accident.service';\nimport {\n  ThirdPartyLOVServices\n} from 'src/app/services/lov/third-party-lov-service';\nimport {\n  Globals\n} from 'src/app/utils/global';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef\n} from '@angular/material';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  PaymentBreakdownModalComponent\n} from '../payment-breakdown-modal/payment-breakdown-modal.component';\nimport {\n  ReturnDTO\n} from 'src/app/objects/ReturnDTO';\nimport {\n  AccidentIssueServices\n} from 'src/app/services/accident-issue.service';\nimport {\n  TravelLOVServices\n} from 'src/app/services/lov/travel.service';\nimport {\n  InsuredDetails\n} from 'src/app/objects/InsuredDetails';\n\n@Component({\n  selector: 'app-quotation-accident',\n  templateUrl: './quotation-accident.component.html',\n  styleUrls: ['./quotation-accident.component.css']\n})\nexport class QuotationAccidentComponent implements OnInit, AfterViewChecked {\n  @ViewChild('proceedModal') proceedModal: TemplateRef < any > ;\n  @ViewChild('validationModal') validationModal: TemplateRef < any > ;\n\n  // currentUser = this.auths.currentUserValue;\n  isIssuance: boolean = Globals.getAppType() == \"I\";\n  isLoadQuotation: boolean = Globals.isLoadQuotation;\n  pageLabel: String = 'Quotation';\n  triggerCounter: number = 0;\n  triggerCoverage: number = 0;\n  triggerBreakdown: number = 0;\n  insuredHeadCount: number = 1;\n\n  accidentDetails = new Accident();\n  prevAccidentDetails: Accident = null;\n  changedValues: any[] = [];\n\n  invalidForms: any[] = [];\n\n  withTechControl = false;\n\n  groupPolicy = new GroupPolicy();\n  policyHolder = new PolicyHolder();\n  quoteForm: FormGroup;\n  minDate: Date = moment().subtract(65, 'years').toDate();\n  maxDate: Date = moment().subtract(18, 'years').toDate();\n\n  today: Date = new Date();\n  expiryDateMinDate: Date = moment().add(1, 'years').toDate();\n\n  showOtherOccupation = false;\n  showDetails: boolean = false;\n  showSPADetails: boolean = false;\n  showHCBIDetails: boolean = false;\n  showCoverage: boolean = false;\n  showPaymentBreakdown: boolean = false;\n\n  //for payment breakdown\n  paymentBreakdown: any[];\n  paymentReceipt: {};\n\n  //for coverage\n  coverageList: any[];\n\n  LOV = new AccidentListObject();\n  GPLOV = new GroupPolicyListObject();\n\n  //allow user to edit the form\n  editMode = true;\n\n  //flag to show generate btn\n  showGenerateBtn: boolean = true;\n  //flag to show issue btn\n  showIssueQuoteBtn: boolean = false;\n  //flag to show print quote/proceed to issuance\n  showProceedToIssuanceBtn: boolean = false;\n\n  //flat to show issuance generate btn\n  showIssuanceGenerateBtn = true;\n  //flag to show save btn\n  showSaveBtn: boolean = false;\n  //flag to show post btn\n  showPostBtn: boolean = false;\n  //flag to show print btn\n  showPrintBtn: boolean = false;\n  //flag to show new quote and new policy btn\n  showNewPolicyBtn: boolean = false;\n\n  //disable load button\n  disableLoadBtn: boolean = true;\n\n  //modal reference\n  modalRef: BsModalRef;\n  dialogRef: MatDialogRef < TemplateRef < any >> ;\n\n  codeName: String;\n\n  constructor(\n    private fb: FormBuilder,\n    // private auths: AuthenticationService,\n    private als: AccidentLOVServices,\n    private ais: AccidentIssueServices,\n    private tpls: ThirdPartyLOVServices,\n    private tls: TravelLOVServices,\n    private router: Router,\n    public dialog: MatDialog,\n    private bms: BsModalService,\n    private changeDetector: ChangeDetectorRef\n  ) {\n    this.createQuoteForm();\n    this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    this.loadInit();\n    if (this.isIssuance) {\n      this.pageLabel = 'Issuance';\n      if (this.isLoadQuotation) {\n        //if loaded from accident quotation\n        this.accidentDetails.quotationNumber = Globals.loadNumber;\n        this.loadQuotation();\n        Globals.setLoadNumber('');\n        Globals.setLoadQuotation(false);\n      }\n    }\n  }\n\n  createQuoteForm() {\n    this.quoteForm = this.fb.group({\n      quotationNumber: [null],\n      subline: ['', Validators.required],\n      //general information\n      effectivityDate: ['', Validators.required],\n      expiryDate: ['', Validators.required],\n      //insured details\n      insured: this.fb.array([this.newInsured(true)]),\n      //disablement value\n      disablementValue: [null],\n      //product data\n      product: ['', Validators.required],\n    });\n  }\n\n  loadQuotation() {\n    this.ais.loadQuotation(this.accidentDetails.quotationNumber).then(res => {\n      if (res.status) {\n        this.manageBtn(2);\n        const variableData = res.obj[\"variableData\"] as any[];\n        variableData.forEach(v => {\n          const code = v.codCampo;\n          const value: string = v.valCampo;\n          let valueInt: number = undefined;\n  \n          try {\n            valueInt = parseInt(value);\n          } catch (e) {\n            // do nothing\n          }\n  \n          switch (code) {\n            //general information details\n            //TODO\n            case \"COD_MODALIDAD\": {\n              this.accidentDetails.product = valueInt;\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n  \n        const generalInfo = res.obj[\"generalInfo\"];\n        this.accidentDetails.subline = generalInfo.codRamo;\n        // this.accidentDetails.effectivityDate = new Date(generalInfo.fecEfecPoliza);\n        this.quoteForm.get('effectivityDate').setValue(new Date(generalInfo.fecEfecPoliza), {emitEvent:false});\n        // this.accidentDetails.expiryDate = new Date(generalInfo.fecVctoPoliza);\n        this.quoteForm.get('expiryDate').setValue(new Date(generalInfo.fecVctoPoliza), {emitEvent:false});\n  \n        this.groupPolicy = new GroupPolicy;\n        this.groupPolicy.agentCode = generalInfo.codAgt;\n        if (!Utility.isUndefined(generalInfo.numPolizaGrupo)) {\n          this.groupPolicy.groupPolicy = parseInt(generalInfo.numPolizaGrupo);\n        }\n        if (!Utility.isUndefined(generalInfo.numContrato)) {\n          this.groupPolicy.contract = parseInt(generalInfo.numContrato);\n        }\n        if (!Utility.isUndefined(generalInfo.numSubcontrato)) {\n          this.groupPolicy.subContract = parseInt(generalInfo.numSubcontrato);\n        }\n        this.groupPolicy.commercialStructure = generalInfo.codNivel3;\n        this.accidentDetails.groupPolicy = this.groupPolicy;\n  \n        const docType = generalInfo.tipDocum;\n        const docCode = generalInfo.codDocum;\n        // preventing generic document type and code\n        if (\"MVO\" != docType && !docCode.startsWith(\"MAPFREXX\")) {\n          this.policyHolder.documentType = docType;\n          this.policyHolder.documentCode = docCode;\n          this.policyHolder.isExisting = true;\n        }\n\n        var tempInsured = [];\n        const insuredDetails = res.obj[\"insuredDetails\"] as any[];\n        insuredDetails.forEach(i => {\n          const code = i.codCampo;\n          const value: string = i.valCampo;\n          const occurence: number = i.numOcurrencia;\n\n          switch (code) {\n            //insured individual\n            case \"TXT_FIRST_NAME\": {\n              const obj = { firstName: value, occurence: occurence };\n              tempInsured.push(obj);\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n\n        var insureds = [];\n        tempInsured.forEach(t => {\n          const iObj = new InsuredDetails();\n          iObj.firstName = t.firstName;\n          insuredDetails.forEach(id => {\n            const code = id.codCampo;\n            const value: string = id.valCampo;\n            const text: string = id.txtCampo;\n            const occurence: number = id.numOcurrencia;\n            let valueInt: number = undefined;\n    \n            try {\n              valueInt = parseInt(value);\n            } catch (e) {\n              // do nothing\n            }\n\n            if (t.occurence == occurence) {\n              iObj.occurence = occurence.toString();\n              switch (code) {\n                case \"TXT_FIRST_NAME\": {\n                  iObj.firstName = value;\n                  break;\n                }\n                case \"TXT_LAST_NAME\": {\n                  iObj.lastName = value;\n                  break;\n                }\n                case \"TXT_MIDDLE_INITIAL\": {\n                  iObj.middleName = value;\n                  break;\n                }\n                case \"TXT_SUFFIX\": {\n                  iObj.suffix = valueInt;\n                  iObj.suffixLabel = text;\n                  break;\n                }\n                case \"MCA_SEXO_ASEG\": {\n                  iObj.gender = valueInt;\n                  break;\n                }\n                case \"RELATIONSHIP\": {\n                  iObj.relationship = value;\n                  iObj.relationshipLabel = text;\n                  break;\n                }\n                case \"BIRTHDATE\": {\n                  const date = Utility.convertStringDate(value);\n                  iObj.birthDate = date;\n                  break;\n                }\n                case \"TXT_HEALTH_DECLARA\": {\n                  iObj.cbWithHealthDeclaration = value == 'S';\n                  break;\n                }\n                case \"TXT_HEALTH_DECLARA_EXIST\": {\n                  iObj.preExistingIllness = value;\n                  break;\n                }\n                case \"COD_OCCUPATIONAL_CLASS\": {\n                  iObj.occupationalClass = value;\n                  iObj.occupationalClassLabel = text;\n                  break;\n                }\n                case \"TXT_OCCUPATION\": {\n                  iObj.occupation = value;\n                  iObj.occupationLabel = text;\n                  break;\n                }\n                case \"TXT_OCCUPATIONAL_CLAS_OTH\": {\n                  iObj.otherOccupation = value;\n                  break;\n                }\n                default: {\n                  // do nothing\n                }\n              }\n            }\n          });\n          insureds.push(iObj);\n        });\n\n        const occupationLists = res.obj[\"occupationLists\"] as any[];\n        \n        if (insureds.length) {\n          //removes all insured individual\n          this.removeAllInsured();\n          var temp: any[] = [];\n          insureds.forEach((ins: any) => {\n            temp.push({\n              insured: ins.firstName\n            });\n\n            const showOtherOccupation = !Utility.isUndefined(ins.otherOccupation);\n            this.insured().push(this.loadInsured(\n              ins.firstName,\n              ins.lastName,\n              ins.middleName,\n              ins.suffix,\n              ins.suffixLabel,\n              ins.gender,\n              ins.birthDate,\n              ins.relationship,\n              ins.relationshipLabel,\n              ins.cbWithHealthDeclaration,\n              ins.preExistingIllness,\n              ins.occupationalClass,\n              ins.occupationalClassLabel,\n              ins.occupation,\n              ins.occupationLabel,\n              ins.otherOccupation,\n              showOtherOccupation,\n              occupationLists[ins.occurence]));\n          });\n\n          var insuredForm = this.quoteForm.get('insured').value;\n          this.accidentDetails.insuredDetails = insuredForm;\n        } else {\n          this.accidentDetails.insuredDetails = [] as any; //TODO\n        }\n  \n        this.loadLOVs();\n  \n        const coverageList = res.obj[\"coverageList\"];\n        this.populateCoverage(coverageList);\n  \n        //breakdwon\n        const breakdown = res.obj[\"breakdown\"];\n        const receipt = res.obj[\"receipt\"];\n        this.populatePaymentBreakdown(breakdown, receipt);\n  \n        //cloning details from load quotation\n        const deepClone = JSON.parse(JSON.stringify(this.accidentDetails));\n        this.prevAccidentDetails = deepClone;\n\n        //prevent to post policy if quotation has technical control\n        const technicalControl = res.obj[\"technicalControl\"];\n        if (generalInfo.mcaProvisional == \"S\" && technicalControl.length > 0) {\n          this.withTechControl = true;\n          this.editMode = false;\n          this.modalRef = Utility.showError(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n        this.accidentDetails.quotationNumber = \"\";\n      }\n    }).finally(() => {\n      //trigger child component load quotation function\n      this.triggerCounter = this.triggerCounter + 1;\n    });\n  }\n\n  //loading of all LOV's for load quotation\n  loadLOVs() {\n    var _this = this;\n    this.als.getOccupationalClass(this.accidentDetails).then(res => {\n      _this.LOV.occupationalClassLOV = res;\n    });\n    this.als.getProduct(this.accidentDetails).then(res => {\n      _this.LOV.productListLOV = res;\n    });\n  }\n\n  setValidations() {\n    var quotationNumber = this.quoteForm.get('quotationNumber');\n    var effectivityDate = this.quoteForm.get('effectivityDate');\n\n    quotationNumber.valueChanges.subscribe(number => {\n      this.disableLoadBtn = Utility.isUndefined(number);\n    });\n\n    effectivityDate.valueChanges.pipe(distinctUntilChanged()).subscribe(date => {\n      this.accidentDetails.expiryDate = moment(date).add(1, 'years').toDate();\n      this.expiryDateMinDate = this.accidentDetails.expiryDate;\n    });\n  }\n\n  loadInit() {\n    var _this = this;\n    this.als.getSubline().then(res => {\n      _this.LOV.sublineLOV = res;\n    });\n    this.tpls.getSuffix().then(res => {\n      _this.LOV.suffixLOV = res;\n    });\n    this.tls.getRelationship().then(res => {\n      _this.LOV.relationshipLOV = res;\n      _this.LOV.relationshipLOV.forEach((r) => {\n        // disable primary\n        r.disabled = r.COD_VALOR == 'P';\n      });\n    });\n\n    this.setDefaultValue();\n  }\n\n  setDefaultValue() {\n    //setting default value\n    this.accidentDetails.sublineEffectivityDate = \"01012016\";\n    this.accidentDetails.effectivityDate = this.today; // current today\n  }\n\n  insured(): FormArray {\n    return this.quoteForm.get(\"insured\") as FormArray\n  }\n\n  newInsured(onLoad: boolean): FormGroup {\n    const occupationList = [];\n\n    return this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      middleName: [null],\n      suffix: [null],\n      suffixLabel: [''],\n      gender: ['', Validators.required],\n      birthDate: ['', Validators.required],\n      relationship: [onLoad ? 'P' : '', Validators.required],\n      relationshipLabel: [onLoad ? 'PRIMARY' : ''],\n      cbWithHealthDeclaration: [null],\n      preExistingIllness: [null],\n      occupationalClass: ['', Validators.required],\n      occupationalClassLabel: [''],\n      occupation: ['', Validators.required],\n      occupationLabel: [''],\n      otherOccupation: [null],\n      occupationList: [occupationList],\n      showOtherOccupation: [false],\n      bdaymindate: [this.minDate],\n      bdaymaxdate: [this.maxDate],\n    });\n  }\n\n  loadInsured(firstName: string,\n    lastName: string,\n    middleName: string,\n    suffix: string,\n    suffixLabel: string,\n    gender: string,\n    birthDate: Date,\n    relationship: string,\n    relationshipLabel: string,\n    cbWithHealthDeclaration: boolean,\n    preExistingIllness: string,\n    occupationalClass: string,\n    occupationalClassLabel: string,\n    occupation: string,\n    occupationLabel: string,\n    otherOccupation: string,\n    showOtherOccupation: boolean,\n    occupationList: []\n    ): FormGroup {\n\n    const isSPA = this.accidentDetails.subline == 323;\n    const minAgeLimit = isSPA ? 70 : 65;\n    const maxAgeLimit = isSPA ? 1 : 18;\n\n    const bdaymindate: Date = moment().subtract(relationship == 'C' ? 21 : minAgeLimit, 'years').toDate();\n    const bdaymaxdate: Date = moment().subtract(relationship == 'C' ? 1 : maxAgeLimit, 'years').toDate();\n\n    // this.als.getOccupation(this.accidentDetails, occupationalClass).then(res => {\n    //   occupationList = res; //TODO\n    // });\n\n    return this.fb.group({\n      firstName: [firstName, Validators.required],\n      lastName: [lastName, Validators.required],\n      middleName: [middleName],\n      suffix: [suffix],\n      suffixLabel: [suffixLabel],\n      gender: [gender, Validators.required],\n      birthDate: [birthDate, Validators.required],\n      relationship: [relationship, Validators.required],\n      relationshipLabel: [relationshipLabel],\n      cbWithHealthDeclaration: [cbWithHealthDeclaration],\n      preExistingIllness: [preExistingIllness],\n      occupationalClass: [occupationalClass, Validators.required],\n      occupationalClassLabel: [occupationalClassLabel],\n      occupation: [occupation, Validators.required],\n      occupationLabel: [occupationLabel],\n      otherOccupation: [otherOccupation],\n      occupationList: [occupationList],\n      showOtherOccupation: [showOtherOccupation],\n      bdaymindate: [bdaymindate],\n      bdaymaxdate: [bdaymaxdate],\n    });\n  }\n\n  addInsured(onLoad : boolean) {\n    this.insured().push(this.newInsured(onLoad));\n\n    //hides the add insured button if insured head count is more than 6\n    var insured = this.quoteForm.get('insured').value;\n    this.insuredHeadCount = insured.length;\n  }\n\n  removeInsured(index: number) {\n    this.insured().removeAt(index);\n\n    //shows the add insured button if insured head count is less than 6\n    var insured = this.quoteForm.get('insured').value;\n    this.insuredHeadCount = insured.length;\n  }\n\n  removeAllInsured() {\n    // removing all insured\n    var insured = this.quoteForm.get('insured').value;\n    if (insured.length > 0) {\n      // loop until all insured removed\n      this.insured().removeAt(0);\n      this.removeAllInsured();\n    }\n  }\n\n  sublineOnChange() {\n    var _this = this;\n    var disablementValue = this.quoteForm.get('disablementValue');\n    var val = this.quoteForm.controls['subline'].value;\n\n    this.showSPADetails = val == 323; //if standard personal accident is selected\n    this.showHCBIDetails = val == 326; //if hospital cash benefit is selected\n\n    Utility.updateValidator(disablementValue, this.showSPADetails ? [Validators.required, Validators.max(2000000), Validators.min(10000)] : null);\n\n    this.minDate = moment().subtract(this.showSPADetails ? 70 : 65, 'years').toDate();\n    this.maxDate = moment().subtract(this.showSPADetails ? 1 : 18, 'years').toDate();\n\n    //removes all insured inserted by the user\n    this.removeAllInsured();\n    //adds new form for insured individual with primary relationship\n    this.addInsured(true);\n\n    this.als.getOccupationalClass(this.accidentDetails).then(res => {\n      _this.LOV.occupationalClassLOV = res;\n    });\n    this.als.getProduct(this.accidentDetails).then(res => {\n      _this.LOV.productListLOV = res;\n    });\n  }\n\n  suffixOnChange(insured: FormGroup) {\n    var val = insured.controls['suffix'].value;\n    this.LOV.suffixLOV.forEach(r => {\n      if (r.TIPO_SUFIJO_NOMBRE == val) {\n        insured.controls['suffixLabel'].setValue(r.NOM_VALOR);\n      }\n    });\n  }\n\n  relationshipOnChange(insured: FormGroup) {\n    var val = insured.controls['relationship'].value;\n    var maxAge = (val == 'C') ? 23 : 65;\n    var minAge = (val == 'C') ? 1 : 18;\n\n    const bdaymindate: Date = moment().subtract(maxAge, 'years').toDate();\n    insured.controls['bdaymindate'].setValue(bdaymindate);\n\n    const bdaymaxdate: Date = moment().subtract(minAge, 'years').toDate();\n    insured.controls['bdaymaxdate'].setValue(bdaymaxdate);\n\n    insured.controls['birthDate'].setValue('');\n\n    this.LOV.relationshipLOV.forEach(r => {\n      if (r.COD_VALOR == val) {\n        insured.controls['relationshipLabel'].setValue(r.NOM_VALOR);\n      }\n    });\n  }\n\n  cbWithHealthDeclarationOnChange(insured: FormGroup) {\n    var withHD = insured.controls['cbWithHealthDeclaration'].value;\n    var preExistingIllness = insured.controls['preExistingIllness'];\n    if (withHD != undefined) {\n      Utility.updateValidator(preExistingIllness, withHD ? [Validators.required] : null);\n    }\n  }\n\n  occupationalClassOnchange(insured: FormGroup) {\n    var occupationList = insured.controls['occupationList'];\n    var occupationalClass = insured.get('occupationalClass').value;\n    this.showOtherOccupation = false;\n    var otherOccupation = insured.get('otherOccupation');\n    Utility.updateValidator(otherOccupation, null);\n\n    this.LOV.occupationalClassLOV.forEach(oc => {\n      if (oc.COD_VALOR == occupationalClass) {\n        insured.controls['occupationalClassLabel'].setValue(oc.NOM_VALOR);\n      }\n    });\n\n    this.als.getOccupation(this.accidentDetails, occupationalClass).then(res => {\n      occupationList.setValue(res);\n    });\n  }\n\n  occupationOnchange(insured: FormGroup) {\n    var showOtherOccupation = insured.get('showOtherOccupation');\n    var occupationalClass = insured.get('occupationalClass').value;\n    var occupation = insured.get('occupation').value;\n    const selectedOC: string = occupationalClass + '199';\n    showOtherOccupation.setValue(selectedOC == occupation);\n    var otherOccupation = insured.get('otherOccupation');\n    Utility.updateValidator(otherOccupation, showOtherOccupation.value ? [Validators.required] : null);\n\n    var occupationList = insured.controls['occupationList'].value;\n    occupationList.forEach(o => {\n      if (o.COD_VALOR == occupation) {\n        insured.controls['occupationLabel'].setValue(o.NOM_VALOR);\n      }\n    });\n  }\n\n  populateCoverage(coverageList: any[]) {\n    this.coverageList = coverageList;\n    this.showCoverage = true;\n    this.triggerCoverage = this.triggerCoverage + 1;\n  }\n\n  populatePaymentBreakdown(breakdown: any[], receipt: {}) {\n    this.paymentBreakdown = breakdown;\n    this.paymentReceipt = receipt;\n    this.showPaymentBreakdown = true;\n    this.triggerBreakdown = this.triggerBreakdown + 1;\n    Utility.scroll('paymentBreakdown');\n  }\n\n  proceed(type: number) {\n    //if user changes affecting values\n    const hasChanges = this.changedValues.length != 0;\n\n    const hasQuotationNumber = !Utility.isUndefined(this.accidentDetails.quotationNumber);\n    const isTemporaryQuotation = hasQuotationNumber && this.accidentDetails.quotationNumber.startsWith('999');\n    this.accidentDetails.affecting = !hasQuotationNumber ||\n      (hasQuotationNumber && isTemporaryQuotation) ||\n      (hasQuotationNumber && !isTemporaryQuotation && hasChanges);\n    if (hasChanges) {\n      this.openProceedModal(type);\n    } else {\n      switch (type) {\n        case 1: {\n          this.issueQuote('S');\n          break;\n        }\n        case 2: {\n          this.issueQuote('N');\n          break;\n        }\n        case 3: {\n          this.savePolicy();\n          break;\n        }\n        default: {\n          this.postPolicy();\n          break;\n        }\n      }\n    }\n  }\n\n  openProceedModal(type: number): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      generateBtn: type == 1 || type == 2 || type == 3,\n      saveBtn: type == 4\n    };\n\n    this.dialogRef = this.dialog.open(this.proceedModal, dialogConfig);\n  }\n\n  openValidationModal(q: FormGroup, g: FormGroup, c: FormGroup): void {\n    //clear arrays\n    let invalid = [];\n    this.invalidForms = [];\n\n    //list of incorrect label names\n    var formLabels = [{\n        cbOneTripOnly: 'oneTripOnly'\n      },\n      {\n        name: \"client'sName\"\n      }\n    ]\n\n    var quoteArr = Utility.findInvalidControls(q);\n    invalid.push(...quoteArr);\n\n    var groupPolicyArr = Utility.findInvalidControls(g);\n    invalid.push(...groupPolicyArr);\n\n    var policyHolderArr = Utility.findInvalidControls(c);\n    invalid.push(...policyHolderArr);\n\n    invalid.forEach((i) => {\n      formLabels.forEach(f => {\n        var correctLabel = f[i];\n        if (!Utility.isUndefined(correctLabel)) {\n          //replace label\n          i = correctLabel;\n        }\n      });\n\n      let label: string = i.replace(/([A-Z])/g, ' $1').trim();\n      this.invalidForms.push(label.toLowerCase());\n    });\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n\n    this.dialogRef = this.dialog.open(this.validationModal, dialogConfig);\n  }\n\n  openPaymentBreakdownModal(receipt: any, breakdown: any, isPostPolicy: boolean) {\n    const modalData = {\n      number: isPostPolicy ? this.accidentDetails.policyNumber : this.accidentDetails.quotationNumber,\n      product: this.codeName,\n      payment: \"ANNUAL\",\n      receipt: receipt,\n      breakdown: breakdown,\n      showExchangeRate: false,\n      isPostPolicy: isPostPolicy,\n      line: 'ACCIDENT'\n    };\n\n    this.dialog.open(PaymentBreakdownModalComponent, {\n      width: '1000px',\n      data: modalData\n    });\n  }\n\n  manageBtn(opt: number) {\n    if (opt == 1) {\n      //hides payment breakdown panel\n      this.showPaymentBreakdown = false;\n      this.editMode = true;\n    }\n\n    if (this.isIssuance) {\n      this.showIssuanceGenerateBtn = (opt == 1);\n      this.showSaveBtn = (opt == 2);\n      this.showPostBtn = (opt == 3);\n      this.showPrintBtn = (opt == 4);\n      this.showNewPolicyBtn = (opt == 5);\n    } else {\n      this.showGenerateBtn = (opt == 1);\n      this.showIssueQuoteBtn = (opt == 2);\n      this.showProceedToIssuanceBtn = (opt == 3);\n    }\n  }\n\n  newQuote() {\n    this.newPage(page.QUO.ACC);\n  }\n\n  newPolicy() {\n    this.newPage(page.ISS.ACC);\n  }\n\n  newPage(page: string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n\n  affecting(key: string, label: string) {\n    if (!Utility.isUndefined(this.accidentDetails.quotationNumber) && this.prevAccidentDetails != null) {\n      let prev = this.prevAccidentDetails[key] == undefined ? \"\" : this.prevAccidentDetails[key];\n      let curr = this.accidentDetails[key] == undefined ? \"\" : this.accidentDetails[key];\n      if (curr instanceof Date) {\n        curr = curr.getMonth() + \"/\" + curr.getDate() + \"/\" + curr.getFullYear();\n        if (!Utility.isUndefined(prev)) {\n          var prevDate = new Date(prev);\n          prev = prevDate.getMonth() + \"/\" + prevDate.getDate() + \"/\" + prevDate.getFullYear();\n        }\n      }\n\n      if (prev != curr) {\n        if (!this.changedValues.includes(label)) {\n          //if changedValues length is greater than 0, request is affecting\n          this.changedValues.push(label);\n        }\n      } else {\n        //remove all occurence\n        this.changedValues = this.changedValues.filter(v => v !== label);\n      }\n    }\n  }\n\n  printQuote() {\n    this.ais.printQuote(this.accidentDetails.quotationNumber);\n  }\n\n  printPolicy() {\n    this.ais.printPolicy(this.accidentDetails.policyNumber);\n  }\n\n  proceedToIssuance() {\n    this.ais.proceedToIssuance(this.accidentDetails.quotationNumber);\n  }\n\n  getProductCode() {\n    const _this = this;\n    this.codeName = null;\n    this.LOV.productListLOV.forEach(p => {\n      if (p.COD_MODALIDAD == this.accidentDetails.product) {\n        _this.codeName = p.NOM_MODALIDAD;\n      }\n    });\n  }\n\n  //getting error or warning items\n  getErrorItems(res: ReturnDTO, mcaTmpPptoMph: string, isIssuance: boolean) {\n    this.withTechControl = false;\n    const resErrorCode = res.obj[\"errorCode\"];\n    const resError = res.obj[\"error\"];\n\n    const isPostPolicy = Utility.isUndefined(resErrorCode);\n    let items: any[] = isPostPolicy ? [\"Error occured while posting policy. Please contact administration.\"] : [\"Error code is \" + resErrorCode + \" but does not return any error message. Please contact administration.\"];\n\n    if (!Utility.isUndefined(resError)) {\n      const errArr = resError.split(\"~\");\n      if (errArr.length) {\n        var arr = [];\n        errArr.forEach((err: string) => {\n          if (!Utility.isEmpty(err)) {\n            arr.push(err);\n          }\n        });\n\n        const resStatus = res.obj[\"status\"];\n        if (arr.length) {\n          if (!resStatus && isPostPolicy) {\n            //has error - can't proceed\n            items = [\"Failed to generate quotation number due to following reason/s:\"].concat(arr);\n          } else {\n            this.withTechControl = true;\n            // has warning - can proceed\n            if (isIssuance) {\n              items = [\"Quotation has technical control due to following reason/s:\"].concat(arr);\n            } else {\n              items = (\"N\" == mcaTmpPptoMph) ? [\"Routed for approval due to following reason/s:\"].concat(arr) : arr;\n            }\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  //generate and issue quote button\n  issueQuote(mcaTmpPptoMph: string) {\n    // S for generation and N for issue quotation\n    this.assembleData(mcaTmpPptoMph);\n\n    this.ais.issueQuote(this.accidentDetails).then(res => {\n      if (res.status) {\n        //clear affecting fields\n        this.changedValues = [];\n\n        const items = this.getErrorItems(res, mcaTmpPptoMph, false);\n        const status = res.obj[\"status\"];\n        if (status) {\n          //duplicating car details for comparison\n          const deepClone = JSON.parse(JSON.stringify(this.accidentDetails));\n          this.prevAccidentDetails = deepClone;\n\n          this.editMode = false;\n          const errorCode = res.obj[\"errorCode\"];\n          if (errorCode == \"S\") {\n            //if quotation has a warning\n            this.modalRef = Utility.showHTMLWarning(this.bms, items);\n          }\n\n          const policyNumber = res.obj[\"policyNumber\"];\n          this.accidentDetails.quotationNumber = policyNumber;\n\n          const breakdown = res.obj[\"breakdown\"];\n          const receipt = res.obj[\"receipt\"];\n\n          if (\"S\" == mcaTmpPptoMph) {\n            //for generation of quote\n            const message = \"You have successfully generated a quotation - \" + policyNumber;\n            this.modalRef = Utility.showInfo(this.bms, message);\n\n            const coverageList = res.obj[\"coverageList\"];\n            this.populateCoverage(coverageList);\n\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.manageBtn(2);\n          } else {\n            // for issuing the quote\n            this.openPaymentBreakdownModal(receipt, breakdown, false);\n            this.manageBtn(3);\n          }\n        } else {\n          this.modalRef = Utility.showHTMLError(this.bms, items);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  assembleData(mcaTmpPptoMph: string) {\n    this.accidentDetails.mcaTmpPptoMph = mcaTmpPptoMph;\n\n    // includes group policy to accident details DTO\n    this.accidentDetails.groupPolicy = this.groupPolicy;\n    // includes policy holder to accident details DTO\n    this.accidentDetails.policyHolder = this.policyHolder;\n\n    // includes insured individuals to accident details DTO\n    var insured = this.quoteForm.get('insured').value;\n    this.accidentDetails.insuredDetails = insured.length ? insured : [];\n\n    // get product code\n    this.getProductCode();\n\n     // to trigger changes when regenerating quotation\n     this.showCoverage = false;\n     this.showPaymentBreakdown = false;\n  }\n\n  //save policy button\n  savePolicy() {\n    this.assembleData(\"N\");\n\n    this.ais.savePolicy(this.accidentDetails).then(res => {\n      if (res.status) {\n        //clear affecting fields\n        this.changedValues = [];\n\n        var items = this.getErrorItems(res, this.accidentDetails.mcaTmpPptoMph, true);\n        const status = res.obj[\"status\"];\n        if (status) {\n          //duplicating accident details for comparison\n          const deepClone = JSON.parse(JSON.stringify(this.accidentDetails));\n          this.prevAccidentDetails = deepClone;\n\n          this.editMode = false;\n\n          const errorCode = res.obj[\"errorCode\"];\n          const policyNumber = res.obj[\"policyNumber\"];\n          this.accidentDetails.quotationNumber = policyNumber;\n\n          const message = \"You have successfully generated a new quotation: \" + policyNumber;\n          this.modalRef = Utility.showInfo(this.bms, message);\n\n          const breakdown = res.obj[\"breakdown\"];\n          const receipt = res.obj[\"receipt\"];\n          this.populatePaymentBreakdown(breakdown, receipt);\n\n          this.withTechControl = errorCode == 'S';\n          if (this.withTechControl) {\n            //if quotation has a warning\n            if (this.accidentDetails.affecting) {\n              items = [\"Updated quotation number is: \" + policyNumber].concat(items);\n            }\n            this.modalRef = Utility.showHTMLWarning(this.bms, items);\n          } else {\n            const message = \"Policy saved successfully.\";\n            this.modalRef = Utility.showInfo(this.bms, message);\n          }\n          this.editMode = false;\n          this.manageBtn(3);\n        } else {\n          this.modalRef = Utility.showHTMLError(this.bms, items);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  //post policy button\n  postPolicy() {\n    this.assembleData(\"N\");\n\n    if (this.withTechControl) {\n      this.modalRef = Utility.showWarning(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n    } else {\n      this.ais.postPolicy(this.accidentDetails).then(res => {\n        if (res.status) {\n          //clear affecting fields\n          this.changedValues = [];\n\n          var items = this.getErrorItems(res, this.accidentDetails.mcaTmpPptoMph, true);\n          const status = res.obj[\"status\"];\n          const policyNumber = res.obj[\"policyNumber\"];\n          if (status && !Utility.isUndefined(policyNumber)) {\n            this.editMode = false;\n            this.accidentDetails.policyNumber = policyNumber;\n\n            const breakdown = res.obj[\"breakdown\"];\n            const receipt = res.obj[\"receipt\"];\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.openPaymentBreakdownModal(receipt, breakdown, true);\n            this.manageBtn(4);\n          } else {\n            this.manageBtn(5);\n            this.modalRef = Utility.showHTMLError(this.bms, items);\n          }\n        } else {\n          this.manageBtn(5);\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      });\n    }\n  }\n\n}\n","export default \"#quickQouteDetails {\\n  margin-top: 10px;\\n}\\n\\n.accessory-card {\\n  margin-bottom: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdW90YXRpb24tY2FyL3F1b3RhdGlvbi1jYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVvdGF0aW9uLWNhci9xdW90YXRpb24tY2FyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcXVpY2tRb3V0ZURldGFpbHMge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4uYWNjZXNzb3J5LWNhcmQge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuIl19 */\";","import {\n  Component,\n  OnInit,\n  AfterViewChecked,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray,\n  AbstractControl\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  distinctUntilChanged\n} from 'rxjs/operators';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Car\n} from '../../objects/Car';\nimport {\n  GroupPolicy\n} from 'src/app/objects/GroupPolicy';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  CarLOVServices\n} from '../../services/lov/car.service';\nimport {\n  CarUtilityServices\n} from '../../services/car-utility.service';\nimport {\n  CarQuoteServices\n} from '../../services/car-quote.service';\nimport {\n  CarListObject\n} from 'src/app/objects/LOV/carList';\nimport {\n  GroupPolicyListObject\n} from 'src/app/objects/LOV/groupPolicyList';\nimport {\n  AuthenticationService\n} from '../../services/authentication.service';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig\n} from '@angular/material';\nimport {\n  PaymentBreakdownModalComponent\n} from '../payment-breakdown-modal/payment-breakdown-modal.component';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  page\n} from 'src/app/constants/page';\nimport {\n  Globals\n} from 'src/app/utils/global';\nimport {\n  CoverageVariableData\n} from 'src/app/objects/CoverageVariableData';\nimport {\n  CoveragesComponent\n} from '../coverages/coverages.component';\nimport {\n  ReturnDTO\n} from 'src/app/objects/ReturnDTO';\nimport {\n  Accessory\n} from 'src/app/objects/Accessory';\nimport {\n  LTOService\n} from 'src/app/services/lto.service';\nimport {\n  LTODetails\n} from 'src/app/objects/LTODetails';\n\n@Component({\n  selector: 'app-quotation-car',\n  templateUrl: './quotation-car.component.html',\n  styleUrls: ['./quotation-car.component.css']\n})\nexport class QuotationCarComponent implements OnInit, AfterViewChecked {\n  @ViewChild(CoveragesComponent) appCoverage: CoveragesComponent;\n  @ViewChild('proceedModal') proceedModal: TemplateRef < any > ;\n  @ViewChild('validationModal') validationModal: TemplateRef < any > ;\n\n  currentUser = this.auths.currentUserValue;\n  isIssuance: boolean = Globals.getAppType() == \"I\";\n  isLoadQuotation: boolean = Globals.isLoadQuotation;\n  pageLabel: String = 'Quotation';\n  triggerCounter: number = 0;\n  triggerCoverage: number = 0;\n  triggerBreakdown: number = 0;\n\n  carDetails = new Car();\n  prevCarDetails: Car = null;\n  changedValues: any[] = [];\n  changedAccessoryValues: any[] = [];\n\n  hasRoadAssist = false;\n\n  invalidForms: any[] = [];\n  withTechControl = false;\n\n  groupPolicy = new GroupPolicy();\n  policyHolder = new PolicyHolder();\n  secondaryPolicyHolder = new PolicyHolder();\n  assigneePolicyHolder = new PolicyHolder();\n  mortgageePolicyHolder = new PolicyHolder();\n  coverageVariableData = new CoverageVariableData();\n\n  quoteForm: FormGroup;\n  // cForm: FormGroup;\n\n  today: Date = new Date();\n  expiryDateMinDate: Date = moment().add(1, 'years').toDate();\n\n  LOV = new CarListObject();\n  GPLOV = new GroupPolicyListObject();\n\n  showAccessories: boolean = false;\n  showAdditionalInformation: boolean = false;\n  showSubAgent: boolean = false;\n  showCTPL: boolean = false;\n  showPaymentBreakdown: boolean = false;\n  showCoverage: boolean = false;\n  showAssignee: boolean = false;\n  showMortgagee: boolean = false;\n\n  //for payment breakdown\n  paymentBreakdown: any[];\n  paymentReceipt: {};\n\n  //for coverage\n  coverageList: any[];\n  amountList: any[];\n  premiumAmount: any[];\n  coverageAmount: any[];\n  coverageVariable: any[];\n\n  //allow user to edit the form\n  editMode = true;\n\n  //flag if coverage is modified\n  isModifiedCoverage = false;\n  //flag to include covergae\n  includeCoverage = false;\n\n  //flag to show generate btn\n  showGenerateBtnGrp: boolean = true;\n  //flag to show issue btn\n  showIssueQuoteBtnGrp: boolean = false;\n  //flag to show print quote/proceed to issuance\n  showProceedToIssuanceBtnGrp: boolean = false;\n\n  //flat to show issuance generate btn\n  showIssuanceGenerateBtn = true;\n  //flag to show save btn\n  showSaveBtn: boolean = false;\n  //flag to show post btn\n  showPostBtn: boolean = false;\n  //flag to show print btn\n  showPrintBtn: boolean = false;\n  //flag to show new quote and new policy btn\n  showNewPolicyBtn: boolean = false;\n\n  //disable load button\n  disableLoadBtn: boolean = true;\n\n  //modal reference\n  modalRef: BsModalRef;\n  dialogRef: MatDialogRef < TemplateRef < any >> ;\n\n  constructor(\n    private fb: FormBuilder,\n    private cus: CarUtilityServices,\n    private cls: CarLOVServices,\n    private ltos: LTOService,\n    private cqs: CarQuoteServices,\n    private changeDetector: ChangeDetectorRef,\n    private auths: AuthenticationService,\n    private bms: BsModalService,\n    private router: Router,\n    public dialog: MatDialog,\n  ) {\n    // this.createQuoteForm();\n    // this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    this.createQuoteForm();\n    this.setValidations();\n    this.loadInit();\n    if (this.isIssuance) {\n      this.pageLabel = 'Issuance';\n      if (this.isLoadQuotation) {\n        //if loaded from car quotation\n        this.carDetails.quotationNumber = Globals.loadNumber;\n        this.loadQuotation();\n        Globals.setLoadNumber('');\n        Globals.setLoadQuotation(false);\n      }\n    }\n  }\n\n  loadInit() {\n    var _this = this;\n    this.cls.getMakeList().then(res => {\n      _this.LOV.makeLOV = res;\n    });\n\n    this.cls.getColor().then(res => {\n      _this.LOV.colorLOV = res;\n    });\n\n    this.cls.getClassification().then(res => {\n      _this.LOV.classificationLOV = res;\n    });\n\n    this.cls.getCoverageArea().then(res => {\n      _this.LOV.coverageAreaLOV = res;\n    });\n\n    this.cls.getInspectionAssessment().then(res => {\n      _this.LOV.inspectionAssessmentLOV = res;\n    });\n\n    if (this.isIssuance) {\n      var list : any[] = [];\n      this.cus.getSubagents().then(res => {\n        var subAgents = res.obj[\"subAgents\"];\n        subAgents.forEach(subAgent => {\n          var obj = {\n            name: subAgent.nomCompleto + \"(\" + subAgent.tipDocum + \")\",\n            documentCode: subAgent.codDocum,\n            documentType: subAgent.tipDocum,\n            beneficiaryType: 20};\n          list.push(obj);\n        });\n        _this.LOV.subagentLOV = list;\n      });\n\n      this.cls.getMortgageClause().then(res => {\n        _this.LOV.mortgageClauseLOV = res;\n      });\n    }\n\n    this.setDefaultValue();\n  }\n\n  setDefaultValue() {\n    //setting default value\n    this.carDetails.color = 9999; // undeclared\n    this.carDetails.receivedBy = this.currentUser.userName; //TODO\n    //this.carDetails.purchaseDate = this.today; // current today\n    this.carDetails.receivedDate = this.today; // current today\n    this.carDetails.effectivityDate = this.today; // current today\n    this.carDetails.automaticAuth = \"N\";\n    //additional policy information\n    this.carDetails.cbPolicyOnlyDriver = true;\n    this.carDetails.cbPolicyOwner = true;\n  }\n\n  createQuoteForm() {\n    this.quoteForm = this.fb.group({\n      quotationNumber: [null],\n      //risk details\n      make: ['', Validators.required],\n      model: ['', Validators.required],\n      vehicleType: ['', Validators.required],\n      modelYear: ['', Validators.required],\n      subModel: ['', Validators.required],\n      typeOfUse: ['', Validators.required],\n      subline: ['', Validators.required],\n      vehicleValue: ['', Validators.required],\n      //vehicle information\n      color: ['', Validators.required],\n      areaOfUsage: ['', Validators.required],\n      conductionNumber: ['', Validators.required, this.validateConductionNumber.bind(this)],\n      plateNumber: ['', Validators.required, this.validatePlateNumber.bind(this)],\n      serialNumber: ['', Validators.required],\n      engineNumber: ['', Validators.required],\n      // mvFileNumber: this.isIssuance ? ['', Validators.required] : [null],\n      mvFileNumber: [null],\n      purchaseDate: [null],\n      receivedBy: ['', Validators.required],\n      receivedDate: ['', Validators.required],\n\n      //CTPL\n      automaticAuth: {\n        value: null,\n        disabled: true\n      },\n      registrationType: [null],\n      mvType: [null],\n      cocNumber: [null],\n      cbIsNotRequiredAuthNumber: [null],\n      authNumber: [null],\n\n      //accessories\n      accessories: this.fb.array([]),\n\n      effectivityDate: ['', Validators.required],\n      expiryDate: ['', Validators.required],\n      //additional policy information\n      customRiskName: [null],\n      seatingCapacity: [null],\n      weight: [null],\n      displacement: [null],\n      classification: [null],\n      coverageArea: [null],\n      assuredsCoinsuranceShare: ['', Validators.max(100)],\n      cbWaivedMinPremium: [null],\n      cbPrepaidPremium: [null],\n      cbGlassEtchingEntitled: [null],\n      glassEtchingAvailmentDate: [null],\n      existingDamages: [null],\n      inspectionAssessment: [null],\n      //additional policy information for issuance\n      cbPolicyOnlyDriver: [null],\n      cbPolicyOwner:  [null],\n      cbHasAssignee: [null],\n      cbVehicleMortgaged: [null],\n      mortgageClause: [null],\n\n      //product data\n      paymentMethod: ['', Validators.required],\n      product: ['', Validators.required],\n      //subagent\n      subAgents: [null],\n    });\n  }\n\n  async validateConductionNumber(control: AbstractControl) {\n    if (!Utility.isUndefined(control.value)) {\n      //trigger after 5 characters\n      if (control.value.length >= 5) {\n        this.carDetails.conductionNumber = control.value;\n        return this.cus.validateConductionNumberFormat(this.carDetails).then(res => {\n          return res.status && res.obj[\"valid\"] ? null : {\n            invalidConductionNumber: true\n          };\n        });\n      }\n    }\n  }\n\n  async validatePlateNumber(control: AbstractControl) {\n    if (!Utility.isUndefined(control.value)) {\n      //trigger after 5 characters\n      if (control.value.length >= 5) {\n        this.carDetails.plateNumber = control.value;\n        return this.cus.validatePlateNumberFormat(this.carDetails).then(res => {\n          return res.status && res.obj[\"valid\"] ? null : {\n            invalidPlateNumber: true\n          };\n        });\n      }\n    }\n  }\n\n  loadQuotation() {\n    this.cqs.loadQuotation(this.carDetails.quotationNumber).then(res => {\n      if (res.status) {\n        this.manageBtn(2);\n        const variableData = res.obj[\"variableData\"] as any[];\n        variableData.forEach(v => {\n          const code = v.codCampo;\n          const value: string = v.valCampo;\n          let valueInt: number = undefined;\n  \n          try {\n            valueInt = parseInt(value);\n          } catch (e) {\n            // do nothing\n          }\n  \n          switch (code) {\n            //risk details\n            case \"COD_MARCA\": {\n              this.carDetails.make = valueInt;\n              break;\n            }\n            case \"COD_MODELO\": {\n              this.carDetails.model = valueInt;\n              break;\n            }\n            case \"COD_TIP_VEHI\": {\n              this.carDetails.vehicleType = valueInt;\n              break;\n            }\n            case \"ANIO_SUB_MODELO\": {\n              this.carDetails.modelYear = value;\n              break;\n            }\n            case \"COD_SUB_MODELO\": {\n              this.carDetails.subModel = valueInt;\n              break;\n            }\n            case \"COD_USO_VEHI\": {\n              this.carDetails.typeOfUse = valueInt;\n              break;\n            }\n            case \"VAL_SUB_MODELO\": {\n              this.carDetails.vehicleValue = valueInt;\n              break;\n            }\n  \n            //vehicle information\n            case \"COD_COLOR\": {\n              this.carDetails.color = valueInt;\n              break;\n            }\n            case \"COD_AREA_USAGE\": {\n              this.carDetails.areaOfUsage = valueInt;\n              break;\n            }\n            case \"NUM_CONDUCTION\": {\n              this.carDetails.conductionNumber = value;\n              break;\n            }\n            case \"NUM_MATRICULA\": {\n              this.carDetails.plateNumber = value;\n              break;\n            }\n            case \"NUM_SERIAL\": {\n              this.carDetails.serialNumber = value;\n              break;\n            }\n            case \"NUM_MOTOR\": {\n              this.carDetails.engineNumber = value;\n              break;\n            }\n            case \"NUM_MV_FILE\": {\n              this.carDetails.mvFileNumber = value;\n              break;\n            }\n            case \"FEC_PURCHASE\": {\n              this.carDetails.purchaseDate = new Date(value);\n              this.quoteForm.get('purchaseDate').markAsDirty();\n              break;\n            }\n            case \"NOM_RECEIVED_BY\": {\n              this.carDetails.receivedBy = value;\n              break;\n            }\n            case \"FEC_RECEIVED\": {\n              this.carDetails.receivedDate = new Date(value);\n              this.quoteForm.get('receivedDate').markAsDirty();\n              break;\n            }\n            case \"NUM_PLAZAS\": {\n              this.carDetails.seatingCapacity = valueInt;\n              break;\n            }\n            case \"VAL_PESO\": {\n              this.carDetails.weight = value;\n              break;\n            }\n            case \"VAL_CC\": {\n              this.carDetails.displacement = value;\n              break;\n            }\n            case \"TIP_VEHI_PESO\": {\n              this.carDetails.classification = valueInt;\n              break;\n            }\n            case \"COD_AREA_COVER\": {\n              this.carDetails.coverageArea = valueInt;\n              break;\n            }\n            case \"PCT_CLI_COINS\": {\n              this.carDetails.assuredsCoinsuranceShare = value;\n              break;\n            }\n            case \"MCA_WAIVE_MIN_PREM\": {\n              this.carDetails.cbWaivedMinPremium = (value == 'S');\n              break;\n            }\n            case \"MCA_PREPAID_PREM\": {\n              this.carDetails.cbPrepaidPremium = (value == 'S');\n              break;\n            }\n            case \"MCA_GLASS_ETCHING\": {\n              this.carDetails.cbGlassEtchingEntitled = (value == 'S');\n              break;\n            }\n            case \"FEC_GLASS_ETCHING\": {\n              this.carDetails.glassEtchingAvailmentDate = new Date(value);\n              break;\n            }\n            case \"TXT_EXT_DAM_PARTS\": {\n              this.carDetails.existingDamages = value;\n              break;\n            }\n            case \"TIP_EXT_DAM_PARTS\": {\n              this.carDetails.inspectionAssessment = valueInt;\n              break;\n            }\n  \n            //additional policy information for issuance\n            case \"MCA_DRIVER\": {\n              this.carDetails.cbPolicyOnlyDriver = (value == 'S');\n              break;\n            }\n            case \"MCA_OWNER\": {\n              this.carDetails.cbPolicyOwner = (value == 'S');\n              break;\n            }\n            case \"MCA_ASSIGNEE\": {\n              this.carDetails.cbHasAssignee = (value == 'S');\n              break;\n            }\n            case \"MCA_MORTGAGED\": {\n              this.carDetails.cbVehicleMortgaged = (value == 'S');\n              break;\n            }\n            case \"TIP_MORT_CLAUSE\": {\n              this.carDetails.mortgageClause = valueInt;\n              break;\n            }\n\n            case \"MCA_AUTO_REGISTRO\": {\n              this.carDetails.automaticAuth = value;\n              break;\n            }\n            case \"TIP_COCAF_MV\": {\n              this.carDetails.mvType = value;\n              break;\n            }\n            case \"TIP_COCAF_REGISTRATION\": {\n              this.carDetails.registrationType = value;\n              break;\n            }\n            case \"NUM_COC\": {\n              this.carDetails.cocNumber = value;\n              break;\n            }\n            case \"NUM_COC_AUTH\": {\n              this.carDetails.authNumber = value;\n              break;\n            }\n  \n            case \"COD_MODALIDAD\": {\n              this.carDetails.productList = valueInt;\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n  \n        const alternative = res.obj[\"alternative\"] as any[];\n        alternative.forEach(a => {\n          const code = a.codCampo;\n          const value: string = a.valCampo;\n          const text: string = a.txtCampo;\n  \n          switch (code) {\n            //risk details\n            case \"TIP_ASEG_SEP_LOV\": {\n              this.carDetails.secondaryPolicyHolderSeparator = text;\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n  \n        const generalInfo = res.obj[\"generalInfo\"];\n        this.carDetails.subline = generalInfo.codRamo;\n        // this.carDetails.sublineEffectivityDate = Utility.formatDate(new Date(generalInfo.fecValidez), \"DDMMYYYY\");\n        this.carDetails.sublineEffectivityDate = res.obj[\"sublineEffectivityDate\"];\n  \n        this.groupPolicy = new GroupPolicy;\n        this.groupPolicy.agentCode = generalInfo.codAgt;\n        if (!Utility.isUndefined(generalInfo.numPolizaGrupo)) {\n          this.groupPolicy.groupPolicy = parseInt(generalInfo.numPolizaGrupo);\n        }\n        if (!Utility.isUndefined(generalInfo.numContrato)) {\n          this.groupPolicy.contract = parseInt(generalInfo.numContrato);\n        }\n        if (!Utility.isUndefined(generalInfo.numSubcontrato)) {\n          this.groupPolicy.subContract = parseInt(generalInfo.numSubcontrato);\n        }\n        this.groupPolicy.commercialStructure = generalInfo.codNivel3;\n        this.carDetails.groupPolicy = this.groupPolicy;\n  \n        // this.carDetails.effectivityDate = new Date(generalInfo.fecEfecPoliza);\n        this.quoteForm.get('effectivityDate').setValue(new Date(generalInfo.fecEfecPoliza), {emitEvent:false});\n        // this.carDetails.expiryDate = new Date(generalInfo.fecVctoPoliza);\n        this.quoteForm.get('expiryDate').setValue(new Date(generalInfo.fecVctoPoliza), {emitEvent:false});\n  \n        const docType = generalInfo.tipDocum;\n        const docCode = generalInfo.codDocum;\n        // preventing generic document type and code\n        if (\"MVO\" != docType && !docCode.startsWith(\"MAPFREXX\")) {\n          this.policyHolder.documentType = docType;\n          this.policyHolder.documentCode = docCode;\n          this.policyHolder.isExisting = true;\n        }\n  \n        this.carDetails.paymentMethod = generalInfo.codFraccPago;\n\n        const beneficiary = res.obj[\"beneficiary\"];\n        const subAgentList = res.obj[\"subAgentList\"];\n        var subAgents : any[] = [];\n        if (beneficiary.length) {\n          beneficiary.forEach((ben: any) => {\n            if (ben.tipBenef == 1) {\n              this.secondaryPolicyHolder.documentCode = ben.codDocum;\n              this.secondaryPolicyHolder.documentType = ben.tipDocum;\n              this.secondaryPolicyHolder.isExisting = true;\n            } else if (ben.tipBenef == 27) {\n              this.showAssignee = true;\n              this.assigneePolicyHolder.documentCode = ben.codDocum;\n              this.assigneePolicyHolder.documentType = ben.tipDocum;\n              this.assigneePolicyHolder.isExisting = true;\n            } else if (ben.tipBenef == 8) {\n              this.showMortgagee = true;\n              this.mortgageePolicyHolder.documentCode = ben.codDocum;\n              this.mortgageePolicyHolder.documentType = ben.tipDocum;\n              this.mortgageePolicyHolder.isExisting = true;\n            } else if (ben.tipBenef == 20) {\n              var name = \"\";\n              subAgentList.forEach(sa => {\n                if (sa.tipDocum == ben.tipDocum && sa.codDocum == ben.codDocum) {\n                  name = sa.nomCompleto + \"(\" + sa.tipDocum + \")\";\n                }\n              });\n\n              var obj = {name: name, documentCode: ben.codDocum, documentType: ben.tipDocum, beneficiaryType: 20};\n              subAgents.push(obj);\n            }\n          });\n\n          if (subAgents.length > 0) {\n            this.carDetails.subAgents = subAgents;\n          }\n        }\n  \n        this.loadLOVs();\n  \n        const accessories = res.obj[\"accessories\"];\n        if (accessories.length) {\n          //dispalys the accessory panel \n          this.showAccessories = true;\n          //removes all accessories\n          this.removeAccessories();\n          var temp: any[] = [];\n          accessories.forEach((acc: any) => {\n            temp.push({\n              accessory: acc.codAccesorio\n            });\n            this.accessory().push(this.loadAccessory(acc.codAccesorio, acc.nomAgrupAccesorio, acc.impAccesorio, acc.txtAccesorio));\n          });\n          const _this = this;\n          this.cls.getAccessoryList(this.carDetails).then(res => {\n            _this.LOV.accessoryListLOV = res;\n            this.disableAccessory(temp);\n          });\n  \n          var accessoriesForm = this.quoteForm.get('accessories').value;\n          this.carDetails.accessories = accessoriesForm;\n        } else {\n          const _this = this;\n          this.cls.getAccessoryList(this.carDetails).then(res => {\n            _this.LOV.accessoryListLOV = res;\n          });\n          this.carDetails.accessories = [];\n        }\n  \n        this.cqs.getCoverageByProduct(this.carDetails).then(res1 => {\n          const coverageList = res1.obj[\"coverageList\"];\n          const amountList = res1.obj[\"amountList\"];\n          const premiumAmount = res.obj[\"premiumAmount\"];\n          const coverageVariable = res.obj[\"coverageVariable\"];\n          const coverageAmount = res.obj[\"coverageAmount\"];\n  \n          this.populateCoverage(coverageList, amountList, premiumAmount, coverageAmount, coverageVariable);\n        });\n  \n        //breakdwon\n        const breakdown = res.obj[\"breakdown\"];\n        const receipt = res.obj[\"receipt\"];\n        this.populatePaymentBreakdown(breakdown, receipt);\n  \n        //cloning details from load quotation\n        const deepClone = JSON.parse(JSON.stringify(this.carDetails));\n        this.prevCarDetails = deepClone;\n\n        //prevent to post policy if quotation has technical control\n        const technicalControl = res.obj[\"technicalControl\"];\n        if (generalInfo.mcaProvisional == \"S\" && technicalControl.length > 0) {\n          this.withTechControl = true;\n          this.editMode = false;\n          this.modalRef = Utility.showError(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.obj['message']);\n        this.carDetails.quotationNumber = \"\";\n      }\n    }).finally(() => {\n      //trigger child component load quotation function\n      this.triggerCounter = this.triggerCounter + 1;\n    });\n  }\n\n  //loading of all LOV's for load quotation\n  loadLOVs() {\n    var _this = this;\n    //loading risk information\n    this.quoteForm.get('make').markAsDirty();\n    this.quoteForm.get('model').markAsDirty();\n    this.cls.getModelList(this.carDetails).then(res => {\n      _this.LOV.modelLOV = res;\n    });\n\n    this.quoteForm.get('vehicleType').markAsDirty();\n    this.cls.getVehicleTypeList(this.carDetails).then(res => {\n      _this.LOV.vehicleTypeLOV = res;\n    });\n\n    this.quoteForm.get('modelYear').markAsDirty();\n    this.cls.getModelYearList(this.carDetails).then(res => {\n      _this.LOV.modelYearLOV = res;\n    });\n\n    this.quoteForm.get('subModel').markAsDirty();\n    this.cls.getSubModelList(this.carDetails).then(res => {\n      _this.LOV.subModelLOV = res;\n    });\n\n    this.quoteForm.get('typeOfUse').markAsDirty();\n    this.cls.getTypeOfUseList(this.carDetails).then(res => {\n      _this.LOV.typeOfUseLOV = res;\n    });\n\n    this.quoteForm.get('subline').markAsDirty();\n    // var qqDetails = new QQCar;\n    // qqDetails.vehicleType = this.carDetails.vehicleType;\n    // qqDetails.typeOfUse = this.carDetails.typeOfUse;\n    // this.cus.getSubline(qqDetails).then(res => {\n    this.cus.getSubline(this.carDetails).then(res => {\n      _this.LOV.sublineLOV = res.obj[\"list\"];\n    });\n\n    //loading vehicle information\n    this.quoteForm.get('areaOfUsage').markAsDirty();\n    this.cls.getAreaOfUsage(this.carDetails).then(res => {\n      _this.LOV.areaOfUsageLOV = res;\n    });\n\n    this.cls.getRegistrationType().then(res => {\n      _this.LOV.registrationTypeLOV = res;\n    });\n\n    this.cls.getMVType().then(res => {\n      _this.LOV.mvTypeLOV = res;\n    });\n\n    this.quoteForm.get('paymentMethod').markAsDirty();\n    this.cls.getPaymentPlan(this.carDetails).then(res => {\n      _this.LOV.paymentMethodLOV = res;\n    });\n\n    this.quoteForm.get('product').markAsDirty();\n    this.cls.getProduct(this.carDetails).then(res => {\n      let avalidableProducts = [];\n      res.forEach((e) => {\n        //removing not MSO products\n        if (e.COD_MODALIDAD != 10011 && e.COD_MODALIDAD != 10010) {\n          avalidableProducts.push(e);\n        }\n      });\n      _this.LOV.productListLOV = avalidableProducts;\n    });\n  }\n\n  setValidations() {\n    var conductionNumber = this.quoteForm.get('conductionNumber');\n    var plateNumber = this.quoteForm.get('plateNumber');\n    var effectivityDate = this.quoteForm.get('effectivityDate');\n    var vehicleType = this.quoteForm.get('vehicleType');\n    var quotationNumber = this.quoteForm.get('quotationNumber');\n    var cbVehicleMortgaged = this.quoteForm.get('cbVehicleMortgaged');\n    var mortgageClause = this.quoteForm.get('mortgageClause');\n\n    // if vehicle type is trailer, remove plate number required validation\n    vehicleType.valueChanges.pipe(distinctUntilChanged()).subscribe(type => {\n      if (type == 30) {\n        Utility.updateValidator(plateNumber, null);\n      }\n    });\n\n    //if has conduction number, plate number is not required / if subline is motorcycle\n    conductionNumber.valueChanges.pipe(distinctUntilChanged()).subscribe(number => {\n      Utility.updateValidator(plateNumber, !Utility.isUndefined(number) ? null : vehicleType.value == 30 ? null : this.carDetails.subline === 120 ? null : Validators.required);\n    });\n\n    //if has plate number, conduction number is not required / if subline is motorcycle\n    plateNumber.valueChanges.pipe(distinctUntilChanged()).subscribe(number => {\n      Utility.updateValidator(conductionNumber, !Utility.isUndefined(number) ? null : this.carDetails.subline === 120 ? null : Validators.required);\n    });\n\n    effectivityDate.valueChanges.pipe(distinctUntilChanged()).subscribe(date => {\n      this.carDetails.expiryDate = moment(date).add(1, 'years').toDate();\n      this.expiryDateMinDate = this.carDetails.expiryDate;\n    });\n\n    quotationNumber.valueChanges.subscribe(number => {\n      this.disableLoadBtn = Utility.isUndefined(number);\n    });\n\n    cbVehicleMortgaged.valueChanges.subscribe(mortgaged => {\n      Utility.updateValidator(mortgageClause, mortgaged ? Validators.required : null);\n      this.carDetails.mortgageClause = mortgaged ? 1 : null;\n    });\n  }\n\n  accessory(): FormArray {\n    return this.quoteForm.get(\"accessories\") as FormArray;\n  }\n\n  newAccessory(): FormGroup {\n    return this.fb.group({\n      accessory: ['', Validators.required],\n      accessoryType: ['', Validators.required],\n      price: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n  }\n\n  loadAccessory(accessory: number, accessoryType: string, price: number, description: string): FormGroup {\n    return this.fb.group({\n      accessory: [accessory, Validators.required],\n      accessoryType: [accessoryType, Validators.required],\n      price: [price, Validators.required],\n      description: [description, Validators.required]\n    });\n  }\n\n  addAccessory() {\n    this.disableAccessory();\n    this.accessory().push(this.newAccessory());\n  }\n\n  removeAccessory(index: number) {\n    this.accessory().removeAt(index);\n    this.disableAccessory();\n  }\n\n  disableAccessory(acc ? : any[]) {\n    var accessories = Utility.isUndefined(acc) ? this.quoteForm.get('accessories').value : acc;\n    if (accessories.length > 0) {\n      var temp = [];\n      accessories.forEach(accessory => {\n        temp.push(accessory.accessory);\n      });\n      this.LOV.accessoryListLOV.forEach(accessory => {\n        accessory.disabled = temp.indexOf(accessory.COD_ACCESORIO) !== -1;\n      });\n    }\n  }\n\n  removeAccessories() {\n    // removing all accessories\n    var accessories = this.quoteForm.get('accessories').value;\n    if (accessories.length > 0) {\n      // loop until all accessories removed\n      this.accessory().removeAt(0);\n      this.removeAccessories();\n    }\n  }\n\n  clearRiskDetails(level: number, type ? : boolean) {\n    //if user changes car make\n    if (level <= 1) {\n      this.LOV.modelLOV = [];\n      this.carDetails.model = undefined;\n      this.quoteForm.get('model').reset();\n    }\n    //if user changes car model\n    if (level <= 2) {\n      this.LOV.vehicleTypeLOV = [];\n      this.carDetails.vehicleType = undefined;\n      this.quoteForm.get('vehicleType').reset();\n    }\n    //if user changes vehicle type\n    if (level <= 3) {\n      this.LOV.modelYearLOV = [];\n      this.carDetails.modelYear = undefined;\n      this.quoteForm.get('modelYear').reset();\n    }\n    //if user changes car model year\n    if (level <= 4) {\n      this.LOV.subModelLOV = [];\n      this.LOV.typeOfUseLOV = [];\n      this.carDetails.subModel = undefined;\n      this.carDetails.typeOfUse = undefined;\n      this.quoteForm.get('subModel').reset();\n      this.quoteForm.get('typeOfUse').reset();\n    }\n    //if user changes car sub model or type of use\n    if (level <= 5) {\n      this.removeAccessories();\n      if (level == 5) {\n        if (type) {\n          //if user changes type of use\n          this.LOV.sublineLOV = [];\n          this.carDetails.subline = undefined;\n          this.quoteForm.get('subline').reset();\n        } else {\n          //if user changes sub model\n          this.carDetails.vehicleValue = undefined;\n          this.quoteForm.get('vehicleValue').reset();\n        }\n      } else {\n        //if level is below 5, subline and vehicle value will reset\n        this.LOV.sublineLOV = [];\n        this.carDetails.subline = undefined;\n        this.carDetails.vehicleValue = undefined;\n        this.quoteForm.get('subline').reset();\n        this.quoteForm.get('vehicleValue').reset();\n      }\n    }\n  }\n\n  makeOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(1);\n    this.carDetails.make = _carDetails.make;\n\n    var _this = this;\n    this.cls.getModelList(this.carDetails).then(res => {\n      _this.LOV.modelLOV = res;\n    });\n  }\n\n  modelOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(2);\n    this.carDetails.make = _carDetails.make;\n\n    var _this = this;\n    this.cls.getVehicleTypeList(this.carDetails).then(res => {\n      _this.LOV.vehicleTypeLOV = res;\n    });\n  }\n\n  vehicleTypeOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(3);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n\n    if (this.carDetails.vehicleType > 0) {\n      var _this = this;\n      this.cls.getModelYearList(this.carDetails).then(res => {\n        _this.LOV.modelYearLOV = res;\n      });\n    }\n  }\n\n  modelYearOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(4);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n    this.carDetails.vehicleType = _carDetails.vehicleType;\n\n    if (this.carDetails.modelYear != '') {\n      var _this = this;\n      this.cls.getSubModelList(this.carDetails).then(res => {\n        _this.LOV.subModelLOV = res;\n      });\n      this.cls.getTypeOfUseList(this.carDetails).then(res => {\n        _this.LOV.typeOfUseLOV = res;\n      });\n    }\n  }\n\n  subModelOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(5, false);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n    this.carDetails.vehicleType = _carDetails.vehicleType;\n    this.carDetails.modelYear = _carDetails.modelYear;\n    this.carDetails.typeOfUse = _carDetails.typeOfUse;\n    this.carDetails.subline = _carDetails.subline;\n    this.getVehicleValue();\n  }\n\n  typeOfUseOnchange() {\n    const _carDetails = this.carDetails;\n    this.clearRiskDetails(5, true);\n    this.carDetails.make = _carDetails.make;\n    this.carDetails.model = _carDetails.model;\n    this.carDetails.vehicleType = _carDetails.vehicleType;\n    this.carDetails.modelYear = _carDetails.modelYear;\n    this.carDetails.subModel = _carDetails.subModel;\n    this.carDetails.vehicleValue = _carDetails.vehicleValue;\n    this.getSubline();\n  }\n\n  getVehicleValue() {\n    const _this = this;\n    // var qqDetails = new QQCar;\n    // qqDetails.make = this.carDetails.make;\n    // qqDetails.model = this.carDetails.model;\n    // qqDetails.subModel = this.carDetails.subModel;\n    // qqDetails.modelYear = this.carDetails.modelYear;\n    // this.cus.getFMV(qqDetails).then(res => {\n      this.cus.getFMV(this.carDetails).then(res => {\n      _this.carDetails.vehicleValue = res.obj[\"fmv\"];\n    });\n  }\n\n  getSubline() {\n    const _this = this;\n    // var qqDetails = new QQCar;\n    // qqDetails.vehicleType = this.carDetails.vehicleType;\n    // qqDetails.typeOfUse = this.carDetails.typeOfUse;\n    // this.cus.getSubline(qqDetails).then(res => {\n    this.cus.getSubline(this.carDetails).then(res => {\n      _this.LOV.sublineLOV = res.obj[\"list\"];\n    });\n  }\n\n  sublineOnchange(event: any) {\n    var options = event.target.options;\n    if (options.length) {\n      //effectivity date is based on selected subline\n      var selectedIndex = event.target.options.selectedIndex;\n      var effectivityDate = event.target.options[selectedIndex].dataset.sublinedate;\n\n      //effectivity date change format\n      var d = moment(effectivityDate, 'DDMMYYYY').format('MMDDYYYY');\n      this.carDetails.sublineEffectivityDate = d.toString();\n    }\n\n    const _this = this;\n    this.cls.getAreaOfUsage(this.carDetails).then(res => {\n      _this.LOV.areaOfUsageLOV = res;\n    });\n\n    this.cls.getAccessoryList(this.carDetails).then(res => {\n      _this.LOV.accessoryListLOV = res;\n    });\n    this.removeAccessories();\n\n    this.cls.getRegistrationType().then(res => {\n      _this.LOV.registrationTypeLOV = res;\n    });\n\n    this.cls.getMVType().then(res => {\n      _this.LOV.mvTypeLOV = res;\n    });\n\n    this.cls.getPaymentPlan(this.carDetails).then(res => {\n      _this.LOV.paymentMethodLOV = res;\n    });\n\n    this.cls.getProduct(this.carDetails).then(res => {\n      let avalidableProducts = [];\n      res.forEach((e) => {\n        //removing not MSO products\n        if (e.COD_MODALIDAD != 10011 && e.COD_MODALIDAD != 10010) {\n          avalidableProducts.push(e);\n        }\n      });\n      _this.LOV.productListLOV = avalidableProducts;\n    });\n\n    this.cus.getPreAdditionalInfo(this.carDetails).then(res => {\n      if (res.status) {\n        _this.carDetails.weight = res.obj[\"weight\"];\n        _this.carDetails.displacement = res.obj[\"displacement\"];\n        _this.carDetails.customRiskName = res.obj[\"customRiskName\"];\n      }\n    });\n\n    // plate number and conduction number not required if subline is motorcycle(120)\n    Utility.updateValidator(this.quoteForm.get('plateNumber'), this.carDetails.subline === 120 ? null : Validators.required);\n    Utility.updateValidator(this.quoteForm.get('conductionNumber'), this.carDetails.subline === 120 ? null : Validators.required);\n  }\n\n  accessoryOnchange(event: any, index: number) {\n    this.disableAccessory();\n    var options = event.target.options;\n    if (options.length) {\n      var selectedIndex = event.target.options.selectedIndex;\n      var price = event.target.options[selectedIndex].dataset.price;\n      var type = event.target.options[selectedIndex].dataset.type;\n\n      this.accessory().at(index).get('accessoryType').setValue(type == 'A' ? 'Additional' : type == 'B' ? 'Built-In' : 'Free');\n      this.accessory().at(index).get('price').setValue(price);\n    }\n  }\n\n  cbIsNotRequiredAuthNumberChange() {\n    var authNumber = this.quoteForm.get('authNumber');\n    Utility.updateValidator(authNumber, this.carDetails.cbIsNotRequiredAuthNumber ? null : Validators.required);\n  }\n\n  authCOCRegistration() {\n    const lto : LTODetails = new LTODetails; \n\n    var clientName = this.policyHolder.firstName + ' ' + this.policyHolder.lastName;\n    var tinNumber = '000-000-000-000';\n    if (this.policyHolder.documentType === 'TIN') {\n      tinNumber = this.policyHolder.documentCode;\n    }\n\n    lto.assuredName = clientName;\n    lto.assuredTin = tinNumber;\n\n    lto.engineNumber = this.carDetails.engineNumber;\n    lto.chassisNumber = this.carDetails.serialNumber;\n    lto.mvFileNumber = this.carDetails.mvFileNumber;\n    lto.plateNumber = this.carDetails.plateNumber;\n    lto.cocNumber = this.carDetails.cocNumber;\n    lto.inceptionDate = this.carDetails.effectivityDate;\n    lto.expiryDate = this.carDetails.expiryDate;\n    lto.regType = this.carDetails.registrationType;\n    lto.subline = this.carDetails.subline;\n    lto.vehicleType = this.carDetails.vehicleType;\n    lto.typeOfUse = this.carDetails.typeOfUse;\n    lto.mvType = this.carDetails.mvType;\n    lto.classification = this.carDetails.classification;\n\n    this.ltos.authenticateCOCRegistration(lto).then(res => {\n      if (res.status) {\n          var registrationMsg = res.obj['registrationMessage'];\n          var verificationMsg = res.obj['verificationMessage'];\n          \n          var authNumber = registrationMsg.authNo;\n          var registrationErrorMsg = registrationMsg.errorMessage;\n          var verificationErrorMsg = verificationMsg.errorMessage;\n\n          if (registrationErrorMsg !== null) {\n            this.modalRef = Utility.showError(this.bms, registrationErrorMsg);\n          } else {\n            if (authNumber !== null) {\n              this.carDetails.authNumber = registrationMsg.authNo;\n              if (verificationErrorMsg !== null) {\n                this.modalRef = Utility.showError(this.bms, verificationErrorMsg);\n              }\n            } else {\n              this.modalRef = Utility.showWarning(this.bms, \"Warning! No authentication number returned.\");\n            }\n          }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  populateCoverage(coverageList: any[], amountList: any[], premiumAmount: any[], coverageAmount: any[], coverageVariable: any[]) {\n    this.coverageList = coverageList;\n    this.amountList = amountList;\n    this.premiumAmount = premiumAmount;\n    this.coverageAmount = coverageAmount;\n    this.coverageVariable = coverageVariable;\n    this.showCoverage = true;\n    this.triggerCoverage = this.triggerCoverage + 1;\n    Utility.scroll('coverages');\n  }\n\n  populatePaymentBreakdown(breakdown: any[], receipt: {}) {\n    this.paymentBreakdown = breakdown;\n    this.paymentReceipt = receipt;\n    this.showPaymentBreakdown = true;\n    this.triggerBreakdown = this.triggerBreakdown + 1;\n  }\n\n  scrollTo(id: string) {\n    Utility.scroll(id);\n  }\n\n  test(q: FormGroup, g: FormGroup, c: FormGroup) {\n    let invalid = [];\n\n    invalid = this.findInvalidControls(invalid, q);\n    invalid = this.findInvalidControls(invalid, g);\n    invalid = this.findInvalidControls(invalid, c);\n    alert(invalid);\n  }\n\n  public findInvalidControls(invalid: any[], form: FormGroup) {\n    const controls = form.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n        invalid.push(name);\n      }\n      if (controls[name].pristine) {\n        invalid.push(name);\n      }\n    }\n    return invalid;\n  }\n\n  proceed(type: number) {\n    //if user changes affecting values\n    const hasAffectingAccessories = this.checkAffectingAccessories();\n    const hasChanges = this.changedValues.length != 0 || hasAffectingAccessories;\n    this.includeCoverage = !hasChanges;\n\n    const hasQuotationNumber = !Utility.isUndefined(this.carDetails.quotationNumber);\n    const isTemporaryQuotation = hasQuotationNumber && this.carDetails.quotationNumber.startsWith('999');\n    this.carDetails.affecting = !hasQuotationNumber ||\n      (hasQuotationNumber && isTemporaryQuotation) ||\n      (hasQuotationNumber && !isTemporaryQuotation && hasChanges);\n    if (hasChanges) {\n      this.openProceedModal(type);\n    } else {\n      switch (type) {\n        case 1: {\n          this.issueQuote('S');\n          break;\n        }\n        case 2: {\n          this.issueQuote('N');\n          break;\n        }\n        case 3: {\n          this.savePolicy();\n          break;\n        }\n        default: {\n          this.postPolicy();\n          break;\n        }\n      }\n    }\n  }\n\n  checkAffectingAccessories() {\n    let hasAccessoryChanges = false;\n\n    if (!Utility.isUndefined(this.prevCarDetails)) {\n      this.changedAccessoryValues = [];\n\n      var accessories = this.quoteForm.get('accessories').value;\n      const length = accessories.length;\n      let prevlength = 0;\n      if ('accessories' in this.prevCarDetails) {\n        const prevAccessories = this.prevCarDetails.accessories;\n        prevlength = prevAccessories.length;\n        if (prevlength != length) {\n          if (prevlength > length) {\n            var diff = prevlength - length;\n            var label = diff == 1 ? \" accessory\" : \" accessories\";\n            this.changedAccessoryValues.push(\n              \"Accessory: Deleted \" + diff + label);\n          } else {\n            var diff = length - prevlength;\n            var label = diff == 1 ? \" accessory\" : \" accessories\";\n            this.changedAccessoryValues.push(\n              \"Accessory: Added \" + diff + label);\n          }\n        }\n\n        prevAccessories.forEach((acc : Accessory) => {\n          let matched = false;\n          accessories.forEach((acc1: Accessory) => {\n            if (acc.accessory == acc1.accessory) {\n              matched = true;\n              if (acc.description != acc1.description) {\n                this.changedAccessoryValues.push(\n                  \"Accessory Description: Changed \" + acc.description + \" to \" + acc1.description);\n              }\n              if (acc.price != acc1.price) {\n                this.changedAccessoryValues.push(\n                  \"Accessory Price: Changed \" + acc.price + \" to \" + acc1.price);\n              }\n            }\n          });\n          if (!matched) {\n            this.changedAccessoryValues.push(\n              \"Accessory: Changed Accessory List\");\n          }\n        });\n      }\n      hasAccessoryChanges = this.changedAccessoryValues.length > 0;\n    }\n\n    return hasAccessoryChanges;\n  }\n\n  openProceedModal(type: number): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      generateBtn: type == 1 || type == 2 || type == 3,\n      saveBtn: type == 4\n    };\n\n    this.dialogRef = this.dialog.open(this.proceedModal, dialogConfig);\n  }\n\n  openValidationModal(q: FormGroup, g: FormGroup, c: FormGroup): void {\n    //clear arrays\n    let invalid = [];\n    this.invalidForms = [];\n\n    //list of incorrect label names\n    var formLabels = [{\n        cbOneTripOnly: 'oneTripOnly'\n      },\n      {\n        name: \"client'sName\"\n      }\n    ]\n\n    var quoteArr = Utility.findInvalidControls(q);\n    invalid.push(...quoteArr);\n\n    var groupPolicyArr = Utility.findInvalidControls(g);\n    invalid.push(...groupPolicyArr);\n\n    var policyHolderArr = Utility.findInvalidControls(c);\n    invalid.push(...policyHolderArr);\n\n    invalid.forEach((i) => {\n      formLabels.forEach(f => {\n        var correctLabel = f[i];\n        if (!Utility.isUndefined(correctLabel)) {\n          //replace label\n          i = correctLabel;\n        }\n      });\n\n      let label: string = i.replace(/([A-Z])/g, ' $1').trim();\n      this.invalidForms.push(label.toLowerCase());\n    });\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n\n    this.dialogRef = this.dialog.open(this.validationModal, dialogConfig);\n  }\n\n  openPaymentBreakdownModal(receipt: any, breakdown: any, isPostPolicy: boolean) {\n    let product = \"\";\n    this.LOV.productListLOV.forEach((p) => {\n      if (p.COD_MODALIDAD == this.carDetails.productList) {\n        product = p.NOM_MODALIDAD;\n      }\n    });\n\n    let payment = \"\";\n    this.LOV.paymentMethodLOV.forEach((p) => {\n      if (p.COD_FRACC_PAGO == this.carDetails.paymentMethod) {\n        payment = p.NOM_FRACC_PAGO;\n      }\n    });\n\n    const modalData = {\n      number: isPostPolicy ? this.carDetails.policyNumber : this.carDetails.quotationNumber,\n      product: product,\n      payment: payment,\n      receipt: receipt,\n      breakdown: breakdown,\n      showExchangeRate: false,\n      isPostPolicy: isPostPolicy,\n      line: 'CAR'\n    };\n\n    this.dialog.open(PaymentBreakdownModalComponent, {\n      width: '1000px',\n      data: modalData\n    });\n  }\n\n  manageBtn(opt: number, isModified ? : boolean) {\n    if (opt == 1) {\n      //hides payment breakdown panel\n      this.showPaymentBreakdown = false;\n\n      // flag to edit coverage\n      const modified = !Utility.isUndefined(isModified);\n\n      this.editMode = !modified;\n      this.showCoverage = modified;\n      this.isModifiedCoverage = modified;\n      if (modified) {\n        Utility.scroll('coverages');\n      }\n    }\n\n    if (this.isIssuance) {\n      this.showIssuanceGenerateBtn = (opt == 1);\n      this.showSaveBtn = (opt == 2);\n      this.showPostBtn = (opt == 3);\n      this.showPrintBtn = (opt == 4);\n      this.showNewPolicyBtn = (opt == 5);\n    } else {\n      this.showGenerateBtnGrp = (opt == 1);\n      this.showIssueQuoteBtnGrp = (opt == 2);\n      this.showProceedToIssuanceBtnGrp = (opt == 3);\n    }\n  }\n\n  newQuote() {\n    this.newPage(page.QUO.CAR);\n  }\n\n  newPolicy() {\n    this.newPage(page.ISS.CAR);\n  }\n\n  newPage(page : string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n\n  affecting(key: string, label: string) {\n    if (!Utility.isUndefined(this.carDetails.quotationNumber) && this.prevCarDetails != null) {\n      let prev = this.prevCarDetails[key] == undefined ? \"\" : this.prevCarDetails[key];\n      let curr = this.carDetails[key] == undefined ? \"\" : this.carDetails[key];\n      if (curr instanceof Date) {\n        curr = curr.getMonth() + \"/\" + curr.getDate() + \"/\" + curr.getFullYear();\n        if (!Utility.isUndefined(prev)) {\n          var prevDate = new Date(prev);\n          prev = prevDate.getMonth() + \"/\" + prevDate.getDate() + \"/\" + prevDate.getFullYear();\n        }\n      }\n\n      if (prev != curr) {\n        if (!this.changedValues.includes(label)) {\n          //if changedValues length is greater than 0, request is affecting\n          this.changedValues.push(label);\n        }\n      } else {\n        //remove all occurence\n        this.changedValues = this.changedValues.filter(v => v !== label);\n      }\n    }\n  }\n\n  printQuote() {\n    this.cqs.printQuote(this.carDetails.quotationNumber);\n  }\n\n  printPolicy() {\n    this.cqs.printPolicy(this.carDetails.policyNumber);\n  }\n\n  proceedToIssuance() {\n    this.cqs.proceedToIssuance(this.carDetails.quotationNumber);\n  }\n\n  populateAdditionalInfo(variableData: any[]) {\n    variableData.forEach(v => {\n      const code = v.codCampo;\n      const value: string = v.valCampo;\n      let valueInt: number = undefined;\n\n      try {\n        valueInt = parseInt(value);\n      } catch (e) {\n        // do nothing\n      }\n\n      switch (code) {\n        case \"NUM_PLAZAS\": {\n          this.carDetails.seatingCapacity = valueInt;\n          break;\n        }\n        case \"VAL_PESO\": {\n          this.carDetails.weight = value;\n          break;\n        }\n        case \"VAL_CC\": {\n          this.carDetails.displacement = value;\n          break;\n        }\n        case \"TIP_VEHI_PESO\": {\n          this.carDetails.classification = valueInt;\n          break;\n        }\n        case \"NUM_COC\": {\n          this.carDetails.cocNumber = value;\n          break;\n        }\n\n        default: {\n          // do nothing\n        }\n      }\n    });\n  }\n\n  //generate and issue quote button\n  issueQuote(mcaTmpPptoMph: string) {\n    // S for generation and N for issue quotation\n    this.carDetails.mcaTmpPptoMph = mcaTmpPptoMph;\n    this.carDetails.isModifiedCoverage = this.isModifiedCoverage;\n\n    // includes group policy to car details DTO\n    this.carDetails.groupPolicy = this.groupPolicy;\n    // includes policy holder to car details DTO\n    this.carDetails.policyHolder = this.policyHolder;\n    // includes coverage variable data to car details DTO\n    this.carDetails.coverageVariableData = this.coverageVariableData;\n\n    // includes accessories to car details DTO\n    var accessories = this.quoteForm.get('accessories').value;\n    this.carDetails.accessories = accessories.length ? accessories : [];\n\n    // includes coverages to car details DTO\n    this.carDetails.coverages = [];\n    if (!Utility.isUndefined(this.appCoverage) && (this.carDetails.isModifiedCoverage || this.includeCoverage)) {\n      var coverages = this.appCoverage.cForm.get('coverages').value;\n      this.carDetails.coverages = coverages.length ? coverages : [];\n    }\n\n    // to trigger changes when regenerating quotation\n    this.showPaymentBreakdown = false;\n    this.showCoverage = false;\n\n    this.cqs.getCoverageByProduct(this.carDetails).then(res => {\n      this.cqs.issueQuote(this.carDetails).then(res1 => {\n        if (res1.status) {\n          //clear affecting fields\n          this.changedValues = [];\n\n          const items = this.getErrorItems(res1, mcaTmpPptoMph, false);\n          const status = res1.obj[\"status\"];\n          const coverageAmount = res1.obj[\"coverageAmount\"];\n          if (status && coverageAmount.length) {\n            //duplicating car details for comparison\n            const deepClone = JSON.parse(JSON.stringify(this.carDetails));\n            this.prevCarDetails = deepClone;\n\n            this.editMode = false;\n            this.hasRoadAssist = res1.obj[\"hasRoadAssist\"];\n            const errorCode = res1.obj[\"errorCode\"];\n            if (errorCode == \"S\") {\n              //if quotation has a warning\n              this.modalRef = Utility.showHTMLWarning(this.bms, items);\n            }\n\n            const policyNumber = res1.obj[\"policyNumber\"];\n            this.carDetails.quotationNumber = policyNumber;\n\n            const breakdown = res1.obj[\"breakdown\"];\n            const receipt = res1.obj[\"receipt\"];\n\n            if (\"S\" == mcaTmpPptoMph) {\n              //for generation of quote\n              const message = \"You have successfully generated a quotation - \" + policyNumber;\n              this.modalRef = Utility.showInfo(this.bms, message);\n\n              const coverageList = res.obj[\"coverageList\"];\n              const amountList = res.obj[\"amountList\"];\n              const premiumAmount = res1.obj[\"premiumAmount\"];\n              const coverageVariable = res1.obj[\"coverageVariable\"];\n              const variableData = res1.obj['variableData'];\n\n              this.populateCoverage(coverageList, amountList, premiumAmount, coverageAmount, coverageVariable);\n              this.populateAdditionalInfo(variableData);\n\n              this.isModifiedCoverage = false;\n              this.populatePaymentBreakdown(breakdown, receipt);\n              this.manageBtn(2);\n            } else {\n              // for issuing the quote\n              this.openPaymentBreakdownModal(receipt, breakdown, false);\n              this.manageBtn(3);\n            }\n          } else {\n            this.modalRef = Utility.showHTMLError(this.bms, items);\n          }\n        } else {\n          this.modalRef = Utility.showError(this.bms, res1.message);\n        }\n      });\n    });\n  }\n\n  assembleIssuePolicyData() {\n    // always N for issue policy\n    this.carDetails.mcaTmpPptoMph = \"N\";\n    this.carDetails.isModifiedCoverage = this.isModifiedCoverage;\n\n    // includes group policy to car details DTO\n    this.carDetails.groupPolicy = this.groupPolicy;\n    // includes policy holder to car details DTO\n    this.carDetails.policyHolder = this.policyHolder;\n    // includes secondary policy holder to car details DTO\n    this.carDetails.secondaryPolicyHolder = this.secondaryPolicyHolder;\n    // includes assignee policy holder to car details DTO\n    this.carDetails.assigneePolicyHolder = this.assigneePolicyHolder;\n    // includes mortgagee policy holder to car details DTO\n    this.carDetails.mortgageePolicyHolder = this.mortgageePolicyHolder;\n    // includes coverage variable data to car details DTO\n    this.carDetails.coverageVariableData = this.coverageVariableData;\n\n    // includes accessories to car details DTO\n    var accessories = this.quoteForm.get('accessories').value;\n    this.carDetails.accessories = accessories.length ? accessories : [];\n\n    // includes coverages to car details DTO\n    this.carDetails.coverages = [];\n    if (!Utility.isUndefined(this.appCoverage) && (this.carDetails.isModifiedCoverage || this.includeCoverage)) {\n      var coverages = this.appCoverage.cForm.get('coverages').value;\n      this.carDetails.coverages = coverages.length ? coverages : [];\n    }\n  }\n\n  //getting error or warning items\n  getErrorItems(res1: ReturnDTO, mcaTmpPptoMph: string, isIssuance: boolean) {\n    this.withTechControl = false;\n    const resCoverageAmount = res1.obj[\"coverageAmount\"];\n    const resErrorCode = res1.obj[\"errorCode\"];\n    const resError = res1.obj[\"error\"];\n\n    const coverageAmountIsUndefined = Utility.isUndefined(resCoverageAmount);\n    const isPostPolicy = coverageAmountIsUndefined && Utility.isUndefined(resErrorCode);\n    let items: any[] = isPostPolicy ?\n      [\"Error occured while posting policy. Please contact administration.\"] :\n      [\"Error code is \" + resErrorCode + \" but does not return any error message. Please contact administration.\"];\n\n    if (!Utility.isUndefined(resError)) {\n      const errArr = resError.split(\"~\");\n      if (errArr.length) {\n        var arr = [];\n        errArr.forEach((err: string) => {\n          if (!Utility.isEmpty(err)) {\n            arr.push(err);\n          }\n        });\n\n        const resStatus = res1.obj[\"status\"];\n        if (arr.length) {\n          if (!resStatus && (isPostPolicy || (coverageAmountIsUndefined && !resCoverageAmount.length))) {\n            //has error - can't proceed\n            items = [\"Failed to generate quotation number due to following reason/s:\"].concat(arr);\n          } else {\n            this.withTechControl = true;\n            // has warning - can proceed\n            if (isIssuance) {\n              items = [\"Quotation has technical control due to following reason/s:\"].concat(arr);\n            } else {\n              items = (\"N\" == mcaTmpPptoMph) ? [\"Routed for approval due to following reason/s:\"].concat(arr) : arr;\n            }\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  //save policy button\n  savePolicy() {\n    this.assembleIssuePolicyData();\n\n    // to trigger changes when regenerating quotation\n    this.showCoverage = false;\n    this.showPaymentBreakdown = false;\n\n    this.cqs.getCoverageByProduct(this.carDetails).then(res => {\n      this.cqs.savePolicy(this.carDetails).then(res1 => {\n        if (res1.status) {\n          //clear affecting fields\n          this.changedValues = [];\n\n          var items = this.getErrorItems(res1, this.carDetails.mcaTmpPptoMph, true);\n          const status = res1.obj[\"status\"];\n          const coverageAmount = res1.obj[\"coverageAmount\"];\n          if (status && coverageAmount.length) {\n            //duplicating car details for comparison\n            const deepClone = JSON.parse(JSON.stringify(this.carDetails));\n            this.prevCarDetails = deepClone;\n\n            this.editMode = false;\n\n            this.hasRoadAssist = res1.obj[\"hasRoadAssist\"];\n\n            const errorCode = res1.obj[\"errorCode\"];\n            const policyNumber = res1.obj[\"policyNumber\"];\n            this.carDetails.quotationNumber = policyNumber;\n\n            const message = \"You have successfully generated a new quotation: \" + policyNumber;\n            this.modalRef = Utility.showInfo(this.bms, message);\n\n            const coverageList = res.obj[\"coverageList\"];\n            const amountList = res.obj[\"amountList\"];\n            const premiumAmount = res1.obj[\"premiumAmount\"];\n            const coverageVariable = res1.obj[\"coverageVariable\"];\n\n            this.populateCoverage(coverageList, amountList, premiumAmount, coverageAmount, coverageVariable);\n            this.isModifiedCoverage = false;\n\n            const breakdown = res1.obj[\"breakdown\"];\n            const receipt = res1.obj[\"receipt\"];\n            this.populatePaymentBreakdown(breakdown, receipt);\n\n            this.withTechControl = errorCode == 'S';\n            if (this.withTechControl) {\n              //if quotation has a warning\n              if (this.carDetails.affecting) {\n                items = [\"Updated quotation number is: \" + policyNumber].concat(items);\n              }\n              this.modalRef = Utility.showHTMLWarning(this.bms, items);\n            } else {\n              const message = \"Policy saved successfully.\";\n              this.modalRef = Utility.showInfo(this.bms, message);\n            }\n            this.editMode = false;\n            this.manageBtn(3);\n          } else {\n            this.modalRef = Utility.showHTMLError(this.bms, items);\n          }\n        } else {\n          this.modalRef = Utility.showError(this.bms, res1.message);\n        }\n      });\n    });\n  }\n\n  //post policy button\n  postPolicy() {\n    this.assembleIssuePolicyData();\n\n    // hides coverage and payment breakdown\n    this.showCoverage = false;\n    this.showPaymentBreakdown = false;\n\n    if (this.withTechControl) {\n      this.modalRef = Utility.showWarning(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n    } else {\n      this.cqs.postPolicy(this.carDetails).then(res1 => {\n        if (res1.status) {\n          //clear affecting fields\n          this.changedValues = [];\n\n          var items = this.getErrorItems(res1, this.carDetails.mcaTmpPptoMph, true);\n          const status = res1.obj[\"status\"];\n          const policyNumber = res1.obj[\"policyNumber\"];\n          if (status && !Utility.isUndefined(policyNumber)) {\n            this.editMode = false;\n            this.carDetails.policyNumber = policyNumber;\n\n            this.isModifiedCoverage = false;\n            const breakdown = res1.obj[\"breakdown\"];\n            const receipt = res1.obj[\"receipt\"];\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.openPaymentBreakdownModal(receipt, breakdown, true);\n            this.manageBtn(4);\n          } else {\n            this.manageBtn(5);\n            this.modalRef = Utility.showHTMLError(this.bms, items);\n          }\n        } else {\n          this.manageBtn(5);\n          this.modalRef = Utility.showError(this.bms, res1.message);\n        }\n      });\n    }\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVvdGF0aW9uLWhvbWUvcXVvdGF0aW9uLWhvbWUuY29tcG9uZW50LmNzcyJ9 */\";","import {\n  Component,\n  OnInit,\n  AfterViewChecked,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray\n} from '@angular/forms';\nimport {\n  distinctUntilChanged\n} from 'rxjs/operators';\nimport {\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef\n} from '@angular/material';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport * as moment from 'moment';\nimport {\n  Home\n} from '../../objects/Home';\nimport {\n  GroupPolicy\n} from 'src/app/objects/GroupPolicy';\nimport {\n  HomeListObject\n} from 'src/app/objects/LOV/homeList';\nimport {\n  GroupPolicyListObject\n} from 'src/app/objects/LOV/groupPolicyList';\nimport {\n  HomeLOVServices\n} from '../../services/lov/home.service';\nimport {\n  HomeIssueServices\n} from '../../services/home-issue.service';\nimport {\n  Globals\n} from 'src/app/utils/global';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  page\n} from 'src/app/constants/page';\nimport {\n  ThirdPartyListObject\n} from 'src/app/objects/LOV/thirdPartyList';\nimport {\n  ThirdPartyLOVServices\n} from 'src/app/services/lov/third-party-lov-service';\nimport {\n  PaymentBreakdownModalComponent\n} from '../payment-breakdown-modal/payment-breakdown-modal.component';\nimport {\n  PrintingService\n} from 'src/app/services/printing.service';\nimport {\n  ReturnDTO\n} from 'src/app/objects/ReturnDTO';\nimport {\n  CarLOVServices\n} from 'src/app/services/lov/car.service';\n\n@Component({\n  selector: 'app-quotation-home',\n  templateUrl: './quotation-home.component.html',\n  styleUrls: ['./quotation-home.component.css']\n})\nexport class QuotationHomeComponent implements OnInit, AfterViewChecked {\n  @ViewChild('proceedModal') proceedModal: TemplateRef < any > ;\n  @ViewChild('validationModal') validationModal: TemplateRef < any > ;\n\n  // currentUser = this.auths.currentUserValue;\n  isIssuance: boolean = Globals.getAppType() == \"I\";\n  isLoadQuotation: boolean = Globals.isLoadQuotation;\n  pageLabel: String = 'Quotation';\n  triggerCounter: number = 0;\n  triggerCoverage: number = 0;\n  triggerBreakdown: number = 0;\n  // insuredHeadCount: number = 1;\n\n  homeDetails = new Home();\n  prevHomeDetails: Home = null;\n  changedValues: any[] = [];\n  hasRSChanges: boolean = false;\n  hasRCChanges: boolean = false;\n\n  invalidForms: any[] = [];\n\n  withTechControl = false;\n\n  groupPolicy = new GroupPolicy();\n  policyHolder = new PolicyHolder();\n  secondaryPolicyHolder = new PolicyHolder();\n  mortgageePolicyHolder = new PolicyHolder();\n  homeAddress = new PolicyHolder();\n  quoteForm: FormGroup;\n  minDate: Date = moment().subtract(65, 'years').toDate();\n  maxDate: Date = moment().subtract(18, 'years').toDate();\n\n  today: Date = new Date();\n  expiryDateMinDate: Date = moment().add(1, 'years').toDate();\n\n  showImprovement = false;\n  showRelatedStructure = false;\n  showRelatedContent = false;\n\n  showOtherOccupation = false;\n  showDetails: boolean = false;\n  showSPADetails: boolean = false;\n  showHCBIDetails: boolean = false;\n  showCoverage: boolean = false;\n  showPaymentBreakdown: boolean = false;\n  showMortgagee: boolean = false;\n\n  //for payment breakdown\n  paymentBreakdown: any[];\n  paymentReceipt: {};\n\n  //for coverage\n  coverageList: any[];\n\n  LOV = new HomeListObject();\n  GPLOV = new GroupPolicyListObject();\n  TPLOV = new ThirdPartyListObject();\n\n  //allow user to edit the form\n  editMode = true;\n\n  //flag to show generate btn\n  showGenerateBtn: boolean = true;\n  //flag to show issue btn\n  showIssueQuoteBtn: boolean = false;\n  //flag to show print quote/proceed to issuance\n  showProceedToIssuanceBtn: boolean = false;\n\n  //flat to show issuance generate btn\n  showIssuanceGenerateBtn = true;\n  //flag to show save btn\n  showSaveBtn: boolean = false;\n  //flag to show post btn\n  showPostBtn: boolean = false;\n  //flag to show print btn\n  showPrintBtn: boolean = false;\n  //flag to show new quote and new policy btn\n  showNewPolicyBtn: boolean = false;\n  //flag to show rate percentage panel\n  showRatePercentage: boolean = false;\n\n  //disable load button\n  disableLoadBtn: boolean = true;\n\n  //modal reference\n  modalRef: BsModalRef;\n  dialogRef: MatDialogRef < TemplateRef < any >> ;\n\n  constructor(\n    private fb: FormBuilder,\n    private hls: HomeLOVServices,\n    private changeDetector: ChangeDetectorRef,\n    private router: Router,\n    private tpls: ThirdPartyLOVServices,\n    private his: HomeIssueServices,\n    private ps: PrintingService,\n    private bms: BsModalService,\n    private cls: CarLOVServices,\n    public dialog: MatDialog,\n  ) {\n    this.createQuoteForm();\n    this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    this.loadInit();\n    if (this.isIssuance) {\n      this.pageLabel = 'Issuance';\n      this.editMode = false;\n      if (this.isLoadQuotation) {\n        //if loaded from home quotation\n        this.editMode = true;\n        this.homeDetails.quotationNumber = Globals.loadNumber;\n        this.loadQuotation();\n        Globals.setLoadNumber('');\n        Globals.setLoadQuotation(false);\n      }\n    }\n  }\n\n  createQuoteForm() {\n    this.quoteForm = this.fb.group({\n      quotationNumber: [null],\n      subline: ['', Validators.required],\n      currency: ['', Validators.required],\n\n      district: this.isIssuance ? ['', Validators.required] : [null],\n      blockNumber: this.isIssuance ? ['', Validators.required] : [null],\n      buildingNumber: [null],\n      subdivision: [null],\n      buildingName: [null],\n      streetName: [null],\n      barangay: [null],\n      region: ['', Validators.required],\n      province: ['', Validators.required],\n      city: ['', Validators.required],\n      \n      //building / content details\n      buildingCapital: ['', Validators.required],\n      contentValue: [null],\n      buildingContent: [null],\n\n      constructionOfBuilding: ['', Validators.required],\n      occupancyOfBuilding: ['', Validators.required],\n      front: ['', Validators.required],\n      right: ['', Validators.required],\n      left: ['', Validators.required],\n      rear: ['', Validators.required],\n      improvement: ['', Validators.min(1)],\n      relatedStructure: this.fb.array([]),\n      relatedContent: this.fb.array([]),\n\n      crestaZone: [null],\n      zipCode: this.isIssuance ? ['', Validators.required] : [null],\n      cbMortgagee: [null],\n\n      warrantedNoLoss: [null],\n\n      ratePercentage: this.isIssuance ? ['', Validators.required] : [null],\n\n      //general information\n      effectivityDate: ['', Validators.required],\n      expiryDate: ['', Validators.required],\n      //product data\n      paymentMethod: ['', Validators.required],\n      product: ['', Validators.required],\n    });\n  }\n\n  loadQuotation() {\n    this.his.loadQuotation(this.homeDetails.quotationNumber).then(res => {\n      if (res.status) {\n        this.showRatePercentage = true;\n        this.editMode = true;\n\n        this.manageBtn(2);\n        const variableData = res.obj[\"variableData\"] as any[];\n        variableData.forEach(v => {\n          const code = v.codCampo;\n          const value: string = v.valCampo;\n          let valueInt: number = undefined;\n          let valueFloat: number = undefined;\n  \n          try {\n            valueInt = parseInt(value);\n          } catch (e) {\n            // do nothing\n          }\n\n          try {\n            valueFloat = parseFloat(value);\n          } catch (e) {\n            // do nothing\n          }\n  \n          switch (code) {\n            case \"COD_DISTRICT\": {\n              this.homeDetails.district = value;\n              break;\n            }\n            case \"NUM_BLOCK_DISTRICT\": {\n              this.homeDetails.blockNumber = value;\n              break;\n            }\n            case \"NUM_HOUSE_LOCATION\": {\n              this.homeDetails.buildingNumber = value;\n              break;\n            }\n            case \"TXT_VILLAGE_SUBDIVISION\": {\n              this.homeDetails.subdivision = value;\n              break;\n            }\n            case \"TXT_BUILDING_NAME\": {\n              this.homeDetails.buildingName = value;\n              break;\n            }\n            case \"TXT_STREET_NAME\": {\n              this.homeDetails.streetName = value;\n              break;\n            }\n            case \"TXT_BARANGAY\": {\n              this.homeDetails.barangay = value;\n              break;\n            }\n            case \"COD_REGION\": {\n              this.homeDetails.region = valueInt;\n              break;\n            }\n            case \"COD_PROVINCE\": {\n              this.homeDetails.province = valueInt;\n              break;\n            }\n            case \"COD_MUNICIPALITY\": {\n              this.homeDetails.city = valueInt;\n              break;\n            }\n            case \"TXT_CONSTRUCTION_BUILDING\": {\n              this.homeDetails.constructionOfBuilding = value;\n              break;\n            }\n            case \"TXT_OCCUPANCY_BUILDING\": {\n              this.homeDetails.occupancyOfBuilding = value;\n              break;\n            }\n\n            case \"TXT_BOUNDARY_DESC1\": {\n              this.homeDetails.front = value;\n              break;\n            }\n            case \"TXT_BOUNDARY_DESC2\": {\n              this.homeDetails.right = value;\n              break;\n            }\n            case \"TXT_BOUNDARY_DESC3\": {\n              this.homeDetails.left = value;\n              break;\n            }\n            case \"TXT_BOUNDARY_DESC4\": {\n              this.homeDetails.rear = value;\n              break;\n            }\n\n            case \"DES_CONTENTS\": {\n              this.homeDetails.buildingContent = value;\n              break;\n            }\n\n            case \"COD_CRESTA_ZONE\": {\n              this.homeDetails.crestaZone = value;\n              break;\n            }\n            case \"NUM_ZIPCODE\": {\n              this.homeDetails.zipCode = valueInt;\n              break;\n            }\n\n            case \"PCT_RATE_MANUAL\": {\n              this.homeDetails.ratePercentage = valueFloat;\n              break;\n            }\n\n            case \"COD_MODALIDAD\": {\n              this.homeDetails.product = valueInt;\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n  \n        const generalInfo = res.obj[\"generalInfo\"];\n        this.homeDetails.subline = generalInfo.codRamo;\n\n        // this.homeDetails.effectivityDate = new Date(generalInfo.fecEfecPoliza);\n        this.quoteForm.get('effectivityDate').setValue(new Date(generalInfo.fecEfecPoliza), {emitEvent:false});\n        // this.homeDetails.expiryDate = new Date(generalInfo.fecVctoPoliza);\n        this.quoteForm.get('expiryDate').setValue(new Date(generalInfo.fecVctoPoliza), {emitEvent:false});\n        this.homeDetails.paymentMethod = generalInfo.codFraccPago;\n  \n        this.groupPolicy = new GroupPolicy;\n        this.groupPolicy.agentCode = generalInfo.codAgt;\n        if (!Utility.isUndefined(generalInfo.numPolizaGrupo)) {\n          this.groupPolicy.groupPolicy = parseInt(generalInfo.numPolizaGrupo);\n        }\n        if (!Utility.isUndefined(generalInfo.numContrato)) {\n          this.groupPolicy.contract = parseInt(generalInfo.numContrato);\n        }\n        if (!Utility.isUndefined(generalInfo.numSubcontrato)) {\n          this.groupPolicy.subContract = parseInt(generalInfo.numSubcontrato);\n        }\n        this.groupPolicy.commercialStructure = generalInfo.codNivel3;\n        this.homeDetails.groupPolicy = this.groupPolicy;\n  \n        const docType = generalInfo.tipDocum;\n        const docCode = generalInfo.codDocum;\n        // preventing generic document type and code\n        if (\"MVO\" != docType && !docCode.startsWith(\"MAPFREXX\")) {\n          this.policyHolder.documentType = docType;\n          this.policyHolder.documentCode = docCode;\n          this.policyHolder.isExisting = true;\n        }\n\n        var relatedStructure = [];\n        var relatedContent = [];\n        const relatedDetails = res.obj[\"relatedDetails\"] as any[];\n        relatedDetails.forEach(i => {\n          const code = i.codCampo;\n          const value: string = i.valCampo;\n          const occurence: number = i.numOcurrencia;\n\n          switch (code) {\n            //related structure\n            case \"VAL_RISK_2157\": {\n              const obj = { val: value, occ: occurence };\n              relatedStructure.push(obj);\n              break;\n            }\n\n            //related content\n            case \"VAL_RISK_2357\": {\n              const obj = { val: value, occ: occurence };\n              relatedContent.push(obj);\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n\n        const buildingCapital = res.obj[\"buildingCapital\"];\n        if (buildingCapital.length != 0) {\n          this.homeDetails.buildingCapital = buildingCapital[0].sumaAseg;\n        }\n\n        const contentValue = res.obj[\"contentValue\"];\n        if (contentValue.length != 0) {\n          this.homeDetails.contentValue = contentValue[0].sumaAseg;\n        }\n\n        const improvement = res.obj[\"improvement\"];\n        if (improvement.length != 0) {\n          this.homeDetails.improvement = improvement[0].sumaAseg;\n        }\n\n        this.relatedStructure().controls.forEach(element => {\n          relatedStructure.forEach(rs => {\n            const stringValue = rs.val;\n            const num = parseInt(stringValue);\n            if (element.value._code == rs.occ && num > 0) {\n              element.get(\"_value\").setValue(stringValue);\n            }\n          });\n        });\n\n        this.relatedContent().controls.forEach(element => {\n          relatedContent.forEach(rs => {\n            const stringValue = rs.val;\n            const num = parseInt(stringValue);\n            if (element.value._code == rs.occ && num > 0) {\n              element.get(\"_value\").setValue(stringValue);\n            }\n          });\n        });\n\n         // includes related structure to home details DTO\n        var rs = this.quoteForm.get('relatedStructure').value;\n        this.homeDetails.relatedStructureDetails = rs.length ? rs : [];\n\n        // includes related content to home details DTO\n        var rc = this.quoteForm.get('relatedContent').value;\n        this.homeDetails.relatedContentDetails = rc.length ? rc : []; \n\n        this.loadLOVs();\n  \n        const coverageList = res.obj[\"coverageList\"];\n        this.populateCoverage(coverageList);\n  \n        //breakdwon\n        const breakdown = res.obj[\"breakdown\"];\n        const receipt = res.obj[\"receipt\"];\n        this.populatePaymentBreakdown(breakdown, receipt);\n  \n        //cloning details from load quotation\n        const deepClone = JSON.parse(JSON.stringify(this.homeDetails));\n        this.prevHomeDetails = deepClone;\n\n        //prevent to post policy if quotation has technical control\n        const technicalControl = res.obj[\"technicalControl\"];\n        if (generalInfo.mcaProvisional == \"S\" && technicalControl.length > 0) {\n          this.withTechControl = true;\n          this.editMode = false;\n          this.modalRef = Utility.showError(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n        this.homeDetails.quotationNumber = \"\";\n      }\n    }).finally(() => {\n      //trigger child component load quotation function\n      this.triggerCounter = this.triggerCounter + 1;\n    });\n  }\n\n  loadLOVs() {\n    var _this = this;\n    this.homeAddress.state = this.homeDetails.region;\n    this.tpls.getProvince(this.homeAddress).then(res => {\n      _this.LOV.provinceLOV = res;\n    });\n\n    this.homeAddress.province = this.homeDetails.province;\n    this.tpls.getCity(this.homeAddress).then(res => {\n      _this.LOV.cityLOV = res;\n    });\n\n    this.homeAddress.city = this.homeDetails.city;\n    this.tpls.getZipCode(this.homeAddress).then(res => {\n      _this.LOV.zipCodeLOV = res;\n    });\n\n    if (!Utility.isUndefined(this.homeDetails.district)) {\n      this.getBlockNumber();\n    }\n  }\n\n  setValidations() {\n    var quotationNumber = this.quoteForm.get('quotationNumber');\n    var effectivityDate = this.quoteForm.get('effectivityDate');\n\n    quotationNumber.valueChanges.subscribe(number => {\n      this.disableLoadBtn = Utility.isUndefined(number);\n    });\n\n    effectivityDate.valueChanges.pipe(distinctUntilChanged()).subscribe(date => {\n      this.homeDetails.expiryDate = moment(date).add(1, 'years').toDate();\n      this.expiryDateMinDate = this.homeDetails.expiryDate;\n    });\n  }\n\n  loadInit() {\n    this.setDefaultValue();\n\n    var _this = this;\n    this.hls.getHomeBusinessLine().then(res => {\n      var temp = [];\n      res.forEach(subline => {\n        //residential only\n        if (subline.COD_RAMO === 200) {\n          temp.push(subline);\n        }\n      });\n      _this.LOV.sublineLOV = temp;\n    });\n\n    this.hls.getCurrency(this.homeDetails).then(res => {\n      _this.LOV.currencyLOV = res;\n    });\n    this.hls.getRelatedStructureProperty(this.homeDetails).then(res => {\n      res.forEach((rs: any) => {\n        this.relatedStructure().push(this.newRelatedDetails(rs.COD_VALOR, rs.NOM_VALOR));\n      });\n    });\n    this.hls.getRelatedContentProperty(this.homeDetails).then(res => {\n      res.forEach((rs: any) => {\n        this.relatedContent().push(this.newRelatedDetails(rs.COD_VALOR, rs.NOM_VALOR));\n      });\n    });\n    this.hls.getProduct(this.homeDetails).then(res => {\n      _this.LOV.productListLOV = res;\n    });\n    this.hls.getPaymentPlan(this.homeDetails).then(res => {\n      _this.LOV.paymentMethodLOV = res;\n    });\n\n    this.tpls.getState(this.homeAddress).then(res => {\n      _this.LOV.regionLOV = res;\n    });\n\n    this.hls.getDistrict().then(res => {\n      _this.LOV.districtLOV = res;\n    });\n  }\n\n  setDefaultValue() {\n    //setting default value\n    this.homeDetails.subline = 200; //residential\n    this.homeDetails.sublineEffectivityDate = \"15102014\";\n    this.homeDetails.effectivityDate = this.today; // current today\n    this.homeDetails.currency = 1; //Philippine peso\n\n    this.homeAddress.country = \"PHL\"; //Philippines\n  }\n\n  relatedStructure(): FormArray {\n    return this.quoteForm.get(\"relatedStructure\") as FormArray\n  }\n\n  relatedContent(): FormArray {\n    return this.quoteForm.get(\"relatedContent\") as FormArray\n  }\n\n  loadRelatedDetails(value: number, code: string, name: string): FormGroup {\n    return this.fb.group({\n      _value: ['', Validators.min(1)],\n      _code: [code],\n      _name: [name]\n    });\n  }\n\n  removeRelatedStructure() {\n    // removing all related structure details\n    var relatedStructure = this.quoteForm.get('relatedStructure').value;\n    if (relatedStructure.length > 0) {\n      // loop until all related structure details removed\n      this.relatedStructure().removeAt(0);\n      this.removeRelatedStructure();\n    }\n  }\n\n  removeRelatedContent() {\n    // removing all related content details\n    var relatedContent = this.quoteForm.get('relatedContent').value;\n    if (relatedContent.length > 0) {\n      // loop until all related structure content removed\n      this.relatedContent().removeAt(0);\n      this.removeRelatedContent();\n    }\n  }\n\n  newRelatedDetails(code: string, name: string): FormGroup {\n    return this.fb.group({\n      _value: ['', Validators.min(1)],\n      _code: [code],\n      _name: [name]\n    });\n  }\n\n  getBlockNumber() {\n    const _this = this;\n    this.hls.getBlockNumber(this.homeDetails.district).then(res => {\n      _this.LOV.blockNumberLOV = res;\n    });\n  }\n\n  getProvince() {\n    const _this = this;\n    this.homeAddress.state = this.homeDetails.region;\n    this.tpls.getProvince(this.homeAddress).then(res => {\n      _this.LOV.provinceLOV = res;\n      this.homeDetails.province = null;\n    });\n  }\n\n  getCity() {\n    const _this = this;\n    this.homeAddress.province = this.homeDetails.province;\n    this.tpls.getCity(this.homeAddress).then(res => {\n      _this.LOV.cityLOV = res;\n      this.homeDetails.city = null;\n    });\n  }\n\n  getZipCode() {\n    const _this = this;\n    this.homeAddress.city = this.homeDetails.city;\n    this.tpls.getZipCode(this.homeAddress).then(res => {\n      _this.LOV.zipCodeLOV = res;\n      this.homeDetails.zipCode = null;\n    });\n  }\n\n  populateCoverage(coverageList: any[]) {\n    this.coverageList = coverageList;\n    this.showCoverage = true;\n    this.triggerCoverage = this.triggerCoverage + 1;\n  }\n\n  populatePaymentBreakdown(breakdown: any[], receipt: {}) {\n    this.paymentBreakdown = breakdown;\n    this.paymentReceipt = receipt;\n    this.showPaymentBreakdown = true;\n    this.triggerBreakdown = this.triggerBreakdown + 1;\n    Utility.scroll('paymentBreakdown');\n  }\n\n  proceed(type: number) {\n    //checking the affecting related details\n    this.hasAffectingRelatedDetails();\n    //if user changes affecting values\n    const hasChanges = this.changedValues.length != 0 || this.hasRSChanges || this.hasRCChanges;\n\n    const hasQuotationNumber = !Utility.isUndefined(this.homeDetails.quotationNumber);\n    const isTemporaryQuotation = hasQuotationNumber && this.homeDetails.quotationNumber.startsWith('999');\n    this.homeDetails.affecting = !hasQuotationNumber ||\n      (hasQuotationNumber && isTemporaryQuotation) ||\n      (hasQuotationNumber && !isTemporaryQuotation && hasChanges);\n    if (hasChanges) {\n      this.openProceedModal(type);\n    } else {\n      switch (type) {\n        case 1: {\n          this.issueQuote('S');\n          break;\n        }\n        case 2: {\n          this.issueQuote('N');\n          break;\n        }\n        case 3: {\n          this.savePolicy();\n          break;\n        }\n        default: {\n          this.postPolicy();\n          break;\n        }\n      }\n    }\n  }\n\n  openProceedModal(type: number): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      generateBtn: type == 1 || type == 2 || type == 3,\n      saveBtn: type == 4\n    };\n\n    this.dialogRef = this.dialog.open(this.proceedModal, dialogConfig);\n  }\n\n  openValidationModal(q: FormGroup, g: FormGroup, c: FormGroup): void {\n    //clear arrays\n    let invalid = [];\n    this.invalidForms = [];\n\n    //list of incorrect label names\n    var formLabels = [{\n        cbOneTripOnly: 'oneTripOnly'\n      },\n      {\n        name: \"client'sName\"\n      }\n    ]\n\n    var quoteArr = Utility.findInvalidControls(q);\n    invalid.push(...quoteArr);\n\n    var groupPolicyArr = Utility.findInvalidControls(g);\n    invalid.push(...groupPolicyArr);\n\n    var policyHolderArr = Utility.findInvalidControls(c);\n    invalid.push(...policyHolderArr);\n\n    invalid.forEach((i) => {\n      formLabels.forEach(f => {\n        var correctLabel = f[i];\n        if (!Utility.isUndefined(correctLabel)) {\n          //replace label\n          i = correctLabel;\n        }\n      });\n\n      let label: string = i.replace(/([A-Z])/g, ' $1').trim();\n      this.invalidForms.push(label.toLowerCase());\n    });\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n\n    this.dialogRef = this.dialog.open(this.validationModal, dialogConfig);\n  }\n\n  openPaymentBreakdownModal(receipt: any, breakdown: any, isPostPolicy: boolean) {\n    let product = \"\";\n    this.LOV.productListLOV.forEach((p) => {\n      if (p.COD_MODALIDAD == this.homeDetails.product) {\n        product = p.NOM_MODALIDAD;\n      }\n    });\n\n    let payment = \"\";\n    this.LOV.paymentMethodLOV.forEach((p) => {\n      if (p.COD_FRACC_PAGO == this.homeDetails.paymentMethod) {\n        payment = p.NOM_FRACC_PAGO;\n      }\n    });\n\n    const modalData = {\n      number: isPostPolicy ? this.homeDetails.policyNumber : this.homeDetails.quotationNumber,\n      product: product,\n      payment: payment,\n      receipt: receipt,\n      breakdown: breakdown,\n      showExchangeRate: false,\n      isPostPolicy: isPostPolicy,\n      line: 'HOME' //TODO\n    };\n\n    this.dialog.open(PaymentBreakdownModalComponent, {\n      width: '1000px',\n      data: modalData\n    });\n  }\n\n  manageBtn(opt: number) {\n    if (opt == 1) {\n      //hides payment breakdown panel\n      this.showPaymentBreakdown = false;\n      this.editMode = true;\n    }\n\n    if (this.isIssuance) {\n      this.showIssuanceGenerateBtn = (opt == 1);\n      this.showSaveBtn = (opt == 2);\n      this.showPostBtn = (opt == 3);\n      this.showPrintBtn = (opt == 4);\n      this.showNewPolicyBtn = (opt == 5);\n    } else {\n      this.showGenerateBtn = (opt == 1);\n      this.showIssueQuoteBtn = (opt == 2);\n      this.showProceedToIssuanceBtn = (opt == 3);\n    }\n  }\n\n  newQuote() {\n    this.newPage(page.QUO.HOM);\n  }\n\n  newPolicy() {\n    this.newPage(page.ISS.HOM);\n  }\n\n  newPage(page: string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n\n  affecting(key: string, label: string) {\n    if (!Utility.isUndefined(this.homeDetails.quotationNumber) && this.prevHomeDetails != null) {\n      let prev = this.prevHomeDetails[key] == undefined ? \"\" : this.prevHomeDetails[key];\n      let curr = this.homeDetails[key] == undefined ? \"\" : this.homeDetails[key];\n      if (curr instanceof Date) {\n        curr = curr.getMonth() + \"/\" + curr.getDate() + \"/\" + curr.getFullYear();\n        if (!Utility.isUndefined(prev)) {\n          var prevDate = new Date(prev);\n          prev = prevDate.getMonth() + \"/\" + prevDate.getDate() + \"/\" + prevDate.getFullYear();\n        }\n      }\n\n      if (prev != curr) {\n        if (!this.changedValues.includes(label)) {\n          //if changedValues length is greater than 0, request is affecting\n          this.changedValues.push(label);\n        }\n      } else {\n        //remove all occurence\n        this.changedValues = this.changedValues.filter(v => v !== label);\n      }\n    }\n  }\n\n  hasAffectingRelatedDetails() {\n    var currentRSTotalAmount = 0;\n    var currentRCTotalAmount = 0;\n    var prevRSTotalAmount = 0;\n    var prevRCTotalAmount = 0;\n\n    var relatedStructure = this.quoteForm.get('relatedStructure').value;\n    const relatedStructureArray = relatedStructure.length ? relatedStructure : [];\n    currentRSTotalAmount = this.getTotal(relatedStructureArray);\n\n    var relatedContent = this.quoteForm.get('relatedContent').value;\n    const relatedContentArray = relatedContent.length ? relatedContent : [];\n    currentRCTotalAmount = this.getTotal(relatedContentArray);\n    \n    if (this.prevHomeDetails != null) {\n      if (!Utility.isUndefined(this.prevHomeDetails.relatedStructureDetails)) {\n        prevRSTotalAmount = this.getTotal(this.prevHomeDetails.relatedStructureDetails);\n      }\n      \n      if (!Utility.isUndefined(this.prevHomeDetails.relatedContentDetails)) {\n        prevRCTotalAmount = this.getTotal(this.prevHomeDetails.relatedContentDetails);\n      }\n  \n      this.hasRSChanges = currentRSTotalAmount != prevRSTotalAmount;\n      this.hasRCChanges = currentRCTotalAmount != prevRCTotalAmount;\n    }\n  }\n\n  getTotal(arr : any[]) {\n    var total = 0;\n    arr.forEach(relatedDetails => {\n      if(!Utility.isUndefined(relatedDetails._value) && relatedDetails._value != 0) {\n        var val = 0;\n        try {\n          val = parseInt(relatedDetails._value);\n        } catch (e) {\n          //do nothing\n        }\n\n        total = total + val;\n      }\n    });\n    return total;\n  }\n\n  printQuote() {\n    this.ps.printQuote(this.homeDetails.quotationNumber);\n  }\n\n  printPolicy() {\n    this.ps.printPolicy(this.homeDetails.policyNumber);\n  }\n\n  proceedToIssuance() {\n    this.ps.proceedToIssuance(this.homeDetails.quotationNumber, page.ISS.HOM);\n  }\n\n  //getting error or warning items\n  getErrorItems(res: ReturnDTO, mcaTmpPptoMph: string, isIssuance: boolean) {\n    this.withTechControl = false;\n    const resErrorCode = res.obj[\"errorCode\"];\n    const resError = res.obj[\"error\"];\n\n    const isPostPolicy = Utility.isUndefined(resErrorCode);\n    let items: any[] = isPostPolicy ?\n      [\"Error occured while posting policy. Please contact administration.\"] :\n      [\"Error code is \" + resErrorCode + \" but does not return any error message. Please contact administration.\"];\n\n    if (!Utility.isUndefined(resError)) {\n      const errArr = resError.split(\"~\");\n      if (errArr.length) {\n        var arr = [];\n        errArr.forEach((err: string) => {\n          if (!Utility.isEmpty(err)) {\n            arr.push(err);\n          }\n        });\n\n        const resStatus = res.obj[\"status\"];\n        if (arr.length) {\n          if (!resStatus && isPostPolicy) {\n            //has error - can't proceed\n            items = [\"Failed to generate quotation number due to following reason/s:\"].concat(arr);\n          } else {\n            this.withTechControl = true;\n            // has warning - can proceed\n            if (isIssuance) {\n              items = [\"Quotation has technical control due to following reason/s:\"].concat(arr);\n            } else {\n              items = (\"N\" == mcaTmpPptoMph) ? [\"Routed for approval due to following reason/s:\"].concat(arr) : arr;\n            }\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  getRatePercentage(variableData : any[]) {\n    // const variableData = res.obj[\"variableData\"] as any[];\n    variableData.forEach(v => {\n      const code = v.codCampo;\n      const value: string = v.valCampo;\n      let valueFloat: number = undefined;\n\n      try {\n        valueFloat = parseFloat(value);\n      } catch (e) {\n        // do nothing\n      }\n\n      switch (code) {\n        case \"PCT_RATE_MANUAL\": {\n          this.homeDetails.ratePercentage = valueFloat;\n          break;\n        }\n\n        default: {\n          // do nothing\n        }\n      }\n    });\n  }\n  \n  //generate and issue quote button\n  issueQuote(mcaTmpPptoMph: string) {\n    // S for generation and N for issue quotation\n    this.assembleData(mcaTmpPptoMph);\n\n    this.his.issueQuote(this.homeDetails).then(res => {\n      if (res.status) {\n        //clear affecting fields\n        this.changedValues = [];\n        this.hasRSChanges = false;\n        this.hasRCChanges = false;\n\n        const items = this.getErrorItems(res, mcaTmpPptoMph, false);\n        const status = res.obj[\"status\"];\n        if (status) {\n          this.showRatePercentage = true;\n\n          const variableData = res.obj[\"variableData\"];\n          this.getRatePercentage(variableData);\n\n          //duplicating car details for comparison\n          const deepClone = JSON.parse(JSON.stringify(this.homeDetails));\n          this.prevHomeDetails = deepClone;\n\n          this.editMode = false;\n          const errorCode = res.obj[\"errorCode\"];\n          if (errorCode == \"S\") {\n            //if quotation has a warning\n            this.modalRef = Utility.showHTMLWarning(this.bms, items);\n          }\n\n          const policyNumber = res.obj[\"policyNumber\"];\n          this.homeDetails.quotationNumber = policyNumber;\n\n          const breakdown = res.obj[\"breakdown\"];\n          const receipt = res.obj[\"receipt\"];\n\n          if (\"S\" == mcaTmpPptoMph) {\n            //for generation of quote\n            const message = \"You have successfully generated a quotation - \" + policyNumber;\n            this.modalRef = Utility.showInfo(this.bms, message);\n\n            const coverageList = res.obj[\"coverageList\"];\n            this.populateCoverage(coverageList);\n\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.manageBtn(2);\n          } else {\n            // for issuing the quote\n            this.openPaymentBreakdownModal(receipt, breakdown, false);\n            this.manageBtn(3);\n          }\n        } else {\n          this.modalRef = Utility.showHTMLError(this.bms, items);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  assembleData(mcaTmpPptoMph: string) {\n    this.homeDetails.mcaTmpPptoMph = mcaTmpPptoMph;\n\n    // includes group policy to home details DTO\n    this.homeDetails.groupPolicy = this.groupPolicy;\n    // includes policy holder to home details DTO\n    this.homeDetails.policyHolder = this.policyHolder;\n    // includes secondary policy holder to car details DTO\n    this.homeDetails.secondaryPolicyHolder = this.secondaryPolicyHolder;\n\n    if (!Utility.isUndefined(this.homeDetails.secondaryPolicyHolderSeparator)) {\n      const _this = this;\n      this.cls.getPHSeparator().then(res => {\n        res.forEach(sep => {\n          if (sep.NOM_VALOR == this.homeDetails.secondaryPolicyHolderSeparator) {\n            _this.homeDetails.secondaryPolicyHolderSeparatorCode = sep.TIP_ASEG_SEP_LOV;\n          }\n        });\n      });\n    }\n\n    // includes mortgagee policy holder to car details DTO\n    this.homeDetails.mortgageePolicyHolder = this.mortgageePolicyHolder;\n\n    // includes related structure to home details DTO\n    var relatedStructure = this.quoteForm.get('relatedStructure').value;\n    this.homeDetails.relatedStructureDetails = relatedStructure.length ? relatedStructure : [];\n\n    // includes related content to home details DTO\n    var relatedContent = this.quoteForm.get('relatedContent').value;\n    this.homeDetails.relatedContentDetails = relatedContent.length ? relatedContent : [];\n\n    // to trigger changes when regenerating quotation\n    this.showCoverage = false;\n    this.showPaymentBreakdown = false;\n  }\n\n  //save policy button\n  savePolicy() {\n    this.assembleData(\"N\");\n\n    this.his.savePolicy(this.homeDetails).then(res => {\n      if (res.status) {\n        //clear affecting fields\n        this.changedValues = [];\n        this.hasRSChanges = false;\n        this.hasRCChanges = false;\n\n        var items = this.getErrorItems(res, this.homeDetails.mcaTmpPptoMph, true);\n        const status = res.obj[\"status\"];\n        if (status) {\n          //duplicating home details for comparison\n          const deepClone = JSON.parse(JSON.stringify(this.homeDetails));\n          this.prevHomeDetails = deepClone;\n\n          this.editMode = false;\n\n          const errorCode = res.obj[\"errorCode\"];\n          const policyNumber = res.obj[\"policyNumber\"];\n          this.homeDetails.quotationNumber = policyNumber;\n\n          const message = \"You have successfully generated a new quotation: \" + policyNumber;\n          this.modalRef = Utility.showInfo(this.bms, message);\n\n          const breakdown = res.obj[\"breakdown\"];\n          const receipt = res.obj[\"receipt\"];\n          this.populatePaymentBreakdown(breakdown, receipt);\n\n          this.withTechControl = errorCode == 'S';\n          if (this.withTechControl) {\n            //if quotation has a warning\n            if (this.homeDetails.affecting) {\n              items = [\"Updated quotation number is: \" + policyNumber].concat(items);\n            }\n            this.modalRef = Utility.showHTMLWarning(this.bms, items);\n          } else {\n            const message = \"Policy saved successfully.\";\n            this.modalRef = Utility.showInfo(this.bms, message);\n          }\n          this.editMode = false;\n          this.manageBtn(3);\n        } else {\n          this.modalRef = Utility.showHTMLError(this.bms, items);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  //post policy button\n  postPolicy() {\n    this.assembleData(\"N\");\n\n    if (this.withTechControl) {\n      this.modalRef = Utility.showWarning(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n    } else {\n      this.his.postPolicy(this.homeDetails).then(res => {\n        this.editMode = false;\n        if (res.status) {\n          //clear affecting fields\n          this.changedValues = [];\n          this.hasRSChanges = false;\n          this.hasRCChanges = false;\n\n          var items = this.getErrorItems(res, this.homeDetails.mcaTmpPptoMph, true);\n          const status = res.obj[\"status\"];\n          const policyNumber = res.obj[\"policyNumber\"];\n          if (status && !Utility.isUndefined(policyNumber)) {\n            this.homeDetails.policyNumber = policyNumber;\n\n            const breakdown = res.obj[\"breakdown\"];\n            const receipt = res.obj[\"receipt\"];\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.openPaymentBreakdownModal(receipt, breakdown, true);\n            this.manageBtn(4);\n          } else {\n            this.manageBtn(5);\n            this.modalRef = Utility.showHTMLError(this.bms, items);\n          }\n        } else {\n          this.manageBtn(5);\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      });\n    }\n  }\n}\n","export default \".traveler-card {\\n    margin-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9xdW90YXRpb24tdHJhdmVsL3F1b3RhdGlvbi10cmF2ZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVvdGF0aW9uLXRyYXZlbC9xdW90YXRpb24tdHJhdmVsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudHJhdmVsZXItY2FyZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n  Input,\n  AfterViewChecked,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  Travel\n} from '../../objects/Travel';\nimport {\n  GroupPolicy\n} from 'src/app/objects/GroupPolicy';\nimport {\n  Utility\n} from '../../utils/utility';\nimport {\n  TravelListObject\n} from 'src/app/objects/LOV/travelList';\nimport {\n  GroupPolicyListObject\n} from 'src/app/objects/LOV/groupPolicyList';\n// import {\n//   AuthenticationService\n// } from 'src/app/services/authentication.service';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  PaymentBreakdownModalComponent\n} from '../payment-breakdown-modal/payment-breakdown-modal.component';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig\n} from '@angular/material';\nimport {\n  Globals\n} from 'src/app/utils/global';\nimport {\n  page\n} from 'src/app/constants/page';\nimport {\n  CoveragesComponent\n} from '../coverages/coverages.component';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  TravelLOVServices\n} from '../../services/lov/travel.service'\nimport {\n  TravelUtilityServices\n} from 'src/app/services/travel-utility.service';\nimport {\n  TravelIssueServices\n} from 'src/app/services/travel-issue.service';\nimport {\n  validateItinerary\n} from 'src/app/validators/validate';\nimport {\n  ReturnDTO\n} from 'src/app/objects/ReturnDTO';\nimport {\n  Traveler\n} from 'src/app/objects/Traveler';\n\n@Component({\n  selector: 'app-quotation-travel',\n  templateUrl: './quotation-travel.component.html',\n  styleUrls: ['./quotation-travel.component.css']\n})\nexport class QuotationTravelComponent implements OnInit, AfterViewChecked {\n  @ViewChild(CoveragesComponent) appCoverage: CoveragesComponent;\n  @ViewChild('proceedModal') proceedModal: TemplateRef < any > ;\n  @ViewChild('validationModal') validationModal: TemplateRef < any > ;\n\n  // currentUser = this.auths.currentUserValue;\n  isIssuance: boolean = Globals.getAppType() == \"I\";\n  isLoadQuotation: boolean = Globals.isLoadQuotation;\n  pageLabel: String = 'Quotation';\n  triggerCounter: number = 0;\n  triggerCoverage: number = 0;\n  triggerBreakdown: number = 0;\n  travelerHeadCount: number = 1;\n\n  travelDetails = new Travel();\n  prevTravelDetails: Travel = null;\n  changedValues: any[] = [];\n  changedTravelerValues: any[] = [];\n\n  invalidForms: any[] = [];\n\n  withTechControl = false;\n\n  groupPolicy = new GroupPolicy();\n  policyHolder = new PolicyHolder();\n\n  quoteForm: FormGroup;\n\n  mindate: Date = new Date();\n  // bdaymindate: Date = moment().subtract(65, 'years').toDate();\n  expiryDateMinDate: Date = moment().add(1, 'years').toDate();\n  endDateMinDate: Date = moment().add(1, 'days').toDate();\n  enableEndDate: boolean = false;\n\n  LOV = new TravelListObject();\n  GPLOV = new GroupPolicyListObject();\n\n  showOthersDescription: boolean = false;\n  showAdditionalInformation: boolean = false;\n  showPaymentBreakdown: boolean = false;\n  showCoverage: boolean = false;\n\n  //for payment breakdown\n  paymentBreakdown: any[];\n  paymentReceipt: {};\n\n  //for coverage\n  coverageList: any[];\n\n  //allow user to edit the form\n  editMode = true;\n\n  //flag to show generate btn\n  showGenerateBtn: boolean = true;\n  //flag to show issue btn\n  showIssueQuoteBtn: boolean = false;\n  //flag to show print quote/proceed to issuance\n  showProceedToIssuanceBtn: boolean = false;\n\n  //flat to show issuance generate btn\n  showIssuanceGenerateBtn = true;\n  //flag to show save btn\n  showSaveBtn: boolean = false;\n  //flag to show post btn\n  showPostBtn: boolean = false;\n  //flag to show print btn\n  showPrintBtn: boolean = false;\n  //flag to show new quote and new policy btn\n  showNewPolicyBtn: boolean = false;\n\n  //disable load button\n  disableLoadBtn: boolean = true;\n\n  //modal reference\n  modalRef: BsModalRef;\n  dialogRef: MatDialogRef < TemplateRef < any >> ;\n\n  codeName: String;\n\n  constructor(\n    private fb: FormBuilder,\n    // private auths: AuthenticationService,\n    private bms: BsModalService,\n    private router: Router,\n    private tls: TravelLOVServices,\n    private tus: TravelUtilityServices,\n    private tis: TravelIssueServices,\n    public dialog: MatDialog,\n    private changeDetector: ChangeDetectorRef\n  ) {\n    this.createQuoteForm();\n    this.setValidations();\n  }\n\n  ngAfterViewChecked() {\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnInit() {\n    this.loadInit();\n    if (this.isIssuance) {\n      this.pageLabel = 'Issuance';\n      if (this.isLoadQuotation) {\n        //if loaded from travel quotation\n        this.travelDetails.quotationNumber = Globals.loadNumber;\n        this.loadQuotation();\n        Globals.setLoadNumber('');\n        Globals.setLoadQuotation(false);\n      }\n    }\n  }\n\n  loadInit() {\n    var _this = this;\n    this.tls.getCurrencyList().then(res => {\n      _this.LOV.currencyLOV = res;\n    });\n    this.tls.getTravelPackage().then(res => {\n      _this.LOV.packageLOV = res;\n    });\n    this.tls.getTypeOfCoverage().then(res => {\n      _this.LOV.coverageLOV = res;\n    });\n    this.tls.getPurposeOfTrip().then(res => {\n      _this.LOV.purposeOfTripLOV = res;\n      _this.LOV.purposeOfTripLOV.forEach((p) => {\n        var businessLabel = p.NOM_BUSINESS as string;\n        p.COD_BUSINESS = businessLabel.toUpperCase();\n      });\n    });\n    this.tls.getInsuranceCoverage().then(res => {\n      _this.LOV.insuranceCoverageLOV = res;\n    });\n    this.tls.getCoverageOption().then(res => {\n      _this.LOV.coverageOptionLOV = res;\n    });\n    this.tls.getRelationship().then(res => {\n      _this.LOV.relationshipLOV = res;\n      _this.LOV.relationshipLOV.forEach((r) => {\n        // disable primary\n        r.disabled = r.COD_VALOR == 'P';\n      });\n    });\n\n    //setting defualt value\n    this.travelDetails.insuranceCoverage = \"I\"; //individual\n  }\n\n  createQuoteForm() {\n    this.quoteForm = this.fb.group({\n      quotationNumber: [null],\n      currency: ['', Validators.required],\n      countries: ['', Validators.required],\n      //general information\n      travelPackage: ['', Validators.required],\n      travelType: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      noOfDays: ['', Validators.required],\n      completeItinerary: ['', [Validators.required, validateItinerary]],\n      purposeOfTrip: ['', Validators.required],\n      cbOneTripOnly: ['', Validators.required],\n      cbWithCruise: [null],\n      othersDescription: [null],\n      //travelers\n      travelers: this.fb.array([this.newTraveler(true)]),\n      //additional policy information\n      cbSportsEquipment: [null],\n      sportsEquipment: [null],\n      cbHazardousSports: [null],\n      hazardousSports: [null],\n      //coverages\n      insuranceCoverage: ['', Validators.required],\n      coverageOption: ['', Validators.required],\n      medicalExpenses: ['', Validators.required],\n    });\n  }\n\n  currencyOnchange() {\n    var _this = this;\n\n    this.travelDetails.subline = 380;\n    this.travelDetails.startDate = null;\n    this.travelDetails.endDate = null;\n\n    //if currency is philippine peso\n    this.travelDetails.countries = this.travelDetails.currency === 1 ? [{\n        NOM_PAIS: \"PHILIPPINES\",\n        COD_PAIS: \"PHL\",\n        NOM_VERNACULO: \"PHILIPPINES\",\n        name: \"PHILIPPINES\",\n        value: \"PHL\",\n        type: \"PHILIPPINES\"\n      }] :\n      null;\n    this.travelDetails.travelPackage = this.travelDetails.currency === 1 ?\n      \"P\" :\n      null;\n\n    this.tls.getCountryList(this.travelDetails).then(res => {\n      res.forEach(country => {\n        country.name = country.NOM_PAIS;\n        country.value = country.COD_PAIS;\n        country.type = country.NOM_VERNACULO;\n      });\n      _this.LOV.countryLOV = res;\n    });\n\n    this.tls.getProduct(this.travelDetails).then(res => {\n      _this.LOV.productListLOV = res;\n    });\n  }\n\n  relationshipOnChange(traveler: FormGroup) {\n    var val = traveler.controls['relationship'].value;\n    var maxAge = (val == 'C') ? 21 : 65;\n    var minAge = (val == 'C') ? 0 : 18;\n\n    const bdaymindate: Date = moment().subtract(maxAge, 'years').toDate();\n    traveler.controls['bdaymindate'].setValue(bdaymindate);\n\n    const bdaymaxdate: Date = moment().subtract(minAge, 'years').toDate();\n    traveler.controls['bdaymaxdate'].setValue(bdaymaxdate);\n\n    traveler.controls['birthDate'].setValue('');\n\n    this.LOV.relationshipLOV.forEach(r => {\n      if (r.COD_VALOR == val) {\n        traveler.controls['relationshipLabel'].setValue(r.NOM_VALOR);\n      }\n    });\n  }\n\n  getOneTrip() {\n    if (this.travelDetails.endDate != null) {\n      this.tus.getOneTrip(this.travelDetails).then((res) => {\n        if (res.status) {\n          this.travelDetails.cbOneTripOnly = res.obj['oneTripOnly'] as boolean;\n        }\n      });\n    }\n  }\n\n  loadQuotation() {\n    this.tis.loadQuotation(this.travelDetails.quotationNumber).then(res => {\n      if (res.status) {\n        this.manageBtn(2);\n        const variableData = res.obj[\"variableData\"] as any[];\n        variableData.forEach(v => {\n          const code = v.codCampo;\n          const value: string = v.valCampo;\n          let valueInt: number = undefined;\n  \n          try {\n            valueInt = parseInt(value);\n          } catch (e) {\n            // do nothing\n          }\n  \n          switch (code) {\n            //general information details\n            case \"TRAVEL_PACK\": {\n              this.travelDetails.travelPackage = value;\n              break;\n            }\n            case \"TRAVEL_TYPE\": {\n              this.travelDetails.travelType = value;\n              break;\n            }\n            // case \"ARRIVAL_DATE\": {\n            //   const date = Utility.convertStringDate(value);\n            //   this.travelDetails.endDate = date;\n            //   break;\n            // }\n            // case \"DEPARTURE_DATE\": {\n            //   const date = Utility.convertStringDate(value);\n            //   this.travelDetails.startDate = date;\n            //   break;\n            // }\n            case \"VAL_NUM_DAYS_TRIP\": {\n              this.travelDetails.noOfDays = valueInt;\n              break;\n            }\n            case \"ITINERARY\": {\n              this.travelDetails.completeItinerary = value;\n              break;\n            }\n            case \"PURPOSE_TRIP\": {\n              this.travelDetails.purposeOfTrip = value;\n              break;\n            }\n            case \"TXT_OTHERS_DESCRIPTION\": {\n              this.travelDetails.othersDescription = value;\n              break;\n            } \n            case \"MCA_ONE_TRIP_ONLY\": {\n              this.travelDetails.cbOneTripOnly = value == \"Y\";\n              break;\n            }\n            case \"MCA_WITH_CRUISE\": {\n              this.travelDetails.cbWithCruise = value == \"S\";\n              break;\n            }\n\n            //additional policy information\n            case \"TXT_SPORTS_EQUIPMENT\": {\n              this.travelDetails.cbSportsEquipment = true;\n              this.travelDetails.sportsEquipment = value;\n              break;\n            }\n            case \"TXT_HAZARDOUS_SPORTS\": {\n              this.travelDetails.cbHazardousSports = true;\n              this.travelDetails.hazardousSports = value;\n              break;\n            }\n\n            //coverages\n            case \"INSURANCE_COVERAGE\": {\n              this.travelDetails.insuranceCoverage = value;\n              break;\n            }\n            case \"COVERAGE_OPTIONS\": {\n              this.travelDetails.coverageOption = value;\n              break;\n            }\n            case \"EXPENSES_COVERAGE\": {\n              this.travelDetails.medicalExpenses = value;\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n  \n        const country : any[] = [];\n        var tempTravaler = [];\n\n        const travelerDetails = res.obj[\"travelerDetails\"] as any[];\n        travelerDetails.forEach(t => {\n          const code = t.codCampo;\n          const value: string = t.valCampo;\n          const text: string = t.txtCampo;\n          const occurence: number = t.numOcurrencia;\n          // const index = occurence - 1;\n          let valueInt: number = undefined;\n  \n          try {\n            valueInt = parseInt(value);\n          } catch (e) {\n            // do nothing\n          }\n  \n          switch (code) {\n            //country\n            case \"TXT_COUNTRY_NAME\": {\n              const obj = { NOM_PAIS: text, COD_PAIS: value, name: text, value: value };\n              country.push(obj);\n              break;\n            }\n            case \"COMPLETE_NAME\": {\n              const obj = { completeName: value, occurence: occurence };\n              tempTravaler.push(obj);\n              break;\n            }\n  \n            default: {\n              // do nothing\n            }\n          }\n        });\n\n        this.travelDetails.countries = country;\n\n        var travelers = [];\n        tempTravaler.forEach(t => {\n          const tObj = new Traveler();\n          tObj.completeName = t.completeName;\n          travelerDetails.forEach(td => {\n            const code = td.codCampo;\n            const value: string = td.valCampo;\n            const text: string = td.txtCampo;\n            const occurence: number = td.numOcurrencia;\n            let valueInt: number = undefined;\n    \n            try {\n              valueInt = parseInt(value);\n            } catch (e) {\n              // do nothing\n            }\n\n            if (t.occurence == occurence) {\n              switch (code) {\n                case \"RELATIONSHIP\": {\n                  tObj.relationship = value;\n                  tObj.relationshipLabel = text;\n                  break;\n                }\n                case \"BIRTHDATE\": {\n                  const date = Utility.convertStringDate(value);\n                  tObj.birthDate = date;\n                  break;\n                }\n                case \"PASSPORT_NUMBER\": {\n                  tObj.passportNumber = value;\n                  break;\n                }\n                case \"USUAL_PHYSICIAN\": {\n                  tObj.physicianName = value;\n                  break;\n                }\n                default: {\n                  // do nothing\n                }\n              }\n            }\n          });\n          travelers.push(tObj);\n        });\n\n        if (travelers.length) {\n          //removes all accessories\n          this.removeTravelers();\n          var temp: any[] = [];\n          travelers.forEach((tra: any) => {\n            temp.push({\n              traveler: tra.completeName\n            });\n            this.travelers().push(this.loadTraveler(tra.completeName, tra.birthDate, tra.relationship, tra.relationshipLabel, tra.passportNumber, tra.physicianName));\n          });\n  \n          var travelersForm = this.quoteForm.get('travelers').value;\n          this.travelDetails.travelers = travelersForm;\n        } else {\n          this.travelDetails.travelers = [];\n        }\n  \n        const generalInfo = res.obj[\"generalInfo\"];\n        this.travelDetails.subline = generalInfo.codRamo;\n        this.travelDetails.currency = generalInfo.codMon;\n        this.travelDetails.startDate = new Date(generalInfo.fecEfecPoliza);\n        this.travelDetails.endDate = new Date(generalInfo.fecVctoPoliza);\n        // this.travelDetails.sublineEffectivityDate = Utility.formatDate(new Date(generalInfo.fecValidez), \"DDMMYYYY\");\n  \n        this.groupPolicy = new GroupPolicy;\n        this.groupPolicy.agentCode = generalInfo.codAgt;\n        if (!Utility.isUndefined(generalInfo.numPolizaGrupo)) {\n          this.groupPolicy.groupPolicy = parseInt(generalInfo.numPolizaGrupo);\n        }\n        if (!Utility.isUndefined(generalInfo.numContrato)) {\n          this.groupPolicy.contract = parseInt(generalInfo.numContrato);\n        }\n        if (!Utility.isUndefined(generalInfo.numSubcontrato)) {\n          this.groupPolicy.subContract = parseInt(generalInfo.numSubcontrato);\n        }\n        this.groupPolicy.commercialStructure = generalInfo.codNivel3;\n        this.travelDetails.groupPolicy = this.groupPolicy;\n  \n        const docType = generalInfo.tipDocum;\n        const docCode = generalInfo.codDocum;\n        // preventing generic document type and code\n        if (\"MVO\" != docType && !docCode.startsWith(\"MAPFREXX\")) {\n          this.policyHolder.documentType = docType;\n          this.policyHolder.documentCode = docCode;\n          this.policyHolder.isExisting = true;\n        }\n  \n        this.loadLOVs();\n  \n        const coverageList = res.obj[\"coverageList\"];\n        this.populateCoverage(coverageList);\n  \n        //breakdwon\n        const breakdown = res.obj[\"breakdown\"];\n        const receipt = res.obj[\"receipt\"];\n        this.populatePaymentBreakdown(breakdown, receipt);\n  \n        //cloning details from load quotation\n        const deepClone = JSON.parse(JSON.stringify(this.travelDetails));\n        this.prevTravelDetails = deepClone;\n\n        //prevent to post policy if quotation has technical control\n        const technicalControl = res.obj[\"technicalControl\"];\n        if (generalInfo.mcaProvisional == \"S\" && technicalControl.length > 0) {\n          this.withTechControl = true;\n          this.editMode = false;\n          this.modalRef = Utility.showError(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n        this.travelDetails.quotationNumber = \"\";\n      }\n    }).finally(() => {\n      //trigger child component load quotation function\n      this.triggerCounter = this.triggerCounter + 1;\n    });\n  }\n\n  //loading of all LOV's for load quotation\n  loadLOVs() {\n    var _this = this;\n    this.tls.getCountryList(this.travelDetails).then(res => {\n      res.forEach(country => {\n        country.name = country.NOM_PAIS;\n        country.value = country.COD_PAIS;\n        country.type = country.NOM_VERNACULO;\n      });\n      _this.LOV.countryLOV = res;\n    });\n\n    this.tls.getProduct(this.travelDetails).then(res => {\n      _this.LOV.productListLOV = res;\n    });\n\n    this.tls.getExpensesCoverage(this.travelDetails).then((res) => {\n      _this.LOV.medicalExpensesLOV = res;\n    });\n  }\n\n  setValidations() {\n    var endDate = this.quoteForm.get('endDate');\n    var startDate = this.quoteForm.get('startDate');\n    var countries = this.quoteForm.get('countries');\n    var purposeOfTrip = this.quoteForm.get('purposeOfTrip');\n    var othersDescription = this.quoteForm.get('othersDescription');\n\n    var cbSportsEquipment = this.quoteForm.get('cbSportsEquipment');\n    var sportsEquipment = this.quoteForm.get('sportsEquipment');\n    var cbHazardousSports = this.quoteForm.get('cbHazardousSports');\n    var hazardousSports = this.quoteForm.get('hazardousSports');\n\n    var quotationNumber = this.quoteForm.get('quotationNumber');\n\n    endDate.valueChanges.subscribe(date => {\n      var diff = moment(date).diff(moment(startDate.value), 'days') + 1;\n      this.travelDetails.noOfDays = diff >= 2 ? diff : 0;\n    });\n\n    startDate.valueChanges.subscribe(date => {\n      this.enableEndDate = date !== null && date !== undefined;\n\n      var diff = 0;\n      if (this.enableEndDate) {\n        var diff = moment(endDate.value).diff(moment(date), 'days') + 1;\n        diff = diff === NaN ? 0 : diff;\n        this.endDateMinDate = moment(date).add(1, 'days').toDate();\n        if (diff < 1) {\n          this.travelDetails.endDate = null;\n        }\n      } else {\n        this.travelDetails.endDate = null;\n      }\n\n      this.travelDetails.noOfDays = diff >= 2 ? diff : 0;\n    });\n\n    countries.valueChanges.subscribe(countryList => {\n      var packageList = [];\n      if (!Utility.isUndefined(countryList)) {\n        countryList.forEach(country => {\n          packageList.push(country.type);\n        });\n        if (packageList.indexOf(\"WORLD\") !== -1) {\n          this.travelDetails.travelPackage = \"W\";\n          this.travelDetails.travelType = \"I\";\n        } else if (packageList.indexOf(\"SCHENGEN\") !== -1) {\n          this.travelDetails.travelPackage = \"S\";\n          this.travelDetails.travelType = \"I\";\n        } else if (packageList.indexOf(\"ASIA\") !== -1) {\n          this.travelDetails.travelPackage = \"A\";\n          this.travelDetails.travelType = \"I\";\n        } else if (packageList.indexOf(\"PHILIPPINES\") !== -1) {\n          this.travelDetails.travelPackage = \"P\";\n          this.travelDetails.travelType = \"D\";\n          this.travelDetails.cbWithCruise = false;\n        }\n\n        var _this = this;\n        this.tls.getExpensesCoverage(this.travelDetails).then((res) => {\n          _this.LOV.medicalExpensesLOV = res;\n        });\n      }\n    });\n\n    purposeOfTrip.valueChanges.subscribe(trip => {\n      //if purpose of trip is others, show the others desctiption input and make it required\n      this.showOthersDescription = (trip == 'OTHERS');\n      Utility.updateValidator(othersDescription, trip == 'OTHERS' ? [Validators.required] : null);\n    }); \n\n    cbSportsEquipment.valueChanges.subscribe(checked => {\n      this.travelDetails.sportsEquipment = Utility.setNull(checked, this.travelDetails.sportsEquipment);\n      Utility.updateValidator(sportsEquipment, checked ? [Validators.required] : null);\n    });\n\n    cbHazardousSports.valueChanges.subscribe(checked => {\n      this.travelDetails.hazardousSports = Utility.setNull(checked, this.travelDetails.hazardousSports);\n      Utility.updateValidator(hazardousSports, checked ? [Validators.required] : null);\n    });\n\n    quotationNumber.valueChanges.subscribe(number => {\n      this.disableLoadBtn = Utility.isUndefined(number);\n    });\n  }\n\n  travelers(): FormArray {\n    return this.quoteForm.get(\"travelers\") as FormArray\n  }\n\n  newTraveler(onLoad: boolean): FormGroup {\n    const bdaymindate: Date = moment().subtract(65, 'years').toDate();\n    var ageLimit = onLoad ? 18 : 0;\n    const bdaymaxdate: Date = moment().subtract(ageLimit, 'years').toDate();\n\n    return this.fb.group({\n      completeName: ['', Validators.required],\n      birthDate: ['', Validators.required],\n      relationship: [onLoad ? 'P' : '', Validators.required],\n      relationshipLabel: [onLoad ? 'PRIMARY' : ''],\n      passportNumber: ['', Validators.required],\n      physicianName: [null],\n      bdaymindate: [bdaymindate],\n      bdaymaxdate: [bdaymaxdate],\n    });\n  }\n\n  loadTraveler(completeName: string, birthDate: Date, relationship: string, relationshipLabel: string, passportNumber: string, physicianName: string): FormGroup {\n    const bdaymindate: Date = moment().subtract(relationship == 'C' ? 21 : 65, 'years').toDate();\n    const bdaymaxdate: Date = moment().subtract(relationship == 'C' ? 0 : 18, 'years').toDate();\n\n    return this.fb.group({\n      completeName: [completeName, Validators.required],\n      birthDate: [birthDate, Validators.required],\n      relationship: [relationship, Validators.required],\n      relationshipLabel: [relationshipLabel],\n      passportNumber: [passportNumber, Validators.required],\n      physicianName: [physicianName],\n      bdaymindate: [bdaymindate],\n      bdaymaxdate: [bdaymaxdate],\n    });\n  }\n\n  addTraveler() {\n    this.travelers().push(this.newTraveler(false));\n    //if traveler is more than 1\n    this.travelDetails.insuranceCoverage = \"F\"; //family\n\n    //hides the add travel button if traveler head count is more than 5\n    var travelers = this.quoteForm.get('travelers').value;\n    this.travelerHeadCount = travelers.length;\n  }\n\n  removeTraveler(index: number) {\n    this.travelers().removeAt(index);\n\n    //shows the add travel button if traveler head count is less than 5\n    var travelers = this.quoteForm.get('travelers').value;\n    this.travelerHeadCount = travelers.length;\n    if (travelers.length == 1) {\n      //if traveler is primary only\n      this.travelDetails.insuranceCoverage = \"I\"; //individual\n    }\n  }\n\n  removeTravelers() {\n    // removing all travelers\n    var travelers = this.quoteForm.get('travelers').value;\n    if (travelers.length > 0) {\n      // loop until all accessories removed\n      this.travelers().removeAt(0);\n      this.removeTravelers();\n    }\n  }\n\n  populateCoverage(coverageList: any[]) {\n    this.coverageList = coverageList;\n    this.showCoverage = true;\n    this.triggerCoverage = this.triggerCoverage + 1;\n  }\n\n  populatePaymentBreakdown(breakdown: any[], receipt: {}) {\n    this.paymentBreakdown = breakdown;\n    this.paymentReceipt = receipt;\n    this.showPaymentBreakdown = true;\n    this.triggerBreakdown = this.triggerBreakdown + 1;\n    Utility.scroll('paymentBreakdown');\n  }\n\n  proceed(type: number) {\n    //if user changes affecting values\n    const hasAffectingTraveler = this.checkAffectingTravelers();\n    const hasChanges = this.changedValues.length != 0 || hasAffectingTraveler;\n\n    const hasQuotationNumber = !Utility.isUndefined(this.travelDetails.quotationNumber);\n    const isTemporaryQuotation = hasQuotationNumber && this.travelDetails.quotationNumber.startsWith('999');\n    this.travelDetails.affecting = !hasQuotationNumber ||\n      (hasQuotationNumber && isTemporaryQuotation) ||\n      (hasQuotationNumber && !isTemporaryQuotation && hasChanges);\n    if (hasChanges) {\n      this.openProceedModal(type);\n    } else {\n      switch (type) {\n        case 1: {\n          this.issueQuote('S');\n          break;\n        }\n        case 2: {\n          this.issueQuote('N');\n          break;\n        }\n        case 3: {\n          this.savePolicy();\n          break;\n        }\n        default: {\n          this.postPolicy();\n          break;\n        }\n      }\n    }\n  }\n\n  openProceedModal(type: number): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      generateBtn: type == 1 || type == 2 || type == 3,\n      saveBtn: type == 4\n    };\n\n    this.dialogRef = this.dialog.open(this.proceedModal, dialogConfig);\n  }\n\n  openValidationModal(q: FormGroup, g: FormGroup, c: FormGroup): void {\n    //clear arrays\n    let invalid = [];\n    this.invalidForms = [];\n\n    //list of incorrect label names\n    var formLabels = [\n      {cbOneTripOnly : 'oneTripOnly'},\n      {name : \"client'sName\"}\n    ]\n\n    var quoteArr = Utility.findInvalidControls(q);\n    invalid.push(...quoteArr);\n\n    var groupPolicyArr = Utility.findInvalidControls(g);\n    invalid.push(...groupPolicyArr);\n\n    var policyHolderArr = Utility.findInvalidControls(c);\n    invalid.push(...policyHolderArr);\n    \n    invalid.forEach((i) => {\n      formLabels.forEach(f => {\n        var correctLabel = f[i];\n        if (!Utility.isUndefined(correctLabel)) {\n          //replace label\n          i = correctLabel;\n        }\n      });\n\n      let label : string = i.replace(/([A-Z])/g, ' $1').trim();\n      this.invalidForms.push(label.toLowerCase());\n    });\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.width = '500px';\n\n    this.dialogRef = this.dialog.open(this.validationModal, dialogConfig);\n  }\n\n  openPaymentBreakdownModal(receipt: any, breakdown: any, isPostPolicy: boolean) {\n    const modalData = {\n      number: isPostPolicy ? this.travelDetails.policyNumber : this.travelDetails.quotationNumber,\n      product: this.codeName,\n      payment: \"ANNUAL\",\n      receipt: receipt,\n      breakdown: breakdown,\n      showExchangeRate: true,\n      isPostPolicy: isPostPolicy,\n      line: 'TRAVEL'\n    };\n\n    this.dialog.open(PaymentBreakdownModalComponent, {\n      width: '1000px',\n      data: modalData\n    });\n  }\n\n  manageBtn(opt: number) {\n    if (opt == 1) {\n      //hides payment breakdown panel\n      this.showPaymentBreakdown = false;\n      this.editMode = true;\n    }\n\n    if (this.isIssuance) {\n      this.showIssuanceGenerateBtn = (opt == 1);\n      this.showSaveBtn = (opt == 2);\n      this.showPostBtn = (opt == 3);\n      this.showPrintBtn = (opt == 4);\n      this.showNewPolicyBtn = (opt == 5);\n    } else {\n      this.showGenerateBtn = (opt == 1);\n      this.showIssueQuoteBtn = (opt == 2);\n      this.showProceedToIssuanceBtn = (opt == 3);\n    }\n  }\n\n  newQuote() {\n    this.newPage(page.QUO.TRA);\n  }\n\n  newPolicy() {\n    this.newPage(page.ISS.TRA);\n  }\n\n  newPage(page : string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n\n  checkAffectingTravelers() {\n    let hasTravelerChanges = false;\n\n    if (!Utility.isUndefined(this.prevTravelDetails)) {\n      this.changedTravelerValues = [];\n\n      var travelers = this.quoteForm.get('travelers').value;\n      const length = travelers.length;\n      let prevlength = 0;\n      if ('travelers' in this.prevTravelDetails) {\n        const prevTravelers = this.prevTravelDetails.travelers;\n        prevlength = prevTravelers.length;\n        if (prevlength != length) {\n          if (prevlength > length) {\n            var diff = prevlength - length;\n            var label = diff == 1 ? \" traveler\" : \" travelers\";\n            this.changedTravelerValues.push(\n              \"Traveler: Deleted \" + diff + label);\n          } else {\n            var diff = length - prevlength;\n            var label = diff == 1 ? \" traveler\" : \" travelers\";\n            this.changedTravelerValues.push(\n              \"Traveler: Added \" + diff + label);\n          }\n        }\n\n        prevTravelers.forEach((tra : Traveler) => {\n          let matched = false;\n          travelers.forEach((tra1: Traveler) => {\n            if (tra.completeName == tra1.completeName) {\n              matched = true;\n              if (tra.relationship != tra1.relationship) {\n                this.changedTravelerValues.push(\n                  \"Traveler relationship: Changed \" + tra.relationshipLabel + \" to \" + tra1.relationshipLabel);\n              }\n              if (tra.passportNumber != tra1.passportNumber) {\n                this.changedTravelerValues.push(\n                  \"Traveler Passport Number: Changed \" + tra.passportNumber + \" to \" + tra1.passportNumber);\n              }\n\n              const prevDate = new Date(tra.birthDate);\n              const prevBdate = prevDate.getMonth() + \"/\" + prevDate.getDate() + \"/\" + prevDate.getFullYear();\n\n              const currDate = tra1.birthDate;\n              const currBdate = currDate.getMonth() + \"/\" + currDate.getDate() + \"/\" + currDate.getFullYear();\n              if (prevBdate != currBdate) {\n                this.changedTravelerValues.push(\n                  \"Traveler Birthdate: Changed \" + prevBdate + \" to \" + currBdate);\n              }\n            }\n          });\n          if (!matched) {\n            this.changedTravelerValues.push(\n              \"Traveler: Changed Traveler List\");\n          }\n        });\n      }\n      hasTravelerChanges = this.changedTravelerValues.length > 0;\n    }\n\n    return hasTravelerChanges;\n  }\n\n  affecting(key: string, label: string) {\n    if (!Utility.isUndefined(this.travelDetails.quotationNumber) && this.prevTravelDetails != null) {\n      let prev = this.prevTravelDetails[key] == undefined ? \"\" : this.prevTravelDetails[key];\n      let curr = this.travelDetails[key] == undefined ? \"\" : this.travelDetails[key];\n      if (curr instanceof Date) {\n        curr = curr.getMonth() + \"/\" + curr.getDate() + \"/\" + curr.getFullYear();\n        if (!Utility.isUndefined(prev)) {\n          var prevDate = new Date(prev);\n          prev = prevDate.getMonth() + \"/\" + prevDate.getDate() + \"/\" + prevDate.getFullYear();\n        }\n      }\n\n      if (prev != curr) {\n        if (!this.changedValues.includes(label)) {\n          //if changedValues length is greater than 0, request is affecting\n          this.changedValues.push(label);\n        }\n      } else {\n        //remove all occurence\n        this.changedValues = this.changedValues.filter(v => v !== label);\n      }\n    }\n  }\n\n  printQuote() {\n    this.tis.printQuote(this.travelDetails.quotationNumber);\n  }\n\n  printPolicy() {\n    this.tis.printPolicy(this.travelDetails.policyNumber);\n  }\n\n  proceedToIssuance() {\n    this.tis.proceedToIssuance(this.travelDetails.quotationNumber);\n  }\n\n  getProductCode() {\n    this.codeName = null;\n\n    let travelPack: string;\n    this.LOV.packageLOV.forEach(tp => {\n      if (tp.TRAVEL_PACK == this.travelDetails.travelPackage) {\n        travelPack = tp.NOM_VALOR;\n      }\n    });\n\n    let coverageOption: string;\n    this.LOV.coverageOptionLOV.forEach(co => {\n      if (co.COVERAGE_OPTIONS == this.travelDetails.coverageOption) {\n        coverageOption = co.NOM_VALOR == 'ASSISTANCE ONLY' ? 'ASSIST ONLY' : co.NOM_VALOR;\n      }\n    });\n\n    let medicalExpenses: string;\n    this.LOV.medicalExpensesLOV.forEach(me => {\n      if (me.VAL_CAMPO1 == this.travelDetails.medicalExpenses) {\n        const name: string = me.VAL_CAMPO2;\n        const value: string = me.VAL_CAMPO1;\n        medicalExpenses = name.includes(\"EUROS\") ? value.concat(\" euros\") : value;\n      }\n    });\n\n    this.codeName = this.travelDetails.travelPackage == 'D' ?\n      \"DOMESTIC \".concat(medicalExpenses) :\n      travelPack + \" \" + coverageOption + \" \" + medicalExpenses;\n\n    this.LOV.productListLOV.forEach(product => {\n      if (this.codeName == product.NOM_MODALIDAD) {\n        this.travelDetails.product = product.COD_MODALIDAD;\n      }\n    });\n  }\n\n  //getting error or warning items\n  getErrorItems(res: ReturnDTO, mcaTmpPptoMph: string, isIssuance: boolean) {\n    this.withTechControl = false;\n    const resErrorCode = res.obj[\"errorCode\"];\n    const resError = res.obj[\"error\"];\n\n    const isPostPolicy = Utility.isUndefined(resErrorCode);\n    let items: any[] = isPostPolicy \n      ? [\"Error occured while posting policy. Please contact administration.\"]\n      : [\"Error code is \" + resErrorCode + \" but does not return any error message. Please contact administration.\"];\n\n    if (!Utility.isUndefined(resError)) {\n      const errArr = resError.split(\"~\");\n      if (errArr.length) {\n        var arr = [];\n        errArr.forEach((err: string) => {\n          if (!Utility.isEmpty(err)) {\n            arr.push(err);\n          }\n        });\n\n        const resStatus = res.obj[\"status\"];\n        if (arr.length) {\n          if (!resStatus && isPostPolicy) {\n            //has error - can't proceed\n            items = [\"Failed to generate quotation number due to following reason/s:\"].concat(arr);\n          } else {\n            this.withTechControl = true;\n            // has warning - can proceed\n            if (isIssuance) {\n              items = [\"Quotation has technical control due to following reason/s:\"].concat(arr);\n            } else {\n              items = (\"N\" == mcaTmpPptoMph) ? [\"Routed for approval due to following reason/s:\"].concat(arr) : arr;\n            }\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  assembleData(mcaTmpPptoMph: string) {\n    // S for generation and N for issue quotation\n    this.travelDetails.mcaTmpPptoMph = mcaTmpPptoMph;\n\n    // includes group policy to travel details DTO\n    this.travelDetails.groupPolicy = this.groupPolicy;\n    // includes policy holder to travel details DTO\n    this.travelDetails.policyHolder = this.policyHolder;\n\n    // includes travelers to travel details DTO\n    var travelers = this.quoteForm.get('travelers').value;\n    this.travelDetails.travelers = travelers.length ? travelers : [];\n\n    // get product code\n    this.getProductCode();\n\n    // to trigger changes when regenerating quotation\n    this.showPaymentBreakdown = false;\n    this.showCoverage = false;\n  }\n\n  //generate and issue quote button\n  issueQuote(mcaTmpPptoMph: string) {\n    this.assembleData(mcaTmpPptoMph);\n\n    this.tis.issueQuote(this.travelDetails).then(res => {\n      if (res.status) {\n        //clear affecting fields\n        this.changedValues = [];\n\n        const items = this.getErrorItems(res, mcaTmpPptoMph, false);\n        const status = res.obj[\"status\"];\n        if (status) {\n          //duplicating car details for comparison\n          const deepClone = JSON.parse(JSON.stringify(this.travelDetails));\n          this.prevTravelDetails = deepClone;\n\n          this.editMode = false;\n          const errorCode = res.obj[\"errorCode\"];\n          if (errorCode == \"S\") {\n            //if quotation has a warning\n            this.modalRef = Utility.showHTMLWarning(this.bms, items);\n          }\n\n          const policyNumber = res.obj[\"policyNumber\"];\n          this.travelDetails.quotationNumber = policyNumber;\n\n          const breakdown = res.obj[\"breakdown\"];\n          const receipt = res.obj[\"receipt\"];\n\n          if (\"S\" == mcaTmpPptoMph) {\n            //for generation of quote\n            const message = \"You have successfully generated a quotation - \" + policyNumber;\n            this.modalRef = Utility.showInfo(this.bms, message);\n\n            const coverageList = res.obj[\"coverageList\"];\n            this.populateCoverage(coverageList);\n\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.manageBtn(2);\n          } else {\n            // for issuing the quote\n            this.openPaymentBreakdownModal(receipt, breakdown, false);\n            this.manageBtn(3);\n          }\n        } else {\n          this.modalRef = Utility.showHTMLError(this.bms, items);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  //save policy button\n  savePolicy() {\n    this.assembleData(\"N\");\n\n    this.tis.savePolicy(this.travelDetails).then(res => {\n      if (res.status) {\n        //clear affecting fields\n        this.changedValues = [];\n\n        var items = this.getErrorItems(res, this.travelDetails.mcaTmpPptoMph, true);\n        const status = res.obj[\"status\"];\n        if (status) {\n          //duplicating travel details for comparison\n          const deepClone = JSON.parse(JSON.stringify(this.travelDetails));\n          this.prevTravelDetails = deepClone;\n\n          this.editMode = false;\n\n          const errorCode = res.obj[\"errorCode\"];\n          const policyNumber = res.obj[\"policyNumber\"];\n          this.travelDetails.quotationNumber = policyNumber;\n\n          const message = \"You have successfully generated a new quotation: \" + policyNumber;\n          this.modalRef = Utility.showInfo(this.bms, message);\n\n          const breakdown = res.obj[\"breakdown\"];\n          const receipt = res.obj[\"receipt\"];\n          this.populatePaymentBreakdown(breakdown, receipt);\n\n          this.withTechControl = errorCode == 'S';\n          if (this.withTechControl) {\n            //if quotation has a warning\n            if (this.travelDetails.affecting) {\n              items = [\"Updated quotation number is: \" + policyNumber].concat(items);\n            }\n            this.modalRef = Utility.showHTMLWarning(this.bms, items);\n          } else {\n            const message = \"Policy saved successfully.\";\n            this.modalRef = Utility.showInfo(this.bms, message);\n          }\n          this.editMode = false;\n          this.manageBtn(3);\n        } else {\n          this.modalRef = Utility.showHTMLError(this.bms, items);\n        }\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  //post policy button\n  postPolicy() {\n    this.assembleData(\"N\");\n\n    if (this.withTechControl) {\n      this.modalRef = Utility.showWarning(this.bms, \"Quotation has technical control. Please request for approval first before posting the policy.\");\n    } else {\n      this.tis.postPolicy(this.travelDetails).then(res => {\n        if (res.status) {\n          //clear affecting fields\n          this.changedValues = [];\n\n          var items = this.getErrorItems(res, this.travelDetails.mcaTmpPptoMph, true);\n          const status = res.obj[\"status\"];\n          const policyNumber = res.obj[\"policyNumber\"];\n          if (status && !Utility.isUndefined(policyNumber)) {\n            this.editMode = false;\n            this.travelDetails.policyNumber = policyNumber;\n\n            const breakdown = res.obj[\"breakdown\"];\n            const receipt = res.obj[\"receipt\"];\n            this.populatePaymentBreakdown(breakdown, receipt);\n            this.openPaymentBreakdownModal(receipt, breakdown, true);\n            this.manageBtn(4);\n          } else {\n            this.manageBtn(5);\n            this.modalRef = Utility.showHTMLError(this.bms, items);\n          }\n        } else {\n          this.manageBtn(5);\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      });\n    }\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVsb2FkL3JlbG9hZC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reload',\n  templateUrl: './reload.component.html',\n  styleUrls: ['./reload.component.css']\n})\nexport class ReloadComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    //reloading page\n    this.router.navigate(['/']);\n  }\n\n}\n","export default \"textarea {\\n    height: 208px;\\n}\\n\\nngx-dropzone {\\n    width: 100%;\\n}\\n\\nngx-dropzone-preview {\\n    width: 200px;\\n    height: 100px;\\n    padding: 10px;\\n    margin: 10px;\\n    border-radius: 10px;\\n    overflow: hidden;\\n    position: relative;\\n    display: block;\\n}\\n\\nngx-dropzone,\\n.custom-dropzone {\\n  margin: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXF1ZXN0LWNyZWF0ZS9yZXF1ZXN0LWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsYUFBYTtJQUNiLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixjQUFjO0FBQ2xCOztBQUVBOztFQUVFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVxdWVzdC1jcmVhdGUvcmVxdWVzdC1jcmVhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRleHRhcmVhIHtcbiAgICBoZWlnaHQ6IDIwOHB4O1xufVxuXG5uZ3gtZHJvcHpvbmUge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG5uZ3gtZHJvcHpvbmUtcHJldmlldyB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogMTAwcHg7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxubmd4LWRyb3B6b25lLFxuLmN1c3RvbS1kcm9wem9uZSB7XG4gIG1hcmdpbjogMjBweDtcbn0iXX0= */\";","import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  RequestDetails\n} from 'src/app/objects/RequestDetails';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  RequestService\n} from 'src/app/services/request.service';\n\n@Component({\n  selector: 'app-request-create',\n  templateUrl: './request-create.component.html',\n  styleUrls: ['./request-create.component.css']\n})\nexport class RequestCreateComponent implements OnInit {\n  requestDetails = new RequestDetails();\n  requestForm: FormGroup;\n\n  showPolicyDetails: boolean = false;\n  showDetails: boolean = false;\n\n  showEndorsementRT = false;\n  showRenewalRT = false;\n  showUnderwritingRT = false;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private rs: RequestService,\n    private bms: BsModalService) {\n    this.createForm();\n    this.setValidations();\n  }\n\n  ngOnInit(): void {}\n\n  files: File[] = [];\n\n  onSelect(event) {\n    const addedFiles = event.addedFiles;\n    const hasFiles = event.addedFiles.length\n    if (hasFiles) {\n      addedFiles.forEach(file => {\n        if (file.size <= 9000000) {\n          this.files.push(file);\n        } else {\n          const message = \"Can not upload file \" + file.name + \". Allowed file size is 9MB below only.\"\n          this.modalRef = Utility.showError(this.bms, message);\n        }\n      });\n    }\n  }\n\n  onRemove(event) {\n    console.log(event);\n    this.files.splice(this.files.indexOf(event), 1);\n  }\n\n  createForm() {\n    this.requestForm = this.fb.group({\n      type: ['', Validators.required],\n      requestType: ['', Validators.required],\n      issueType: ['', Validators.required],\n      policyNumber: ['', Validators.required],\n      reason: ['', Validators.required],\n      agentEmail: ['', [Validators.required, Validators.email]],\n      name: ['', Validators.required],\n\n      type1: ['', Validators.required],\n      type2: ['', Validators.required],\n      branch: ['', Validators.required],\n      line: ['', Validators.required],\n      subline: ['', Validators.required],\n      typeOfPolicy: ['', Validators.required],\n      clientName: ['', Validators.required],\n      clientGroup: ['', Validators.required],\n      copyNotify: ['', Validators.required],\n      comments: ['', Validators.required],\n    });\n  }\n\n  // test(q: FormGroup) {\n  //   let invalid = [];\n\n  //   invalid = this.findInvalidControls(invalid, q);\n  //   alert(invalid);\n  // }\n\n  // public findInvalidControls(invalid: any[], form: FormGroup) {\n  //   const controls = form.controls;\n  //   for (const name in controls) {\n  //     if (controls[name].invalid) {\n  //       invalid.push(name);\n  //     }\n  //     if (controls[name].pristine) {\n  //       invalid.push(name);\n  //     }\n  //   }\n  //   return invalid;\n  // }\n\n  setValidations() {\n    this.requestForm.get('type').valueChanges.subscribe(type => {\n      if (type !== undefined) {\n\n        this.showPolicyDetails = type == 'P';\n        this.showDetails = type !== 'P';\n\n        this.showEndorsementRT = type == 'E';\n        this.showRenewalRT = type == 'R';\n        this.showUnderwritingRT = type == 'U';\n\n        Utility.updateValidator(this.requestForm.get('type1'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('type2'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('branch'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('line'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('subline'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('typeOfPolicy'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('clientName'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('clientGroup'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('copyNotify'), this.showPolicyDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('comments'), this.showPolicyDetails ? [Validators.required] : null);\n\n        Utility.updateValidator(this.requestForm.get('requestType'), this.showDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('policyNumber'), this.showDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('reason'), this.showDetails ? [Validators.required] : null);\n        Utility.updateValidator(this.requestForm.get('agentEmail'), this.showDetails ? [Validators.required, Validators.email] : null);\n        Utility.updateValidator(this.requestForm.get('name'), this.showDetails ? [Validators.required] : null);\n\n        Utility.updateValidator(this.requestForm.get('issueType'), this.showUnderwritingRT ? [Validators.required] : null);\n\n        // set default request type and issue type\n        if (type == 'E') { //endorsement\n          this.requestDetails.requestType = '1';\n        } else if (type == 'R') { //renewal\n          this.requestDetails.requestType = '5';\n        } else if (type == 'U') { //underwriting\n          this.requestDetails.requestType = 'S';\n          this.requestDetails.issueType = 'P';\n        }\n      }\n\n    });\n  }\n\n  request(requestDetails: RequestDetails) {\n    if (requestDetails.type == 'P') { // policy request\n      this.rs.policy(this.files, requestDetails).then((res) => {\n        if (res.status) {\n          this.modalRef = Utility.showInfo(this.bms, res.message);\n        } else {\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      });\n    } else {\n      this.rs.request(requestDetails, requestDetails.type).then((res) => {\n        if (res.status) {\n          this.modalRef = Utility.showInfo(this.bms, res.message);\n        } else {\n          this.modalRef = Utility.showError(this.bms, res.message);\n        }\n      });\n    }\n  }\n}","export default \".mat-dialog-title {\\n  background: #3a3a3a;\\n  color: #fff;\\n  text-align: center;\\n  padding: 10px 0;\\n}\\n\\ntextarea {\\n  height: 208px;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXF1ZXN0LWRldGFpbHMtbW9kYWwvcmVxdWVzdC1kZXRhaWxzLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9yZXF1ZXN0LWRldGFpbHMtbW9kYWwvcmVxdWVzdC1kZXRhaWxzLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWRpYWxvZy10aXRsZSB7XG4gIGJhY2tncm91bmQ6ICMzYTNhM2E7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cblxudGV4dGFyZWEge1xuICBoZWlnaHQ6IDIwOHB4O1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  Inject\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport {\n  MatDialogRef,\n  MatTableDataSource,\n  MAT_DIALOG_DATA\n} from '@angular/material';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  ReplyDetails\n} from 'src/app/objects/ReplyDetails';\nimport {\n  RequestDetails\n} from 'src/app/objects/RequestDetails';\nimport {\n  RequestDetailsList\n} from 'src/app/objects/RequestDetailsList';\nimport {\n  RequestDetailsMessageList\n} from 'src/app/objects/RequestDetailsMessageList';\nimport {\n  RequestService\n} from 'src/app/services/request.service';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Component({\n  selector: 'app-request-details-modal',\n  templateUrl: './request-details-modal.component.html',\n  styleUrls: ['./request-details-modal.component.css']\n})\nexport class RequestDetailsModalComponent implements OnInit {\n  displayedColumns: string[] = ['requestHandler', 'message', 'user', 'source', 'postDate'];\n  dataSource = new MatTableDataSource();\n\n  requestForm: FormGroup;\n  requestDetailsList: RequestDetailsList = new RequestDetailsList();\n  requestDetails: RequestDetails = new RequestDetails();\n  replyDetails = new ReplyDetails();\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(public dialogRef: MatDialogRef < RequestDetailsModalComponent > ,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private bms: BsModalService,\n    private rs: RequestService,\n  ) {}\n\n  ngOnInit(): void {\n    this.requestDetailsList = this.data;\n    this.createForm();\n    this.getList();\n  }\n\n  createForm() {\n    this.requestForm = this.fb.group({\n      requestId: [null],\n      requestHandler: [null],\n      requestType: [null],\n      policyNumber: [null],\n      status: [null],\n      message: [null],\n      replyMessage: ['', Validators.required],\n      agentEmail: ['', [Validators.email, Validators.required]],\n      name: ['', Validators.required],\n    });\n  }\n\n  getList() {\n    this.rs.getMessageList(this.requestDetailsList.requestId).then((res) => {\n      if (res.status) {\n        let data: RequestDetailsMessageList[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  reply(): void {\n    this.replyDetails.requestId = this.requestDetailsList.requestId;\n    this.replyDetails.requestType = this.requestDetailsList.requestType;\n\n    this.rs.reply(this.replyDetails).then((res) => {\n      if (res.status) {\n        this.modalRef = Utility.showInfo(this.bms, res.message);\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n      this.dialogRef.close();\n    });\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n}","export default \"table {\\n  width: 100%;\\n}\\n\\n.mat-row:hover{\\n    background: azure;\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXF1ZXN0LWxpc3QvcmVxdWVzdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVxdWVzdC1saXN0L3JlcXVlc3QtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1yb3c6aG92ZXJ7XG4gICAgYmFja2dyb3VuZDogYXp1cmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  MatSort\n} from '@angular/material/sort';\nimport {\n  MatPaginator\n} from '@angular/material/paginator';\nimport {\n  MatTableDataSource\n} from '@angular/material/table';\n\nimport {\n  RequestDetailsModalComponent\n} from '../request-details-modal/request-details-modal.component';\nimport {\n  MatDialog\n} from '@angular/material';\nimport {\n  RequestDetailsList\n} from 'src/app/objects/RequestDetailsList';\nimport {\n  RequestService\n} from 'src/app/services/request.service';\nimport {\n  PageFilter\n} from 'src/app/objects/PageFilter';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-request-list',\n  templateUrl: './request-list.component.html',\n  styleUrls: ['./request-list.component.css']\n})\nexport class RequestListComponent implements OnInit {\n\n  displayedColumns: string[] = ['requestType', 'requestId', 'policyNumber', 'status', 'requestHandler', 'user'];\n  dataSource = new MatTableDataSource();\n\n  requestTypeItems = [\"APPROVAL\", \"CANCELLATION\", \"RENEWAL\", \"GENERAL\"];\n  statusItems = [\"COMPLETED\", \"STOPPED\", \"OPEN\"];\n\n  pageFilter: PageFilter = new PageFilter();\n\n  currentPage: number = 0;\n  pageSize: number = 10;\n  sortBy: String = 'requestType';\n  sortOrder: String = 'asc';\n\n  totalItem = 0;\n  pageSizeOptions = [10, 20, 50, 100];\n\n  @ViewChild(MatSort, {\n    static: true\n  }) sort: MatSort;\n  @ViewChild(MatPaginator, {\n    static: true\n  }) paginator: MatPaginator;\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  filterForm: FormGroup;\n\n  constructor(public dialog: MatDialog,\n    private rs: RequestService,\n    private bms: BsModalService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.getList();\n    this.createForm();\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      requestType: [null],\n      requestId: [null],\n      policyNumber: [null],\n      status: [null],\n      requestHandler: [null],\n      user: [null],\n    });\n  }\n\n  setPageFilters() {\n    this.pageFilter.currentPage = this.currentPage;\n    this.pageFilter.pageSize = this.pageSize;\n    this.pageFilter.sortBy = this.sortBy;\n    this.pageFilter.sortOrder = this.sortOrder;\n  }\n\n  getList() {\n    this.setPageFilters();\n    this.rs.getList(this.pageFilter).then((res) => {\n      if (res.status) {\n        let data: RequestDetailsList[] = [];\n        data = res.obj['list'];\n        this.dataSource = new MatTableDataSource(data);\n        this.totalItem = res.obj['totalItem'];\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  pageChange(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.getList();\n  }\n\n  sortChange(e: any) {\n    this.currentPage = 0;\n    if (e.direction != '') {\n      this.sortBy = e.active;\n      this.sortOrder = e.direction;\n    } else {\n      // sort to default\n      this.sortBy = 'requestType';\n      this.sortOrder = 'asc';\n    }\n    this.getList();\n  }\n\n  getDetails(row: RequestDetailsList) {\n    this.openDetailsModal(row);\n  }\n\n  openDetailsModal(details: RequestDetailsList) {\n    this.dialog.open(RequestDetailsModalComponent, {\n      width: '1000px',\n      data: details\n    });\n  }\n\n  apply() {\n    this.getList();\n  }\n\n  reset() {\n    this.filterForm.get('requestType').setValue('');\n    this.filterForm.get('requestId').setValue('');\n    this.filterForm.get('policyNumber').setValue('');\n    this.filterForm.get('status').setValue('');\n    this.filterForm.get('requestHandler').setValue('');\n    this.filterForm.get('user').setValue('');\n\n    this.getList();\n  }\n}","export default \".sidebar-brand img {\\n  max-width: 90%;\\n  max-height: 55px;\\n}\\n\\n#sticky #accordionSidebar {\\n  height: 100vh !important;\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  -ms-overflow-style: none;\\n  /* Internet Explorer 10+ */\\n  scrollbar-width: none;\\n  /* Firefox */\\n}\\n\\n#sticky #accordionSidebar::-webkit-scrollbar {\\n  display: none;\\n  /* Safari and Chrome */\\n}\\n\\n.navbar-nav {\\n  height: 100vh !important;\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zaWRlbmF2L3NpZGVuYXYuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQix3QkFBd0I7RUFDeEIsMEJBQTBCO0VBQzFCLHFCQUFxQjtFQUNyQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0Usd0JBQXdCO0VBQ3hCLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lkZW5hdi9zaWRlbmF2LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZWJhci1icmFuZCBpbWcge1xuICBtYXgtd2lkdGg6IDkwJTtcbiAgbWF4LWhlaWdodDogNTVweDtcbn1cblxuI3N0aWNreSAjYWNjb3JkaW9uU2lkZWJhciB7XG4gIGhlaWdodDogMTAwdmggIWltcG9ydGFudDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcbiAgLyogSW50ZXJuZXQgRXhwbG9yZXIgMTArICovXG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTtcbiAgLyogRmlyZWZveCAqL1xufVxuXG4jc3RpY2t5ICNhY2NvcmRpb25TaWRlYmFyOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIC8qIFNhZmFyaSBhbmQgQ2hyb21lICovXG59XG5cbi5uYXZiYXItbmF2IHtcbiAgaGVpZ2h0OiAxMDB2aCAhaW1wb3J0YW50O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59Il19 */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  Globals\n} from '../../utils/global';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  page\n} from '../../constants/page';\nimport {\n  MENU\n} from '../../constants/local.storage';\nimport {\n  AuthenticationService\n} from '../../services/authentication.service';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnInit {\n  currentUser = this.authenticationService.currentUserValue;\n  hasSelectedAgent = !Utility.isUndefined(this.currentUser.selectedAgent);\n  p = page; //constant pages\n  menu = JSON.parse(localStorage.getItem(MENU));\n  logo = \"mivo-logo/mivo-logo-light\";\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private router: Router) {}\n\n  ngOnInit() {\n    // this.logo = \"partners/aap\";\n  }\n\n  setPage(val: String) {\n    Globals.setPage(val);\n  }\n\n  setAppPage(val: String) {\n    Globals.setPage(val);\n    Globals.setLoadQuotation(false);\n    this.router.navigate(['/reload']);\n  }\n\n  get page() {\n    return Globals.page;\n  }\n\n  get appType() {\n    return Globals.getAppType();\n  }\n}\n","export default \".fe-rate {\\n    font-size: 20px;\\n}\\n\\n.fas.fa-dollar-sign {\\n    color: #4caf50;\\n}\\n\\n.fas.fa-euro-sign {\\n    color: #03a9f4;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZW1wbGF0ZS90ZW1wbGF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy90ZW1wbGF0ZS90ZW1wbGF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZlLXJhdGUge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmZhcy5mYS1kb2xsYXItc2lnbiB7XG4gICAgY29sb3I6ICM0Y2FmNTA7XG59XG5cbi5mYXMuZmEtZXVyby1zaWduIHtcbiAgICBjb2xvcjogIzAzYTlmNDtcbn0iXX0= */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  Globals\n} from '../../utils/global';\nimport {\n  page\n} from '../../constants/page';\nimport {\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  filter\n} from 'rxjs/operators';\nimport { PaymentService } from 'src/app/services/payment.service';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.css']\n})\nexport class TemplateComponent implements OnInit {\n  p = page; //constant pages\n  sideNavClass = \"\";\n\n  constructor(private route: ActivatedRoute, private paymentService: PaymentService) {}\n\n  ngOnInit() {\n    this.route.queryParams\n      .subscribe(params => {\n        if (params.invoiceNo) {\n          this.processPayment(params);\n        }\n      });\n    this.route.queryParams\n      .pipe(filter(params => params.successPage))\n      .subscribe(params => {\n        if (params.successPage) {\n          Globals.setPage(this.p.ACC.OUT);\n        }\n      });\n  }\n\n  get page() {\n    return Globals.page;\n  }\n\n  processPayment(params: any) {\n    this.paymentService.processPaymentViaGlobalPay(params).then(response => {\n      console.log('response: ', response);\n    });\n  }\n}\n","export default \".container {\\n  width: 100%;\\n  min-height: 100vh;\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 15px;\\n\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-size: cover;\\n  position: relative;\\n  z-index: 1;\\n}\\n\\n.container::before {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  z-index: -1;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.wrap {\\n  max-width: 1200px;\\n  height: 650px;\\n  width: 100%;\\n  border-radius: 5px;\\n  overflow: hidden;\\n  background: #fff;\\n}\\n\\n.brand-logo {\\n  cursor: pointer;\\n}\\n\\n.brand-logo img {\\n  width: 100%;\\n  margin: 35px 0 0;\\n  padding: 20px;\\n}\\n\\n.col-lg-4.menu {\\n  padding-left: 30px;\\n  background: #2a2a2a;\\n}\\n\\n.col-lg-8.details {\\n  padding: 30px 40px 0 30px;\\n  text-align: justify;\\n}\\n\\nul.terms-menu {\\n  display: block;\\n  margin: 10px;\\n  top: 90px;\\n  position: relative;\\n  list-style: none;\\n  padding: 0;\\n}\\n\\nul.terms-menu li {\\n  padding: 10px 5px;\\n  background-color: #5e5e5e;\\n  border: 1px solid #525252;\\n  margin: 20px 0;\\n  text-align: center;\\n  border-radius: 5px;\\n  color: #fbfbfb;\\n}\\n\\nul.terms-menu li:hover {\\n  background-color: #e8e8e8;\\n  border: 1px solid #2f2f2f;\\n  color: #252525;\\n  cursor: pointer;\\n  font-weight: 700;\\n}\\n\\n.scroll {\\n  overflow: scroll;\\n  height: 100%;\\n}\\n\\n.scroll-wrapper {\\n  height: 635px;\\n}\\n\\n.top-20 {\\n  padding-top: 20px;\\n}\\n\\nh5 {\\n  font-weight: bold;\\n}\\n\\nh2 {\\n  font-weight: bold;\\n  text-align: center;\\n  margin: 20px 0;\\n}\\n\\n#jurisdiction {\\n  padding-bottom: 600px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZXJtcy1hbmQtY29uZGl0aW9uL3Rlcm1zLWFuZC1jb25kaXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7RUFLakIsYUFBYTtFQUNiLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGFBQWE7O0VBRWIsNEJBQTRCO0VBQzVCLDJCQUEyQjtFQUMzQixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxXQUFXO0VBQ1gsWUFBWTtFQUNaLE1BQU07RUFDTixPQUFPO0FBQ1Q7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsYUFBYTtFQUNiLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsY0FBYztFQUNkLFlBQVk7RUFDWixTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIseUJBQXlCO0VBQ3pCLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2QsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Rlcm1zLWFuZC1jb25kaXRpb24vdGVybXMtYW5kLWNvbmRpdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiAxNXB4O1xuXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xufVxuXG4uY29udGFpbmVyOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAtMTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xufVxuXG4ud3JhcCB7XG4gIG1heC13aWR0aDogMTIwMHB4O1xuICBoZWlnaHQ6IDY1MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuXG4uYnJhbmQtbG9nbyB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmJyYW5kLWxvZ28gaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMzVweCAwIDA7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG5cbi5jb2wtbGctNC5tZW51IHtcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICBiYWNrZ3JvdW5kOiAjMmEyYTJhO1xufVxuXG4uY29sLWxnLTguZGV0YWlscyB7XG4gIHBhZGRpbmc6IDMwcHggNDBweCAwIDMwcHg7XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XG59XG5cbnVsLnRlcm1zLW1lbnUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAxMHB4O1xuICB0b3A6IDkwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxudWwudGVybXMtbWVudSBsaSB7XG4gIHBhZGRpbmc6IDEwcHggNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWU1ZTVlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjNTI1MjUyO1xuICBtYXJnaW46IDIwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGNvbG9yOiAjZmJmYmZiO1xufVxuXG51bC50ZXJtcy1tZW51IGxpOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U4ZThlODtcbiAgYm9yZGVyOiAxcHggc29saWQgIzJmMmYyZjtcbiAgY29sb3I6ICMyNTI1MjU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLnNjcm9sbCB7XG4gIG92ZXJmbG93OiBzY3JvbGw7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnNjcm9sbC13cmFwcGVyIHtcbiAgaGVpZ2h0OiA2MzVweDtcbn1cblxuLnRvcC0yMCB7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xufVxuXG5oNSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5oMiB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMjBweCAwO1xufVxuXG4janVyaXNkaWN0aW9uIHtcbiAgcGFkZGluZy1ib3R0b206IDYwMHB4O1xufSJdfQ== */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Component({\n  selector: 'app-terms-and-condition',\n  templateUrl: './terms-and-condition.component.html',\n  styleUrls: ['./terms-and-condition.component.css']\n})\nexport class TermsAndConditionComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  scrollTo(id: string) {\n    Utility.scroll(id);\n  }\n\n  redirect() {\n    window.location.href = \"/\";\n  }\n\n}\n","export default \".mat-dialog-title {\\n  background: #3a3a3a;\\n  color: #fff;\\n  text-align: center;\\n  padding: 10px 0;\\n}\\n\\nhr {\\n  margin-top: 1rem;\\n  margin-bottom: 1rem;\\n  border: 0;\\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\\n}\\n\\nh6 {\\n  font-weight: bold;\\n}\\n\\n.required-indicator {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy92aWV3LWRldGFpbHMtbW9kYWwvdmlldy1kZXRhaWxzLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixTQUFTO0VBQ1Qsd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsVUFBVTtBQUNaIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy92aWV3LWRldGFpbHMtbW9kYWwvdmlldy1kZXRhaWxzLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWRpYWxvZy10aXRsZSB7XG4gIGJhY2tncm91bmQ6ICMzYTNhM2E7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cblxuaHIge1xuICBtYXJnaW4tdG9wOiAxcmVtO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7XG59XG5cbmg2IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5yZXF1aXJlZC1pbmRpY2F0b3Ige1xuICBjb2xvcjogcmVkO1xufSJdfQ== */\";","import {\n  Component,\n  Inject,\n  OnInit\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material';\nimport {\n  BsModalRef,\n  BsModalService\n} from 'ngx-bootstrap/modal';\nimport {\n  ListAccountCommissionsPaid\n} from 'src/app/objects/ListAccountCommissionsPaid';\nimport {\n  ListAccountEstimatedCommissions\n} from 'src/app/objects/ListAccountEstimatedCommissions';\nimport {\n  ListAccountOutstandingBills\n} from 'src/app/objects/ListAccountOutstandingBills';\nimport {\n  ListAccountPremiumCollection\n} from 'src/app/objects/ListAccountPremiumCollection';\nimport {\n  ListClaimDetails\n} from 'src/app/objects/ListClaimDetails';\nimport {\n  ListClientDetails\n} from 'src/app/objects/ListClientDetails';\nimport {\n  ListPolicyActive\n} from 'src/app/objects/ListPolicyActive';\nimport {\n  ListPolicyCancelled\n} from 'src/app/objects/ListPolicyCancelled';\nimport {\n  ListPolicyExpiring\n} from 'src/app/objects/ListPolicyExpiring';\nimport {\n  ListPolicyNotRenewed\n} from 'src/app/objects/ListPolicyNotRenewed';\nimport {\n  ListPolicyProvisional\n} from 'src/app/objects/ListPolicyProvisional';\nimport {\n  ListPolicyRenewed\n} from 'src/app/objects/ListPolicyRenewed';\nimport {\n  ListQuotationActive\n} from 'src/app/objects/ListQuotationActive';\nimport {\n  ListQuotationProvisional\n} from 'src/app/objects/ListQuotationProvisional';\nimport {\n  PaymentRequest\n} from 'src/app/objects/PaymentRequest';\nimport {\n  PaymentService\n} from 'src/app/services/payment.service';\nimport {\n  page\n} from '../../constants/page';\nimport {\n  UtilitiesQueryFilter\n} from '../../objects/UtilitiesQueryFilter';\nimport {\n  UtilityQueryService\n} from '../../services/utility-query.service';\nimport {\n  Utility\n} from 'src/app/utils/utility';\nimport {\n  MIVO_LOGIN\n} from \"../../constants/local.storage\";\n\n@Component({\n  selector: 'app-view-details-modal',\n  templateUrl: './view-details-modal.component.html',\n  styleUrls: ['./view-details-modal.component.css']\n})\nexport class ViewDetailsModalComponent implements OnInit {\n\n  p = page;\n\n  isProceedToPayment = false;\n  title: string;\n  paymentForm: FormGroup;\n  paymentMethod: string = 'paynamics';\n\n  listClientDetails = new ListClientDetails();\n  listPolicyActive = new ListPolicyActive();\n  listPolicyCancelled = new ListPolicyCancelled();\n  listPolicyRenewed = new ListPolicyRenewed();\n  listPolicyNotRenewed = new ListPolicyNotRenewed();\n  listPolicyExpiring = new ListPolicyExpiring();\n  listPolicyProvisional = new ListPolicyProvisional();\n  listQuotationActive = new ListQuotationActive();\n  listQuotationProvisional = new ListQuotationProvisional();\n  listClaimDetails = new ListClaimDetails();\n  listAccountOutstandingBills = new ListAccountOutstandingBills();\n  listAccountCommissionsPaid = new ListAccountCommissionsPaid();\n  listAccountEstimatedCommissions = new ListAccountEstimatedCommissions();\n  listAccountPremiumCollection = new ListAccountPremiumCollection();\n  type: String;\n\n  //modal reference\n  modalRef: BsModalRef;\n  filter: UtilitiesQueryFilter = new UtilitiesQueryFilter();\n\n  constructor(\n    public dialogRef: MatDialogRef < ViewDetailsModalComponent > ,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private utilityQueryService: UtilityQueryService,\n    private bms: BsModalService,\n    private formBuilder: FormBuilder,\n    private paymentService: PaymentService,\n    ) {}\n\n  ngOnInit(): void {\n    this.initPaymentForm();\n    this.type = this.data.type;\n    switch (this.type) {\n      case page.CLI.CLI: {\n        this.listClientDetails = this.data;\n        break;\n      }\n      case page.CLI.ACT: {\n        this.listPolicyActive = this.data;\n        break;\n      }\n      case page.CLI.CAN: {\n        this.listPolicyCancelled = this.data;\n        break;\n      }\n      case page.CLI.REN: {\n        this.listPolicyRenewed = this.data;\n        break;\n      }\n      case page.CLI.NOT: {\n        this.listPolicyNotRenewed = this.data;\n        break;\n      }\n      case page.CLI.EXP: {\n        this.listPolicyExpiring = this.data;\n        break;\n      }\n      case page.CLI.PRO: {\n        this.listPolicyProvisional = this.data;\n        break;\n      }\n      case page.CLI.ACTQ: {\n        this.listQuotationActive = this.data;\n        break;\n      }\n      case page.CLI.PROQ: {\n        this.listQuotationProvisional = this.data;\n        break;\n      }\n      case page.CLI.CLA: {\n        this.listClaimDetails = this.data;\n        break;\n      }\n      case page.ACC.OUT: {\n        this.listAccountOutstandingBills = this.data;\n        break;\n      }\n      case page.ACC.COM: {\n        this.listAccountCommissionsPaid = this.data;\n        break;\n      }\n      case page.ACC.EST: {\n        this.listAccountEstimatedCommissions = this.data;\n        break;\n      }\n      case page.ACC.PRE: {\n        this.listAccountPremiumCollection = this.data;\n        break;\n      }\n      case page.ACC.SUC: {\n        this.title = 'Payment Transaction Result';\n        break;\n      }\n\n      default: {\n        // do nothing\n      }\n    }\n  }\n\n  initPaymentForm() {\n    this.paymentForm = this.formBuilder.group({\n      address1: ['', Validators.required],\n      address2: [''],\n      city: ['', Validators.required],\n      province: ['', Validators.required],\n      zip: [''],\n      email: ['', Validators.required],\n      phone: [''],\n      mobile: [''],\n      paymentMethod: ['paynamics'],\n    });\n  }\n\n  pay() {\n    this.isProceedToPayment = true;\n    this.title = 'Payment';\n  }\n\n  redirectToPayment(data: ListAccountOutstandingBills) {\n    if (this.paymentMethod ===  'paynamics') {\n      const splitName = data.policyHolder.split(',');\n      const splitNameFirstMiddle = splitName[1].split(' ');\n      const middleName = splitNameFirstMiddle.length > 1 ? splitNameFirstMiddle[splitNameFirstMiddle.length - 1] : '';\n      const paymentRequest: PaymentRequest = {\n        firstName: splitName[1].replace(middleName, ''),\n        middleName,\n        lastName: splitName[0],\n        address1: this.paymentForm.value.address1,\n        address2: this.paymentForm.value.address2,\n        city: this.paymentForm.value.city,\n        province: this.paymentForm.value.province,\n        zip: this.paymentForm.value.zip,\n        policyNumber: data.policyNumber,\n        invoiceNumber: data.invoiceNumber,\n        amount: Math.trunc(Number(data.amount)).toString() + '.00',\n        email: this.paymentForm.value.email,\n        phone: this.paymentForm.value.phone,\n        mobile: this.paymentForm.value.mobile,\n      };\n\n      this.paymentService.getPaymentUrl(paymentRequest).then((response) => {\n        var mapForm = document.createElement(\"form\");\n        mapForm.method = \"POST\"; // or \"post\" if appropriate\n        mapForm.action = response.url;\n        var mapInput = document.createElement(\"input\");\n        mapInput.type = \"hidden\";\n        mapInput.name = \"paymentRequest\";\n        mapInput.setAttribute(\"value\", response.value);\n        mapForm.appendChild(mapInput);\n        document.body.appendChild(mapForm);\n        mapForm.submit();\n      });\n    } else {\n      this.paymentService.getPaymentUrlViaGlobalPay(data.invoiceNumber).then((response) => {\n        window.location.href = response.url;\n      });\n    }\n\n  }\n\n  inquire(): void {\n    const userName = JSON.parse(localStorage.getItem(MIVO_LOGIN)).username\n\n    if (userName != null) {\n      this.filter.userName = userName\n      this.filter.param = this.type === 'client-active' ? this.data.policyNumber : this.data.claimNumber;\n      this.filter.inquiryType = this.type === 'client-active' ? 'GETPOLICYDETAILS' : 'GETCLAIMDETAILS';\n      this.filter.paramName = this.type === 'client-active' ? 'policyNo' : 'claimNo';\n\n      this.utilityQueryService.getSearchResult(this.filter).then((res) => {\n        if (res) {\n          const jsonData = JSON.parse(JSON.stringify(res));\n          window.open(jsonData.obj, '_blank');\n        }\n      });\n    } else {\n      this.modalRef = Utility.showError(this.bms, 'No login credentials found!');\n    }\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  changePaymentMethod(event) { \n    if (this.paymentMethod === event.target.value) {\n      return;\n    }\n    this.paymentMethod = event.target.value;\n  }\n}","import { environment } from '../../environments/environment';\n\n/*AUTH*/\n// export const TOKEN_AUTH_USERNAME = 'jwtmivoclientid';\n// export const TOKEN_AUTH_PASSWORD = 'jwtpa$$w0rd';\nexport const TOKEN_AUTH_USERNAME = 'testjwtclientid';\nexport const TOKEN_AUTH_PASSWORD = 'XY7kmzoNzl100';\nexport const TOKEN_NAME = 'access_token';\n\n//access authentication token\nexport const AUTH_TOKEN = environment.apiUrl + 'oauth/token';\n\n//access API URL\nexport const API_URL = environment.apiUrl + 'api';\n\n//deployment version\nexport const VER = 'v1.20210303';","export const MIVO_LOGIN = \"MIVO_login\";\nexport const MIVO_AUTH = \"MIVO_auth\";\nexport const CURRENT_USER = 'MIVO_currentUser';\nexport const MENU = 'MIVO_menu';\nexport const DASH_INFO = 'MIVO_dashInfo';\n","export const page = {\n  DAS: {\n    N: 'dashboard'\n  },\n  ACC: {\n    N: 'account',\n    OUT: 'account-outstanding-bills',\n    COM: 'account-commissions-paid',\n    EST: 'account-estimated-commissions',\n    PRE: 'account-premium-collection',\n    SUC: 'account-outstanding-bills-success',\n  },\n  CLI: {\n    N: 'client',\n    CLI: 'client-details',\n    ACT: 'client-active',\n    CAN: 'client-cancelled',\n    REN: 'client-renewed',\n    NOT: 'client-not-renewed',\n    EXP: 'client-expiring',\n    PRO: 'client-provisional',\n    ACTQ: 'client-active-quotation',\n    PROQ: 'client-provisional-quotation',\n    CLA: 'client-claims',\n  },\n  QUI: {\n    N: 'quick-quotation',\n    CAR: 'quick-quotation-car',\n    HOM: 'quick-quotation-home',\n    TRA: 'quick-quotation-travel',\n    ACC: 'quick-quotation-accident'\n  },\n  QUO: {\n    N: 'quotation',\n    CAR: 'quotation-car',\n    HOM: 'quotation-home',\n    TRA: 'quotation-travel',\n    ACC: 'quotation-accident'\n  },\n  ISS: {\n    N: 'issuance',\n    CAR: 'issuance-car',\n    HOM: 'issuance-home',\n    TRA: 'issuance-travel',\n    ACC: 'issuance-accident'\n  },\n  REQ: {\n    N: 'requests',\n    LIS: 'requestList',\n    CRE: 'requestCreate',\n  },\n  UTI: {\n    N: 'utilities',\n    QUE: 'utilities-query',\n    DOC: 'utilities-document-printing',\n    CHA: 'utilities-change-password'\n  },\n  NEW: {\n    N: 'news'\n  },\n  FAQ: {\n    N: 'faq'\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  Router,\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from '@angular/router';\nimport {\n  Utility\n} from '../utils/utility';\n\nimport {\n  AuthenticationService\n} from '../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const isAgentPage = route.routeConfig.path == 'agent';\n    const currentUser = this.authenticationService.currentUserValue;\n    \n    if (currentUser) {\n      const noAgentCode = Utility.isUndefined(currentUser.agentCode);\n      if (currentUser.role === 1 && isAgentPage) {\n        // user cannot choose agent\n        this.router.navigate(['']);\n      } else if (currentUser.role === 2 && !isAgentPage && noAgentCode) {\n        // user cannot navigate if no selected agent\n        this.router.navigate(['/agent']);\n      }\n      // authorised so return true\n      return true;\n    }\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n    return false;\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport {\n  Observable,\n  throwError\n} from 'rxjs';\nimport {\n  catchError\n} from 'rxjs/operators';\n\nimport {\n  AuthenticationService\n} from '../services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(request: HttpRequest < any > , next: HttpHandler): Observable < HttpEvent < any >> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        this.authenticationService.logout();\n        location.reload(true);\n      }\n\n      return throwError(err);\n    }))\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpResponse,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport {\n  Observable,\n  of ,\n  throwError\n} from 'rxjs';\nimport {\n  delay,\n  mergeMap,\n  materialize,\n  dematerialize\n} from 'rxjs/operators';\nimport {\n  User\n} from '../objects/User';\n\n// array in local storage for registered users\n// let users = JSON.parse(localStorage.getItem('users')) || [];\nconst users = [{\n  userId: 1,\n  role: 1,\n  userName: 'np',\n  password: 'np',\n  firstName: 'Nathalie',\n  lastName: 'Domingo',\n  fullName: 'Nathalie Domingo',\n  address: 'Sta. Rita, Olonggapo City, Zambales, Philippines',\n  commStructure: 4001,\n  expiryDay: 4,\n  token: 'faketoken'\n},{\n  userId: 2,\n  role: 2,\n  userName: 'jb',\n  password: 'jb',\n  firstName: 'Jethru',\n  lastName: 'Balarbar',\n  fullName: 'Jethru Balarbar',\n  address: 'Sagud Bahley, San Fabian, Pangasinan, Philippines',\n  commStructure: 4001,\n  expiryDay: 11,\n  token: 'faketoken'\n}]\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest < any > , next: HttpHandler): Observable < HttpEvent < any >> {\n    const {\n      url,\n      method,\n      headers,\n      body\n    } = request;\n\n    // wrap in delayed observable to simulate server api call\n    return of(null)\n      .pipe(mergeMap(handleRoute))\n      .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n      .pipe(delay(500))\n      .pipe(dematerialize());\n\n    function handleRoute() {\n      switch (true) {\n        case url.endsWith('/users/authenticate') && method === 'POST':\n          return authenticate();\n        case url.endsWith('/users/register') && method === 'POST':\n          return register();\n        case url.endsWith('/users') && method === 'GET':\n          return getUsers();\n        case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n          return deleteUser();\n        default:\n          // pass through any requests not handled above\n          return next.handle(request);\n      }\n    }\n\n    // route functions\n    function authenticate() {\n      const {\n        username,\n        password\n      } = body;\n      const user = users.find(x => x.userName === username && x.password === password);\n      if (!user) return error('Username or password is incorrect');\n      return ok(new User(user))\n    }\n\n    function register() {\n      const user = body\n\n      if (users.find(x => x.userName === user.username)) {\n        return error('Username \"' + user.username + '\" is already taken')\n      }\n\n      user.id = users.length ? Math.max(...users.map(x => x.userId)) + 1 : 1;\n      users.push(user);\n      localStorage.setItem('users', JSON.stringify(users));\n\n      return ok();\n    }\n\n    function getUsers() {\n      if (!isLoggedIn()) return unauthorized();\n      return ok(users);\n    }\n\n    function deleteUser() {\n      if (!isLoggedIn()) return unauthorized();\n\n      const userss = users.filter(x => x.userId !== idFromUrl());\n      localStorage.setItem('users', JSON.stringify(userss));\n      return ok();\n    }\n\n    // helper functions\n\n    function ok(body ? ) {\n      return of(new HttpResponse({\n        status: 200,\n        body\n      }))\n    }\n\n    function error(message) {\n      return throwError({\n        error: {\n          message\n        }\n      });\n    }\n\n    function unauthorized() {\n      return throwError({\n        status: 401,\n        error: {\n          message: 'Unauthorised'\n        }\n      });\n    }\n\n    function isLoggedIn() {\n      return headers.get('Authorization') === 'Bearer fake-jwt-token';\n    }\n\n    function idFromUrl() {\n      const urlParts = url.split('/');\n      return parseInt(urlParts[urlParts.length - 1]);\n    }\n  }\n}\n\nexport const fakeBackendProvider = {\n  // use fake backend in place of Http service for backend-less development\n  provide: HTTP_INTERCEPTORS,\n  useClass: FakeBackendInterceptor,\n  multi: true\n};","import {\n  Injectable\n} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport {\n  Observable\n} from 'rxjs';\nimport {\n  AuthenticationService\n} from '../services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(request: HttpRequest < any > , next: HttpHandler): Observable < HttpEvent < any >> {\n    // add authorization header with jwt token if available\n    let currentUser = this.authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `${currentUser.token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}","import {\n  PolicyHolder\n} from './PolicyHolder';\nimport {\n  GroupPolicy\n} from './GroupPolicy';\nimport {\n  InsuredDetails\n} from './InsuredDetails';\n\n// * - used in quick quotation\nexport class Accident {\n  mcaTmpPptoMph: string;\n  affecting: boolean;\n  primaryInsuredAge: number; // *\n  cbSpouseAge: boolean; // *\n  spouseAge: number; // *\n  cbChildNumber: boolean; // *\n  childNumber: number; // *\n  occupationalClass: string; // *\n\n  policyNumber: string\n  quotationNumber: string;\n\n  //risk details\n  subline: number; // *\n  sublineEffectivityDate: string; //*\n\n  //general information\n  effectivityDate: Date;\n  expiryDate: Date;\n\n  //group policy\n  groupPolicy: GroupPolicy;\n\n  //policy holder information\n  policyHolder: PolicyHolder;\n\n  //insured details\n  insuredDetails: [InsuredDetails];\n\n  //accident death and disablement value\n  disablementValue: number; // *\n\n  product: number;\n\n  constructor() {}\n}\n","import {\n  Accessory\n} from './Accessory';\nimport {\n  Beneficiary\n} from './Beneficiary';\nimport {\n  GroupPolicy\n} from './GroupPolicy';\nimport {\n  PolicyHolder\n} from './PolicyHolder';\nimport {\n  Coverage\n} from './Coverage';\nimport {\n  CoverageVariableData\n} from './CoverageVariableData';\n\n// * - used in quick quotation\nexport class Car {\n  affecting: boolean;\n  isModifiedCoverage: boolean;\n  mcaTmpPptoMph: string;\n  quotationNumber: string;\n  policyNumber: string;\n\n  //vehicle information\n  make: number; // *\n  model: number; // *\n  vehicleType: number; // *\n  modelYear: string; // *\n  subModel: number; // *\n  typeOfUse: number; // *\n  vehicleValue: number; // *\n  subline: number; // *\n  sublineEffectivityDate: string; // * change effectivityDate to sublineEffectivityDate\n  color: number;\n  areaOfUsage: number;\n  conductionNumber: string;\n  plateNumber: string;\n  serialNumber: string;\n  engineNumber: string;\n  mvFileNumber: string;\n  purchaseDate: Date;\n  receivedBy: string;\n  receivedDate: Date;\n\n  //CTPL\n  automaticAuth: string;\n  registrationType: string;\n  mvType: string;\n  cocNumber: string;\n  cbIsNotRequiredAuthNumber: boolean;\n  authNumber: string;\n\n  //accessories\n  accessories: Array < Accessory > = [];\n  //sub agents\n  subAgents: Array < Beneficiary > = [];\n\n  //policy holder information\n  clientName: string;\n  policyHolder: PolicyHolder;\n  secondaryPolicyHolderPrefix: number;\n  secondaryPolicyHolderSeparator: string;\n  secondaryPolicyHolder: PolicyHolder;\n  assigneePolicyHolder: PolicyHolder;\n  mortgageePolicyHolder: PolicyHolder;\n\n  //group policy\n  groupPolicy: GroupPolicy;\n\n  //general information\n  effectivityDate: Date;\n  expiryDate: Date;\n\n  //additional policy information\n  customRiskName: string; //NOM_RIESGO_CUSTOM\n  seatingCapacity: number; //NUM_PLAZAS\n  weight: string; //VAL_PESO\n  displacement: string; //VAL_CC\n  classification: number; //TIP_VEHI_PESO\n  coverageArea: number; //COD_AREA_COVER\n  assuredsCoinsuranceShare: string; //PCT_CLI_COINS\n  cbWaivedMinPremium: boolean; //MCA_WAIVE_MIN_PREM\n  cbPrepaidPremium: boolean; //MCA_PREPAID_PREM\n  cbGlassEtchingEntitled: boolean; //MCA_GLASS_ETCHING\n  glassEtchingAvailmentDate: Date; //FEC_GLASS_ETCHING\n  existingDamages: string; //TXT_EXT_DAM_PARTS\n  inspectionAssessment: number; //TXT_EXT_DAM_PARTS\n  \n  //additional policy information for issuance\n  cbPolicyOnlyDriver: boolean; //MCA_DRIVER\n  cbPolicyOwner: boolean; //MCA_OWNER\n  cbHasAssignee: boolean; //MCA_ASSIGNEE\n  cbVehicleMortgaged: boolean; //MCA_MORTGAGED\n  mortgageClause: number; //TIP_MORT_CLAUSE\n\n  //subagent and policy holder\n  beneficiaries: Array < Beneficiary > = [];\n\n  //products\n  paymentMethod: number;\n  productList: number;\n\n  //coverages\n  coverages: Array < Coverage > = [];\n\n  //coverage variable data\n  coverageVariableData: CoverageVariableData;\n\n  constructor(init ? : Partial < Car > ) {\n    Object.assign(this, init);\n  }\n}\n","import {\n  Utility\n} from '../utils/utility';\n\nexport class CoverageVariableData {\n  //1100\n  lossAndDamageType: number;\n  //TIP_LOSS_DAMAGE\n  finalRate: number;\n  //PCT_FINAL_RATE\n  adjustedCommissionRate: number;\n  //PCT_ADJ_COMM_RATE\n  lossRatioRate: number;\n  //PCT_LOSS_RATIO\n\n  //1002\n  ownDamageTowingLimit: number;\n  //NUM_OD_TOWING_LIMIT\n  ownDamageRepairLimit: number;\n  //NUM_OD_REPAIR_LIMIT\n  ownDamageSpecialDeductible: number;\n  //VAL_OD_SPECIAL_DEDUCTIBLE\n\n  //1003\n  theftTowingLimit: number;\n  //NUM_TH_TOWING_LIMIT\n  theftRepairLimit: number;\n  //NUM_TH_REPAIR_LIMIT\n  theftSpecialDeductible: number;\n  //VAL_TH_SPECIAL_DEDUCTIBLE\n\n  //1007\n  uppaDiscountType: number;\n  //TIP_UPPA_DISCOUNT\n  uppaDiscountAmount: number;\n  //IMP_UPPA_DISCOUNT\n  uppaCommissionAdjustment: number;\n  //PCT_UPPA_COMMN_ADJ\n  sumInsuredPerPassenger: number;\n  //VAL_ASEG_POR_PASAJERO\n\n  //1008\n  aonFinalRate: number;\n  //PCT_AON_FINAL_RATE\n  aonTowingLimit: number;\n  //NUM_AON_TOWING_LIMIT\n  aonRepairLimit: number;\n  //NUM_AON_REPAIR_LIMIT\n  aonSpecialDeductible: number;\n  //VAL_AON_SPECIAL_DEDUCTIBLE\n  aonCommissionAdjustment: number;\n  //PCT_AON_COMMN_ADJ\n\n  //1020\n  srccFinalRate: number;\n  //PCT_SRCC_FINAL_RATE\n  srccTowingLimit: number;\n  //NUM_SRCC_TOWING_LIMIT\n  srccRepairLimit: number;\n  //NUM_SRCC_REPAIR_LIMIT\n  srccSpecialDeductible: number;\n  //VAL_SRCC_SPECIAL_DEDUCTIBLE\n  srccCommissionAdjustment: number;\n  //PCT_SRCC_COMMN_ADJ\n\n  //1040\n  roadAssistDiscount: number;\n  //VAL_RA_DISC\n\n  //1029\n  ra100Discount: number;\n  //VAL_RA100_DISC\n\n  getDefaultValues(arr: any[], cvd ? : CoverageVariableData) {\n    const variableData = new CoverageVariableData();\n    const hasCVD = !Utility.isUndefined(cvd);\n\n    arr.forEach((a) => {\n      const value = !Utility.isUndefined(a.valCampo) ? parseFloat(a.valCampo) : null;\n\n      switch (a.codCampo) {\n        case \"TIP_LOSS_DAMAGE\": {\n          variableData.lossAndDamageType = value;\n          if (hasCVD) {\n            cvd.lossAndDamageType = value;\n          }\n          break;\n        }\n        case \"PCT_FINAL_RATE\": {\n          variableData.finalRate = value;\n          if (hasCVD) {\n            cvd.finalRate = value;\n          }\n          break;\n        }\n        case \"PCT_ADJ_COMM_RATE\": {\n          variableData.adjustedCommissionRate = value;\n          if (hasCVD) {\n            cvd.adjustedCommissionRate = value;\n          }\n          break;\n        }\n        case \"PCT_LOSS_RATIO\": {\n          variableData.lossRatioRate = value;\n          if (hasCVD) {\n            cvd.lossRatioRate = value;\n          }\n          break;\n        }\n\n        case \"NUM_OD_TOWING_LIMIT\": {\n          variableData.ownDamageTowingLimit = value;\n          if (hasCVD) {\n            cvd.ownDamageTowingLimit = value;\n          }\n          break;\n        }\n        case \"NUM_OD_REPAIR_LIMIT\": {\n          variableData.ownDamageRepairLimit = value;\n          if (hasCVD) {\n            cvd.ownDamageRepairLimit = value;\n          }\n          break;\n        }\n        case \"VAL_OD_SPECIAL_DEDUCTIBLE\": {\n          variableData.ownDamageSpecialDeductible = value;\n          if (hasCVD) {\n            cvd.ownDamageSpecialDeductible = value;\n          }\n          break;\n        }\n\n        case \"NUM_TH_TOWING_LIMIT\": {\n          variableData.theftTowingLimit = value;\n          if (hasCVD) {\n            cvd.theftTowingLimit = value;\n          }\n          break;\n        }\n        case \"NUM_TH_REPAIR_LIMIT\": {\n          variableData.theftRepairLimit = value;\n          if (hasCVD) {\n            cvd.theftRepairLimit = value;\n          }\n          break;\n        }\n        case \"VAL_TH_SPECIAL_DEDUCTIBLE\": {\n          variableData.theftSpecialDeductible = value;\n          if (hasCVD) {\n            cvd.theftSpecialDeductible = value;\n          }\n          break;\n        }\n\n        case \"TIP_UPPA_DISCOUNT\": {\n          variableData.uppaDiscountType = value;\n          if (hasCVD) {\n            cvd.uppaDiscountType = value;\n          }\n          break;\n        }\n        case \"IMP_UPPA_DISCOUNT\": {\n          variableData.uppaDiscountAmount = value;\n          if (hasCVD) {\n            cvd.uppaDiscountAmount = value;\n          }\n          break;\n        }\n        case \"PCT_UPPA_COMMN_ADJ\": {\n          variableData.uppaCommissionAdjustment = value;\n          if (hasCVD) {\n            cvd.uppaCommissionAdjustment = value;\n          }\n          break;\n        }\n        case \"VAL_ASEG_POR_PASAJERO\": {\n          variableData.sumInsuredPerPassenger = value;\n          if (hasCVD) {\n            cvd.sumInsuredPerPassenger = value;\n          }\n          break;\n        }\n\n        case \"PCT_AON_FINAL_RATE\": {\n          variableData.aonFinalRate = value;\n          if (hasCVD) {\n            cvd.aonFinalRate = value;\n          }\n          break;\n        }\n        case \"NUM_AON_TOWING_LIMIT\": {\n          variableData.aonTowingLimit = value;\n          if (hasCVD) {\n            cvd.aonTowingLimit = value;\n          }\n          break;\n        }\n        case \"NUM_AON_REPAIR_LIMIT\": {\n          variableData.aonRepairLimit = value;\n          if (hasCVD) {\n            cvd.aonRepairLimit = value;\n          }\n          break;\n        }\n        case \"VAL_AON_SPECIAL_DEDUCTIBLE\": {\n          variableData.aonSpecialDeductible = value;\n          if (hasCVD) {\n            cvd.aonSpecialDeductible = value;\n          }\n          break;\n        }\n        case \"PCT_AON_COMMN_ADJ\": {\n          variableData.aonCommissionAdjustment = value;\n          if (hasCVD) {\n            cvd.aonCommissionAdjustment = value;\n          }\n          break;\n        }\n\n        case \"PCT_SRCC_FINAL_RATE\": {\n          variableData.srccFinalRate = value;\n          if (hasCVD) {\n            cvd.srccFinalRate = value;\n          }\n          break;\n        }\n        case \"NUM_SRCC_TOWING_LIMIT\": {\n          variableData.srccTowingLimit = value;\n          if (hasCVD) {\n            cvd.srccTowingLimit = value;\n          }\n          break;\n        }\n        case \"NUM_SRCC_REPAIR_LIMIT\": {\n          variableData.srccRepairLimit = value;\n          if (hasCVD) {\n            cvd.srccRepairLimit = value;\n          }\n          break;\n        }\n        case \"VAL_SRCC_SPECIAL_DEDUCTIBLE\": {\n          variableData.srccSpecialDeductible = value;\n          if (hasCVD) {\n            cvd.srccSpecialDeductible = value;\n          }\n          break;\n        }\n        case \"PCT_SRCC_COMMN_ADJ\": {\n          variableData.srccCommissionAdjustment = value;\n          if (hasCVD) {\n            cvd.srccCommissionAdjustment = value;\n          }\n          break;\n        }\n\n        case \"VAL_RA_DISC\": {\n          variableData.roadAssistDiscount = value;\n          if (hasCVD) {\n            cvd.roadAssistDiscount = value;\n          }\n          break;\n        }\n\n        case \"VAL_RA100_DISC\": {\n          variableData.ra100Discount = value;\n          if (hasCVD) {\n            cvd.ra100Discount = value;\n          }\n          break;\n        }\n\n        default: {\n          //statements; \n          break;\n        }\n      }\n    });\n\n    return variableData;\n  }\n\n  validateValues(cvddv: CoverageVariableData, cvd: CoverageVariableData) {\n    if (Utility.isUndefined(cvd.lossAndDamageType)) {\n      cvd.lossAndDamageType = cvddv.lossAndDamageType;\n    }\n\n    if (cvd.finalRate > 100) {\n      cvd.finalRate = 100;\n    } else if (Utility.isUndefined(cvd.finalRate)) {\n      cvd.finalRate = cvddv.finalRate;\n    }\n\n    if (cvd.adjustedCommissionRate > 100) {\n      cvd.adjustedCommissionRate = 100;\n    } else if (Utility.isUndefined(cvd.adjustedCommissionRate)) {\n      cvd.adjustedCommissionRate = cvddv.adjustedCommissionRate;\n    }\n\n    if (cvd.lossRatioRate > 100) {\n      cvd.lossRatioRate = 100;\n    } else if (Utility.isUndefined(cvd.lossRatioRate)) {\n      cvd.lossRatioRate = cvddv.lossRatioRate;\n    }\n\n    if (Utility.isUndefined(cvd.ownDamageTowingLimit)) {\n      cvd.ownDamageTowingLimit = cvddv.ownDamageTowingLimit;\n    }\n\n    if (Utility.isUndefined(cvd.ownDamageRepairLimit)) {\n      cvd.ownDamageRepairLimit = cvddv.ownDamageRepairLimit;\n    }\n\n    if (Utility.isUndefined(cvd.ownDamageSpecialDeductible)) {\n      cvd.ownDamageSpecialDeductible = cvddv.ownDamageSpecialDeductible;\n    }\n\n    if (Utility.isUndefined(cvd.theftTowingLimit)) {\n      cvd.theftTowingLimit = cvddv.theftTowingLimit;\n    }\n\n    if (Utility.isUndefined(cvd.theftRepairLimit)) {\n      cvd.theftRepairLimit = cvddv.theftRepairLimit;\n    }\n\n    if (Utility.isUndefined(cvd.theftSpecialDeductible)) {\n      cvd.theftSpecialDeductible = cvddv.theftSpecialDeductible;\n    }\n\n    if (Utility.isUndefined(cvd.uppaDiscountType)) {\n      cvd.uppaDiscountType = cvddv.uppaDiscountType;\n    }\n\n    if (Utility.isUndefined(cvd.uppaDiscountAmount)) {\n      cvd.uppaDiscountAmount = cvddv.uppaDiscountAmount;\n    }\n\n    if (cvd.uppaCommissionAdjustment > 100) {\n      cvd.uppaCommissionAdjustment = 100;\n    } else if (Utility.isUndefined(cvd.uppaCommissionAdjustment)) {\n      cvd.uppaCommissionAdjustment = cvddv.uppaCommissionAdjustment;\n    }\n\n    if (Utility.isUndefined(cvd.sumInsuredPerPassenger)) {\n      cvd.sumInsuredPerPassenger = cvddv.sumInsuredPerPassenger;\n    }\n\n    if (cvd.aonFinalRate > 100) {\n      cvd.aonFinalRate = 100;\n    } else if (Utility.isUndefined(cvd.aonFinalRate)) {\n      cvd.aonFinalRate = cvddv.aonFinalRate;\n    }\n\n    if (Utility.isUndefined(cvd.aonTowingLimit)) {\n      cvd.aonTowingLimit = cvddv.aonTowingLimit;\n    }\n\n    if (Utility.isUndefined(cvd.aonRepairLimit)) {\n      cvd.aonRepairLimit = cvddv.aonRepairLimit;\n    }\n\n    if (Utility.isUndefined(cvd.aonSpecialDeductible)) {\n      cvd.aonSpecialDeductible = cvddv.aonSpecialDeductible;\n    }\n\n    if (cvd.aonCommissionAdjustment > 100) {\n      cvd.aonCommissionAdjustment = 100;\n    } else if (Utility.isUndefined(cvd.aonCommissionAdjustment)) {\n      cvd.aonCommissionAdjustment = cvddv.aonCommissionAdjustment;\n    }\n\n    if (cvd.srccFinalRate > 100) {\n      cvd.srccFinalRate = 100;\n    } else if (Utility.isUndefined(cvd.srccFinalRate)) {\n      cvd.srccFinalRate = cvddv.srccFinalRate;\n    }\n\n    if (Utility.isUndefined(cvd.srccTowingLimit)) {\n      cvd.srccTowingLimit = cvddv.srccTowingLimit;\n    }\n\n    if (Utility.isUndefined(cvd.srccRepairLimit)) {\n      cvd.srccRepairLimit = cvddv.srccRepairLimit;\n    }\n\n    if (Utility.isUndefined(cvd.srccSpecialDeductible)) {\n      cvd.srccSpecialDeductible = cvddv.srccSpecialDeductible;\n    }\n\n    if (cvd.srccCommissionAdjustment > 100) {\n      cvd.srccCommissionAdjustment = 100;\n    } else if (Utility.isUndefined(cvd.srccCommissionAdjustment)) {\n      cvd.srccCommissionAdjustment = cvddv.srccCommissionAdjustment;\n    }\n\n    if (Utility.isUndefined(cvd.roadAssistDiscount)) {\n      cvd.roadAssistDiscount = cvddv.roadAssistDiscount;\n    }\n\n    if (Utility.isUndefined(cvd.ra100Discount)) {\n      cvd.ra100Discount = cvddv.ra100Discount;\n    }\n  }\n\n  constructor(init ? : Partial < CoverageVariableData > ) {\n    Object.assign(this, init);\n  }\n}\n","export class DocumentPrinting {\n  documentType: String;\n\tpolicyNumber: String;\n\tendorsementNumber: String;\n  policyPPRF: boolean;\n  policyPAC: boolean;\n  policyPV: boolean;\n  quotationNumber: String;\n  csProcessDate: String;\n  csPass: String;\n  soaProcessDate: String;\n  soaPass: String;\n  \n  constructor(init?: Partial<DocumentPrinting>) {\n    Object.assign(this, init);\n  }\n}\n","export class GroupPolicy {\n  groupPolicy: number;\n  contract: number;\n  subContract: number;\n  commercialStructure: number;\n  agentCode: number;\n  cbIsRenewal: boolean;\n  expiringPolicyNumber: string;\n  \n  constructor() {\n  }\n}\n","import {\n  GroupPolicy\n} from './GroupPolicy';\nimport {\n  PolicyHolder\n} from './PolicyHolder';\n\n// * - used in quick quotation\nexport class Home {\n  mcaTmpPptoMph: string;\n  affecting: boolean;\n\n  subline: number; // *\n  sublineEffectivityDate: string;\n\n  cbBuilding: boolean; // *\n  building: number = 0; // *\n  cbContent: boolean; // *\n  content: number = 0; // *\n  cbImprovements: boolean; // *\n  improvements: number = 0; // *\n  cbRelatedBuild: boolean; // *\n  relatedBuild: number = 0; // *\n  cbRelatedContent: boolean; // *\n  relatedContent: number = 0; // *\n\n  policyNumber: string\n  quotationNumber: string;\n\n  currency: number;\n\n  //location of risk\n  district: string;\n  blockNumber: string;\n\n  buildingNumber: string;\n  subdivision: string;\n  buildingName: string;\n  streetName: string;\n  barangay: string;\n  region: number;\n  province: number;\n  city: number;\n\n  //building/content details\n  buildingCapital: number;\n  contentValue: number;\n  buildingContent: string;\n\n  //rate percentage\n  ratePercentage: number;\n\n  constructionOfBuilding: string;\n  occupancyOfBuilding: string;\n\n  front: string;\n  right: string;\n  left: string;\n  rear: string;\n\n  improvement: number;\n  relatedStructureDetails: any[];\n  relatedContentDetails: any[];\n\n  //general information\n  effectivityDate: Date;\n  expiryDate: Date;\n\n  //group policy\n  groupPolicy: GroupPolicy;\n\n  //policy holder information\n  policyHolder: PolicyHolder;\n  //alternative policy holder information\n  secondaryPolicyHolderPrefix: number;\n  secondaryPolicyHolderSeparator: string;\n  secondaryPolicyHolderSeparatorCode: number;\n  secondaryPolicyHolder: PolicyHolder;\n  //mortgagee policy holder information\n  mortgageePolicyHolder: PolicyHolder;\n\n  crestaZone: string;\n  zipCode: number;\n  cbMortgagee: boolean;\n\n  warrantedNoLoss: string;\n\n  //product\n  paymentMethod: number;\n  product: number;\n\n  constructor() {}\n}\n","export class InsuredDetails {\n  //insured details\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  suffix: number;\n  suffixLabel: string;\n  gender: number;\n  relationship: string;\n  relationshipLabel: string;\n  birthDate: Date;\n  cbWithHealthDeclaration: boolean;\n  preExistingIllness: string;\n  occupationalClass: string;\n  occupationalClassLabel: string;\n  occupation: string;\n  occupationLabel: string;\n  otherOccupation: string;\n  occurence: string;\n\n  constructor() {}\n}\n","export class LOV {\n  tableName: string;\n  version: string;\n  params: string;\n  constructor(tableName: string, version: string, params: string) {\n    this.tableName = tableName;\n    this.version = version;\n    this.params = params;\n  }\n}\n","export class AccidentListObject {\n  //quick quote and quote\n  sublineLOV: any[];\n  occupationalClassLOV: any[];\n  disablementValueLOV: any[];\n\n  //quote\n  suffixLOV: any[];\n  genderLOV: any[];\n  relationshipLOV: any[];\n  occupationLOV: any[];\n  productListLOV: any[];\n\n  //quick quote\n  ageLOV: any[];\n  childNumberLOV: any[];\n  constructor() {\n  }\n}\n","export class CarListObject {\n  //quick quote and quote\n  makeLOV: any[];\n  modelLOV: any[];\n  vehicleTypeLOV: any[];\n  modelYearLOV: any[];\n  subModelLOV: any[];\n  typeOfUseLOV: any[];\n  sublineLOV: any[];\n\n  //quote\n  colorLOV: any[];\n  areaOfUsageLOV: any[];\n  accessoryListLOV: any[];\n  subagentLOV: any[];\n\n  //additional policy information\n  classificationLOV: any[];\n  coverageAreaLOV: any[];\n  inspectionAssessmentLOV: any[];\n  mortgageClauseLOV: any[];\n\n  //ctpl\n  registrationTypeLOV: any[];\n  mvTypeLOV: any[];\n\n  paymentMethodLOV: any[];\n  productListLOV: any[];\n  constructor() {\n  }\n}\n","export class GroupPolicyListObject {\n  groupPolicyLOV: any[];\n  contractLOV: any[];\n  subContractLOV: any[];\n  commercialStructureLOV: any[];\n  constructor() {\n  }\n}\n","export class HomeListObject {\n  //quick quote and quote\n  sublineLOV: any[];\n\n  //quote\n  currencyLOV: any[];\n\n  districtLOV: any[];\n  blockNumberLOV: any[];\n\n  regionLOV: any[];\n  provinceLOV: any[];\n  cityLOV: any[];\n  zipCodeLOV: any[];\n\n  relatedStructureLOV: any[];\n  relatedContentLOV: any[];\n\n  paymentMethodLOV: any[];\n  productListLOV: any[];\n\n  constructor() {\n  }\n}\n","export class ThirdPartyListObject {\n  documentTypeLOV: any[];\n  prefixLOV: any[];\n  suffixLOV: any[];\n  correspondenceTypeLOV: any[];\n  countryLOV: any[];\n  stateLOV: any[];\n  provinceLOV: any[];\n  cityLOV: any[];\n  zipcodeLOV: any[];\n  nationalityLOV: any[];\n  orgPostLOV: any[];\n  orgTypeOfBusinessLOV: any[];\n  personMaritalStatusLOV: any[];\n  personProfessionLOV: any[];\n  personOccupationLOV: any[];\n  personTypeLOV: any[];\n  personLanguageLOV: any[];\n\n  constructor() {}\n}\n","export class TravelListObject {\n  //quick quote and quote\n  currencyLOV: any[];\n  countryLOV: any[];\n\n  //quick quote\n  packageLOV: any[];\n  coverageLOV: any[];\n  ageRangeLOV: any[];\n\n  //quote\n  travelTypeLOV: any[];\n  purposeOfTripLOV: any[];\n  oneTripOnlyLOV: any[];\n  relationshipLOV: any[];\n  insuranceCoverageLOV: any[];\n  coverageOptionLOV: any[];\n  medicalExpensesLOV: any[];\n  productListLOV: any[];\n  constructor() {}\n}\n","export class LTODetails {\n  assuredName: string;\n  engineNumber: string;\n  chassisNumber: string;\n  mvFileNumber: string;\n  plateNumber: string;\n  assuredTin: string;\n  cocNumber: string;\n  inceptionDate: Date;\n  expiryDate: Date;\n  regType: string;\n  subline: number;\n  vehicleType: number;\n  typeOfUse: number;\n  mvType: string;\n  classification: number;\n\n  constructor() {}\n}\n","export class ListAccountCommissionsPaid {\n  policyNumber: String;\n  policyHolder: String;\n  currency: String;\n  invoiceNumber: String;\n  receiptAmount: String;\n  commissionAmount: String;\n  withholdingTaxAmount: String;\n  source: String;\n  type: String;\n\n  constructor(init ? : Partial < ListAccountCommissionsPaid > ) {\n    Object.assign(this, init);\n  }\n}\n","export class ListAccountEstimatedCommissions {\n  policyNumber: String;\n  policyHolder: String;\n  currency: String;\n  invoiceNumber: String;\n  movementDate: String;\n  receiptAmount: String;\n  estimatedCommission: String;\n  source: String;\n  type: String;\n\n  constructor(init ? : Partial < ListAccountEstimatedCommissions > ) {\n    Object.assign(this, init);\n  }\n}\n","export class ListAccountOutstandingBills {\n  policyNumber: String;\n  policyHolder: String;\n  prn: String;\n  invoiceNumber: String;\n  currency: String;\n  effectivityDate: String;\n  expiryDate: String;\n  paymentDateExpiry: String;\n  age: String;\n  amount: String;\n  paymentStatus: String;\n  source: String;\n  subline: String;\n  type: String;\n\n  constructor(init ? : Partial < ListAccountOutstandingBills > ) {\n    Object.assign(this, init);\n  }\n}\n","export class ListAccountPremiumCollection {\n  policyNumber: String;\n  currency: String;\n  subline: String;\n  invoiceNumber: String;\n  effectivityDate: String;\n  expiryDate: String;\n  collectedDate: String;\n  collectionType: String;\n  receiptAmount: String;\n  netPremium: String;\n  surcharge: String;\n  tax: String;\n  interest: String;\n  source: String;\n  type: String;\n\n  constructor(init ? : Partial < ListAccountPremiumCollection > ) {\n    Object.assign(this, init);\n  }\n}\n","export class ListClaimDetails {\n  claimNumber: String;\n  fileNumber: String;\n  fileName: String;\n  lossDate: String;\n  notificationDate: String;\n  reserveAmount: String;\n  source: String;\n  type: String;\n  \n  constructor(init?: Partial<ListClaimDetails>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListClientDetails {\n  name: String;\n  documentType: String;\n  documentCode: String;\n  address: String;\n  homeTelNumber: String;\n  businessTelNumber: String;\n  mobileNumber: String;\n  email: String;\n  type: String;\n  \n  constructor(init?: Partial<ListClientDetails>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListPolicyActive {\n  policyNumber: String;\n  policyEffectivityDate: String;\n  policyDueDate: String;\n  line: String;\n  policyHolder: String;\n  documentType: String;\n  documentCode: String;\n  source: String;\n  type: String;\n  \n  constructor(init?: Partial<ListPolicyActive>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListPolicyCancelled {\n  policyNumber: String;\n  policyEffectivityDate: String;\n  line: String;\n  policyHolder: String;\n  source: String;\n  type: String;\n  \n  constructor(init?: Partial<ListPolicyCancelled>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListPolicyExpiring {\n  policyNumber: String;\n  policyEffectivityDate: String;\n  policyExpiryDate: String;\n  policyHolder: String;\n  email: String;\n  telephoneNumber: String;\n  type: String;\n  \n  constructor(init?: Partial<ListPolicyExpiring>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListPolicyNotRenewed {\n  policyNumber: String;\n  policyEffectivityDate: String;\n  policyDueDate: String;\n  line: String;\n  policyHolder: String;\n  source: String;\n  type: String;\n\n  constructor(init ? : Partial < ListPolicyNotRenewed > ) {\n    Object.assign(this, init);\n  }\n}\n","export class ListPolicyProvisional {\n  policyNumber: String;\n  policyEffectivityDate: String;\n  policyDueDate: String;\n  line: String;\n  policyHolder: String;\n  source: String;\n  type: String;\n  \n  constructor(init?: Partial<ListPolicyProvisional>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListPolicyRenewed {\n  policyNumber: String;\n  policyEffectivityDate: String;\n  policyDueDate: String;\n  policyHolder: String;\n  documentType: String;\n  documentCode: String;\n  type: String;\n  \n  constructor(init?: Partial<ListPolicyRenewed>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListQuotationActive {\n  quotationNumber: String;\n  policyEffectivityDate: String;\n  policyDueDate: String;\n  line: String;\n  policyHolder: String;\n  source: String;\n  type: String;\n  \n  constructor(init?: Partial<ListQuotationActive>) {\n    Object.assign(this, init);\n  }\n}\n","export class ListQuotationProvisional {\n  quotationNumber: String;\n  policyEffectivityDate: String;\n  policyDueDate: String;\n  line: String;\n  policyHolder: String;\n  source: String;\n  type: String;\n  \n  constructor(init?: Partial<ListQuotationProvisional>) {\n    Object.assign(this, init);\n  }\n}\n","export class OptionList {\n  language: string;\n  columnName: string;\n  param: string;\n  constructor(language: string, columnName: string, param: string) {\n    this.language = language;\n    this.columnName = columnName;\n    this.param = param;\n  }\n}\n","export class Page {\n  // dash: boolean= false;\n\n  account: boolean= false;\n  outstanding: boolean= false;\n  commissionsPaid: boolean= false;\n  estimatedCommissions: boolean= false;\n  premiumCollection: boolean= false;\n\n  client: boolean= false;\n  clientDetails: boolean= false;\n  active: boolean= false;\n  cancelled: boolean= false;\n  renewed: boolean= false;\n  notRenewed: boolean= false;\n  expiring: boolean= false;\n  provisional: boolean= false;\n  activeQuotation: boolean= false;\n  provisionalQuotation: boolean= false;\n  claims: boolean= false;\n\n  quick: boolean= false;\n  quickCar: boolean= false;\n  quickHome: boolean= false;\n  quickTravel: boolean= false;\n  quickAccident: boolean= false;\n\n  quotation: boolean= false;\n  quotationCar: boolean= false;\n  quotationHome: boolean= false;\n  quotationTravel: boolean= false;\n  quotationAccident: boolean= false;\n\n  issuance: boolean= false;\n  issuanceCar: boolean= false;\n  issuanceHome: boolean= false;\n  issuanceTravel: boolean= false;\n  issuanceAccident: boolean= false;\n\n  requests: boolean= false;\n  requestList: boolean= false;\n  requestCreate: boolean= false;\n\n  utilities: boolean= false;\n  query: boolean= false;\n  documentPrinting: boolean= false;\n  changePassword: boolean= false;\n\n  news: boolean= false;\n\n  faq: boolean= true;\n};","export class PageFilter {\n  currentPage: number;\n  pageSize: number;\n  sortBy: String;\n  sortOrder: String;\n\n  // for request list\n  requestType: String = \"\";\n  requestId: String = \"\";\n  policyNumber: String = \"\";\n  status: String = \"\";\n  requestHandler: String = \"\";\n  user: String = \"\";\n\n  constructor(init ? : Partial < PageFilter > ) {\n    Object.assign(this, init);\n  }\n}\n","export class PageFilterAccount {\n  currentPage: number;\n  pageSize: number;\n  sortBy: String;\n  sortOrder: String;\n\n  // common\n  policyNumber: String = \"\";\n  policyHolder: String = \"\";\n  currency: String = \"\";\n  source: String = \"\";\n  invoiceNumber: String = \"\";\n  receiptAmount: String = \"\";\n  effectivityDate: String = \"\";\n  expiryDate: String = \"\";\n  subline: String = \"\";\n\n  // for outstanding bills list\n  prn: String = \"\";\n  paymentDateExpiry: String = \"\";\n  amount: String = \"\";\n  paymentStatus: String = \"\";\n\n  // for commissions paid list\n  commissionAmount: String = \"\";\n  withholdingTaxAmount: String = \"\";\n\n  // for estimated commissions list\n  movementDate: String = \"\";\n  estimatedCommission: String = \"\";\n\n  // for premium collection list\n  collectedDate: String = \"\";\n  collectionType: String = \"\";\n  netPremium: String = \"\";\n  surcharge: String = \"\";\n  tax: String = \"\";\n  interest: String = \"\";\n\n  constructor(init ? : Partial < PageFilterAccount > ) {\n    Object.assign(this, init);\n  }\n}\n","export class PageFilterClient {\n  currentPage: number;\n  pageSize: number;\n  sortBy: String;\n  sortOrder: String;\n\n  // common\n  policyNumber: String = \"\";\n  quotationNumber: String = \"\";\n  documentType: String = \"\";\n  documentCode: String = \"\";\n  effectivityDate: String = \"\";\n  dueDate: String = \"\";\n  email: String = \"\";\n  line: String = \"\";\n  policyHolder: String = \"\";\n  source: String = \"\";\n\n  // for client details list\n  name: String = \"\";\n  address: String = \"\";\n  homeTelNumber: String = \"\";\n  businessTelNumber: String = \"\";\n  mobileNumber: String = \"\";\n\n  // for policy active list\n\n  // for policy cancelled list\n\n  // for policy renewed list\n\n  // for policy not renewed list\n\n  // for policy expiring list\n  expiryDate: String = \"\";\n  telephoneNumber: String = \"\";\n\n  // for policy provisional list\n\n  // for quotation active list\n\n  // for quotation provisional list\n\n  // for claims list\n  claimNumber: String = \"\";\n  fileNumber: String = \"\";\n  fileName: String = \"\";\n  lossDate: String = \"\";\n  notificationDate: String = \"\";\n\n  constructor(init ? : Partial < PageFilterClient > ) {\n    Object.assign(this, init);\n  }\n}\n","export class PolicyHolder {\n  isPerson: boolean; //mcaFisico\n  isExisting: boolean;\n  documentType: string; //tipDocum\n  documentCode: string; //codDocum\n  policyHolderType: string;\n  prefix: number; //tipPrefijoNombre\n  suffix: number; //tipSufijoNombre\n  firstName: string; //nomTercero\n  middleName: string; //nom2Tercero\n  lastName: string; //ape2Tercero\n  gender: number; //mcaSexo\n  birthDate: Date; //fecNacimiento\n  mobileNumber: string; //tlfMovil\n  correspondenceType: number; //tipEtiqueta\n  country: string; //codPais\n  state: number; //codEstado\n  province: number; //codProv\n  city: number; //codLocalidad\n  address: string; //nomDomicilio1\n  zipcode: number; //codPostal\n  email: string; //email\n  orgDocumentType: string; //tipDocumContacto\n  orgDocumentCode: string; //codDocumContacto\n  orgNationality: string; //codNacionalidadContacto\n  orgFirstName: string; //nomContacto\n  orgLastName: string; //ape2Tercero\n  orgPost: number; //tipCargo\n  orgTypeOfBusiness: number; //tipActEconomica\n  personMaritalStatus: string; //codEstCivil\n  personProfession: number; //codProfesion\n  personOccupation: number; //codOcupacion\n  personNationality: string; //codNacionalidad\n  personType: number; //tipNacionalidad\n  personLanguage: string; //codIdioma\n  \n  constructor(init?: Partial<PolicyHolder>) {\n    Object.assign(this, init);\n  }\n}","export class ReplyDetails {\n  requestType: String;\n  requestId: String;\n  message: String;\n  agentEmail: String;\n  name: String;\n  \n  constructor(init?: Partial<ReplyDetails>) {\n    Object.assign(this, init);\n  }\n}\n","export class RequestDetails {\n  type: String;\n  requestType: String;\n  issueType: String;\n  policyNumber: String;\n  reason: String;\n  agentEmail: String;\n  name: String;\n\n  requestor: String;\n  noOfItems: number;\n  previousPolicyNumber: String;\n\n  type1: String;\n  type2: String;\n  type3: String;\n\n  branch: String;\n  line: String;\n  subline: String;\n  typeOfPolicy: String;\n  clientName: String;\n  clientGroup: String;\n  copyNotify: String;\n  comments: String;\n  \n  constructor(init?: Partial<RequestDetails>) {\n    Object.assign(this, init);\n  }\n}\n","export class RequestDetailsList {\n  requestType: String;\n  requestId: String;\n  policyNumber: String;\n  status: String;\n  requestHandler: String;\n  user: String;\n  message: String;\n  \n  constructor(init?: Partial<RequestDetailsList>) {\n    Object.assign(this, init);\n  }\n}\n","export class SelectedAgent {\n  agentCode: number;\n  agentName: string;\n  documentCode: string;\n  documentType: string;\n  documentName: string;\n  agentType: number;\n  agentTypeName: string;\n  agentAddress: string;\n  commStructure: number;\n\n  token: string;\n  constructor(init ? : Partial < SelectedAgent > ) {\n    Object.assign(this, init);\n  }\n}\n","import {\n  PolicyHolder\n} from './PolicyHolder';\nimport {\n  GroupPolicy\n} from './GroupPolicy';\n\n// * - used in quick quotation\nexport class Travel {\n  affecting: boolean;\n  mcaTmpPptoMph: string;\n  policyNumber: string;\n  quotationNumber: string;\n  subline: number;\n\n  //travel itinerary\n  currency: number; // *\n  countries: any[]; // *\n  travelPackage: string; // *\n  typeOfCoverage: string; // *\n  travelType: string;\n  startDate: Date; // *\n  endDate: Date; // *\n  noOfDays: number; // *\n  completeItinerary: string;\n  purposeOfTrip: string;\n  cbOneTripOnly: boolean;\n  cbWithCruise: boolean;\n  ageRange: string; // *\n  othersDescription: string;\n\n  //group policy\n  groupPolicy: GroupPolicy;\n\n  //policy holder information\n  policyHolder: PolicyHolder;\n\n  //travelers\n  travelers: any[];\n\n  //additional policy information\n  cbSportsEquipment: boolean;\n  sportsEquipment: string;\n  cbHazardousSports: boolean;\n  hazardousSports: string;\n\n  //coverages\n  insuranceCoverage: string;\n  coverageOption: string;\n  medicalExpenses: string;\n  product: number;\n\n  constructor(init ? : Partial < Travel > ) {\n    Object.assign(this, init);\n  }\n}\n","export class Traveler {\n  completeName: string;\n  birthDate: Date;\n  relationship: string;\n  relationshipLabel: string;\n  passportNumber: string;\n  physicianName: string;\n  constructor() {\n  }\n}\n","import { SelectedAgent } from './SelectedAgent';\n\nexport class User {\n  companyCode: number;\n  role: number;\n  agentCode: number;\n  userName: string;\n  firstName: string;\n  lastName: string;\n  fullName: string;\n  address: string;\n  expiryDay: number;\n  commercialStructure: number;\n  selectedAgent: SelectedAgent;\n\n  token: string;\n  constructor(init ? : Partial < User > ) {\n    Object.assign(this, init);\n  }\n}\n","export class UtilitiesQueryFilter {\n    userName: string;\n    param: string\n    inquiryType: string\n    paramName: string\n\n  constructor(init ? : Partial < UtilitiesQueryFilter > ) {\n    Object.assign(this, init);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  DocumentPrinting\n} from '../objects/DocumentPrinting';\nimport {\n  UtilityService\n} from './utility.service';\nimport {\n  Globals\n} from '../utils/global';\nimport {\n  Utility\n} from '../utils/utility';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  page\n} from '../constants/page';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  Accident\n} from '../objects/Accident';\n\n@Injectable()\nexport class AccidentIssueServices {\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(private app: AppService,\n    private us: UtilityService,\n    public bms: BsModalService,\n    private router: Router\n  ) {}\n\n  async issueQuote(accidenDetails: Accident): Promise < ReturnDTO > {\n    return this.app.post(accidenDetails, '/accident/issue/issueQuote').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async savePolicy(accidenDetails: Accident): Promise < ReturnDTO > {\n    return this.app.post(accidenDetails, '/accident/issue/savePolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async postPolicy(accidenDetails: Accident): Promise < ReturnDTO > {\n    return this.app.post(accidenDetails, '/accident/issue/postPolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async loadQuotation(quotationNumber: string): Promise < ReturnDTO > {\n    return this.app.post({\n      quotationNumber\n    }, '/accident/issue/loadQuotation').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  printQuote(quotationNumber: string) {\n    this.printDoc(quotationNumber, \"Q\");\n  }\n\n  printPolicy(policyNumber: string) {\n    this.printDoc(policyNumber, \"P\");\n  }\n\n  printDoc(number: string, type: string) {\n    const documentPrintingDetails = new DocumentPrinting();\n    if (type == \"P\") {\n      documentPrintingDetails.policyNumber = number;\n    } else {\n      documentPrintingDetails.quotationNumber = number;\n    }\n\n    documentPrintingDetails.documentType = type;\n\n    this.us.validatePrinting(documentPrintingDetails).then((res) => {\n      if (res.status) {\n        var ext = res.obj;\n        this.us.printDocument(ext.toString()).subscribe(data => {\n          if (data != null) {\n            window.open(URL.createObjectURL(data));\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  proceedToIssuance(quotationNumber: string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page.ISS.ACC);\n      Globals.setLoadNumber(quotationNumber);\n      Globals.setLoadQuotation(true);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  PageFilterAccount\n} from '../objects/PageFilterAccount';\n\n@Injectable()\nexport class AccountService {\n\n  constructor(private app: AppService) {}\n\n  async getOutstandingBillsList(pageFilter: PageFilterAccount): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/account/outstandingBills').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getCommissionsPaidList(pageFilter: PageFilterAccount): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/account/commissionsPaid').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getEstimatedCommissionsList(pageFilter: PageFilterAccount): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/account/estimatedCommissions').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPremiumCollectionList(pageFilter: PageFilterAccount): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/account/premiumCollection').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  Utility\n} from '../utils/utility';\n\n@Injectable()\nexport class AgentService {\n  constructor(private app: AppService) {}\n\n  async getCommercialStructure(): Promise < any[] > {\n    return Utility.parseIntArray(await this.app.get('/agent/getCommercialStructure').then(objArr => objArr as any[]), 'codNivel3');\n  }\n\n  async getAgentList(commercialStructure: number): Promise < any[] > {\n    return Utility.parseIntArray(await this.app.post(commercialStructure, '/agent/getAgentList').then(objArr => objArr as any[]), 'codAgt')\n  }\n\n  async getEAAgentList(agentCode: number): Promise < any[] > {\n    return this.app.post(agentCode, '/agent/getEAAgentList').then(objArr => objArr as any[]);\n  }\n\n  async getProductionAgentProfile(param: String): Promise < ReturnDTO > {\n    return this.app.post(param, '/agent/getProductionAgentProfile').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders\n} from '@angular/common/http';\nimport {\n  API_URL\n} from '../constants/app.constant';\n\nexport const InterceptorSkipHeader = 'X-Skip-Interceptor';\n\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Utility\n} from '../utils/utility';\n\n@Injectable()\nexport class AppService {\n  modalRef: BsModalRef;\n  constructor(\n    private http: HttpClient,\n    private modalService: BsModalService) {}\n\n    // httpOptions = {\n    //   headers: new HttpHeaders({ \n    //     'Access-Control-Allow-Origin':'*',\n    //     'Access-Control-Allow-Method':'*',\n    //     'Access-Control-Allow-Headers' : \"Access-Control-Allow-Headers', 'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers,X-Access-Token,XKey,Authorization\",\n    //     'Accept': '*/*',\n    //     'Content-Type' : 'application/json'\n    //   })\n    // };\n\n  async post(param: any, endpoint: string): Promise < any > {\n    return this.http.post(API_URL + endpoint, param)\n      .toPromise()\n      .then(response => response)\n      // .catch(err => console.log(err));\n      .catch(err => this.modalRef = Utility.showError(this.modalService, err.message));\n  }\n\n  async get(endpoint: string): Promise < any > {\n    return this.http.get(API_URL + endpoint)\n      .toPromise()\n      .then(response => response)\n      // .catch(err => console.log(err));\n      .catch(err => this.modalRef = Utility.showError(this.modalService, err.message));\n  }\n}\n","import {\n  Injectable\n} from \"@angular/core\";\nimport {\n  HttpClient\n} from \"@angular/common/http\";\nimport {\n  BehaviorSubject,\n  Observable\n} from \"rxjs\";\nimport {\n  map\n} from \"rxjs/operators\";\nimport {\n  User\n} from \"../objects/User\";\nimport {\n  CURRENT_USER,\n  MENU, \n  MIVO_AUTH,\n  DASH_INFO\n} from \"../constants/local.storage\";\nimport {\n  Page\n} from \"../objects/Page\";\nimport {\n  API_URL\n} from '../constants/app.constant';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject < User > ;\n  public currentUser: Observable < User > ;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject < User > (\n      JSON.parse(localStorage.getItem(CURRENT_USER))\n    );\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  // login(username: String, password: String) {\n  //   return this.http\n  //     .post < any > (`${API_URL}/users/authenticate`, {\n  //       username,\n  //       password,\n  //     })\n  //     .pipe(\n  //       map((user) => {\n  //         // store user details and jwt token in local storage to keep user logged in between page refreshes\n  //         delete user.password;\n  //         localStorage.setItem(CURRENT_USER, JSON.stringify(user));\n  //         this.currentUserSubject.next(user);\n  //         this.getPages(['account', 'outstanding']);\n  //         return user;\n  //       })\n  //     );\n  // }\n\n  login(username: String, password: String) {\n    return this.http.post(API_URL + '/auth/login', { username, password }).pipe(map((res) => {\n      if (res[\"status\"]) {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        const user = new User(res[\"user\"]);\n        const pages = res[\"pages\"];\n        const token = res[\"token\"];\n        user.token = 'Bearer ' + token;\n\n        localStorage.setItem(CURRENT_USER, JSON.stringify(user));\n        this.currentUserSubject.next(user);\n\n        this.getPages(pages);\n        return user;\n      } else {\n        return null;\n      }\n    }));\n  }\n\n  getPages(pages: any[]) {\n    const page = new Page();\n    for (let p in page) {\n      //includes all available pages for user\n      if (pages.includes(p)) {\n        page[p] = true;\n      }\n    }\n    localStorage.setItem(MENU, JSON.stringify(page));\n  }\n\n  logout() {\n    // remove user from local storage and set current user to null\n    localStorage.removeItem(CURRENT_USER);\n    localStorage.removeItem(MENU);\n    localStorage.removeItem(MIVO_AUTH);\n    localStorage.removeItem(DASH_INFO);\n    this.currentUserSubject.next(null);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  Car\n} from '../objects/Car';\nimport {\n  DocumentPrinting\n} from '../objects/DocumentPrinting';\nimport {\n  UtilityService\n} from './utility.service';\nimport {\n  Globals\n} from '../utils/global';\nimport {\n  Utility\n} from '../utils/utility';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  page\n} from '../constants/page';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  FormGroup,\n  Validators\n} from '@angular/forms';\n\n@Injectable()\nexport class CarQuoteServices {\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(private app: AppService,\n    private us: UtilityService,\n    public bms: BsModalService,\n    private router: Router\n  ) {}\n\n  async checkRoadAssist(subline: number, vehicelType: number, modelYear: string, productList: number, coverageCode: number): Promise < ReturnDTO > {\n    return this.app.post({subline, vehicelType, modelYear, productList, coverageCode}, '/quote/checkRoadAssist').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getCoverageByProduct(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/quote/getCoverageByProduct').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async issueQuote(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/quote/issueQuote').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async savePolicy(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/quote/savePolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async postPolicy(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/quote/postPolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async loadQuotation(quotationNumber: string): Promise < ReturnDTO > {\n    return this.app.post({quotationNumber}, '/quote/loadQuotation').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  printQuote(quotationNumber: string) {\n    const documentPrintingDetails = new DocumentPrinting();\n    documentPrintingDetails.quotationNumber = quotationNumber;\n    documentPrintingDetails.documentType = \"Q\";\n\n    this.us.validatePrinting(documentPrintingDetails).then((res) => {\n      if (res.status) {\n        var ext = res.obj;\n        this.us.printDocument(ext.toString()).subscribe(data => {\n          if (data != null) {\n            window.open(URL.createObjectURL(data));\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  printPolicy(policyNumber: string) {\n    const documentPrintingDetails = new DocumentPrinting();\n    documentPrintingDetails.policyNumber = policyNumber;\n    documentPrintingDetails.documentType = \"P\";\n\n    this.us.validatePrinting(documentPrintingDetails).then((res) => {\n      if (res.status) {\n        var ext = res.obj;\n        this.us.printDocument(ext.toString()).subscribe(data => {\n          if (data != null) {\n            window.open(URL.createObjectURL(data));\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  // printQuote(quotationNumber: string) {\n  //   this.printDoc(quotationNumber, \"Q\");\n  // }\n\n  // printPolicy(policyNumber: string) {\n  //   this.printDoc(policyNumber, \"P\");\n  // }\n\n  // printDoc(number: string, type: string) {\n  //   const documentPrintingDetails = new DocumentPrinting();\n  //   if (type == \"P\") {\n  //     documentPrintingDetails.policyNumber = number;\n  //   } else {\n  //     documentPrintingDetails.quotationNumber = number;\n  //   }\n    \n  //   documentPrintingDetails.documentType = type;\n\n  //   this.us.validatePrinting(documentPrintingDetails).then((res) => {\n  //     if (res.status) {\n  //       var ext = res.obj;\n  //       this.us.printDocument(ext.toString()).subscribe(data => {\n  //         if (data != null) {\n  //           window.open(URL.createObjectURL(data));\n  //         }\n  //       });\n  //     } else {\n  //       this.modalRef = Utility.showError(this.bms, res.message);\n  //     }\n  //   });\n  // }\n\n  proceedToIssuance(quotationNumber: string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page.ISS.CAR);\n      Globals.setLoadNumber(quotationNumber);\n      Globals.setLoadQuotation(true);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n\n  activateCTPL(form: FormGroup, carDetails: Car, selectedCoverage ? : boolean) {\n    //if selected product is CTPL\n    const isCTPL = carDetails.productList == 10002 || selectedCoverage;\n    var registrationType = form.get('registrationType');\n    var cocNumber = form.get('cocNumber');\n    var authNumber = form.get('authNumber');\n    var isNotRequired = form.get('cbIsNotRequiredAuthNumber').value;\n    \n    const inr = isNotRequired != null ? isNotRequired : false;\n\n    Utility.updateValidator(registrationType, isCTPL ? Validators.required : null);\n    Utility.updateValidator(cocNumber, isCTPL ? Validators.required : null);\n    Utility.updateValidator(authNumber, isCTPL && !inr ? Validators.required : null);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from '../services/app.service';\nimport {\n  Car\n} from '../objects/Car';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\n\n@Injectable()\nexport class CarUtilityServices {\n  constructor(private app: AppService) {}\n\n  async getFMV(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/car/getFMV').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getSubline(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/car/getSubline').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async validatePlateNumberFormat(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/car/validatePlateNumberFormat').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async validateConductionNumberFormat(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/car/validateConductionNumberFormat').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getSubagents(): Promise < ReturnDTO > {\n    return this.app.get('/car/getSubagents').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPreAdditionalInfo(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/car/getPreAdditionalInfo').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  PageFilterClient\n} from '../objects/PageFilterClient';\n\n@Injectable()\nexport class ClientService {\n\n  constructor(private app: AppService) {}\n\n  async getClientDetailsList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/clientDetails').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPolicyActiveList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/policy/active').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPolicyCancelledList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/policy/cancelled').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPolicyRenewedList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/policy/renewed').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPolicyNotRenewedList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/policy/notRenewed').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPolicyExpiringList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/policy/expiring').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getPolicyProvisionalList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/policy/provisional').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getQuotationActiveList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/quotation/active').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getQuotationProvisionalList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/quotation/provisional').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getClaimsList(pageFilter: PageFilterClient): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/client/claims').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\n\n@Injectable()\nexport class DashboardService {\n  constructor(private app: AppService) {}\n\n  async getForeignExchange(): Promise < ReturnDTO > {\n    return this.app.get('/dashboard/getForeignExchange').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getDashboardInfo(): Promise < ReturnDTO > {\n    return this.app.get('/dashboard/getDashboardInfo').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  Home\n} from '../objects/Home';\n\n@Injectable()\nexport class HomeIssueServices {\n\n  constructor(private app: AppService,\n  ) {}\n\n  url = \"/home/issue/\";\n\n  async issueQuote(homeDetails: Home): Promise < ReturnDTO > {\n    return this.app.post(homeDetails, this.url + 'issueQuote').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async savePolicy(homeDetails: Home): Promise < ReturnDTO > {\n    return this.app.post(homeDetails, this.url + 'savePolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async postPolicy(homeDetails: Home): Promise < ReturnDTO > {\n    return this.app.post(homeDetails, this.url + 'postPolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async loadQuotation(quotationNumber: string): Promise < ReturnDTO > {\n    return this.app.post({\n      quotationNumber\n    }, this.url + 'loadQuotation').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from '../services/app.service';\nimport {\n  LOV\n} from '../objects/LOV';\nimport {\n  OptionList\n} from '../objects/OptionList';\nimport {\n  Utility\n} from '../utils/utility';\nimport { ReturnDTO } from '../objects/ReturnDTO';\n\n@Injectable()\nexport class LovService {\n  constructor(private app: AppService) {}\n\n  async getLOV(dto: LOV): Promise < any[] > {\n    return this.app.post(dto, '/getLOV').then(objArr => objArr as any[]);\n  }\n\n  async getIntLOV(dto: LOV, param: string): Promise < any[] > {\n    return Utility.parseIntArray(await this.app.post(dto, '/getLOV').then(objArr => objArr as any[]), param);\n  }\n\n  async getOptionList(dto: OptionList): Promise < any[] > {\n    return this.app.post(dto, '/getOptionList').then(objArr => objArr as any[]);\n  }\n\n  async getIntOptionList(dto: OptionList, param: string): Promise < any[] > {\n    return Utility.parseIntArray(await this.app.post(dto, '/getOptionList').then(objArr => objArr as any[]), param);\n  }\n\n  async getConfigList(): Promise < ReturnDTO > {\n    return this.app.get('/getConfigList').then(objArr => objArr as ReturnDTO);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  LovService\n} from '.././lov.service';\nimport {\n  LOV\n} from '../../objects/LOV';\nimport {\n  Accident\n} from 'src/app/objects/Accident';\n\n@Injectable()\nexport class AccidentLOVServices {\n  constructor(private lov: LovService) {}\n\n  async getSubline(): Promise < any[] > {\n    const dto = new LOV('A1001800', '93', '');\n    return this.lov.getIntLOV(dto, 'COD_RAMO').then(lovs => lovs as any[]);\n  }\n\n  async getOccupationalClass(accidentDetails: Accident): Promise < any[] > {\n    const dto = new LOV(\n      'G2990006',\n      '1',\n      '|cod_ramo~' + accidentDetails.subline +\n      '|cod_modalidad~99999' +\n      '|cod_campo~COD_OCCUPATIONAL_CLASS' +\n      '|fec_validez~01012016');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[] );\n  }\n\n  async getOccupation(accidentDetails: Accident, occupationalClass: String): Promise < any > {\n    const dto = new LOV(\n      'G2990006',\n      '13',\n      '|cod_ramo~' + accidentDetails.subline +\n      '|cod_campo~TXT_OCCUPATION' +\n      '|fec_validez~01012016' +\n      '|DVCOD_OCCUPATIONAL_CLASS~' + occupationalClass +\n      '|cod_idioma~EN');\n    return this.lov.getLOV(dto).then(lovs => lovs as any);\n  }\n\n  async getPaymentPlan(accidentDetails: Accident): Promise < any[] > {\n    const dto = new LOV(\n      'A1001402',\n      '6',\n      '|COD_CIA~1' +\n      '|cod_ramo~' + accidentDetails.subline +\n      '|cod_mon~1' +\n      '|fec_validez~' + accidentDetails.sublineEffectivityDate +\n      '|cod_nivel1~|cod_nivel2~|cod_nivel3~|tip_docum~|cod_docum~');\n    return this.lov.getIntLOV(dto, 'COD_FRACC_PAGO').then(lovs => lovs as any[]);\n  }\n\n  async getProduct(accidentDetails: Accident): Promise < any[] > {\n    const dto = new LOV(\n      'G2990004',\n      '16',\n      '|cod_cia~1' +\n      '|cod_ramo~' + accidentDetails.subline);\n    return this.lov.getIntLOV(dto, 'COD_MODALIDAD').then(lovs => lovs as any[]);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  LovService\n} from '.././lov.service';\n\nimport {\n  LOV\n} from '../../objects/LOV';\nimport {\n  OptionList\n} from '../../objects/OptionList';\n\n@Injectable()\nexport class CarLOVServices {\n  constructor(private lov: LovService) {}\n\n  async getMakeList(): Promise < any[] > {\n    const dto = new LOV('A2100400', '3', 'COD_CIA~1');\n    return this.lov.getIntLOV(dto, 'COD_MARCA').then(lovs => lovs as any[]);\n  }\n\n  async getModelList(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A2100410',\n      '4',\n      '|COD_MARCA~' + carDetails.make +\n      '|NUM_COTIZACION~1|COD_CIA~1');\n    return this.lov.getIntLOV(dto, 'COD_MODELO').then(lovs => lovs as any[]);\n  }\n\n  async getVehicleTypeList(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A2100100',\n      '2',\n      '|COD_MARCA~' + carDetails.make +\n      '|COD_MODELO~' + carDetails.model +\n      '|NUM_COTIZACION~1|COD_CIA~1');\n    return this.lov.getIntLOV(dto, 'COD_TIP_VEHI').then(lovs => lovs as any[]);\n  }\n\n  async getModelYearList(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A2100430',\n      '4',\n      '|COD_MARCA~' + carDetails.make +\n      '|COD_MODELO~' + carDetails.model +\n      '|COD_TIP_VEHI~' + carDetails.vehicleType +\n      '|NUM_COTIZACION~1|COD_CIA~1');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getSubModelList(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A2100420',\n      '4',\n      '|COD_MARCA~' + carDetails.make +\n      '|COD_MODELO~' + carDetails.model +\n      '|COD_TIP_VEHI~' + carDetails.vehicleType +\n      '|ANIO_SUB_MODELO~' + carDetails.modelYear +\n      '|NUM_COTIZACION~1|COD_CIA~1');\n    return this.lov.getIntLOV(dto, 'COD_SUB_MODELO').then(lovs => lovs as any[]);\n  }\n\n  async getTypeOfUseList(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A2100200',\n      '4',\n      '|COD_MARCA~' + carDetails.make +\n      '|COD_MODELO~' + carDetails.model +\n      '|COD_TIP_VEHI~' + carDetails.vehicleType +\n      '|ANIO_SUB_MODELO~' + carDetails.modelYear +\n      '|NUM_COTIZACION~1|COD_CIA~1');\n    return this.lov.getIntLOV(dto, 'COD_USO_VEHI').then(lovs => lovs as any[]);\n  }\n\n  async getColor(): Promise < any[] > {\n    const dto = new LOV('A2100800', '1', '');\n    return this.lov.getIntLOV(dto, 'COD_COLOR').then(lovs => lovs as any[]);\n  }\n\n  async getAreaOfUsage(carDetails: any): Promise < any[] > {\n    const dto = new LOV('G2990006', '4', 'COD_RAMO~' + carDetails.subline);\n    return this.lov.getIntLOV(dto, 'COD_VALOR').then(lovs => lovs as any[]);\n  }\n\n  async getAccessoryList(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A2100601',\n      '2',\n      '|COD_CIA~1' +\n      '|cod_tip_vehi~' + carDetails.vehicleType +\n      '|fec_validez~' + carDetails.sublineEffectivityDate);\n    return this.lov.getIntLOV(dto, 'COD_ACCESORIO').then(lovs => lovs as any[]);\n  }\n\n  async getClassification(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_VEHI_PESO',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIP_VEHI_PESO').then(lovs => lovs as any[]);\n  }\n\n  async getCoverageArea(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'COD_AREA_COVER',\n      '999');\n    return this.lov.getIntOptionList(dto, 'COD_AREA_COVER').then(lovs => lovs as any[]);\n  }\n\n  async getMortgageClause(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_MORT_CLAUSE',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIP_MORT_CLAUSE').then(lovs => lovs as any[]);\n  }\n\n  async getInspectionAssessment(): Promise < any[] > {\n    const dto = new LOV(\n      'G1010031',\n      '46',\n      '|cod_idioma~EN');\n    return this.lov.getIntLOV(dto, 'COD_VALOR').then(lovs => lovs as any[]);\n  }\n\n  async getPaymentPlan(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'A1001402',\n      '6',\n      '|COD_CIA~1' +\n      '|cod_ramo~' + carDetails.subline +\n      '|cod_mon~1' +\n      '|fec_validez~' + carDetails.sublineEffectivityDate +\n      '|cod_nivel1~|cod_nivel2~|cod_nivel3~|tip_docum~|cod_docum~');\n    return this.lov.getIntLOV(dto, 'COD_FRACC_PAGO').then(lovs => lovs as any[]);\n  }\n\n  async getProduct(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'G2990004',\n      '12', // 18 if client 12 if not\n      '|COD_CIA~1' +\n      '|COD_RAMO~' + carDetails.subline);\n    return this.lov.getIntLOV(dto, 'COD_MODALIDAD').then(lovs => lovs as any[]);\n  }\n\n  async getSumInsuredPerPassenger(subline: number): Promise < any[] > {\n    const dto = new LOV(\n      'G2990006',\n      '3',\n      '|COD_RAMO~' + subline);\n    return this.lov.getIntLOV(dto, 'COD_VALOR').then(lovs => lovs as any[]);\n  }\n\n  async getRegistrationType(): Promise < any[] > {\n    const dto = new LOV(\n      'G1010031',\n      '58',\n      '');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getMVType(): Promise < any[] > {\n    const dto = new LOV(\n      'G1010031',\n      '59',\n      '');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  //get policy holder prefix\n  async getPHPrefix(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_ASEG_PREF',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIP_ASEG_PREF').then(lovs => lovs as any[]);\n  }\n  \n  //get policy holder separator\n  async getPHSeparator(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_ASEG_SEP_LOV',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIP_ASEG_SEP_LOV').then(lovs => lovs as any[]);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  LovService\n} from '.././lov.service';\n\nimport {\n  LOV\n} from '../../objects/LOV';\nimport {\n  GroupPolicy\n} from '../../objects/GroupPolicy';\nimport { Utility } from 'src/app/utils/utility';\n\n@Injectable()\nexport class GroupPolicyLOVServices {\n\n  constructor(private lov: LovService) {}\n\n  async getCommercialStructure(): Promise < any[] > {\n    const dto = new LOV(\n      'A1000710',\n      '2',\n      'COD_CIA~' + Utility.getStoredDetails().companyCode +\n      '|COD_AGT~' + Utility.getStoredDetails().agentCode);\n    return this.lov.getIntLOV(dto, 'COD_NIVEL3').then(lovs => lovs as any[]);\n  }\n\n  async getGroupPolicy(subline: number): Promise < any[] > {\n    const dto = new LOV(\n      'A2000010',\n      '4',\n      'COD_CIA~' + Utility.getStoredDetails().companyCode +\n      '|COD_AGT~' + Utility.getStoredDetails().agentCode +\n      '|COD_RAMO~' + subline);\n    return this.lov.getIntLOV(dto, 'NUM_POLIZA').then(lovs => lovs as any[]);\n  }\n\n  async getContract(subline: number, groupPolicy: GroupPolicy): Promise < any[] > {\n    const dto = new LOV(\n      'G2990001',\n      '7',\n      'COD_CIA~' + Utility.getStoredDetails().companyCode +\n      '|COD_AGT~' + Utility.getStoredDetails().agentCode +\n      '|COD_RAMO~' + subline +\n      '|NUM_POLIZA_GRUPO~' + groupPolicy.groupPolicy);\n    return this.lov.getIntLOV(dto, 'NUM_CONTRATO').then(lovs => lovs as any[]);\n  }\n\n  async getSubContract(subline: number, groupPolicy: GroupPolicy): Promise < any[] > {\n    const dto = new LOV(\n      'G2990022',\n      '2',\n      'COD_CIA~' + Utility.getStoredDetails().companyCode +\n      '|COD_AGT~' + Utility.getStoredDetails().agentCode +\n      '|COD_RAMO~' + subline +\n      '|NUM_CONTRATO~' + groupPolicy.contract);\n    return this.lov.getIntLOV(dto, 'NUM_SUBCONTRATO').then(lovs => lovs as any[]);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  LovService\n} from '.././lov.service';\nimport {\n  LOV\n} from '../../objects/LOV';\nimport {\n  Home\n} from 'src/app/objects/Home';\n\n@Injectable()\nexport class HomeLOVServices {\n  constructor(private lov: LovService) {}\n\n  async getHomeBusinessLine(): Promise < any[] > {\n    const dto = new LOV('A1001800', '92', 'cod_cia~1|cod_sector~2');\n    return this.lov.getIntLOV(dto, \"COD_RAMO\").then(lovs => lovs as any[]);\n  }\n\n  async getPaymentPlan(home: Home): Promise < any[] > {\n    const dto = new LOV('A1001402',\n      '6', '|cod_ramo~' + home.subline +\n      '|cod_mon~' + home.currency +\n      '|fec_validez~' + home.sublineEffectivityDate +\n      '|cod_nivel1~|cod_nivel2~|cod_nivel3~|tip_docum~|cod_docum~|COD_CIA~1');\n    return this.lov.getIntLOV(dto, \"COD_FRACC_PAGO\").then(lovs => lovs as any[]);\n  }\n\n  async getDistrict(): Promise < any[] > {\n    const dto = new LOV('A2009101_MPH', '1', '');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getBlockNumber(district : string): Promise < any[] > {\n    const dto = new LOV('A2009101_MPH', '3', 'COD_CIA~1|DVCOD_DISTRICT~' + district);\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getCurrency(home: Home): Promise < any[] > {\n    const dto = new LOV('G2990005', '1', 'cod_cia~1|cod_ramo~' + home.subline +\n      '|fec_validez~' + home.sublineEffectivityDate);\n    return this.lov.getIntLOV(dto, \"COD_MON\").then(lovs => lovs as any[]);\n  }\n\n  async getRelatedStructureProperty(home: Home): Promise < any[] > {\n    const dto = new LOV('G2990006', '5', 'cod_campo~TXT_DESCRIPTION_PROPERTY_2156' +\n      '|cod_cia~1|cod_ramo~' + home.subline +\n      '|fec_validez~' + home.sublineEffectivityDate +\n      '|DVCOD_MODALIDAD~20001');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getRelatedContentProperty(home: Home): Promise < any[] > {\n    const dto = new LOV('G2990006', '5', 'cod_campo~TXT_DESCRIPTION_PROPERTY_2356' +\n      '|cod_cia~1|cod_ramo~' + home.subline +\n      '|fec_validez~' + home.sublineEffectivityDate +\n      '|DVCOD_MODALIDAD~20001');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getProduct(home: Home): Promise < any[] > {\n    const dto = new LOV('G2990004', '10', 'cod_cia~1|cod_ramo~' + home.subline);\n    return this.lov.getIntLOV(dto, \"COD_MODALIDAD\").then(lovs => lovs as any[]);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  LovService\n} from '../lov.service';\nimport {\n  LOV\n} from '../../objects/LOV';\nimport {\n  OptionList\n} from 'src/app/objects/OptionList';\nimport {\n  PolicyHolder\n} from 'src/app/objects/PolicyHolder';\nimport {\n  Utility\n} from 'src/app/utils/utility';\n\n@Injectable()\nexport class ThirdPartyLOVServices {\n  constructor(private lov: LovService) {}\n\n  async getDocumentType(): Promise < any[] > {\n    const dto = new LOV(\n      'A1002300',\n      '3',\n      '|COD_CIA~' + Utility.getStoredDetails().companyCode);\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getPrefix(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_PREFIJO_NOMBRE',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIP_PREFIJO_NOMBRE').then(lovs => lovs as any[]);\n  }\n\n  async getSuffix(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIPO_SUFIJO_NOMBRE',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIPO_SUFIJO_NOMBRE').then(lovs => lovs as any[]);\n  }\n\n  async getCorrespondenceType(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_ETIQUETA',\n      '999');\n    return this.lov.getIntOptionList(dto, 'TIP_ETIQUETA').then(lovs => lovs as any[]);\n  }\n\n  async getCountry(): Promise < any[] > {\n    const dto = new LOV(\n      'A1000101',\n      '1',\n      '');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getState(thirdParty: PolicyHolder): Promise < any[] > {\n    const dto = new LOV(\n      'A1000104',\n      '5',\n      'COD_PAIS~' + thirdParty.country);\n    return this.lov.getIntLOV(dto, 'COD_ESTADO').then(lovs => lovs as any[]);\n  }\n\n  async getProvince(thirdParty: PolicyHolder): Promise < any[] > {\n    const dto = new LOV(\n      'A1000100',\n      '6',\n      'COD_PAIS~' + thirdParty.country +\n      '|COD_ESTADO~' + thirdParty.state);\n    return this.lov.getIntLOV(dto, 'COD_PROV').then(lovs => lovs as any[]);\n  }\n\n  async getCity(thirdParty: PolicyHolder): Promise < any[] > {\n    const dto = new LOV(\n      'A1000102',\n      '3',\n      'COD_PAIS~' + thirdParty.country +\n      '|COD_PROV~' + thirdParty.province);\n    return this.lov.getIntLOV(dto, 'COD_LOCALIDAD').then(lovs => lovs as any[]);\n  }\n\n  async getZipCode(thirdParty: PolicyHolder): Promise < any[] > {\n    const dto = new LOV(\n      'A1000103',\n      '3',\n      'COD_PAIS~' + thirdParty.country +\n      '|COD_ESTADO~' + thirdParty.state +\n      '|COD_PROV~' + thirdParty.province +\n      '|COD_LOCALIDAD~' + thirdParty.city);\n    return this.lov.getIntLOV(dto, 'COD_POSTAL').then(lovs => lovs as any[]);\n  }\n\n  async getNationality(): Promise < any[] > {\n    const dto = new LOV(\n      'A1000101',\n      '1',\n      '');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getPost(): Promise < any[] > {\n    const dto = new LOV(\n      'G2990022',\n      '2',\n      'COD_CIA~' + Utility.getStoredDetails().companyCode +\n      '|COD_AGT~' + Utility.getStoredDetails().agentCode);\n    return this.lov.getIntLOV(dto, 'NUM_SUBCONTRATO').then(lovs => lovs as any[]);\n  }\n\n  async getTypeOfBusiness(): Promise < any[] > {\n    const dto = new LOV(\n      'G2990022',\n      '2',\n      'COD_CIA~' + Utility.getStoredDetails().companyCode +\n      '|COD_AGT~' + Utility.getStoredDetails().agentCode);\n    return this.lov.getIntLOV(dto, 'NUM_SUBCONTRATO').then(lovs => lovs as any[]);\n  }\n\n  async getMaritalStatus(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'COD_EST_CIVIL',\n      '999');\n    return this.lov.getOptionList(dto).then(lovs => lovs as any[]);\n  }\n\n  //same with occupation\n  async getProfession(): Promise < any[] > {\n    const dto = new LOV(\n      'G1000100',\n      '2',\n      '');\n    return this.lov.getIntLOV(dto, 'COD_PROFESION').then(lovs => lovs as any[]);\n  }\n\n  async getType(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TIP_NACIONALIDAD',\n      '999');\n    return this.lov.getIntOptionList(dto, 'COD_PAIS').then(lovs => lovs as any[]);\n  }\n\n  async getLanguage(): Promise < any[] > {\n    const dto = new LOV(\n      'G1010010',\n      '1',\n      '');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  LovService\n} from '.././lov.service';\nimport {\n  LOV\n} from '../../objects/LOV';\nimport {\n  OptionList\n} from '../../objects/OptionList';\nimport { Travel } from 'src/app/objects/Travel';\n\n@Injectable()\nexport class TravelLOVServices {\n  constructor(private lov: LovService) {}\n\n  async getCurrencyList(): Promise < any[] > {\n    const dto = new LOV(\n      'G2990005',\n      '1',\n      'cod_cia~1|cod_ramo~380|fec_validez~01012020');\n    return this.lov.getIntLOV(dto, 'COD_MON').then(lovs => lovs as any[]);\n  }\n\n  async getCountryList(travelDetails: Travel): Promise < any[] > {\n    const dto = new LOV(\n      'A1000101',\n      '3',\n      '|cod_mon~' + travelDetails.currency +\n      '|cod_idioma~EN|COD_CIA~1');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getTravelPackage(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'TRAVEL_PACK',\n      '999');\n    return this.lov.getOptionList(dto).then(lovs => lovs as any[]);\n  }\n\n  async getTypeOfCoverage(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'INSURANCE_COVERAGE',\n      '999');\n    return this.lov.getOptionList(dto).then(lovs => lovs as any[]);\n  }\n\n  async getPurposeOfTrip(): Promise < any[] > {\n    const dto = new LOV(\n      'TAVIA001',\n      '1',\n      '|cod_cia~1' +\n      '|cod_mon~1' +\n      '|cod_ramo~380' +\n      '|cod_campo~PURPOSE_TRIP');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getAgeRange(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'AGE_RANGE',\n      '999');\n    return this.lov.getOptionList(dto).then(lovs => lovs as any[]);\n  }\n\n  async getRelationship(): Promise < any[] > {\n    const dto = new LOV(\n      'G1010031',\n      '82',\n      '|cod_campo~RELATIONSHIP' +\n      '|cod_idioma~EN' +\n      '|cod_ramo~380');\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getCoverageOption(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'COVERAGE_OPTIONS',\n      '999');\n    return this.lov.getOptionList(dto).then(lovs => lovs as any[]);\n  }\n\n  async getInsuranceCoverage(): Promise < any[] > {\n    const dto = new OptionList(\n      'EN',\n      'INSURANCE_COVERAGE',\n      '999');\n    return this.lov.getOptionList(dto).then(lovs => lovs as any[]);\n  }\n\n  async getExpensesCoverage(travelDetails: Travel): Promise < any[] > {\n    const dto = new LOV(\n      'TAGEN001',\n      '2',\n      '|cod_cia~1' +\n      '|cod_mon~' + travelDetails.currency +\n      '|cod_ramo~380' + \n      '|DVTRAVEL_PACK~' + travelDetails.travelPackage);\n    return this.lov.getLOV(dto).then(lovs => lovs as any[]);\n  }\n\n  async getProduct(carDetails: any): Promise < any[] > {\n    const dto = new LOV(\n      'G2990004',\n      '16',\n      '|COD_CIA~1' +\n      '|COD_RAMO~' + carDetails.subline);\n    return this.lov.getIntLOV(dto, 'COD_MODALIDAD').then(lovs => lovs as any[]);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {\n  AppService\n} from './app.service'\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  LTODetails\n} from '../objects/LTODetails';\n\n@Injectable()\nexport class LTOService {\n  constructor(\n    private app: AppService) {}\n\n  async authenticateCOCRegistration(ltoDetails: LTODetails): Promise < ReturnDTO > {\n    return this.app.post(ltoDetails, '/lto/authenticateCOCRegistration').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {\n  PaymentRequest\n} from '../objects/PaymentRequest';\nimport {\n  AppService\n} from './app.service'\n\n@Injectable()\nexport class PaymentService {\n  constructor(\n    private app: AppService) {}\n\n  getPaymentUrl(paymentRequest: PaymentRequest) {\n    return this.app.post({\n      ...paymentRequest,\n      responseUrl: 'http://localhost:4200?successPage=true'\n    }, '/payment/getPaymentRequest').then(response => response);\n  }\n\n  getPaymentUrlViaGlobalPay(invoiceNo: String) {\n    return this.app.post({\n      invoiceNo,\n      responseUrl: 'https://localhost:4200?successPage=true',\n      againUrl: 'https://localhost:4200?successPage=true',\n    }, '/payment/getPaymentRequest/globalpay').then(response => response);\n  }\n\n  processPaymentViaGlobalPay(params: any) {\n    return this.app.post(params, '/payment/paymentNotification/globalpay').then(response => response);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  DocumentPrinting\n} from '../objects/DocumentPrinting';\nimport {\n  UtilityService\n} from './utility.service';\nimport {\n  Globals\n} from '../utils/global';\nimport {\n  Utility\n} from '../utils/utility';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  Router\n} from '@angular/router';\n\n@Injectable()\nexport class PrintingService {\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(private us: UtilityService,\n    public bms: BsModalService,\n    private router: Router\n  ) {}\n\n  printQuote(quotationNumber: string) {\n    this.printDoc(quotationNumber, \"Q\");\n  }\n\n  printPolicy(policyNumber: string) {\n    this.printDoc(policyNumber, \"P\");\n  }\n\n  printDoc(number: string, type: string) {\n    const documentPrintingDetails = new DocumentPrinting();\n    if (type == \"P\") {\n      documentPrintingDetails.policyNumber = number;\n    } else {\n      documentPrintingDetails.quotationNumber = number;\n    }\n\n    documentPrintingDetails.documentType = type;\n\n    this.us.validatePrinting(documentPrintingDetails).then((res) => {\n      if (res.status) {\n        var ext = res.obj;\n        this.us.printDocument(ext.toString()).subscribe(data => {\n          if (data != null) {\n            window.open(URL.createObjectURL(data));\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  proceedToIssuance(quotationNumber: string, page: string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      // Globals.setPage(page.ISS.ACC);\n      Globals.setPage(page);\n      Globals.setLoadNumber(quotationNumber);\n      Globals.setLoadQuotation(true);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  Car\n} from '../objects/Car';\nimport {\n  Home\n} from '../objects/Home';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  Travel\n} from '../objects/Travel';\nimport {\n  Accident\n} from '../objects/Accident';\n\n@Injectable()\nexport class QuickQuoteService {\n  constructor(private app: AppService) {}\n\n  async checkRoadAssist(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/quickquote/checkRoadAssist').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async quickQuoteCar(carDetails: Car): Promise < ReturnDTO > {\n    return this.app.post(carDetails, '/quickquote/car').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async quickQuoteHome(homeDetails: Home): Promise < ReturnDTO > {\n    return this.app.post(homeDetails, '/quickquote/home').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async quickQuoteTravel(travelDetails: Travel): Promise < ReturnDTO > {\n    return this.app.post(travelDetails, '/quickquote/travel').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async quickQuoteAccident(accidentDetails: Accident): Promise < ReturnDTO > {\n    return this.app.post(accidentDetails, '/quickquote/accident').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  RequestDetails\n} from '../objects/RequestDetails';\nimport {\n  PageFilter\n} from '../objects/PageFilter';\nimport {\n  ReplyDetails\n} from '../objects/ReplyDetails';\n\n@Injectable()\nexport class RequestService {\n\n  constructor(private app: AppService) {}\n\n  async request(requestDetails: RequestDetails, type: String): Promise < ReturnDTO > {\n    let url = '/request/endorsement';\n    if (type == 'R') {\n      url = '/request/renewal';\n    } else if (type == 'U') {\n      url = '/request/underwriting';\n    }\n\n    return this.app.post(requestDetails, url).then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async policy(files: File[], requestDetails: RequestDetails): Promise < ReturnDTO > {\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append(\"files\", file);\n    });\n\n    formData.append(\"request\", requestDetails.toString());\n\n    for (let entry in requestDetails) {\n      if (requestDetails[entry] != undefined) {\n        formData.append(entry, requestDetails[entry]);\n      }\n    }\n\n    return this.app.post(formData, '/request/policy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getList(pageFilter: PageFilter): Promise < ReturnDTO > {\n    return this.app.post(pageFilter, '/request/list').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getMessageList(requestId: String): Promise < ReturnDTO > {\n    return this.app.post({\n      requestId\n    }, '/request/messageList').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async reply(replyDetails: ReplyDetails): Promise < ReturnDTO > {\n    return this.app.post(replyDetails, '/request/reply').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}","import {\n  NgModule\n} from '@angular/core';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  TranslateService\n} from '@ngx-translate/core';\n\n/* Services */\nimport {\n  AppService\n} from './app.service';\nimport {\n  AuthenticationService\n} from './authentication.service';\nimport {\n  QuickQuoteService\n} from './quickquote.service';\nimport {\n  CarUtilityServices\n} from './car-utility.service';\nimport {\n  CarQuoteServices\n} from './car-quote.service';\nimport {\n  TravelUtilityServices\n} from './travel-utility.service';\nimport {\n  TravelIssueServices\n} from './travel-issue.service';\nimport {\n  AccidentIssueServices\n} from './accident-issue.service';\nimport {\n  HomeIssueServices\n} from './home-issue.service';\nimport {\n  AgentService\n} from './agent.service';\nimport {\n  DashboardService\n} from './dashboard.service';\nimport {\n  UtilityService\n} from './utility.service';\nimport {\n  PrintingService\n} from './printing.service';\nimport {\n  ThirdPartyService\n} from './third-party.service';\nimport {\n  LTOService\n} from './lto.service';\nimport {\n  RequestService\n} from './request.service';\nimport {\n  ClientService\n} from './client.service';\nimport {\n  AccountService\n} from './account.service';\n\n/* LOV Services */\nimport {\n  LovService\n} from './lov.service';\nimport {\n  GroupPolicyLOVServices\n} from './lov/group-policy.service';\nimport {\n  CarLOVServices\n} from './lov/car.service';\nimport {\n  HomeLOVServices\n} from './lov/home.service';\nimport {\n  TravelLOVServices\n} from './lov/travel.service';\nimport {\n  AccidentLOVServices\n} from './lov/accident.service';\nimport {\n  ThirdPartyLOVServices\n} from './lov/third-party-lov-service';\nimport { PaymentService } from './payment.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  exports: [],\n  providers: [\n    BsModalRef, //bmr\n    TranslateService, //ts\n    AppService, //apps\n    AuthenticationService, //auths\n    QuickQuoteService, //qqs\n    CarUtilityServices, //cus\n    CarQuoteServices, //cqs\n    TravelUtilityServices, //tus\n    TravelIssueServices, //tis\n    AccidentIssueServices, //ais\n    HomeIssueServices, //his\n    AgentService, //as\n    DashboardService, //ds\n    UtilityService, //us\n    PrintingService, //ps\n    ThirdPartyService, //tps\n    LTOService, //ltos\n    RequestService, //rs\n    ClientService, //cs\n    AccountService, //accs\n\n    LovService, //ls\n    GroupPolicyLOVServices, //gpls\n    CarLOVServices, //cls\n    HomeLOVServices, //hls\n    TravelLOVServices, //tls\n    AccidentLOVServices, //als\n    ThirdPartyLOVServices, //tpls\n    PaymentService,\n  ]\n})\nexport class ServiceModule {}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\n\n@Injectable()\nexport class ThirdPartyService {\n  constructor(private app: AppService) {}\n\n  async getThirdPartyList(activity: number, firstName: string, lastName: string): Promise < ReturnDTO > {\n    return this.app.post({\n      activity,\n      firstName,\n      lastName\n    }, '/thirdParty/getThirdPartyList').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getThirdPartyDetails(documentType: string, documentCode: string): Promise < ReturnDTO > {\n    return this.app.post({\n      documentType,\n      documentCode\n    }, '/thirdParty/getThirdPartyDetails').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  DocumentPrinting\n} from '../objects/DocumentPrinting';\nimport {\n  UtilityService\n} from './utility.service';\nimport {\n  Globals\n} from '../utils/global';\nimport {\n  Utility\n} from '../utils/utility';\nimport {\n  BsModalService,\n  BsModalRef\n} from 'ngx-bootstrap/modal';\nimport {\n  page\n} from '../constants/page';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  Travel\n} from '../objects/Travel';\n\n@Injectable()\nexport class TravelIssueServices {\n\n  //modal reference\n  modalRef: BsModalRef;\n\n  constructor(private app: AppService,\n    private us: UtilityService,\n    public bms: BsModalService,\n    private router: Router\n  ) {}\n\n  async issueQuote(travelDetails: Travel): Promise < ReturnDTO > {\n    return this.app.post(travelDetails, '/travel/issue/issueQuote').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async savePolicy(travelDetails: Travel): Promise < ReturnDTO > {\n    return this.app.post(travelDetails, '/travel/issue/savePolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async postPolicy(travelDetails: Travel): Promise < ReturnDTO > {\n    return this.app.post(travelDetails, '/travel/issue/postPolicy').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async loadQuotation(quotationNumber: string): Promise < ReturnDTO > {\n    return this.app.post({quotationNumber}, '/travel/issue/loadQuotation').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  printQuote(quotationNumber: string) {\n    this.printDoc(quotationNumber, \"Q\");\n  }\n\n  printPolicy(policyNumber: string) {\n    this.printDoc(policyNumber, \"P\");\n  }\n\n  printDoc(number: string, type: string) {\n    const documentPrintingDetails = new DocumentPrinting();\n    if (type == \"P\") {\n      documentPrintingDetails.policyNumber = number;\n    } else {\n      documentPrintingDetails.quotationNumber = number;\n    }\n\n    documentPrintingDetails.documentType = type;\n\n    this.us.validatePrinting(documentPrintingDetails).then((res) => {\n      if (res.status) {\n        var ext = res.obj;\n        this.us.printDocument(ext.toString()).subscribe(data => {\n          if (data != null) {\n            window.open(URL.createObjectURL(data));\n          }\n        });\n      } else {\n        this.modalRef = Utility.showError(this.bms, res.message);\n      }\n    });\n  }\n\n  proceedToIssuance(quotationNumber: string) {\n    Utility.scroll('topDiv');\n    setTimeout(() => {\n      Globals.setPage(page.ISS.TRA);\n      Globals.setLoadNumber(quotationNumber);\n      Globals.setLoadQuotation(true);\n      this.router.navigate(['/reload']);\n    }, 500);\n  }\n}","import {\n  Injectable\n} from '@angular/core';\nimport {\n  AppService\n} from './app.service';\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\nimport {\n  Travel\n} from '../objects/Travel';\n\n@Injectable()\nexport class TravelUtilityServices {\n  constructor(private app: AppService) {}\n\n  async getOneTrip(travelDetails: Travel): Promise < ReturnDTO > {\n    return this.app.post(travelDetails, '/travel/getOneTrip').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppService } from './app.service';\nimport { UtilitiesQueryFilter } from '../../app/objects/UtilitiesQueryFilter';\nimport { ReturnDTO } from '../../app/objects/ReturnDTO';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UtilityQueryService {\n\n  constructor(private app: AppService) { }\n\n  async getSearchResult(filter: UtilitiesQueryFilter): Promise <ReturnDTO> {\n    return this.app.post(filter, '/InquiryController/EncryptParam').then( data => data as ReturnDTO);\n  }\n}\n","import {\n  Injectable\n} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  API_URL\n} from '../constants/app.constant';\nimport {\n  DocumentPrinting\n} from '../objects/DocumentPrinting';\nimport {\n  AppService\n} from '../services/app.service'\nimport {\n  ReturnDTO\n} from '../objects/ReturnDTO';\n\n@Injectable()\nexport class UtilityService {\n  constructor(\n    private app: AppService,\n    private http: HttpClient) {}\n\n  printDocument(extension: String) {\n    return this.http.post(\n      API_URL + '/utility/downloadFile',\n      extension, {\n        responseType: 'blob'\n      }).map((res: Blob) => {\n      return new Blob([res], {\n        type: 'application/pdf'\n      });\n    });\n  }\n\n  async validatePrinting(documentPritingDetails: DocumentPrinting): Promise < ReturnDTO > {\n    return this.app.post(documentPritingDetails, '/utility/validatePrinting').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getDateRecord(): Promise < ReturnDTO > {\n    return this.app.get('/utility/getDateRecord').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n\n  async getEndorsementNumber(documentPritingDetails: DocumentPrinting): Promise < ReturnDTO > {\n    return this.app.post(documentPritingDetails, '/utility/getEndorsementNumber').then(ReturnDTO => ReturnDTO as ReturnDTO);\n  }\n}\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  group,\n} from '@angular/animations';\n\nexport const SlideInOutAnimation = [\n  trigger('slideInOut', [\n    state('in', style({\n      'max-height': '500px',\n      'opacity': '1',\n      'visibility': 'visible'\n    })),\n    state('out', style({\n      'max-height': '0px',\n      'opacity': '0',\n      'visibility': 'hidden'\n    })),\n    transition('in => out', [group([\n      animate('400ms ease-in-out', style({\n        'opacity': '0'\n      })),\n      animate('600ms ease-in-out', style({\n        'max-height': '0px'\n      })),\n      animate('700ms ease-in-out', style({\n        'visibility': 'hidden'\n      }))\n    ])]),\n    transition('out => in', [group([\n      animate('1ms ease-in-out', style({\n        'visibility': 'visible'\n      })),\n      animate('600ms ease-in-out', style({\n        'max-height': '500px'\n      })),\n      animate('800ms ease-in-out', style({\n        'opacity': '1'\n      }))\n    ])])\n  ]),\n]\n","import {\n  page as p\n} from '../constants/page';\n\nexport class Globals {\n  public static page: String = 'dashboard';\n  public static loadNumber: string = '';\n  public static isLoadQuotation: boolean = false;\n\n  static setPage(val: String) {\n    this.page = val;\n  }\n\n  static setLoadNumber(val: string) {\n    this.loadNumber = val;\n  }\n\n  static setLoadQuotation(val: boolean) {\n    this.isLoadQuotation = val;\n  }\n\n  static getAppType() {\n    if (Globals.page == p.QUO.CAR || Globals.page == p.QUO.ACC || Globals.page == p.QUO.TRA || Globals.page == p.QUO.HOM) {\n      return \"Q\";\n    } else if (Globals.page == p.ISS.CAR || Globals.page == p.ISS.ACC || Globals.page == p.ISS.TRA || Globals.page == p.ISS.HOM) {\n      return \"I\";\n    }\n    return \"\";\n  }\n}","import {\n  AbstractControl,\n  FormGroup\n} from '@angular/forms';\nimport {\n  ModalComponent\n} from '../components/modal/modal.component';\nimport {\n  CURRENT_USER\n} from \"../constants/local.storage\";\nimport * as moment from 'moment';\nimport { User } from '../objects/User';\n\nexport class Utility {\n\n  static updateValidator(input: AbstractControl, validator: any) {\n    input.setValidators(validator);\n    input.updateValueAndValidity();\n  }\n\n  static setNull(checked: boolean, value: any) {\n    return !checked ? null : value;\n  }\n\n  static isEmpty(value: any) {\n    return value === null || value === '';\n  }\n\n  static isUndefined(value: any) {\n    return value === undefined || value === null || value === '';\n  }\n\n  static showError(modalService: any, message: String) {\n    return this.modal(modalService, message, \"Error\");\n  }\n\n  static showWarning(modalService: any, message: String) {\n    return this.modal(modalService, message, \"Warning\");\n  }\n\n  static showInfo(modalService: any, message: String) {\n    return this.modal(modalService, message, \"Info\");\n  }\n\n  static modal(modalService: any, message: String, title: String) {\n    const initialState = {\n      message: message,\n      className: \"modal-\" + title.toLowerCase(),\n      title: title,\n      isClose: true,\n      isHtml: false\n    };\n    return modalService.show(ModalComponent, {\n      initialState\n    });\n  }\n\n  static showHTMLError(modalService: any, items: String[]) {\n    return this.modalHTML(modalService, items, \"Error\");\n  }\n\n  static showHTMLWarning(modalService: any, items: String[]) {\n    return this.modalHTML(modalService, items, \"Warning\");\n  }\n\n  static showHTMLInfo(modalService: any, items: String[]) {\n    return this.modalHTML(modalService, items, \"Info\");\n  }\n\n  static modalHTML(modalService: any, items: String[], title: String) {\n    const initialState = {\n      items: items,\n      className: \"modal-\" + title.toLowerCase(),\n      title: title,\n      isClose: true,\n      isHtml: true\n    };\n    return modalService.show(ModalComponent, {\n      initialState\n    });\n  }\n\n  copyToClipboard(item: string) {\n    document.addEventListener('copy', (e: ClipboardEvent) => {\n      e.clipboardData.setData('text/plain', (item));\n      e.preventDefault();\n      document.removeEventListener('copy', null);\n    });\n    document.execCommand('copy');\n  }\n\n  //smooth scroll to preferred html element\n  static scroll(id: string) {\n    //buffer if id is hidden\n    setTimeout(() => {\n      var el = document.getElementById(id);\n      if (!this.isUndefined(el)) {\n        el.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }, 500);\n  }\n\n  //converts string value to integer\n  static parseIntArray(arr: any[], param: string) {\n    arr.forEach(a => {\n      a[param] = parseInt(a[param]);\n    });\n    return arr;\n  }\n\n  //format date string\n  static formatDate(d: Date, f ? : string) {\n    const format = !this.isUndefined(f) ? f : \"MM/DD/YYYY\";\n    return moment(d).format(format);\n  }\n\n  static convertStringDate(d: string, f ? : string) {\n    const format = !this.isUndefined(f) ? f : \"DDMMYYYY\";\n    return moment(d, format).toDate();\n  }\n\n  //find all invalid control to given FormGroup\n  static findInvalidControls(f: FormGroup) {\n    const invalid = [];\n    const controls = f.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n        invalid.push(name);\n      }\n    }\n    return invalid;\n  }\n\n  static convertDatePickerDate(val: String) {\n    if (val != null && val != undefined && val !== '' ) {\n      const date = val.toString();\n      var d = new Date(date);\n      return moment(d).format(\"MM/DD/YYYY\");\n    }\n    return \"\";\n  }\n\n  static getStoredDetails() {\n    const storedDetails = localStorage.getItem(CURRENT_USER);\n\n    let u = new User();\n\n    if (storedDetails != null) {\n      const user = JSON.parse(storedDetails);\n      u = new User(user);\n    }\n    \n    return u;\n  }\n}\n","import {\n  AbstractControl,\n  Validators\n} from '@angular/forms';\nimport * as moment from 'moment';\nimport {\n  Utility\n} from '../utils/utility';\nimport {\n  GroupPolicy\n} from '../objects/GroupPolicy';\n\nexport function validateUrl(control: AbstractControl) {\n  if (!control.value.startsWith('https') || !control.value.includes('.io')) {\n    return {\n      validUrl: true\n    };\n  }\n  return null;\n}\n\nexport function validateItinerary(control: AbstractControl) {\n  if (!Utility.isUndefined(control.value)) {\n    const smallcaps = control.value.toLowerCase();\n\n    var arr = smallcaps.split('-');\n    var firstItinerary = arr[0].trim();\n    var lastItinarary = arr[arr.length - 1].trim();\n\n    var hasEmptyItem = false;\n    arr.forEach(a => {\n      if (a.trim() == '') {\n        hasEmptyItem = true;\n      }\n    });\n\n    //invalid if first and last itinerary is not the same, has empty item and itinerary is only 1\n    if (firstItinerary != lastItinarary || hasEmptyItem || arr.length < 3) {\n      return {\n        invalidItinerary: true\n      };\n    }\n  }\n  return null;\n}\n\nexport class Validate {\n  static setGroupPolicyValidations(form: any, gp: GroupPolicy) {\n    var groupPolicy = form.get('groupPolicy');\n    var contract = form.get('contract');\n    var subContract = form.get('subContract');\n\n    var cbIsRenewal = form.get('cbIsRenewal');\n    var expiringPolicyNumber = form.get('expiringPolicyNumber');\n\n    groupPolicy.valueChanges.subscribe(policy => {\n      Utility.updateValidator(contract, Utility.isUndefined(policy) ? null : Validators.required);\n      Utility.updateValidator(subContract, Utility.isUndefined(policy) ? null : Validators.required);\n      gp.contract = Utility.setNull(!Utility.isUndefined(policy), gp.contract);\n      gp.subContract = Utility.setNull(!Utility.isUndefined(policy), gp.subContract);\n    });\n\n    cbIsRenewal.valueChanges.subscribe(isRenewal => {\n      if (!Utility.isUndefined(isRenewal)) {\n        gp.expiringPolicyNumber = Utility.setNull(isRenewal, gp.expiringPolicyNumber);\n        Utility.updateValidator(expiringPolicyNumber, isRenewal ? Validators.required : null);\n      }\n    });\n  }\n}\n","export const environment = {\n  production: false,\n  imgUrl: '/mivo2',\n  apiUrl: 'https://prd2.mapfreinsurance.com.ph/tronws/',\n};\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}